{
    "pipes": [
        {
            "name": "ConnectorAuthConfigsFinder",
            "id": "pipe-ConnectorAuthConfigsFinder-527712468946128775ab9ccc9ff1b4af2b8468be4bf7c9faf69037c1244eccb1d7167219109552f3fe05c898004c81943747d3f650ef7c4f38748b7cb0f61bb8",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/remote-flow-input-form/connector-auth-config-finder.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "allAuthConfigs",
                            "type": "Config[] | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DropdownOption[]",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "allAuthConfigs",
                            "type": "Config[] | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "pure": true,
            "ngname": "connectorAuthConfigsFinder",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { DropdownOption } from 'src/app/layout/common-layout/model/dynamic-controls/dropdown-options';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\nimport { OAuth2ConfigSettings } from 'src/app/layout/common-layout/model/fields/variable/config-settings';\n\n@Pipe({\n\tname: 'connectorAuthConfigsFinder',\n\tpure: true,\n})\nexport class ConnectorAuthConfigsFinder implements PipeTransform {\n\ttransform(config: Config, allAuthConfigs: Config[] | null): DropdownOption[] {\n\t\tif (!allAuthConfigs) return [];\n\t\treturn allAuthConfigs\n\t\t\t.filter(c => (c.settings as OAuth2ConfigSettings).authUrl === (config.settings as OAuth2ConfigSettings).authUrl)\n\t\t\t.map(c => {\n\t\t\t\treturn { label: c.label, value: `\\${configs.${c.key}}` };\n\t\t\t});\n\t}\n}\n"
        },
        {
            "name": "DefaultFalsePipe",
            "id": "pipe-DefaultFalsePipe-d7fd6738aec88c5a5814e18611e0ba5d9d26cab9388620f1bf9c979e213f82cc6502ee1ec845e2cbb339fe389c4804fb889fd1412c56197d350e8e199b0d4e48",
            "file": "src/app/layout/common-layout/pipe/default-false.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "defaultFalse",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'defaultFalse' })\nexport class DefaultFalsePipe implements PipeTransform {\n\ttransform(value: boolean | null): boolean {\n\t\treturn value == null ? false : value;\n\t}\n}\n"
        },
        {
            "name": "DefaultTruePipe",
            "id": "pipe-DefaultTruePipe-3098058166af66a3f2fd28889fcbeeacebfbe83bf478c175569007f119b3b91fdd02aaf56bb0c2eebee852c15f37383e4d45236edf3bb6562576bdb340ff29ce",
            "file": "src/app/layout/common-layout/pipe/default-true.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "defaultTrue",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'defaultTrue' })\nexport class DefaultTruePipe implements PipeTransform {\n\ttransform(value: boolean | null): boolean {\n\t\treturn value == null ? true : value;\n\t}\n}\n"
        },
        {
            "name": "DefaultZeroPipe",
            "id": "pipe-DefaultZeroPipe-877b5f68a91e809a518d0c29a12855b3329d7db1a2ce0f15a7d54c939abdcaf9f4e8dc0ee8e6939a31d340db1387c4f4cb47e75aae944f4170b1d094bcd8807a",
            "file": "src/app/layout/common-layout/pipe/default-zero.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "number | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "defaultZero",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'defaultZero' })\nexport class DefaultZeroPipe implements PipeTransform {\n\ttransform(value: number | undefined): number {\n\t\treturn value == null ? 0 : value;\n\t}\n}\n"
        },
        {
            "name": "ItemTextPipe",
            "id": "pipe-ItemTextPipe-6cd923668d4f4c158e5d099b611d23d3d0b64839d2bcb3c7b4c31bd60bbf650efde3264f08ae720e1c45868207720730a02fe0cef35144b9e084b6fa5bd530ef",
            "file": "src/app/layout/common-layout/components/form-controls/ng-select-tag-value-template/item-text.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string | DropdownOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string | DropdownOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "pure": true,
            "ngname": "itemText",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { DropdownOption } from '../../../model/dynamic-controls/dropdown-options';\n\n@Pipe({\n\tname: 'itemText',\n\tpure: true,\n})\nexport class ItemTextPipe implements PipeTransform {\n\ttransform(value: string | DropdownOption) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn value;\n\t\t}\n\t\treturn value.label;\n\t}\n}\n"
        },
        {
            "name": "OutputLogPipe",
            "id": "pipe-OutputLogPipe-b3ba1d89780ad2a7709628c73d43052f821143e829a03a107b7b0aa19b41d43bcf2ec988830463b0bf9871e65b2bd4514c32570d484a784d14d0b2b40c7f38d2",
            "file": "src/app/layout/common-layout/pipe/output-log.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "isJsonString",
                    "args": [
                        {
                            "name": "str",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "repr",
                    "args": [
                        {
                            "name": "obj",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "outputLog",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'outputLog' })\r\nexport class OutputLogPipe implements PipeTransform {\r\n\ttransform(value: any | null): string {\r\n\t\tif (value == undefined) {\r\n\t\t\treturn '{}';\r\n\t\t}\r\n\t\tlet result = '';\r\n\t\tif (typeof value === 'object') {\r\n\t\t\tresult = JSON.stringify(value, null, 2);\r\n\t\t} else if (this.isJsonString(value)) {\r\n\t\t\tresult = JSON.stringify(JSON.parse(value), null, 2);\r\n\t\t} else {\r\n\t\t\tresult = this.repr(value);\r\n\t\t}\r\n\t\treturn result.length > 4098 ? result.substr(0, 4098) + ' (truncated)' : result;\r\n\t}\r\n\r\n\trepr(obj) {\r\n\t\tif (obj == null || typeof obj === 'string' || typeof obj === 'number') return String(obj);\r\n\t\tif (obj.length) return '[' + Array.prototype.map.call(obj, this.repr).join(', ') + ']';\r\n\t\tif (obj instanceof HTMLElement) return '<' + obj.nodeName.toLowerCase() + '>';\r\n\t\tif (obj instanceof Text) return '\"' + obj.nodeValue + '\"';\r\n\t\tif (obj.toString) return obj.toString();\r\n\r\n\t\treturn String(obj);\r\n\t}\r\n\r\n\tisJsonString(str) {\r\n\t\ttry {\r\n\t\t\tJSON.parse(str);\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n}\r\n"
        },
        {
            "name": "RawOutputLogPipe",
            "id": "pipe-RawOutputLogPipe-33abb8466b28855880dcc97370a18d45c05937bd385de60330df2570e76fa3fae1ac5f388cd55c422596838358bcb14c6bbbcbabcf7a56bb3735b914ddc2c53c",
            "file": "src/app/layout/common-layout/pipe/raw-output-log.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "isJsonString",
                    "args": [
                        {
                            "name": "str",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "repr",
                    "args": [
                        {
                            "name": "obj",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "rawOutputLog",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'rawOutputLog' })\nexport class RawOutputLogPipe implements PipeTransform {\n\ttransform(value: any | null): string {\n\t\tif (value == undefined) {\n\t\t\treturn '{}';\n\t\t}\n\t\tlet result = '';\n\t\tif (typeof value === 'object') {\n\t\t\tresult = JSON.stringify(value, null, 2);\n\t\t} else if (this.isJsonString(value)) {\n\t\t\tresult = JSON.stringify(JSON.parse(value), null, 2);\n\t\t} else {\n\t\t\tresult = this.repr(value);\n\t\t}\n\t\treturn result.length > 64000 ? result.substr(0, 64000) + ' (truncated)' : result;\n\t}\n\n\trepr(obj) {\n\t\tif (obj == null || typeof obj === 'string' || typeof obj === 'number') return String(obj);\n\t\tif (obj.length) return '[' + Array.prototype.map.call(obj, this.repr).join(', ') + ']';\n\t\tif (obj instanceof HTMLElement) return '<' + obj.nodeName.toLowerCase() + '>';\n\t\tif (obj instanceof Text) return '\"' + obj.nodeValue + '\"';\n\t\tif (obj.toString) return obj.toString();\n\n\t\treturn String(obj);\n\t}\n\n\tisJsonString(str) {\n\t\ttry {\n\t\t\tJSON.parse(str);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "Account",
            "id": "interface-Account-fb32e9000a013b4c309e4c9745555019182babb913936a017ca55206d338bd9985990f5720fb5ef50559d35dc9dfc8c43eab74b9c751b65e682a0817a7cfffd1",
            "file": "src/app/layout/common-layout/model/account.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\n\nexport interface Account {\n\tid: UUID;\n\tname: string;\n\tenvironmentId: UUID;\n\tepochCreationTime: number;\n\tepochUpdateTime: number;\n}\n",
            "properties": [
                {
                    "name": "environmentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Action",
            "id": "interface-Action-38ca1f85d9c839a33c15ec8652f61c4866304ba840ff8a170f8e2fb53299d7a7c3362921b1130e0764762f538000ee924a3c52c110cd243057980becd4ca0faf",
            "file": "src/app/layout/common-layout/model/flow-builder/actions/action.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ActionType } from '../../enum/action-type.enum';\nimport { FlowItem } from '../flow-item';\n\nexport interface Action extends FlowItem {\n\tname: string;\n\tdisplayName: string;\n\tepochCreationTime?: number;\n\tepochUpdateTime?: number;\n\ttype?: ActionType;\n}\n",
            "properties": [
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionType",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "FlowItem"
        },
        {
            "name": "ApiKey",
            "id": "interface-ApiKey-4b08aac7191eb1a4c6a5829f03490ff2c459d6c73e552e652f0e7bdc94f5054a502936006f98060770da19969591747e3c14eb3318e5e4404a78626432557ad3",
            "file": "src/app/layout/common-layout/model/api-key.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\n\nexport interface ApiKey {\n\tid: UUID;\n\tname: string;\n\tsecret: string;\n\tprojectId: UUID;\n\tepochCreationTime: number;\n\tepochUpdateTime: number;\n\tepochLastActivity: number;\n}\n",
            "properties": [
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "epochLastActivity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "projectId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "secret",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AppConnector",
            "id": "interface-AppConnector-9c2b65cb97a2a7db29d99bb6c31e7f6bc2e15d9bc2d5aec95a63b30b113a75a75f25f45988933a0eabc736b3280e333d03f1e665d49eb19bc4f65cc076fb2e40",
            "file": "src/app/layout/flow-builder/model/app-connector.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AppConnector {\n\tpieceVersionId: string;\n\tflowId: string;\n\tdocUrl: string;\n\tconnectorName?: string;\n}\n",
            "properties": [
                {
                    "name": "connectorName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "docUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "flowId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "pieceVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AppDetails",
            "id": "interface-AppDetails-0bcf84513789c8a3759c3d9da87f2aba4b97b76a6fa839f7c80374be94a610d4b5eafd7d7e8e6e33e3398fa986957cf16ac583004542b5860a735c941b5684bf",
            "file": "src/app/layout/common-layout/model/app-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AppDetails {\n\tclientId: string;\n\ttokenUrl: string;\n\tsuggestedScope: string;\n\tconnectorName: string;\n}\n",
            "properties": [
                {
                    "name": "clientId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "connectorName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "suggestedScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "tokenUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AppState",
            "id": "interface-AppState-5354c2a24026b3014ecc37ffa8763fd0e158b4b893e4f39a18aeb4c53a492d1302bfd7e9551529956ff47a166af00e64f1082b668a4afc6b2ac0f935e348ca89",
            "file": "src/app/model/app-state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { GlobalBuilderState } from '../layout/flow-builder/store/model/builder-state.model';\nimport { CommonStateModel } from '../layout/common-layout/store/model/common-state.model';\n\nexport interface AppState {\n\treadonly builderState: GlobalBuilderState;\n\treadonly commonState: CommonStateModel;\n}\n",
            "properties": [
                {
                    "name": "builderState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GlobalBuilderState",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "commonState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CommonStateModel",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Artifact",
            "id": "interface-Artifact-99fbd5ec66548838d91ee5df72f31a4ab75445ffce2c24ab6e08016dbba340d384be8c03990db3e064c080f7fba1e585529ea1214c2c36067de5b0ac79ed8d2a",
            "file": "src/app/layout/flow-builder/model/artifact.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Artifact {\n\tcontent: string;\n\tpackage: string;\n}\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "package",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "BoundingBox",
            "id": "interface-BoundingBox-f5f85f25f5a2151024ddf992c5285d87a42153eaa4c8513c7c9aa5524f8828a4c1d41f86d61406220a78f47675eb8d3cecfd1e7b6c40a56987219bd5fff418fd",
            "file": "src/app/layout/common-layout/model/flow-builder/flow-item.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from './actions/action.interface';\nimport { ActionType } from '../enum/action-type.enum';\nimport { TriggerType } from '../enum/trigger-type.enum';\n\nexport interface FlowItem {\n\tname: string;\n\ttype?: ActionType | TriggerType;\n\tdisplayName: string;\n\tsettings: any;\n\tvalid?: boolean;\n\n\t// Render\n\tboundingBox?: BoundingBox;\n\tconnectionsBox?: BoundingBox;\n\txOffset?: number;\n\tyOffset?: number;\n\tyOffsetFromLastNode: number;\n\twidth?: number;\n\theight?: number;\n\tnextAction?: Action;\n}\n\nexport interface BoundingBox {\n\twidth: number;\n\theight: number;\n}\n",
            "properties": [
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ChevronDropdownOption",
            "id": "interface-ChevronDropdownOption-e71550c6d4d7ec19e71b97a3a9d24b2afd0bc8b5eb06888b6610eea7d829ea182dba74e1d57640381c02859d02d9a34582eca9c256a7a59b0a193d4b832492a7",
            "file": "src/app/layout/flow-builder/components/chevron-dropdown-menu/chevron-dropdown-option.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ChevronDropdownOption {\n\tid: string;\n\tname?: string;\n\tcssClasses: string;\n\ttype: ChevronDropdownOptionType;\n}\n\nexport enum ChevronDropdownOptionType {\n\tNORMAL,\n\tSEPARATOR,\n\tCOPY_ID,\n}\n",
            "properties": [
                {
                    "name": "cssClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChevronDropdownOptionType",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CodeAction",
            "id": "interface-CodeAction-14bf7595b37fbb6aa696aedd2ceed4ced12415b506c5e52aacab557b30532fd82c1a802745b0f6be1c368a8e31300e4e2a2123a29a62091f2dd8361c175b1c72",
            "file": "src/app/layout/common-layout/model/flow-builder/actions/code-action.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from './action.interface';\n\nexport interface CodeAction extends Action {\n\tsettings: {\n\t\tinput: any;\n\t\tartifactUrl: string;\n\t\t// // Artifact file to upload if exists\n\t\t// artifactContent?: Artifact;\n\t};\n}\n",
            "properties": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Action"
        },
        {
            "name": "CodeStepInputFormSchema",
            "id": "interface-CodeStepInputFormSchema-82b8c3cdcd366b0e3bdd6db9e70573621837483a4a361ec55cddd9a8cd5c57975b3148fc5123c6ee8810d2cd3d0135e2068097857b52d89cdd8d75954211c66b",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { TriggerType } from 'src/app/layout/common-layout/model/enum/trigger-type.enum';\nimport { StorageOperation } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum';\nimport { StorageScope } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum';\ndeclare type ConfigsAndTheirValues = { [key: string]: any };\ninterface InputFormsSchemaBase {\n\ttype?: ActionType | TriggerType;\n}\nexport interface LoopStepInputFormSchema extends InputFormsSchemaBase {\n\titems: any;\n}\nexport interface ResponseStepInputFormSchema extends InputFormsSchemaBase {\n\toutput: any;\n}\nexport interface CodeStepInputFormSchema extends InputFormsSchemaBase {\n\tinput: any;\n}\n\nexport interface StoragreStepInputFormSchema extends InputFormsSchemaBase {\n\toperation: StorageOperation;\n\tkey: string;\n\tvalue: string;\n\tscope: StorageScope;\n}\n\nexport interface ScheduledTriggerInputFormSchema extends InputFormsSchemaBase {\n\tcronExpression: string;\n}\nexport interface EventTriggerInputFormSchema extends InputFormsSchemaBase {\n\teventsName: string[];\n}\n\nexport interface RemoteFlowInputFormSchema extends InputFormsSchemaBase {\n\tinput: ConfigsAndTheirValues;\n\tflowVersionId: UUID;\n\tpieceVersionId: UUID;\n}\n//TODO figure out a way to check the type of the (input form schema) because right now they are interfaces and instance of won't work since these are json objects from the server\n\nexport type InputFormsSchema =\n\t| LoopStepInputFormSchema\n\t| ResponseStepInputFormSchema\n\t| StoragreStepInputFormSchema\n\t| CodeStepInputFormSchema\n\t| ScheduledTriggerInputFormSchema\n\t| EventTriggerInputFormSchema\n\t| RemoteFlowInputFormSchema;\n",
            "properties": [
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "InputFormsSchemaBase"
        },
        {
            "name": "CodeTestExecutionResult",
            "id": "interface-CodeTestExecutionResult-d53d0c08713ccf63472a82f37b2c6ad2bf9c8876b92fd2a0b3347fdf67cb2c06fa2ea2fce40b6c4412454b4509bdf1dd34362c9ed982d339033222a4c4941571",
            "file": "src/app/layout/common-layout/model/flow-builder/code-test-execution-result.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CodeTestExecutionResult {\n\tduration: number;\n\tinput: any;\n\toutput: any;\n\terrorMessage: string;\n\tstandardOutput: string;\n\tstatus: string;\n\ttimeInSeconds: string;\n\tverdict: string;\n}\n",
            "properties": [
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "output",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "standardOutput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "timeInSeconds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "verdict",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Collection",
            "id": "interface-Collection-b02f4bacc943a48c2dd448ab9db7764605a499127a36c1266766d66766a70b36f2147066e54bc11ee35e1ffaf8fb5857af9b52866f31ca9d7ee53a8e4e30e683",
            "file": "src/app/layout/common-layout/model/piece.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { VersionEditState } from './enum/version-edit-state.enum';\nimport { Observable } from 'rxjs';\nimport { Config } from './fields/variable/config';\n\nexport interface Collection {\n\tid: UUID;\n\tname: string;\n\tprojectId: string;\n\tlastVersion: CollectionVersion;\n\tversionsList: UUID[];\n\tepochCreationTime: number;\n\tepochUpdateTime: number;\n\tflowCount?: Observable<number>;\n}\n\nexport interface CollectionVersion {\n\tid: UUID;\n\tdisplayName: string;\n\tstate: VersionEditState;\n\tconfigs: Config[];\n\t// Locally uploaded file\n\tlogoUrl: string;\n\taccess: string;\n\tdescription: string;\n\tflowsVersionId: UUID[];\n\tepochCreationTime: number;\n\tepochUpdateTime: number;\n}\n",
            "properties": [
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "flowCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "lastVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CollectionVersion",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "projectId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "versionsList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CollectionState",
            "id": "interface-CollectionState-c5c28b050efbf7d9c914bc84a638d672bd5910f00517eac312e420fcc4a267d0c09f8121c984d644f0e5167deb55537e9b697280185e87e8ebda71f748ebc035",
            "file": "src/app/layout/flow-builder/store/model/collection-state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Collection } from 'src/app/layout/common-layout/model/piece.interface';\nimport { PieceStateEnum } from './enums/piece-state.enum';\n\nexport interface CollectionState {\n\tcollection: Collection;\n\tstate: PieceStateEnum;\n}\n",
            "properties": [
                {
                    "name": "collection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Collection",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PieceStateEnum",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CollectionVersion",
            "id": "interface-CollectionVersion-b02f4bacc943a48c2dd448ab9db7764605a499127a36c1266766d66766a70b36f2147066e54bc11ee35e1ffaf8fb5857af9b52866f31ca9d7ee53a8e4e30e683",
            "file": "src/app/layout/common-layout/model/piece.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { VersionEditState } from './enum/version-edit-state.enum';\nimport { Observable } from 'rxjs';\nimport { Config } from './fields/variable/config';\n\nexport interface Collection {\n\tid: UUID;\n\tname: string;\n\tprojectId: string;\n\tlastVersion: CollectionVersion;\n\tversionsList: UUID[];\n\tepochCreationTime: number;\n\tepochUpdateTime: number;\n\tflowCount?: Observable<number>;\n}\n\nexport interface CollectionVersion {\n\tid: UUID;\n\tdisplayName: string;\n\tstate: VersionEditState;\n\tconfigs: Config[];\n\t// Locally uploaded file\n\tlogoUrl: string;\n\taccess: string;\n\tdescription: string;\n\tflowsVersionId: UUID[];\n\tepochCreationTime: number;\n\tepochUpdateTime: number;\n}\n",
            "properties": [
                {
                    "name": "access",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "configs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Config[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "flowsVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "logoUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VersionEditState",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CommonStateModel",
            "id": "interface-CommonStateModel-d749cb57189cf15ed984acd9ddc10cd6a70d3e3292d9e767a9e4cb69fafdc902badc021912f19b7d3f78b52a647b001a6b8d39dda039582222570929be89e75c",
            "file": "src/app/layout/common-layout/store/model/common-state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectsState } from './projects-state.model';\nimport { OrganizationsState } from './organizations-state.model';\nimport { EventsState } from './events-state.model';\nimport { EnvironmentsState } from './environments.model';\n\nexport interface CommonStateModel {\n\treadonly eventsState: EventsState;\n\treadonly organizationsState: OrganizationsState;\n\treadonly projectsState: ProjectsState;\n\treadonly environmentsState: EnvironmentsState;\n}\n",
            "properties": [
                {
                    "name": "environmentsState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EnvironmentsState",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "eventsState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventsState",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "organizationsState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrganizationsState",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "projectsState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectsState",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataCell",
            "id": "interface-DataCell-da8a56f7f88c8c324c7e69d49cd30bbb27066602bf04273c3e1caab9f2133a6916ea9642464c012983d70d2e81ac551aa238e3ef2b9869eaefebc66d2aa0d508",
            "file": "src/app/layout/common-layout/components/responsive-table/data-cell.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataCell {\n\ticon?: string;\n\tfaIcon?: any;\n\talign?: string;\n\troute?: { route: string; extra: any };\n\tonHover?: boolean;\n\tcontent: string;\n\tactionToReturn?: string;\n}\n",
            "properties": [
                {
                    "name": "actionToReturn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "faIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "onHover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataHeader",
            "id": "interface-DataHeader-4ca246068fd667e8ba0f1bdb7709927d596d38267531b31f3b3b636258fdb05990278589329ed3d530ccaf66f58f94b4ef9c8984f4fb1d0c2a7157f468dc93ba",
            "file": "src/app/layout/common-layout/components/responsive-table/data-header.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataHeader {\n\tcontent: string;\n\tisButton?: boolean;\n\talign?: string;\n\twidth?: string;\n\tactionToReturn?: string;\n}\n",
            "properties": [
                {
                    "name": "actionToReturn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "align",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "isButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataRow",
            "id": "interface-DataRow-cae5aa9f1e0be17aa143794d70bdb222313fc108fb4a6d86a19c9c9f4c9bca7d242dc835b8b853f9f578b5af99e23d5a21fdd7c46a7c95a2f53f6e3fe044ae77",
            "file": "src/app/layout/common-layout/components/responsive-table/data-row.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DataCell } from './data-cell';\n\nexport interface DataRow {\n\turl?: string;\n\tcolumns: DataCell[];\n}\n",
            "properties": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataCell[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DeployStepSelectTargetEmittedValue",
            "id": "interface-DeployStepSelectTargetEmittedValue-ce802f791569c8575a8f67b64db4075627946355a803e8e3e2e7888e86f69f3c7351c8877dbd9cb0416df31bdc13996a85a813e3bddb5bb4cffbed5694e5c97e",
            "file": "src/app/layout/common-layout/components/deploy-modal/select-targeted-environment-step/select-deployment-environment-step.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { fadeInUp400ms } from '../../../animation/fade-in-up.animation';\nimport { Collection, CollectionVersion } from '../../../model/piece.interface';\nimport { UUID } from 'angular2-uuid';\nimport { AccountService } from '../../../service/account.service';\nimport { CollectionService } from '../../../service/collection.service';\nimport { FlowService } from '../../../service/flow.service';\nimport { DropdownItemOption } from '../../../model/fields/variable/subfields/dropdown-item-option';\nimport { distinctUntilChanged, forkJoin, map, Observable, shareReplay, switchMap, takeUntil, tap } from 'rxjs';\n\nimport { DropdownOption } from '../../../model/dynamic-controls/dropdown-options';\nimport { FlowVersion } from '../../../model/flow-version.class';\nimport { Store } from '@ngrx/store';\nimport { EnvironmentSelectors } from '../../../store/selector/environment.selector';\nimport { ProjectEnvironment } from '../../../model/project-environment.interface';\n\nexport interface DeployStepSelectTargetEmittedValue {\n\tcollectionVersion: CollectionVersion;\n\taccountId: UUID;\n\tflowsVersions: FlowVersion[];\n\taccountName: string;\n\tenvironmentName: string;\n}\n\n@Component({\n\tselector: 'app-select-deployment-environment',\n\ttemplateUrl: './select-deployment-environment-step.component.html',\n\tstyleUrls: ['./select-deployment-environment-step.component.css'],\n\tanimations: [fadeInUp400ms],\n})\nexport class SelectDeploymentEnvironmentStepComponent implements OnInit {\n\tselectDeploymentEnvironmentForm: FormGroup;\n\tenvironmentDropdownOptions$: Observable<DropdownItemOption[]>;\n\n\tcollectionVersionsDropdownPlaceHolder = 'Please Select';\n\taccountsDropdownPlaceHolder = 'Please Select';\n\tloading = false;\n\tsubmitted = false;\n\taccountsDropdownOptions$: Observable<{\n\t\taccountOptions: DropdownOption[];\n\t\tloaded: boolean;\n\t}>;\n\t@Input() collection: Collection;\n\t@Output() cancelClicked: EventEmitter<void> = new EventEmitter<void>();\n\t@Output() nextClicked: EventEmitter<any> = new EventEmitter<DeployStepSelectTargetEmittedValue>();\n\tdestroyed$: Observable<boolean> = new Observable<boolean>();\n\tenvironmentDropdownOptions: DropdownItemOption[];\n\tenvironments: ProjectEnvironment[];\n\n\tcollectionVersionDropdownOptions: DropdownItemOption[];\n\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate store: Store,\n\t\tprivate flowService: FlowService,\n\t\tprivate pieceService: CollectionService,\n\t\tprivate accountService: AccountService\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.selectDeploymentEnvironmentForm = this.formBuilder.group({\n\t\t\tenvironmentId: ['', [Validators.required]],\n\t\t\tcollectionVersionId: ['', [Validators.required]],\n\t\t\taccountName: ['', [Validators.required]],\n\t\t});\n\n\t\tthis.environmentDropdownOptions$ = this.store.select(EnvironmentSelectors.selectEnvironments).pipe(\n\t\t\ttap(envs => {\n\t\t\t\tthis.environments = envs;\n\t\t\t}),\n\t\t\tmap(envs => {\n\t\t\t\treturn envs.map(env => {\n\t\t\t\t\treturn { value: env.id, label: env.name };\n\t\t\t\t});\n\t\t\t}),\n\t\t\ttap(envOptions => {\n\t\t\t\tthis.environmentDropdownOptions = envOptions;\n\t\t\t\tthis.setEvnironmentIdControlListener();\n\t\t\t\tif (envOptions.length == 0) {\n\t\t\t\t} else {\n\t\t\t\t\tthis.getControl('environmentId')?.setValue(envOptions[0].value);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tsetEvnironmentIdControlListener() {\n\t\tconst environmentDropdownControl = this.getControl('environmentId');\n\t\tenvironmentDropdownControl!.valueChanges\n\t\t\t.pipe(distinctUntilChanged(), takeUntil(this.destroyed$))\n\t\t\t.subscribe((envId: UUID) => {\n\t\t\t\tthis.setCollectionVersionsPublishedForEnvironment(envId);\n\t\t\t\tthis.setEnvrionmentAccounts(envId);\n\t\t\t});\n\t}\n\n\tsetCollectionVersionsPublishedForEnvironment(environmentId: UUID) {\n\t\tlet env = this.environments.find(env => env.id === environmentId)!;\n\t\tlet publishedCollectionInEnvironment = env.deployedCollections.find(\n\t\t\tcollection => collection.collectionId == this.collection.id\n\t\t)!;\n\t\tlet publishedCollectionVersions = this.collection.versionsList.filter(collectionVersionId => {\n\t\t\treturn !!publishedCollectionInEnvironment.collectionVersionsId.find(\n\t\t\t\tpublishedCollectionVersionId => collectionVersionId === publishedCollectionVersionId\n\t\t\t);\n\t\t});\n\n\t\t//TODO are you sure the versions always are returned in the same order?\n\t\tthis.collectionVersionDropdownOptions = publishedCollectionVersions.map(publishedCollectionVersionId => {\n\t\t\tconst idx = this.collection.versionsList.findIndex(\n\t\t\t\tcollectionVersionId => collectionVersionId === publishedCollectionVersionId\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tlabel: `Version ${idx + 1}`,\n\t\t\t\tvalue: publishedCollectionVersionId,\n\t\t\t};\n\t\t});\n\t\tif (this.collectionVersionDropdownOptions.length === 0) {\n\t\t\tthis.collectionVersionsDropdownPlaceHolder = `This Collection Is Not Published on ${env.name}`;\n\t\t\tthis.getControl('collectionVersionId')!.setValue(null);\n\t\t\tthis.getControl('collectionVersionId')!.setErrors(null);\n\t\t} else {\n\t\t\tthis.collectionVersionsDropdownPlaceHolder = `Please Select`;\n\t\t\tthis.getControl('collectionVersionId')!.setValue(this.collectionVersionDropdownOptions[0].value);\n\t\t\tthis.getControl('collectionVersionId')!.setErrors(null);\n\t\t}\n\t}\n\n\tsetEnvrionmentAccounts(environmentId: UUID) {\n\t\tlet environment = this.environments.find(f => f.id === environmentId)!;\n\t\tthis.getControl('accountName')?.setValue(null);\n\t\tthis.accountsDropdownPlaceHolder = 'Loading';\n\t\tthis.accountsDropdownOptions$ = this.accountService.list(environmentId, 9999).pipe(\n\t\t\tmap(accounts => {\n\t\t\t\tlet dropdownOptions: DropdownItemOption[] = accounts.data.map(acc => {\n\t\t\t\t\treturn { value: acc.name, label: acc.name };\n\t\t\t\t});\n\t\t\t\treturn { accountOptions: dropdownOptions, loaded: true };\n\t\t\t}),\n\t\t\ttap(result => {\n\t\t\t\tif (result.accountOptions.length == 0) {\n\t\t\t\t\tthis.accountsDropdownPlaceHolder = `No accounts on ${environment?.name}`;\n\t\t\t\t} else {\n\t\t\t\t\tthis.accountsDropdownPlaceHolder = 'Please Select';\n\t\t\t\t\tthis.getControl('accountName')?.setValue(result.accountOptions[0].value);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tnextStep() {\n\t\tthis.submitted = true;\n\t\tif (this.selectDeploymentEnvironmentForm.invalid) {\n\t\t\treturn;\n\t\t}\n\t\tlet accountName = this.selectDeploymentEnvironmentForm.get('accountName')!.value;\n\n\t\tthis.loading = true;\n\n\t\tconst collectionVersion$ = this.pieceService\n\t\t\t.getVersion(this.selectDeploymentEnvironmentForm.get('collectionVersionId')!.value)\n\t\t\t.pipe(shareReplay());\n\n\t\tconst flowsVersions$ = collectionVersion$.pipe(\n\t\t\tswitchMap(version => {\n\t\t\t\treturn this.flowService.listByPieceVersion(version);\n\t\t\t})\n\t\t);\n\t\tconst account$ = this.accountService.getByNameAndEnvironment(\n\t\t\tthis.selectDeploymentEnvironmentForm.get('environmentId')!.value,\n\t\t\taccountName\n\t\t);\n\t\tconst joinedRequests$ = forkJoin({\n\t\t\tcollectionVersion: collectionVersion$,\n\t\t\tflowsVersions: flowsVersions$,\n\t\t\taccount: account$,\n\t\t});\n\t\tconst environmentName = this.environmentDropdownOptions.find(\n\t\t\tev => ev.value == this.selectDeploymentEnvironmentForm.get('environmentId')!.value\n\t\t)!.label;\n\t\tjoinedRequests$.subscribe({\n\t\t\tnext: response => {\n\t\t\t\tthis.loading = false;\n\t\t\t\tconst valueToPassToNextStep: DeployStepSelectTargetEmittedValue = {\n\t\t\t\t\taccountId: response.account.id,\n\t\t\t\t\tflowsVersions: response.flowsVersions,\n\t\t\t\t\tcollectionVersion: response.collectionVersion,\n\t\t\t\t\tenvironmentName: environmentName,\n\t\t\t\t\taccountName: accountName,\n\t\t\t\t};\n\t\t\t\tthis.loading = false;\n\n\t\t\t\tthis.nextClicked.emit(valueToPassToNextStep);\n\t\t\t},\n\t\t\terror: err => {\n\t\t\t\tthis.loading = false;\n\t\t\t\tconsole.log(err);\n\t\t\t},\n\t\t});\n\t}\n\n\tgetControl(controlName: string) {\n\t\treturn this.selectDeploymentEnvironmentForm.get(controlName);\n\t}\n}\n",
            "properties": [
                {
                    "name": "accountId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "accountName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "collectionVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CollectionVersion",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "environmentName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "flowsVersions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowVersion[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DropdownItemOption",
            "id": "interface-DropdownItemOption-e822a913143b184f36dd3acbd082c489aaa7e5208fb6368c216e06ad43335fd36d107e376345b1c85e5e1b010263efacec1b7347507fbbaf39bde964c56679b7",
            "file": "src/app/layout/common-layout/model/fields/variable/subfields/dropdown-item-option.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DropdownItemOption {\n\tvalue: any;\n\tlabel: string;\n}\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DropdownOption",
            "id": "interface-DropdownOption-a3543d872d11bdbd8ee359eaa5cf49aa7a25dc74becec3803e27295b81b62c746c401a51e02600bf7f1e27906a2e9187a5330b07089cb3b5289b8329552ce573",
            "file": "src/app/layout/common-layout/model/dynamic-controls/dropdown-options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DropdownOption {\n\tvalue: any;\n\tlabel: string;\n}\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DropdownOption",
            "id": "interface-DropdownOption-fda1051283c569a7af5625657ca115b6983d328d0828644d22e60d4a366f14e4cd000d0b33f8fc3021de7a8f45eccd80237f2878646be6c621ab7e111ede7378-1",
            "file": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\n\nimport { DropdownType } from '../../enum/config.enum';\nimport { Oauth2UserInputType } from './subfields/oauth2-user-input.type';\nimport { DropdownItemOption } from './subfields/dropdown-item-option';\n\nexport class ConfigSettings {\n\trequired: boolean;\n}\n\nexport class BaseConfigSettings extends ConfigSettings {}\n\nexport class ShortTextSettings extends ConfigSettings {\n\tdropdown: boolean;\n\tdropdownOptions: DropdownItemOption[];\n}\nexport class DropdownSettings extends ConfigSettings {\n\tdropdownType: DropdownType;\n}\n\nexport class StaticDropdownSettings extends DropdownSettings {\n\toptions: DropdownOption[];\n}\n\nexport class DynamicDropdownSettings extends DropdownSettings {\n\trefreshReferences: string[]; //config key\n\tartifactContent?: Artifact;\n\tartifactUrl: string;\n}\n\nexport class OAuth2ConfigSettings extends ConfigSettings {\n\tauthUrl: string = '';\n\ttokenUrl: string = '';\n\trefreshUrl: string = '';\n\tclientId: string = '';\n\tscope: string = '';\n\tclientSecret: string = '';\n\tconfigParent?: {\n\t\tconfigKey: string;\n\t};\n\tuserInputType: Oauth2UserInputType = Oauth2UserInputType.LOGIN;\n\tresponseType: string = 'code';\n}\n\nexport interface DropdownOption {\n\tvalue: any;\n\tlabel: string;\n}\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DropdownOption-1"
        },
        {
            "name": "DynamicDropdownSettingsFromValue",
            "id": "interface-DynamicDropdownSettingsFromValue-04a034bd73c53018e2dc33f50ad2faba7890d137098724ecfdbed244503dcb3b2bd0c8e886cce2b3ab176ae334eb05a9dbf1aad68748859f295a53740ec777ad",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/dropdown-config-settings/dropdown-config-settings.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { combineLatest, map, Observable, of, take, tap } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\nimport { DropdownOption } from 'src/app/layout/common-layout/model/dynamic-controls/dropdown-options';\nimport { ConfigScope } from 'src/app/layout/common-layout/model/enum/config-scope-type.enum';\nimport { ConfigSource } from 'src/app/layout/common-layout/model/enum/config-source';\nimport { ConfigType } from 'src/app/layout/common-layout/model/enum/config-type';\nimport { DropdownType } from 'src/app/layout/common-layout/model/enum/config.enum';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\nimport { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\nimport { CodeService } from 'src/app/layout/flow-builder/service/code.service';\nimport { BuilderSelectors } from 'src/app/layout/flow-builder/store/selector/flow-builder.selector';\nimport { RefreshReferencesValidator } from '../../../validators/refreshReferencesValidator';\n\ninterface DynamicDropdownSettingsFromValue {\n\trefreshReferences: string[];\n\toptional?: boolean;\n\tartifactContent: Artifact;\n}\n\ninterface StaticDropdownSettingsFromValue {\n\toptions: any[];\n\toptional?: boolean;\n}\n@Component({\n\tselector: 'app-dropdown-config-settings',\n\ttemplateUrl: './dropdown-config-settings.component.html',\n\tstyleUrls: ['./dropdown-config-settings.component.css'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: DropdownConfigSettingsComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: DropdownConfigSettingsComponent,\n\t\t},\n\t],\n\tanimations: [fadeInUp400ms],\n})\nexport class DropdownConfigSettingsComponent implements ControlValueAccessor, OnInit {\n\t@Input() currentConfigSource: ConfigSource;\n\t@Input() configToUpdate: Config | undefined;\n\t@Input() submitted = false;\n\t_currentConfigScope: ConfigScope;\n\t@Input() set currentConfigScope(scope) {\n\t\tthis._currentConfigScope = scope;\n\t\tthis.getRefreshReferences();\n\t}\n\tstaticDropdownSettingsForm: FormGroup;\n\tstaticSettingsFormValueChanged$: Observable<void>;\n\tdynamicSettingsFormValueChanged$: Observable<void>;\n\tdropdownTypeControl: FormControl;\n\tdynamicDropdownSettingsForm: FormGroup;\n\tdropdownTypeChanged$: Observable<DropdownType>;\n\tartifact$: Observable<Artifact>;\n\tConfigSource = ConfigSource;\n\trefreshReferences$: Observable<DropdownOption[]>;\n\tonChange = val => {};\n\tconstructor(private formBuilder: FormBuilder, private codeService: CodeService, private store: Store) {}\n\tngOnInit(): void {\n\t\tthis.dropdownTypeControl = new FormControl(DropdownType.STATIC);\n\t\tthis.staticDropdownSettingsForm = this.formBuilder.group({\n\t\t\toptions: new FormControl([]),\n\t\t\toptional: new FormControl(false),\n\t\t});\n\t\tconst refreshReferencesValidator = RefreshReferencesValidator.createValidator(\n\t\t\tthis.store.select(BuilderSelectors.selectAllConfigs).pipe(take(1)),\n\t\t\tthis.configToUpdate\n\t\t);\n\t\tthis.dynamicDropdownSettingsForm = this.formBuilder.group({\n\t\t\trefreshReferences: new FormControl([], [], refreshReferencesValidator),\n\t\t\toptional: new FormControl(false),\n\t\t\tartifactContent: new FormControl(this.codeService.dynamicDropdownDefaultArtifact()),\n\t\t});\n\t\tthis.artifact$ = of(this.codeService.dynamicDropdownDefaultArtifact());\n\t\tthis.setUpStaticDropdownSettingsListener();\n\t\tthis.setUpDynamicDropdownSettingsListener();\n\t\tthis.setUpTypeChangedListener();\n\t\tthis.getRefreshReferences();\n\t}\n\tgetRefreshReferences() {\n\t\tthis.refreshReferences$ = combineLatest({\n\t\t\tflowConfigs: this.store.select(BuilderSelectors.selectCurrentFlowConfigs),\n\t\t\tcollectionConfigs: this.store.select(BuilderSelectors.selectCurrentCollectionConfigs),\n\t\t}).pipe(\n\t\t\tmap(res => {\n\t\t\t\tconst allConfigs = [...res.collectionConfigs];\n\t\t\t\tif (this._currentConfigScope === ConfigScope.FLOW) {\n\t\t\t\t\tallConfigs.push(...res.flowConfigs);\n\t\t\t\t}\n\t\t\t\treturn allConfigs\n\t\t\t\t\t.filter(\n\t\t\t\t\t\tc => c.type === ConfigType.OAUTH2 || (c.type === ConfigType.DROPDOWN && c.key !== this.configToUpdate?.key)\n\t\t\t\t\t)\n\t\t\t\t\t.map(c => {\n\t\t\t\t\t\treturn { label: c.label, value: c.key };\n\t\t\t\t\t});\n\t\t\t}),\n\t\t\ttap(rfs => {\n\t\t\t\tif (this.dynamicDropdownSettingsForm) {\n\t\t\t\t\tconst refreshReferencesControl = this.dynamicDropdownSettingsForm.get('refreshReferences')!;\n\t\t\t\t\tconst currentRefreshReferencesValue: string[] = refreshReferencesControl.value;\n\t\t\t\t\tconst refreshReferencesValueCorrected = currentRefreshReferencesValue.filter(\n\t\t\t\t\t\tcr => !!rfs.find(r => r.value === cr)\n\t\t\t\t\t);\n\t\t\t\t\trefreshReferencesControl.setValue(refreshReferencesValueCorrected);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\tsetUpStaticDropdownSettingsListener() {\n\t\tthis.staticSettingsFormValueChanged$ = this.staticDropdownSettingsForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tconst valueToEmit = this.prepareStaticDropdownSettingsValue();\n\t\t\t\tthis.onChange(valueToEmit);\n\t\t\t})\n\t\t);\n\t}\n\tprepareStaticDropdownSettingsValue() {\n\t\tconst settingsControlValue: StaticDropdownSettingsFromValue = this.staticDropdownSettingsForm.value;\n\t\tconst valueToEmit = {\n\t\t\t...settingsControlValue,\n\t\t\tdropdownType: this.dropdownTypeControl.value,\n\t\t};\n\t\treturn valueToEmit;\n\t}\n\tsetUpDynamicDropdownSettingsListener() {\n\t\tthis.dynamicSettingsFormValueChanged$ = this.dynamicDropdownSettingsForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tconst valueToEmit = this.prepareDynamicDropdownSettingsValue();\n\t\t\t\tthis.onChange(valueToEmit);\n\t\t\t})\n\t\t);\n\t}\n\tprepareDynamicDropdownSettingsValue() {\n\t\tconst settingsControlValue: DynamicDropdownSettingsFromValue = this.dynamicDropdownSettingsForm.value;\n\t\tconst valueToEmit = {\n\t\t\t...settingsControlValue,\n\t\t\tdropdownType: this.dropdownTypeControl.value,\n\t\t};\n\t\treturn valueToEmit;\n\t}\n\tsetUpTypeChangedListener() {\n\t\tthis.dropdownTypeChanged$ = this.dropdownTypeControl.valueChanges.pipe(\n\t\t\ttap((type: DropdownType) => {\n\t\t\t\tif (type === DropdownType.DYNAMIC) {\n\t\t\t\t\tthis.onChange(this.prepareDynamicDropdownSettingsValue());\n\t\t\t\t} else if (type === DropdownType.STATIC) {\n\t\t\t\t\tthis.onChange(this.prepareStaticDropdownSettingsValue());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\twriteValue(obj: any): void {\n\t\tif (obj && obj.dropdownType) {\n\t\t\tthis.dropdownTypeControl.setValue(obj.dropdownType);\n\t\t\tif (obj.dropdownType === DropdownType.STATIC) {\n\t\t\t\tthis.staticDropdownSettingsForm.patchValue({ ...obj, optional: !obj.required });\n\t\t\t} else if (obj.dropdownType === DropdownType.DYNAMIC) {\n\t\t\t\tif (obj.artifactUrl) {\n\t\t\t\t\tthis.artifact$ = this.codeService.readFile(obj.artifactUrl).pipe(\n\t\t\t\t\t\ttap(artifact => {\n\t\t\t\t\t\t\tthis.dynamicDropdownSettingsForm.patchValue({ artifactContent: artifact });\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.artifact$ = of(obj.artifactContent);\n\t\t\t\t\tthis.dynamicDropdownSettingsForm.patchValue({ artifactContent: obj.artifactContent });\n\t\t\t\t}\n\n\t\t\t\tthis.dynamicDropdownSettingsForm.patchValue({ ...obj, optional: !obj.required });\n\t\t\t}\n\t\t}\n\t}\n\tvalidate() {\n\t\tconst currentDropdownForm =\n\t\t\tthis.dropdownTypeControl.value === DropdownType.DYNAMIC\n\t\t\t\t? this.dynamicDropdownSettingsForm\n\t\t\t\t: this.staticDropdownSettingsForm;\n\t\tif (!currentDropdownForm.valid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\n\t\tthis.onChange({ ...this.staticDropdownSettingsForm.value, dropdownType: this.dropdownTypeControl.value });\n\t}\n\tregisterOnTouched(fn: any): void {}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.staticDropdownSettingsForm.disable();\n\t\t\tthis.dropdownTypeControl.disable();\n\t\t\tthis.dynamicDropdownSettingsForm.disable();\n\t\t}\n\t}\n\n\tget DropDownType() {\n\t\treturn DropdownType;\n\t}\n\n\tsetDropdownTypeFormControlValue(type: DropdownType) {\n\t\tif (this.dropdownTypeControl.enabled) {\n\t\t\tthis.dropdownTypeControl.setValue(type);\n\t\t}\n\t}\n\tisReferenceSelected(configKey: string) {\n\t\tconst refreshReferencesValue: string[] = this.dynamicDropdownSettingsForm.get('refreshReferences')!.value;\n\t\treturn !!refreshReferencesValue.find(r => r === configKey);\n\t}\n}\n",
            "properties": [
                {
                    "name": "artifactContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Artifact",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "optional",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "refreshReferences",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "EnvironmentsState",
            "id": "interface-EnvironmentsState-f37f9da4a88541bb1f88f84a44727cd5808277248436189e709b423ac184878f2757517344b0eb816d4f2869f8d82d162328a202bbbb16c32a54f493dce25d96",
            "file": "src/app/layout/common-layout/store/model/environments.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ProjectEnvironment } from '../../model/project-environment.interface';\n\nexport interface EnvironmentsState {\n\tloaded: boolean;\n\tenvironments: ProjectEnvironment[];\n}\n",
            "properties": [
                {
                    "name": "environments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectEnvironment[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "loaded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ErrorMessage",
            "id": "interface-ErrorMessage-3dcf482ff4b92d866fdd5349e11d2aeed45d8fb694ca5379a10ae140e7b413fc1a2ceb9f052a8cd9feba68765ddfde079fa132b9f2e1c55112731e07401af998",
            "file": "src/app/model/error-message.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ErrorMessage {\n\tmessage: string;\n\terrorCode: ErrorCode;\n}\n\nexport enum ErrorCode {\n\tUSER_TRIAL_EXPIRED = 'USER_TRIAL_EXPIRED',\n}\n",
            "properties": [
                {
                    "name": "errorCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ErrorCode",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "EventDefinition",
            "id": "interface-EventDefinition-6b79a26bdcd208190c3b8f6808f2530469578e754f39b49a34946fecc8809a92ec57df5b30be5ba7412f679426c654f4424f5e556c32dd0c6e4ffcb887c4fbaf",
            "file": "src/app/layout/common-layout/model/event.-definition.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface EventDefinition {\n\tid: string;\n\tname: string;\n\tdisplayName: string;\n\thidden: boolean;\n\tdescription: string;\n\tepochCreationTime: number;\n\tepochUpdateTime: number;\n}\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "hidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "EventsState",
            "id": "interface-EventsState-dc1dee47e253f55f8ee3702f32da0d1f3e7fc01920c24bf0f384c7d6cfb72188c27e2caa2341c4b08d8fd630da345c89a6bf3e5629196235b9c2efbacbeaa244",
            "file": "src/app/layout/common-layout/store/model/events-state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EventDefinition } from '../../model/event.-definition.interface';\n\nexport interface EventsState {\n\tloaded: boolean;\n\tevents: EventDefinition[];\n}\n",
            "properties": [
                {
                    "name": "events",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventDefinition[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "loaded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "EventTriggerInputFormSchema",
            "id": "interface-EventTriggerInputFormSchema-82b8c3cdcd366b0e3bdd6db9e70573621837483a4a361ec55cddd9a8cd5c57975b3148fc5123c6ee8810d2cd3d0135e2068097857b52d89cdd8d75954211c66b",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { TriggerType } from 'src/app/layout/common-layout/model/enum/trigger-type.enum';\nimport { StorageOperation } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum';\nimport { StorageScope } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum';\ndeclare type ConfigsAndTheirValues = { [key: string]: any };\ninterface InputFormsSchemaBase {\n\ttype?: ActionType | TriggerType;\n}\nexport interface LoopStepInputFormSchema extends InputFormsSchemaBase {\n\titems: any;\n}\nexport interface ResponseStepInputFormSchema extends InputFormsSchemaBase {\n\toutput: any;\n}\nexport interface CodeStepInputFormSchema extends InputFormsSchemaBase {\n\tinput: any;\n}\n\nexport interface StoragreStepInputFormSchema extends InputFormsSchemaBase {\n\toperation: StorageOperation;\n\tkey: string;\n\tvalue: string;\n\tscope: StorageScope;\n}\n\nexport interface ScheduledTriggerInputFormSchema extends InputFormsSchemaBase {\n\tcronExpression: string;\n}\nexport interface EventTriggerInputFormSchema extends InputFormsSchemaBase {\n\teventsName: string[];\n}\n\nexport interface RemoteFlowInputFormSchema extends InputFormsSchemaBase {\n\tinput: ConfigsAndTheirValues;\n\tflowVersionId: UUID;\n\tpieceVersionId: UUID;\n}\n//TODO figure out a way to check the type of the (input form schema) because right now they are interfaces and instance of won't work since these are json objects from the server\n\nexport type InputFormsSchema =\n\t| LoopStepInputFormSchema\n\t| ResponseStepInputFormSchema\n\t| StoragreStepInputFormSchema\n\t| CodeStepInputFormSchema\n\t| ScheduledTriggerInputFormSchema\n\t| EventTriggerInputFormSchema\n\t| RemoteFlowInputFormSchema;\n",
            "properties": [
                {
                    "name": "eventsName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "InputFormsSchemaBase"
        },
        {
            "name": "EventTriggerInterface",
            "id": "interface-EventTriggerInterface-2a6e589779f9c3666b0bb66581710f76081a39d9c4a09fadfadbad6c892b63736570d6626c90b185e3e1593575adcb5792f676309b495f7051602f70669af834",
            "file": "src/app/layout/common-layout/model/flow-builder/trigger/event-trigger.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Trigger } from './trigger.interface';\n\nexport interface EventTriggerInterface extends Trigger {\n\tsettings: {\n\t\teventsName: string[];\n\t};\n}\n",
            "properties": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Trigger"
        },
        {
            "name": "FlowItem",
            "id": "interface-FlowItem-f5f85f25f5a2151024ddf992c5285d87a42153eaa4c8513c7c9aa5524f8828a4c1d41f86d61406220a78f47675eb8d3cecfd1e7b6c40a56987219bd5fff418fd",
            "file": "src/app/layout/common-layout/model/flow-builder/flow-item.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from './actions/action.interface';\nimport { ActionType } from '../enum/action-type.enum';\nimport { TriggerType } from '../enum/trigger-type.enum';\n\nexport interface FlowItem {\n\tname: string;\n\ttype?: ActionType | TriggerType;\n\tdisplayName: string;\n\tsettings: any;\n\tvalid?: boolean;\n\n\t// Render\n\tboundingBox?: BoundingBox;\n\tconnectionsBox?: BoundingBox;\n\txOffset?: number;\n\tyOffset?: number;\n\tyOffsetFromLastNode: number;\n\twidth?: number;\n\theight?: number;\n\tnextAction?: Action;\n}\n\nexport interface BoundingBox {\n\twidth: number;\n\theight: number;\n}\n",
            "properties": [
                {
                    "name": "boundingBox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BoundingBox",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "connectionsBox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BoundingBox",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "nextAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Action",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionType | TriggerType",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "valid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "xOffset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "yOffset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "yOffsetFromLastNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FlowItemsDetailsState",
            "id": "interface-FlowItemsDetailsState-216341473e27a1237109d896b079e35d3fa671bd27a072dc398a4e56ce290923712dcd82559b691d0ca6d53ebfc5f8df66fa7ceee818e3e344b38e1db40b25c0",
            "file": "src/app/layout/flow-builder/store/model/flow-items-details-state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FlowItemDetails } from '../../page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-item/flow-item-details';\n\nexport interface FlowItemsDetailsState {\n\tcoreFlowItemsDetails: FlowItemDetails[];\n\ttriggerFlowItemsDetails: FlowItemDetails[];\n\tconnectorsFlowItemsDetails: FlowItemDetails[];\n\tuserCollectionsFlowItemsDetails: FlowItemDetails[];\n\tloaded: boolean;\n}\n",
            "properties": [
                {
                    "name": "connectorsFlowItemsDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItemDetails[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "coreFlowItemsDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItemDetails[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "loaded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "triggerFlowItemsDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItemDetails[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "userCollectionsFlowItemsDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItemDetails[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FlowsState",
            "id": "interface-FlowsState-c43947a54ffa8feb8a4ef317caf6451dbc453df8768b3fe03ef4f011ad3c0190dd0cb5b254a1dff2787cf7baa50b6d047ca9191822353b3a8560c8c8594d51ac",
            "file": "src/app/layout/flow-builder/store/model/flows-state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { Flow } from 'src/app/layout/common-layout/model/flow.class';\nimport { FlowsStateEnum } from './enums/flows-state.enum';\nimport { TabState } from './tab-state';\n\ntype FlowId = string;\n\nexport interface FlowsState {\n\tflows: Flow[];\n\ttabsState: { [key: FlowId]: TabState };\n\tselectedFlowId: UUID | null;\n\tstate: FlowsStateEnum;\n\tlastSaveId: UUID | null;\n}\n",
            "properties": [
                {
                    "name": "flows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Flow[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "lastSaveId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID | null",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "selectedFlowId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID | null",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowsStateEnum",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "tabsState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FlowTemplateInterface",
            "id": "interface-FlowTemplateInterface-172c8f9f72ad67544fd582fc8cf7459c3cba419fe03987e6b116396b13b21a8d052b8956b0b7cdc8ac1a58d4094798607e846624f7918eaab101c6707df5cbb3",
            "file": "src/app/layout/flow-builder/model/flow-template.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Config } from '../../common-layout/model/fields/variable/config';\nimport { Trigger } from '../../common-layout/model/flow-builder/trigger/trigger.interface';\n\nexport interface FlowTemplateInterface {\n\ttitle: string;\n\tdescription: string;\n\ticon: string;\n\tversion: {\n\t\taccess: string;\n\t\tconfigs: Config[];\n\t\ttrigger: Trigger;\n\t};\n}\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "version",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "InputFormsSchemaBase",
            "id": "interface-InputFormsSchemaBase-82b8c3cdcd366b0e3bdd6db9e70573621837483a4a361ec55cddd9a8cd5c57975b3148fc5123c6ee8810d2cd3d0135e2068097857b52d89cdd8d75954211c66b",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { TriggerType } from 'src/app/layout/common-layout/model/enum/trigger-type.enum';\nimport { StorageOperation } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum';\nimport { StorageScope } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum';\ndeclare type ConfigsAndTheirValues = { [key: string]: any };\ninterface InputFormsSchemaBase {\n\ttype?: ActionType | TriggerType;\n}\nexport interface LoopStepInputFormSchema extends InputFormsSchemaBase {\n\titems: any;\n}\nexport interface ResponseStepInputFormSchema extends InputFormsSchemaBase {\n\toutput: any;\n}\nexport interface CodeStepInputFormSchema extends InputFormsSchemaBase {\n\tinput: any;\n}\n\nexport interface StoragreStepInputFormSchema extends InputFormsSchemaBase {\n\toperation: StorageOperation;\n\tkey: string;\n\tvalue: string;\n\tscope: StorageScope;\n}\n\nexport interface ScheduledTriggerInputFormSchema extends InputFormsSchemaBase {\n\tcronExpression: string;\n}\nexport interface EventTriggerInputFormSchema extends InputFormsSchemaBase {\n\teventsName: string[];\n}\n\nexport interface RemoteFlowInputFormSchema extends InputFormsSchemaBase {\n\tinput: ConfigsAndTheirValues;\n\tflowVersionId: UUID;\n\tpieceVersionId: UUID;\n}\n//TODO figure out a way to check the type of the (input form schema) because right now they are interfaces and instance of won't work since these are json objects from the server\n\nexport type InputFormsSchema =\n\t| LoopStepInputFormSchema\n\t| ResponseStepInputFormSchema\n\t| StoragreStepInputFormSchema\n\t| CodeStepInputFormSchema\n\t| ScheduledTriggerInputFormSchema\n\t| EventTriggerInputFormSchema\n\t| RemoteFlowInputFormSchema;\n",
            "properties": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionType | TriggerType",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Instance",
            "id": "interface-Instance-662679c46feeaa5abc8ebd6e27e16a6d6971cf8d3747bb44dfaf08d8a00aa1550d270e10db5cde8e68f3ff1c54678d9318abe2389681eca4c8d29ce7e08ea4f8",
            "file": "src/app/layout/common-layout/model/instance.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { InstanceStatus } from './enum/instance-status';\n\nexport interface Instance {\n\tid: UUID;\n\taccountId: UUID;\n\tpieceVersionId: UUID;\n\tvariables: any;\n\tstatus: InstanceStatus;\n\tepochCreationTime: number;\n\tepochUpdateTime: number;\n\n\t// Optional\n\truns?: number;\n\taccountDisplayName?: string;\n\tpieceDisplayName?: string;\n}\n",
            "properties": [
                {
                    "name": "accountDisplayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "accountId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "pieceDisplayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "pieceVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "runs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InstanceStatus",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "variables",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "InstanceRun",
            "id": "interface-InstanceRun-eba816ac4ff8124377d924023bac45e804e7f3ecfe70f67aa7d71852a6d6c5540f5e7a4f4def99117295d15c941e3aa7bb53f7887c5fcbd3fae881ba5a94f387",
            "file": "src/app/layout/common-layout/model/instance-run.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\r\nimport { ActionStatus } from './enum/action-status';\r\nimport { InstanceRunStatus } from './enum/instance-run-status';\r\n\r\nexport interface InstanceRun {\r\n\tid: UUID;\r\n\tenvironmentId: UUID;\r\n\taccountId: UUID;\r\n\tinstanceId: UUID;\r\n\tflowVersionId: UUID;\r\n\tstatus: InstanceRunStatus;\r\n\tstate: InstanceRunState;\r\n\tstateUrl?: string;\r\n\tepochFinishTime: number;\r\n\tepochStartTime: number;\r\n\tpieceDisplayName?: string;\r\n\taccountName?: string;\r\n\tflowDisplayName: string;\r\n}\r\n\r\nexport interface InstanceRunState {\r\n\tvariables: any;\r\n\tsteps: { [key: string]: StepResult };\r\n}\r\n\r\nexport interface StepResult {\r\n\tduration: number;\r\n\tstatus: ActionStatus;\r\n\ttimeInSeconds: number;\r\n\tstandardOutput: any;\r\n\tinput: Object;\r\n\toutput: Object;\r\n\terrorMessage: string;\r\n\titerations?: { [key: string]: StepResult }[];\r\n}\r\n\r\nexport const initializedRun: InstanceRun = {\r\n\tid: '',\r\n\tenvironmentId: '',\r\n\taccountId: '',\r\n\tflowVersionId: '',\r\n\tstatus: InstanceRunStatus.RUNNING,\r\n\tepochFinishTime: 0,\r\n\tepochStartTime: 0,\r\n\tflowDisplayName: '',\r\n\tinstanceId: '',\r\n\tstate: { steps: {}, variables: null },\r\n};\r\n",
            "properties": [
                {
                    "name": "accountId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "accountName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "environmentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "epochFinishTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "epochStartTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "flowDisplayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "flowVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "instanceId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "pieceDisplayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InstanceRunState",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "stateUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InstanceRunStatus",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "InstanceRunState",
            "id": "interface-InstanceRunState-eba816ac4ff8124377d924023bac45e804e7f3ecfe70f67aa7d71852a6d6c5540f5e7a4f4def99117295d15c941e3aa7bb53f7887c5fcbd3fae881ba5a94f387",
            "file": "src/app/layout/common-layout/model/instance-run.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\r\nimport { ActionStatus } from './enum/action-status';\r\nimport { InstanceRunStatus } from './enum/instance-run-status';\r\n\r\nexport interface InstanceRun {\r\n\tid: UUID;\r\n\tenvironmentId: UUID;\r\n\taccountId: UUID;\r\n\tinstanceId: UUID;\r\n\tflowVersionId: UUID;\r\n\tstatus: InstanceRunStatus;\r\n\tstate: InstanceRunState;\r\n\tstateUrl?: string;\r\n\tepochFinishTime: number;\r\n\tepochStartTime: number;\r\n\tpieceDisplayName?: string;\r\n\taccountName?: string;\r\n\tflowDisplayName: string;\r\n}\r\n\r\nexport interface InstanceRunState {\r\n\tvariables: any;\r\n\tsteps: { [key: string]: StepResult };\r\n}\r\n\r\nexport interface StepResult {\r\n\tduration: number;\r\n\tstatus: ActionStatus;\r\n\ttimeInSeconds: number;\r\n\tstandardOutput: any;\r\n\tinput: Object;\r\n\toutput: Object;\r\n\terrorMessage: string;\r\n\titerations?: { [key: string]: StepResult }[];\r\n}\r\n\r\nexport const initializedRun: InstanceRun = {\r\n\tid: '',\r\n\tenvironmentId: '',\r\n\taccountId: '',\r\n\tflowVersionId: '',\r\n\tstatus: InstanceRunStatus.RUNNING,\r\n\tepochFinishTime: 0,\r\n\tepochStartTime: 0,\r\n\tflowDisplayName: '',\r\n\tinstanceId: '',\r\n\tstate: { steps: {}, variables: null },\r\n};\r\n",
            "properties": [
                {
                    "name": "steps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "variables",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LoopOnItemActionInterface",
            "id": "interface-LoopOnItemActionInterface-2361b1650c1a9999f7636bc49c08a9658a2ba9180d2cf20ff633a23c6ef91b0ab3475c3e064ee4798236d5c6e08c18571601d6e10fa0851278b2ae53bcef81e1",
            "file": "src/app/layout/common-layout/model/flow-builder/actions/loop-action.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from './action.interface';\n\nexport interface LoopOnItemActionInterface extends Action {\n\tfirstLoopAction?: Action;\n\tsettings: {\n\t\titems: any[];\n\t};\n}\n",
            "properties": [
                {
                    "name": "firstLoopAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Action",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Action"
        },
        {
            "name": "LoopStepInputFormSchema",
            "id": "interface-LoopStepInputFormSchema-82b8c3cdcd366b0e3bdd6db9e70573621837483a4a361ec55cddd9a8cd5c57975b3148fc5123c6ee8810d2cd3d0135e2068097857b52d89cdd8d75954211c66b",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { TriggerType } from 'src/app/layout/common-layout/model/enum/trigger-type.enum';\nimport { StorageOperation } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum';\nimport { StorageScope } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum';\ndeclare type ConfigsAndTheirValues = { [key: string]: any };\ninterface InputFormsSchemaBase {\n\ttype?: ActionType | TriggerType;\n}\nexport interface LoopStepInputFormSchema extends InputFormsSchemaBase {\n\titems: any;\n}\nexport interface ResponseStepInputFormSchema extends InputFormsSchemaBase {\n\toutput: any;\n}\nexport interface CodeStepInputFormSchema extends InputFormsSchemaBase {\n\tinput: any;\n}\n\nexport interface StoragreStepInputFormSchema extends InputFormsSchemaBase {\n\toperation: StorageOperation;\n\tkey: string;\n\tvalue: string;\n\tscope: StorageScope;\n}\n\nexport interface ScheduledTriggerInputFormSchema extends InputFormsSchemaBase {\n\tcronExpression: string;\n}\nexport interface EventTriggerInputFormSchema extends InputFormsSchemaBase {\n\teventsName: string[];\n}\n\nexport interface RemoteFlowInputFormSchema extends InputFormsSchemaBase {\n\tinput: ConfigsAndTheirValues;\n\tflowVersionId: UUID;\n\tpieceVersionId: UUID;\n}\n//TODO figure out a way to check the type of the (input form schema) because right now they are interfaces and instance of won't work since these are json objects from the server\n\nexport type InputFormsSchema =\n\t| LoopStepInputFormSchema\n\t| ResponseStepInputFormSchema\n\t| StoragreStepInputFormSchema\n\t| CodeStepInputFormSchema\n\t| ScheduledTriggerInputFormSchema\n\t| EventTriggerInputFormSchema\n\t| RemoteFlowInputFormSchema;\n",
            "properties": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "InputFormsSchemaBase"
        },
        {
            "name": "Oauth2LoginSettingsInterface",
            "id": "interface-Oauth2LoginSettingsInterface-0c980de0ef0862312a8eef1b79694e6b4b04712f0ee95a66d47146c4ef4d6417ebc1e120de1f03e709f4c8f4930c085ec9f399e2888bec4789388d033357b66b",
            "file": "src/app/layout/common-layout/model/fields/variable/subfields/oauth2-login-settings.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { Oauth2UserInputType } from './oauth2-user-input.type';\n\nexport interface Oauth2LoginSettingsInterface {\n\tuserInputType: Oauth2UserInputType;\n\tscope: string;\n\tclientId: string;\n\tclientSecret: string;\n\tauthUrl: string;\n\ttokenUrl: string;\n\trefreshUrl: string;\n\tresponseType: string;\n\tconfigParent?: {\n\t\tflowId: UUID;\n\t\tconfigKey: string;\n\t\tuserInputType: Oauth2UserInputType;\n\t};\n}\n",
            "properties": [
                {
                    "name": "authUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "clientId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "clientSecret",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "configParent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "refreshUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "responseType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "scope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "tokenUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "userInputType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Oauth2UserInputType",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OAuth2Response",
            "id": "interface-OAuth2Response-06cf97ad43d010ec18d5713434512f16481ea48ddbeb5c44e03bba5560905245bcf5aa2ed8588920ea325b7280b37cc417ae8ea2793c96e9dc29bbc2ac12e862",
            "file": "src/app/layout/common-layout/model/fields/variable/subfields/oauth2-response.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface OAuth2Response {\n\taccess_token: string;\n\trefresh_token: string;\n\texpire_in: number;\n\ttoken_type: string;\n\tauth_response: any;\n}\n",
            "properties": [
                {
                    "name": "access_token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "auth_response",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "expire_in",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "refresh_token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "token_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Organization",
            "id": "interface-Organization-13cd60dfc9b249452f320cfb86da1fb4d75675262b3181cd48fea0dcc0a09c1585470a665c4485ba732eb36bb401a4f7f21e58f6e6c1627cc997442a45a357d7",
            "file": "src/app/layout/common-layout/model/organisation.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Organization {\n\tid: string;\n\tname: string;\n\tepochCreationTime: number;\n\tepochUpdateTime: number;\n\townerUserId: string;\n}\n",
            "properties": [
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "ownerUserId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OrganizationsState",
            "id": "interface-OrganizationsState-f93e4183f8b7f8056a821496462009f4b23208096e78a87b309effca66abec55e452aa07c62608066b22e5729b1f8577e42804e4fd643be7da775a12441a1720",
            "file": "src/app/layout/common-layout/store/model/organizations-state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Organization } from '../../model/organisation.interface';\n\nexport interface OrganizationsState {\n\tloaded: boolean;\n\tselectedIndex: undefined | number;\n\torganizations: Organization[];\n}\n",
            "properties": [
                {
                    "name": "loaded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "organizations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Organization[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "selectedIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "undefined | number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Project",
            "id": "interface-Project-77dbfb6ebb02b4049806e902070df5ed5b5173d9b058050ad1f4d17fca57777a592ee16ce25ac34cb2c3b1df028043e8658719c2c0f0db318d688625400731d3",
            "file": "src/app/layout/common-layout/model/project.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Project {\n\tid: string;\n\tname: string;\n\tepochCreationTime: number;\n\tepochUpdateTime: number;\n\torganizationId: string;\n}\n",
            "properties": [
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "organizationId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ProjectEnvironment",
            "id": "interface-ProjectEnvironment-28234a356309ec69ee9b03fb1efed17d389558dfe4083b11f5a4962e04155ecb892d886525dd2c85bb6fae9eb3d58119b82dc38e0006ca1e25040d362975a403",
            "file": "src/app/layout/common-layout/model/project-environment.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\n\nexport interface ProjectEnvironment {\n\tid: string;\n\tprojectId: string;\n\tname: string;\n\tepochCreationTime: number;\n\tepochUpdateTime: number;\n\t//TODO please make this a single collectionVersionID.\n\tdeployedCollections: { collectionId: UUID; collectionVersionsId: UUID[] }[];\n}\n",
            "properties": [
                {
                    "name": "deployedCollections",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "projectId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ProjectsState",
            "id": "interface-ProjectsState-d8966c414a94d5e7a8c58de04fd628b26cfd0d0fcc224e0eb3abfa8ae7119fd665d5df7cee56a2846a80c41bc1ec23859e1ccdc5b89151cd843b07ea390889e1",
            "file": "src/app/layout/common-layout/store/model/projects-state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Project } from '../../model/project.interface';\n\nexport interface ProjectsState {\n\tloaded: boolean;\n\tselectedIndex: undefined | number;\n\tprojects: Project[];\n}\n",
            "properties": [
                {
                    "name": "loaded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "projects",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Project[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "selectedIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "undefined | number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RemoteFlowAction",
            "id": "interface-RemoteFlowAction-dca91ed5cdc1ede352df86c1c7dd77a8df9a94fbd409d8a046cdfc3083fbf31c32be46ab9520ba5dc0f8242e98b4280f5f9c372494fe2282eaf459ae7c4fef41",
            "file": "src/app/layout/common-layout/model/flow-builder/actions/remote-flow-action.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from './action.interface';\n\nexport interface RemoteFlowAction extends Action {\n\tsettings: {\n\t\tpieceVersionId: string;\n\t\tflowVersionId: string;\n\t\t//input is a map between configs and their values\n\t\tinput: { [key: string]: any };\n\t};\n}\n",
            "properties": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Action"
        },
        {
            "name": "RemoteFlowInputFormSchema",
            "id": "interface-RemoteFlowInputFormSchema-82b8c3cdcd366b0e3bdd6db9e70573621837483a4a361ec55cddd9a8cd5c57975b3148fc5123c6ee8810d2cd3d0135e2068097857b52d89cdd8d75954211c66b",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { TriggerType } from 'src/app/layout/common-layout/model/enum/trigger-type.enum';\nimport { StorageOperation } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum';\nimport { StorageScope } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum';\ndeclare type ConfigsAndTheirValues = { [key: string]: any };\ninterface InputFormsSchemaBase {\n\ttype?: ActionType | TriggerType;\n}\nexport interface LoopStepInputFormSchema extends InputFormsSchemaBase {\n\titems: any;\n}\nexport interface ResponseStepInputFormSchema extends InputFormsSchemaBase {\n\toutput: any;\n}\nexport interface CodeStepInputFormSchema extends InputFormsSchemaBase {\n\tinput: any;\n}\n\nexport interface StoragreStepInputFormSchema extends InputFormsSchemaBase {\n\toperation: StorageOperation;\n\tkey: string;\n\tvalue: string;\n\tscope: StorageScope;\n}\n\nexport interface ScheduledTriggerInputFormSchema extends InputFormsSchemaBase {\n\tcronExpression: string;\n}\nexport interface EventTriggerInputFormSchema extends InputFormsSchemaBase {\n\teventsName: string[];\n}\n\nexport interface RemoteFlowInputFormSchema extends InputFormsSchemaBase {\n\tinput: ConfigsAndTheirValues;\n\tflowVersionId: UUID;\n\tpieceVersionId: UUID;\n}\n//TODO figure out a way to check the type of the (input form schema) because right now they are interfaces and instance of won't work since these are json objects from the server\n\nexport type InputFormsSchema =\n\t| LoopStepInputFormSchema\n\t| ResponseStepInputFormSchema\n\t| StoragreStepInputFormSchema\n\t| CodeStepInputFormSchema\n\t| ScheduledTriggerInputFormSchema\n\t| EventTriggerInputFormSchema\n\t| RemoteFlowInputFormSchema;\n",
            "properties": [
                {
                    "name": "flowVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigsAndTheirValues",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "pieceVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "InputFormsSchemaBase"
        },
        {
            "name": "ResponseAction",
            "id": "interface-ResponseAction-8e151acda48b0286198bb47d3d746c10aa1caac5aabc2442fb3165fd08bb09d21f3b8bfbe3d12226caf4df0fc87169cf1f51dd3051c9e6c3450c8a0c9edb61fd",
            "file": "src/app/layout/common-layout/model/flow-builder/actions/response-action.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from './action.interface';\n\nexport interface ResponseAction extends Action {\n\tsettings: {\n\t\t//this is a dictionary\n\t\toutput: { [key: string]: any };\n\t};\n}\n",
            "properties": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Action"
        },
        {
            "name": "ResponseStepInputFormSchema",
            "id": "interface-ResponseStepInputFormSchema-82b8c3cdcd366b0e3bdd6db9e70573621837483a4a361ec55cddd9a8cd5c57975b3148fc5123c6ee8810d2cd3d0135e2068097857b52d89cdd8d75954211c66b",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { TriggerType } from 'src/app/layout/common-layout/model/enum/trigger-type.enum';\nimport { StorageOperation } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum';\nimport { StorageScope } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum';\ndeclare type ConfigsAndTheirValues = { [key: string]: any };\ninterface InputFormsSchemaBase {\n\ttype?: ActionType | TriggerType;\n}\nexport interface LoopStepInputFormSchema extends InputFormsSchemaBase {\n\titems: any;\n}\nexport interface ResponseStepInputFormSchema extends InputFormsSchemaBase {\n\toutput: any;\n}\nexport interface CodeStepInputFormSchema extends InputFormsSchemaBase {\n\tinput: any;\n}\n\nexport interface StoragreStepInputFormSchema extends InputFormsSchemaBase {\n\toperation: StorageOperation;\n\tkey: string;\n\tvalue: string;\n\tscope: StorageScope;\n}\n\nexport interface ScheduledTriggerInputFormSchema extends InputFormsSchemaBase {\n\tcronExpression: string;\n}\nexport interface EventTriggerInputFormSchema extends InputFormsSchemaBase {\n\teventsName: string[];\n}\n\nexport interface RemoteFlowInputFormSchema extends InputFormsSchemaBase {\n\tinput: ConfigsAndTheirValues;\n\tflowVersionId: UUID;\n\tpieceVersionId: UUID;\n}\n//TODO figure out a way to check the type of the (input form schema) because right now they are interfaces and instance of won't work since these are json objects from the server\n\nexport type InputFormsSchema =\n\t| LoopStepInputFormSchema\n\t| ResponseStepInputFormSchema\n\t| StoragreStepInputFormSchema\n\t| CodeStepInputFormSchema\n\t| ScheduledTriggerInputFormSchema\n\t| EventTriggerInputFormSchema\n\t| RemoteFlowInputFormSchema;\n",
            "properties": [
                {
                    "name": "output",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "InputFormsSchemaBase"
        },
        {
            "name": "ScheduledTriggerInputFormSchema",
            "id": "interface-ScheduledTriggerInputFormSchema-82b8c3cdcd366b0e3bdd6db9e70573621837483a4a361ec55cddd9a8cd5c57975b3148fc5123c6ee8810d2cd3d0135e2068097857b52d89cdd8d75954211c66b",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { TriggerType } from 'src/app/layout/common-layout/model/enum/trigger-type.enum';\nimport { StorageOperation } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum';\nimport { StorageScope } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum';\ndeclare type ConfigsAndTheirValues = { [key: string]: any };\ninterface InputFormsSchemaBase {\n\ttype?: ActionType | TriggerType;\n}\nexport interface LoopStepInputFormSchema extends InputFormsSchemaBase {\n\titems: any;\n}\nexport interface ResponseStepInputFormSchema extends InputFormsSchemaBase {\n\toutput: any;\n}\nexport interface CodeStepInputFormSchema extends InputFormsSchemaBase {\n\tinput: any;\n}\n\nexport interface StoragreStepInputFormSchema extends InputFormsSchemaBase {\n\toperation: StorageOperation;\n\tkey: string;\n\tvalue: string;\n\tscope: StorageScope;\n}\n\nexport interface ScheduledTriggerInputFormSchema extends InputFormsSchemaBase {\n\tcronExpression: string;\n}\nexport interface EventTriggerInputFormSchema extends InputFormsSchemaBase {\n\teventsName: string[];\n}\n\nexport interface RemoteFlowInputFormSchema extends InputFormsSchemaBase {\n\tinput: ConfigsAndTheirValues;\n\tflowVersionId: UUID;\n\tpieceVersionId: UUID;\n}\n//TODO figure out a way to check the type of the (input form schema) because right now they are interfaces and instance of won't work since these are json objects from the server\n\nexport type InputFormsSchema =\n\t| LoopStepInputFormSchema\n\t| ResponseStepInputFormSchema\n\t| StoragreStepInputFormSchema\n\t| CodeStepInputFormSchema\n\t| ScheduledTriggerInputFormSchema\n\t| EventTriggerInputFormSchema\n\t| RemoteFlowInputFormSchema;\n",
            "properties": [
                {
                    "name": "cronExpression",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "InputFormsSchemaBase"
        },
        {
            "name": "ScheduleTrigger",
            "id": "interface-ScheduleTrigger-604bb75fd3277c371625bb936bd5ef9382e3a83661aaa98599a56c4048b24e0b9320b3cb03bb6d4ee7f7269fff3d52ce6b9675585d950aef4f207388610c5caf",
            "file": "src/app/layout/common-layout/model/flow-builder/trigger/schedule-trigger.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Trigger } from './trigger.interface';\n\nexport interface ScheduleTrigger extends Trigger {\n\tsettings: {\n\t\tcronExpression: string;\n\t};\n}\n",
            "properties": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Trigger"
        },
        {
            "name": "SeekPage",
            "id": "interface-SeekPage-3c6907bbdf3dfa26db57dbabbeb5d142903e74d7d026cef3e93b057a3d8f004c06c36f81fcb1cd2ef8729e3dcb974ecf202998bb1c1018330ef347c2126b65c4",
            "file": "src/app/layout/common-layout/service/seek-page.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\n\nexport interface SeekPage<T> {\n\thasMore: boolean;\n\tstartingAfter?: UUID;\n\tendingBefore?: UUID;\n\tdata: T[];\n}\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "endingBefore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "hasMore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "startingAfter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-04e5742ea2ace40527b68363239eb1a1c7d2067a4116db09262a40ba9fc359089b621cef6813582ff0b5b1ad2cac6bb8f1632e9589a6cc252f9ccb7cef8d9c3c",
            "file": "src/app/layout/dashboard-layout/dashboard-layout.module.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DashboardLayoutComponent } from './dashboard-layout.component';\nimport { RouterModule } from '@angular/router';\nimport { DashboardLayoutRouting } from './dashboard-layout.routing';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { RunsComponent } from './pages/runs/runs.component';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { AccountsComponent } from './pages/accounts/accounts.component';\nimport { InstancesComponent } from './pages/instances/instances.component';\nimport { EnvironmentsComponent } from './pages/environments/environments.component';\nimport { EventsComponent } from './pages/events/events.component';\nimport { CommonLayoutModule } from '../common-layout/common-layout.module';\nimport { EnvironmentFilterComponent } from './components/environment-filter/environment-filter.component';\nimport { CollectionComponents } from './pages/collections/collection-components.component';\nimport { ListPiecesResolver } from './resolvers/list-pieces-resolver.service';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { ApiKeysComponent } from './pages/api-keys/api-keys.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { AccountsFilterComponent } from './components/accounts-filter/accounts-filter.component';\nimport { FilterBarComponent } from './components/filter-bar/filter-bar.component';\nimport { InstancesFilterComponent } from './components/instances-filter/instances-filter.component';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { EmptyCollectionsTableComponent } from './pages/collections/empty-collections-table/empty-collections-table.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TrialCountdownComponent } from './components/trial-countdown/trial-countdown.component';\nimport { TrialStatusComponent } from './pages/trial-status/trial-status.component';\nimport { AuthenticationComponent } from './pages/authentication/authentication.component';\nimport { FirebaseProjectIdModalComponent } from './pages/authentication/firebase-project-id-modal/firebase-project-id-modal.component';\nimport { SigningKeyModalComponent } from './pages/authentication/signing-key-modal/signing-key-modal.component';\nimport { ActionReducerMap, StoreModule } from '@ngrx/store';\nimport { authenticationReducer, AuthenticationState } from './store/reducer/authentication.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthenticationEffects } from './store/effect/authentication.effects';\nimport { CreateApiKeyModalComponent } from './components/create-api-key-modal/create-api-key-modal.component';\nimport { ApiKeysEffects } from './store/effect/api-keys.effects';\nimport { apiKeysReducer, ApiKeysState } from './store/reducer/api-keys.reducer';\n\nexport interface State {\n\tauthenticationState: AuthenticationState;\n\tapiKeys: ApiKeysState;\n}\nconst DASHBOARD_FEATURE_NAME = 'dashboard';\n\nconst reducers: ActionReducerMap<State> = {\n\tauthenticationState: authenticationReducer,\n\tapiKeys: apiKeysReducer,\n};\n\n@NgModule({\n\tdeclarations: [\n\t\tDashboardLayoutComponent,\n\t\tSidebarComponent,\n\t\tRunsComponent,\n\t\tAccountsComponent,\n\t\tInstancesComponent,\n\t\tEnvironmentsComponent,\n\t\tEventsComponent,\n\t\tEnvironmentFilterComponent,\n\t\tCollectionComponents,\n\t\tApiKeysComponent,\n\t\tAccountsFilterComponent,\n\t\tFilterBarComponent,\n\t\tInstancesFilterComponent,\n\t\tEmptyCollectionsTableComponent,\n\t\tUserAvatarComponent,\n\t\tTrialCountdownComponent,\n\t\tTrialStatusComponent,\n\t\tAuthenticationComponent,\n\t\tFirebaseProjectIdModalComponent,\n\t\tSigningKeyModalComponent,\n\t\tCreateApiKeyModalComponent,\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tCommonLayoutModule,\n\t\tRouterModule.forChild(DashboardLayoutRouting),\n\t\tReactiveFormsModule,\n\t\tMatProgressSpinnerModule,\n\t\tProgressbarModule,\n\t\tMatProgressBarModule,\n\t\tFontAwesomeModule,\n\t\tTimeagoModule.forChild(),\n\t\tNgxSkeletonLoaderModule,\n\t\tEffectsModule.forFeature([AuthenticationEffects, ApiKeysEffects]),\n\t\tStoreModule.forFeature(DASHBOARD_FEATURE_NAME, reducers),\n\t],\n\texports: [],\n\tproviders: [ListPiecesResolver],\n})\nexport class DashboardLayoutModule {}\n",
            "properties": [
                {
                    "name": "apiKeys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApiKeysState",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "authenticationState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationState",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "StaticDropdownSettingsFromValue",
            "id": "interface-StaticDropdownSettingsFromValue-04a034bd73c53018e2dc33f50ad2faba7890d137098724ecfdbed244503dcb3b2bd0c8e886cce2b3ab176ae334eb05a9dbf1aad68748859f295a53740ec777ad",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/dropdown-config-settings/dropdown-config-settings.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { combineLatest, map, Observable, of, take, tap } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\nimport { DropdownOption } from 'src/app/layout/common-layout/model/dynamic-controls/dropdown-options';\nimport { ConfigScope } from 'src/app/layout/common-layout/model/enum/config-scope-type.enum';\nimport { ConfigSource } from 'src/app/layout/common-layout/model/enum/config-source';\nimport { ConfigType } from 'src/app/layout/common-layout/model/enum/config-type';\nimport { DropdownType } from 'src/app/layout/common-layout/model/enum/config.enum';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\nimport { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\nimport { CodeService } from 'src/app/layout/flow-builder/service/code.service';\nimport { BuilderSelectors } from 'src/app/layout/flow-builder/store/selector/flow-builder.selector';\nimport { RefreshReferencesValidator } from '../../../validators/refreshReferencesValidator';\n\ninterface DynamicDropdownSettingsFromValue {\n\trefreshReferences: string[];\n\toptional?: boolean;\n\tartifactContent: Artifact;\n}\n\ninterface StaticDropdownSettingsFromValue {\n\toptions: any[];\n\toptional?: boolean;\n}\n@Component({\n\tselector: 'app-dropdown-config-settings',\n\ttemplateUrl: './dropdown-config-settings.component.html',\n\tstyleUrls: ['./dropdown-config-settings.component.css'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: DropdownConfigSettingsComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: DropdownConfigSettingsComponent,\n\t\t},\n\t],\n\tanimations: [fadeInUp400ms],\n})\nexport class DropdownConfigSettingsComponent implements ControlValueAccessor, OnInit {\n\t@Input() currentConfigSource: ConfigSource;\n\t@Input() configToUpdate: Config | undefined;\n\t@Input() submitted = false;\n\t_currentConfigScope: ConfigScope;\n\t@Input() set currentConfigScope(scope) {\n\t\tthis._currentConfigScope = scope;\n\t\tthis.getRefreshReferences();\n\t}\n\tstaticDropdownSettingsForm: FormGroup;\n\tstaticSettingsFormValueChanged$: Observable<void>;\n\tdynamicSettingsFormValueChanged$: Observable<void>;\n\tdropdownTypeControl: FormControl;\n\tdynamicDropdownSettingsForm: FormGroup;\n\tdropdownTypeChanged$: Observable<DropdownType>;\n\tartifact$: Observable<Artifact>;\n\tConfigSource = ConfigSource;\n\trefreshReferences$: Observable<DropdownOption[]>;\n\tonChange = val => {};\n\tconstructor(private formBuilder: FormBuilder, private codeService: CodeService, private store: Store) {}\n\tngOnInit(): void {\n\t\tthis.dropdownTypeControl = new FormControl(DropdownType.STATIC);\n\t\tthis.staticDropdownSettingsForm = this.formBuilder.group({\n\t\t\toptions: new FormControl([]),\n\t\t\toptional: new FormControl(false),\n\t\t});\n\t\tconst refreshReferencesValidator = RefreshReferencesValidator.createValidator(\n\t\t\tthis.store.select(BuilderSelectors.selectAllConfigs).pipe(take(1)),\n\t\t\tthis.configToUpdate\n\t\t);\n\t\tthis.dynamicDropdownSettingsForm = this.formBuilder.group({\n\t\t\trefreshReferences: new FormControl([], [], refreshReferencesValidator),\n\t\t\toptional: new FormControl(false),\n\t\t\tartifactContent: new FormControl(this.codeService.dynamicDropdownDefaultArtifact()),\n\t\t});\n\t\tthis.artifact$ = of(this.codeService.dynamicDropdownDefaultArtifact());\n\t\tthis.setUpStaticDropdownSettingsListener();\n\t\tthis.setUpDynamicDropdownSettingsListener();\n\t\tthis.setUpTypeChangedListener();\n\t\tthis.getRefreshReferences();\n\t}\n\tgetRefreshReferences() {\n\t\tthis.refreshReferences$ = combineLatest({\n\t\t\tflowConfigs: this.store.select(BuilderSelectors.selectCurrentFlowConfigs),\n\t\t\tcollectionConfigs: this.store.select(BuilderSelectors.selectCurrentCollectionConfigs),\n\t\t}).pipe(\n\t\t\tmap(res => {\n\t\t\t\tconst allConfigs = [...res.collectionConfigs];\n\t\t\t\tif (this._currentConfigScope === ConfigScope.FLOW) {\n\t\t\t\t\tallConfigs.push(...res.flowConfigs);\n\t\t\t\t}\n\t\t\t\treturn allConfigs\n\t\t\t\t\t.filter(\n\t\t\t\t\t\tc => c.type === ConfigType.OAUTH2 || (c.type === ConfigType.DROPDOWN && c.key !== this.configToUpdate?.key)\n\t\t\t\t\t)\n\t\t\t\t\t.map(c => {\n\t\t\t\t\t\treturn { label: c.label, value: c.key };\n\t\t\t\t\t});\n\t\t\t}),\n\t\t\ttap(rfs => {\n\t\t\t\tif (this.dynamicDropdownSettingsForm) {\n\t\t\t\t\tconst refreshReferencesControl = this.dynamicDropdownSettingsForm.get('refreshReferences')!;\n\t\t\t\t\tconst currentRefreshReferencesValue: string[] = refreshReferencesControl.value;\n\t\t\t\t\tconst refreshReferencesValueCorrected = currentRefreshReferencesValue.filter(\n\t\t\t\t\t\tcr => !!rfs.find(r => r.value === cr)\n\t\t\t\t\t);\n\t\t\t\t\trefreshReferencesControl.setValue(refreshReferencesValueCorrected);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\tsetUpStaticDropdownSettingsListener() {\n\t\tthis.staticSettingsFormValueChanged$ = this.staticDropdownSettingsForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tconst valueToEmit = this.prepareStaticDropdownSettingsValue();\n\t\t\t\tthis.onChange(valueToEmit);\n\t\t\t})\n\t\t);\n\t}\n\tprepareStaticDropdownSettingsValue() {\n\t\tconst settingsControlValue: StaticDropdownSettingsFromValue = this.staticDropdownSettingsForm.value;\n\t\tconst valueToEmit = {\n\t\t\t...settingsControlValue,\n\t\t\tdropdownType: this.dropdownTypeControl.value,\n\t\t};\n\t\treturn valueToEmit;\n\t}\n\tsetUpDynamicDropdownSettingsListener() {\n\t\tthis.dynamicSettingsFormValueChanged$ = this.dynamicDropdownSettingsForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tconst valueToEmit = this.prepareDynamicDropdownSettingsValue();\n\t\t\t\tthis.onChange(valueToEmit);\n\t\t\t})\n\t\t);\n\t}\n\tprepareDynamicDropdownSettingsValue() {\n\t\tconst settingsControlValue: DynamicDropdownSettingsFromValue = this.dynamicDropdownSettingsForm.value;\n\t\tconst valueToEmit = {\n\t\t\t...settingsControlValue,\n\t\t\tdropdownType: this.dropdownTypeControl.value,\n\t\t};\n\t\treturn valueToEmit;\n\t}\n\tsetUpTypeChangedListener() {\n\t\tthis.dropdownTypeChanged$ = this.dropdownTypeControl.valueChanges.pipe(\n\t\t\ttap((type: DropdownType) => {\n\t\t\t\tif (type === DropdownType.DYNAMIC) {\n\t\t\t\t\tthis.onChange(this.prepareDynamicDropdownSettingsValue());\n\t\t\t\t} else if (type === DropdownType.STATIC) {\n\t\t\t\t\tthis.onChange(this.prepareStaticDropdownSettingsValue());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\twriteValue(obj: any): void {\n\t\tif (obj && obj.dropdownType) {\n\t\t\tthis.dropdownTypeControl.setValue(obj.dropdownType);\n\t\t\tif (obj.dropdownType === DropdownType.STATIC) {\n\t\t\t\tthis.staticDropdownSettingsForm.patchValue({ ...obj, optional: !obj.required });\n\t\t\t} else if (obj.dropdownType === DropdownType.DYNAMIC) {\n\t\t\t\tif (obj.artifactUrl) {\n\t\t\t\t\tthis.artifact$ = this.codeService.readFile(obj.artifactUrl).pipe(\n\t\t\t\t\t\ttap(artifact => {\n\t\t\t\t\t\t\tthis.dynamicDropdownSettingsForm.patchValue({ artifactContent: artifact });\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.artifact$ = of(obj.artifactContent);\n\t\t\t\t\tthis.dynamicDropdownSettingsForm.patchValue({ artifactContent: obj.artifactContent });\n\t\t\t\t}\n\n\t\t\t\tthis.dynamicDropdownSettingsForm.patchValue({ ...obj, optional: !obj.required });\n\t\t\t}\n\t\t}\n\t}\n\tvalidate() {\n\t\tconst currentDropdownForm =\n\t\t\tthis.dropdownTypeControl.value === DropdownType.DYNAMIC\n\t\t\t\t? this.dynamicDropdownSettingsForm\n\t\t\t\t: this.staticDropdownSettingsForm;\n\t\tif (!currentDropdownForm.valid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\n\t\tthis.onChange({ ...this.staticDropdownSettingsForm.value, dropdownType: this.dropdownTypeControl.value });\n\t}\n\tregisterOnTouched(fn: any): void {}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.staticDropdownSettingsForm.disable();\n\t\t\tthis.dropdownTypeControl.disable();\n\t\t\tthis.dynamicDropdownSettingsForm.disable();\n\t\t}\n\t}\n\n\tget DropDownType() {\n\t\treturn DropdownType;\n\t}\n\n\tsetDropdownTypeFormControlValue(type: DropdownType) {\n\t\tif (this.dropdownTypeControl.enabled) {\n\t\t\tthis.dropdownTypeControl.setValue(type);\n\t\t}\n\t}\n\tisReferenceSelected(configKey: string) {\n\t\tconst refreshReferencesValue: string[] = this.dynamicDropdownSettingsForm.get('refreshReferences')!.value;\n\t\treturn !!refreshReferencesValue.find(r => r === configKey);\n\t}\n}\n",
            "properties": [
                {
                    "name": "optional",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "StepResult",
            "id": "interface-StepResult-eba816ac4ff8124377d924023bac45e804e7f3ecfe70f67aa7d71852a6d6c5540f5e7a4f4def99117295d15c941e3aa7bb53f7887c5fcbd3fae881ba5a94f387",
            "file": "src/app/layout/common-layout/model/instance-run.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\r\nimport { ActionStatus } from './enum/action-status';\r\nimport { InstanceRunStatus } from './enum/instance-run-status';\r\n\r\nexport interface InstanceRun {\r\n\tid: UUID;\r\n\tenvironmentId: UUID;\r\n\taccountId: UUID;\r\n\tinstanceId: UUID;\r\n\tflowVersionId: UUID;\r\n\tstatus: InstanceRunStatus;\r\n\tstate: InstanceRunState;\r\n\tstateUrl?: string;\r\n\tepochFinishTime: number;\r\n\tepochStartTime: number;\r\n\tpieceDisplayName?: string;\r\n\taccountName?: string;\r\n\tflowDisplayName: string;\r\n}\r\n\r\nexport interface InstanceRunState {\r\n\tvariables: any;\r\n\tsteps: { [key: string]: StepResult };\r\n}\r\n\r\nexport interface StepResult {\r\n\tduration: number;\r\n\tstatus: ActionStatus;\r\n\ttimeInSeconds: number;\r\n\tstandardOutput: any;\r\n\tinput: Object;\r\n\toutput: Object;\r\n\terrorMessage: string;\r\n\titerations?: { [key: string]: StepResult }[];\r\n}\r\n\r\nexport const initializedRun: InstanceRun = {\r\n\tid: '',\r\n\tenvironmentId: '',\r\n\taccountId: '',\r\n\tflowVersionId: '',\r\n\tstatus: InstanceRunStatus.RUNNING,\r\n\tepochFinishTime: 0,\r\n\tepochStartTime: 0,\r\n\tflowDisplayName: '',\r\n\tinstanceId: '',\r\n\tstate: { steps: {}, variables: null },\r\n};\r\n",
            "properties": [
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "input",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "iterations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "output",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Object",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "standardOutput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionStatus",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "timeInSeconds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "StorageAction",
            "id": "interface-StorageAction-fabe6cb8cbf80d9f91c1f2318fcd20ee774508a80d75a10fbfe9e07cafd9a0115c350953769b5cdc09d0c2bfb1bc14eb62253d7f352b344828a079c866616959",
            "file": "src/app/layout/common-layout/model/flow-builder/actions/storage-action.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from './action.interface';\nimport { StorageOperation } from './storage-operation.enum';\nimport { StorageScope } from './storage-scope.enum';\n\nexport interface StorageAction extends Action {\n\tsettings: {\n\t\toperation: StorageOperation;\n\t\tkey: string;\n\t\tvalue: string;\n\t\tscope: StorageScope;\n\t};\n}\n",
            "properties": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Action"
        },
        {
            "name": "StoragreStepInputFormSchema",
            "id": "interface-StoragreStepInputFormSchema-82b8c3cdcd366b0e3bdd6db9e70573621837483a4a361ec55cddd9a8cd5c57975b3148fc5123c6ee8810d2cd3d0135e2068097857b52d89cdd8d75954211c66b",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { TriggerType } from 'src/app/layout/common-layout/model/enum/trigger-type.enum';\nimport { StorageOperation } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum';\nimport { StorageScope } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum';\ndeclare type ConfigsAndTheirValues = { [key: string]: any };\ninterface InputFormsSchemaBase {\n\ttype?: ActionType | TriggerType;\n}\nexport interface LoopStepInputFormSchema extends InputFormsSchemaBase {\n\titems: any;\n}\nexport interface ResponseStepInputFormSchema extends InputFormsSchemaBase {\n\toutput: any;\n}\nexport interface CodeStepInputFormSchema extends InputFormsSchemaBase {\n\tinput: any;\n}\n\nexport interface StoragreStepInputFormSchema extends InputFormsSchemaBase {\n\toperation: StorageOperation;\n\tkey: string;\n\tvalue: string;\n\tscope: StorageScope;\n}\n\nexport interface ScheduledTriggerInputFormSchema extends InputFormsSchemaBase {\n\tcronExpression: string;\n}\nexport interface EventTriggerInputFormSchema extends InputFormsSchemaBase {\n\teventsName: string[];\n}\n\nexport interface RemoteFlowInputFormSchema extends InputFormsSchemaBase {\n\tinput: ConfigsAndTheirValues;\n\tflowVersionId: UUID;\n\tpieceVersionId: UUID;\n}\n//TODO figure out a way to check the type of the (input form schema) because right now they are interfaces and instance of won't work since these are json objects from the server\n\nexport type InputFormsSchema =\n\t| LoopStepInputFormSchema\n\t| ResponseStepInputFormSchema\n\t| StoragreStepInputFormSchema\n\t| CodeStepInputFormSchema\n\t| ScheduledTriggerInputFormSchema\n\t| EventTriggerInputFormSchema\n\t| RemoteFlowInputFormSchema;\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "operation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorageOperation",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "scope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorageScope",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "InputFormsSchemaBase"
        },
        {
            "name": "TabState",
            "id": "interface-TabState-854759a5c197aefe8289c882e2ccab99d931651fc133d0e108e930b3aefd64ae2f3241b25ffae827d5617bdcc0640bb2329be9986ede21b2ec3e04209a842852",
            "file": "src/app/layout/flow-builder/store/model/tab-state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { FlowItem } from 'src/app/layout/common-layout/model/flow-builder/flow-item';\nimport { LeftSideBarType } from '../../../common-layout/model/enum/left-side-bar-type.enum';\nimport { RightSideBarType } from '../../../common-layout/model/enum/right-side-bar-type.enum';\nimport { InstanceRun } from '../../../common-layout/model/instance-run.interface';\n\nexport interface TabState {\n\tleftSidebar: {\n\t\ttype: LeftSideBarType;\n\t\tprops: any;\n\t};\n\trightSidebar: {\n\t\ttype: RightSideBarType;\n\t\tprops: any;\n\t};\n\tfocusedStep: FlowItem | null;\n\tselectedRun: InstanceRun | undefined;\n\tselectedStepName: string;\n}\n",
            "properties": [
                {
                    "name": "focusedStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItem | null",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "leftSidebar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "rightSidebar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "selectedRun",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InstanceRun | undefined",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectedStepName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Trigger",
            "id": "interface-Trigger-dfdecd3da5b193a8edea0fc6b57da6367cb403c186790cfcb31a89e6361144b27ef993d63a98df2fe60949ada0631756982fdc3de77a5eee8924555729d653da",
            "file": "src/app/layout/common-layout/model/flow-builder/trigger/trigger.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action } from '../actions/action.interface';\nimport { TriggerType } from '../../enum/trigger-type.enum';\nimport { FlowItem } from '../flow-item';\n\nexport interface Trigger extends FlowItem {\n\ttype?: TriggerType;\n\tdisplayName: string;\n\tname: string;\n\tnextAction?: Action;\n\tepochCreationTime?: number;\n\tepochUpdateTime?: number;\n}\n",
            "properties": [
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "nextAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Action",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TriggerType",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "FlowItem"
        },
        {
            "name": "TriggerMetadata",
            "id": "interface-TriggerMetadata-dc5dcd7ce2bbbda4c019fe8d47ebf1b2a204117eb6f9be0007d36df283d02db779d165cc71a4d1431c2485237ffc58397837eef84ffeac37d6424914c2d3c4e6",
            "file": "src/app/layout/common-layout/interface/trigger-metadata.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { TriggerType } from '../model/enum/trigger-type.enum';\n\nexport interface TriggerMetadata {\n\ttype: TriggerType;\n\ttitle: string;\n\tdescription: string;\n\ticonPath: string;\n}\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "iconPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TriggerType",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-92917cdc0d5de8b98c0f4a32d154dbb3c223f20041e8856894571fd44033d4e8a66e255d3edf4c8fc26d0207937a968f11d1a86bea5cbb98bc0b519650d601ee",
            "file": "src/app/layout/common-layout/model/user.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UserStatus } from './enum/user-status.enum';\n\nexport interface User {\n\tid: string;\n\tfirstName: string;\n\tcompany: string;\n\tlastName: string;\n\temail: string;\n\tstatus: UserStatus;\n\tepochExpirationTime: number;\n\tepochCreationTime: number;\n}\n",
            "properties": [
                {
                    "name": "company",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "epochExpirationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserStatus",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AccountService",
            "id": "injectable-AccountService-393f04fefd2de446d8481b5059a767fa7aa3fa925145476e3326324d8d010fb6fad55828baa85f598fc26f491f14f627e062e4b90c7a57a646797b146cc07517",
            "file": "src/app/layout/common-layout/service/account.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Account>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "accountId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "accountId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emptyPage",
                    "args": [],
                    "optional": false,
                    "returnType": "{ hasMore: boolean; data: {}; }",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "accountId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Account>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "accountId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getByNameAndEnvironment",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "accountName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Account>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "accountName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<Account>>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { UUID } from 'angular2-uuid';\nimport { SeekPage } from './seek-page';\nimport { Account } from '../model/account.interface';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class AccountService {\n\tconstructor(private http: HttpClient) {}\n\n\tcreate(environmentId: UUID, request: { name: string }): Observable<Account> {\n\t\treturn this.http.post<Account>(environment.apiUrl + '/environments/' + environmentId + '/accounts', request);\n\t}\n\n\tget(accountId: UUID): Observable<Account> {\n\t\treturn this.http.get<Account>(environment.apiUrl + '/accounts/' + accountId);\n\t}\n\n\tgetByNameAndEnvironment(environmentId: UUID, accountName: string): Observable<Account> {\n\t\treturn this.http.get<Account>(\n\t\t\tenvironment.apiUrl + '/environments/' + environmentId + '/accounts/' + encodeURIComponent(accountName)\n\t\t);\n\t}\n\n\tlist(environmentId: UUID, limit: number): Observable<SeekPage<Account>> {\n\t\treturn this.http.get<SeekPage<Account>>(\n\t\t\tenvironment.apiUrl + '/environments/' + environmentId + '/accounts?limit=' + limit\n\t\t);\n\t}\n\n\tdelete(accountId: UUID): Observable<void> {\n\t\treturn this.http.delete<void>(environment.apiUrl + '/accounts/' + accountId);\n\t}\n\n\temptyPage() {\n\t\treturn {\n\t\t\thasMore: false,\n\t\t\tdata: [],\n\t\t};\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ActionMetaService",
            "id": "injectable-ActionMetaService-4f95f686a61f74632c0d859bb882f84829bacedcabc2b64abcd2585730d34ab90f34b9d99cb34aec9db6de5b495beeacf24946add8011a1d9b4abf1048cf5dc9",
            "file": "src/app/layout/flow-builder/service/action-meta.service.ts",
            "properties": [
                {
                    "name": "connectors$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<AppConnector[]>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "coreFlowItemsDetails",
                    "defaultValue": "[\n\t\t{\n\t\t\ttype: ActionType.CODE,\n\t\t\tname: 'Code',\n\t\t\tdescription: 'Powerful nodejs code with npm',\n\t\t\tlogoUrl: '/assets/img/custom/piece/code.svg',\n\t\t},\n\t\t{\n\t\t\ttype: ActionType.LOOP_ON_ITEMS,\n\t\t\tname: 'Loop',\n\t\t\tdescription: 'Repeat an actions multiple times',\n\t\t\tlogoUrl: '/assets/img/custom/piece/loop.svg',\n\t\t},\n\t\t{\n\t\t\ttype: ActionType.STORAGE,\n\t\t\tname: 'Storage',\n\t\t\tdescription: 'Store or retrieve data from activepieces key/value database',\n\t\t\tlogoUrl: '/assets/img/custom/piece/storage.svg',\n\t\t},\n\t\t{\n\t\t\ttype: ActionType.RESPONSE,\n\t\t\tname: 'Response',\n\t\t\tdescription: 'Return response to caller workflow',\n\t\t\tlogoUrl: '/assets/img/custom/piece/response.svg',\n\t\t},\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItemDetails[]",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "infoForOtherCollectionsWeBuilt",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "mapCollectionVersionToFlowItemDetails",
                    "defaultValue": "map((collectionVersion: CollectionVersion) => {\n\t\treturn {\n\t\t\tname: collectionVersion.displayName,\n\t\t\ttype: ActionType.REMOTE_FLOW,\n\t\t\tdescription: collectionVersion.description,\n\t\t\tlogoUrl: collectionVersion.logoUrl\n\t\t\t\t? collectionVersion.logoUrl\n\t\t\t\t: 'assets/img/custom/connectors/default-connector.png',\n\t\t\textra: {\n\t\t\t\tpieceVersionId: collectionVersion.id,\n\t\t\t\tflowsVersionIds: collectionVersion.flowsVersionId,\n\t\t\t\tcollectionConfigs: collectionVersion.configs.filter(c => c.source !== ConfigSource.PREDEFINED),\n\t\t\t},\n\t\t} as FlowItemDetails;\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 139
                },
                {
                    "name": "triggerItemsDetails",
                    "defaultValue": "[\n\t\t{\n\t\t\ttype: TriggerType.EVENT,\n\t\t\tname: 'Event',\n\t\t\tdescription: 'Trigger event when specific events are received.',\n\t\t\tlogoUrl: '/assets/img/custom/piece/default-trigger.svg',\n\t\t},\n\t\t{\n\t\t\ttype: TriggerType.SCHEDULE,\n\t\t\tname: 'Schedule',\n\t\t\tdescription: 'Trigger flow with fixed schedule.',\n\t\t\tlogoUrl: '/assets/img/custom/piece/schedule.svg',\n\t\t},\n\t\t{\n\t\t\ttype: TriggerType.MANUAL,\n\t\t\tname: 'Callable',\n\t\t\tdescription: 'Trigger flow when called from another flow',\n\t\t\tlogoUrl: '/assets/img/custom/piece/callable.svg',\n\t\t},\n\t\t{\n\t\t\ttype: TriggerType.EMPTY,\n\t\t\tname: 'Trigger',\n\t\t\tdescription: 'Choose a trigger',\n\t\t\tlogoUrl: '/assets/img/custom/piece/empty-trigger.svg',\n\t\t},\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getConnectorsFlowItemsDetails",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<FlowItemDetails[]>",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getDetailsForCollectionsWeBuilt",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<FlowItemDetails[]>",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getFlowItemDetailsForUserCollections",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<FlowItemDetails[]>",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getLatestPublishedCollectionsVersion",
                    "args": [
                        {
                            "name": "collections",
                            "type": "Collection[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "collections",
                            "type": "Collection[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadAppConnectors",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<AppConnector[]>",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { FlowItemDetails } from '../page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-item/flow-item-details';\nimport { ActionType } from '../../common-layout/model/enum/action-type.enum';\nimport { TriggerType } from '../../common-layout/model/enum/trigger-type.enum';\nimport { CollectionService } from '../../common-layout/service/collection.service';\nimport { defaultIfEmpty, forkJoin, map, Observable, of, shareReplay, switchMap } from 'rxjs';\nimport { Collection, CollectionVersion } from '../../common-layout/model/piece.interface';\nimport { VersionEditState } from '../../common-layout/model/enum/version-edit-state.enum';\nimport { environment } from 'src/environments/environment';\nimport { devAppConnectors, devConnectors } from '../../../../connectors/dev-connectors.lexicon';\nimport { prodConnectors } from '../../../../connectors/prod-connectors.lexicon';\nimport { stgConnectors } from '../../../../connectors/stg-connectors.lexicon';\n\nimport { AppConnector } from '../model/app-connector';\nimport { HttpClient } from '@angular/common/http';\nimport { ConfigSource } from '../../common-layout/model/enum/config-source';\nimport { ProjectService } from '../../common-layout/service/project.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ActionMetaService {\n\tprivate connectors$: Observable<AppConnector[]>;\n\n\tinfoForOtherCollectionsWeBuilt: {\n\t\tpieceVersionId: string;\n\t\tflowVersionId: string;\n\t}[] = [];\n\tpublic coreFlowItemsDetails: FlowItemDetails[] = [\n\t\t{\n\t\t\ttype: ActionType.CODE,\n\t\t\tname: 'Code',\n\t\t\tdescription: 'Powerful nodejs code with npm',\n\t\t\tlogoUrl: '/assets/img/custom/piece/code.svg',\n\t\t},\n\t\t{\n\t\t\ttype: ActionType.LOOP_ON_ITEMS,\n\t\t\tname: 'Loop',\n\t\t\tdescription: 'Repeat an actions multiple times',\n\t\t\tlogoUrl: '/assets/img/custom/piece/loop.svg',\n\t\t},\n\t\t{\n\t\t\ttype: ActionType.STORAGE,\n\t\t\tname: 'Storage',\n\t\t\tdescription: 'Store or retrieve data from activepieces key/value database',\n\t\t\tlogoUrl: '/assets/img/custom/piece/storage.svg',\n\t\t},\n\t\t{\n\t\t\ttype: ActionType.RESPONSE,\n\t\t\tname: 'Response',\n\t\t\tdescription: 'Return response to caller workflow',\n\t\t\tlogoUrl: '/assets/img/custom/piece/response.svg',\n\t\t},\n\t];\n\n\tpublic triggerItemsDetails = [\n\t\t{\n\t\t\ttype: TriggerType.EVENT,\n\t\t\tname: 'Event',\n\t\t\tdescription: 'Trigger event when specific events are received.',\n\t\t\tlogoUrl: '/assets/img/custom/piece/default-trigger.svg',\n\t\t},\n\t\t{\n\t\t\ttype: TriggerType.SCHEDULE,\n\t\t\tname: 'Schedule',\n\t\t\tdescription: 'Trigger flow with fixed schedule.',\n\t\t\tlogoUrl: '/assets/img/custom/piece/schedule.svg',\n\t\t},\n\t\t{\n\t\t\ttype: TriggerType.MANUAL,\n\t\t\tname: 'Callable',\n\t\t\tdescription: 'Trigger flow when called from another flow',\n\t\t\tlogoUrl: '/assets/img/custom/piece/callable.svg',\n\t\t},\n\t\t{\n\t\t\ttype: TriggerType.EMPTY,\n\t\t\tname: 'Trigger',\n\t\t\tdescription: 'Choose a trigger',\n\t\t\tlogoUrl: '/assets/img/custom/piece/empty-trigger.svg',\n\t\t},\n\t];\n\n\tconstructor(\n\t\tprivate pieceService: CollectionService,\n\t\tprivate httpClient: HttpClient,\n\t\tprivate projectService: ProjectService\n\t) {\n\t\tswitch (environment.stageName) {\n\t\t\tcase 'stg':\n\t\t\t\tthis.connectors$ = this.loadAppConnectors();\n\t\t\t\tthis.infoForOtherCollectionsWeBuilt = stgConnectors;\n\t\t\t\tbreak;\n\t\t\tcase 'prod':\n\t\t\t\tthis.connectors$ = this.loadAppConnectors();\n\t\t\t\tthis.infoForOtherCollectionsWeBuilt = prodConnectors;\n\t\t\t\tbreak;\n\t\t\tcase 'dev':\n\t\t\t\tthis.connectors$ = of(devAppConnectors);\n\t\t\t\tthis.infoForOtherCollectionsWeBuilt = devConnectors;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate loadAppConnectors(): Observable<AppConnector[]> {\n\t\treturn this.httpClient.get<AppConnector[]>(environment.appConnectors).pipe(shareReplay());\n\t}\n\n\tpublic getConnectorsFlowItemsDetails(): Observable<FlowItemDetails[]> {\n\t\treturn this.connectors$.pipe(\n\t\t\tswitchMap(connectors => {\n\t\t\t\tconst connectorsDetails$: Observable<FlowItemDetails>[] = [];\n\t\t\t\tconnectors.forEach(c => {\n\t\t\t\t\tconnectorsDetails$.push(\n\t\t\t\t\t\tthis.pieceService.getVersion(c.pieceVersionId).pipe(\n\t\t\t\t\t\t\tthis.mapCollectionVersionToFlowItemDetails,\n\t\t\t\t\t\t\tmap(flowItemDetails => {\n\t\t\t\t\t\t\t\tflowItemDetails.extra!.documentationUrl = c.docUrl;\n\t\t\t\t\t\t\t\treturn flowItemDetails;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\treturn forkJoin(connectorsDetails$);\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic getDetailsForCollectionsWeBuilt(): Observable<FlowItemDetails[]> {\n\t\tlet flowItemDetailsForCollectionsWeBuilt: Observable<FlowItemDetails>[] = [];\n\t\tthis.infoForOtherCollectionsWeBuilt.forEach(info => {\n\t\t\tflowItemDetailsForCollectionsWeBuilt.push(\n\t\t\t\tthis.pieceService.getVersion(info.pieceVersionId).pipe(this.mapCollectionVersionToFlowItemDetails)\n\t\t\t);\n\t\t});\n\t\tif (flowItemDetailsForCollectionsWeBuilt.length === 0) return of([]);\n\t\treturn forkJoin(flowItemDetailsForCollectionsWeBuilt);\n\t}\n\n\tmapCollectionVersionToFlowItemDetails = map((collectionVersion: CollectionVersion) => {\n\t\treturn {\n\t\t\tname: collectionVersion.displayName,\n\t\t\ttype: ActionType.REMOTE_FLOW,\n\t\t\tdescription: collectionVersion.description,\n\t\t\tlogoUrl: collectionVersion.logoUrl\n\t\t\t\t? collectionVersion.logoUrl\n\t\t\t\t: 'assets/img/custom/connectors/default-connector.png',\n\t\t\textra: {\n\t\t\t\tpieceVersionId: collectionVersion.id,\n\t\t\t\tflowsVersionIds: collectionVersion.flowsVersionId,\n\t\t\t\tcollectionConfigs: collectionVersion.configs.filter(c => c.source !== ConfigSource.PREDEFINED),\n\t\t\t},\n\t\t} as FlowItemDetails;\n\t});\n\n\tpublic getFlowItemDetailsForUserCollections(): Observable<FlowItemDetails[]> {\n\t\treturn this.projectService.selectedProjectAndTakeOne().pipe(\n\t\t\tswitchMap(project => {\n\t\t\t\treturn this.pieceService.list(project.id, 10000).pipe(\n\t\t\t\t\tswitchMap(collectionPage => {\n\t\t\t\t\t\tlet flowItemsDetailsForCollectionVersions: Observable<FlowItemDetails>[] =\n\t\t\t\t\t\t\tthis.getLatestPublishedCollectionsVersion(collectionPage.data).map(collectionVersion$ => {\n\t\t\t\t\t\t\t\treturn collectionVersion$.pipe(this.mapCollectionVersionToFlowItemDetails);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\treturn forkJoin(flowItemsDetailsForCollectionVersions).pipe(defaultIfEmpty([]));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate getLatestPublishedCollectionsVersion(collections: Collection[]) {\n\t\tconst latestPublishedVersion: Observable<CollectionVersion>[] = [];\n\t\tcollections.forEach(col => {\n\t\t\t//last published version is either the lastversion or the version before it because of product logic, ask old teamates  about this if you don't understand.\n\t\t\tif (col.lastVersion.state === VersionEditState.LOCKED) {\n\t\t\t\tlatestPublishedVersion.push(of(col.lastVersion));\n\t\t\t} else if (col.versionsList.length > 1) {\n\t\t\t\tlatestPublishedVersion.push(this.pieceService.getVersion(col.versionsList[col.versionsList.length - 2]));\n\t\t\t}\n\t\t});\n\t\treturn latestPublishedVersion;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 81,
                "jsdoctags": [
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ApiKeysEffects",
            "id": "injectable-ApiKeysEffects-e0a542758ad3ae9f25b30b35e86dd4d0e3cd193a12e2b81c71b80ea3d04f1a05b8295cb77f38b55726a66aef2a4e492bbe983dc660290da68d1a898f8f4ecb1d",
            "file": "src/app/layout/dashboard-layout/store/effect/api-keys.effects.ts",
            "properties": [
                {
                    "name": "createApiKey$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(ApiKeysActions.createApiKey),\n\t\t\tconcatLatestFrom(() => this.store.select(ProjectSelectors.selectProject)),\n\t\t\tmergeMap(([action, project]) => {\n\t\t\t\tif (project === undefined) {\n\t\t\t\t\treturn throwError(() => new Error('Cannot add api key, the project is not selected'));\n\t\t\t\t}\n\t\t\t\treturn this.apiKeysService.create(project.id, { name: action.name }).pipe(\n\t\t\t\t\tmap(apiKey => {\n\t\t\t\t\t\treturn ApiKeysActions.createApiKeySuccess({ apiKey: apiKey });\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}),\n\t\t\tcatchError(err => {\n\t\t\t\treturn of(ApiKeysActions.createApiKeyFailed({ error: err }));\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "deleteApiKey$",
                    "defaultValue": "createEffect(\n\t\t() => {\n\t\t\treturn this.actions$.pipe(\n\t\t\t\tofType(ApiKeysActions.deleteApiKey),\n\t\t\t\tswitchMap((action: { id: UUID }) => {\n\t\t\t\t\treturn this.apiKeysService.delete(action.id).pipe(\n\t\t\t\t\t\tcatchError(err => {\n\t\t\t\t\t\t\tconst shownBar = this.snackBar.open('Failed to delete api key, please try again.', 'Refresh', {\n\t\t\t\t\t\t\t\tduration: undefined,\n\t\t\t\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tshownBar.afterDismissed().subscribe(() => location.reload());\n\t\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\t\t{ dispatch: false }\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "loadApiKeys$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(ApiKeysActions.loadApiKeys),\n\t\t\tconcatLatestFrom(() => this.store.select(ProjectSelectors.selectProject)),\n\t\t\tconcatMap(([action, project]) => {\n\t\t\t\tif (project === undefined) {\n\t\t\t\t\treturn throwError(() => new Error('Cannot load api keys, the project is not selected'));\n\t\t\t\t}\n\t\t\t\treturn this.apiKeysService.list(project.id, 9999).pipe(\n\t\t\t\t\tmap(apiKeys => {\n\t\t\t\t\t\treturn loadApiKeysFinished({\n\t\t\t\t\t\t\tapiKeys,\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t\tcatchError(err => {\n\t\t\t\t\t\tconst shownBar = this.snackBar.open('Failed to delete api key, please try again.', 'Refresh', {\n\t\t\t\t\t\t\tduration: undefined,\n\t\t\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tshownBar.afterDismissed().subscribe(() => location.reload());\n\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, concatMap, EMPTY, map, mergeMap, of, switchMap, throwError } from 'rxjs';\nimport { ApiKeysActions, loadApiKeysFinished } from '../action/api-keys.action';\nimport { ApiKeyService } from '../../../common-layout/service/api-key.service';\nimport { UUID } from 'angular2-uuid';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Store } from '@ngrx/store';\nimport { ProjectSelectors } from '../../../common-layout/store/selector/project.selector';\n\n@Injectable()\nexport class ApiKeysEffects {\n\tconstructor(\n\t\tprivate store: Store,\n\t\tprivate actions$: Actions,\n\t\tprivate snackBar: MatSnackBar,\n\t\tprivate apiKeysService: ApiKeyService\n\t) {}\n\n\tloadApiKeys$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(ApiKeysActions.loadApiKeys),\n\t\t\tconcatLatestFrom(() => this.store.select(ProjectSelectors.selectProject)),\n\t\t\tconcatMap(([action, project]) => {\n\t\t\t\tif (project === undefined) {\n\t\t\t\t\treturn throwError(() => new Error('Cannot load api keys, the project is not selected'));\n\t\t\t\t}\n\t\t\t\treturn this.apiKeysService.list(project.id, 9999).pipe(\n\t\t\t\t\tmap(apiKeys => {\n\t\t\t\t\t\treturn loadApiKeysFinished({\n\t\t\t\t\t\t\tapiKeys,\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t\tcatchError(err => {\n\t\t\t\t\t\tconst shownBar = this.snackBar.open('Failed to delete api key, please try again.', 'Refresh', {\n\t\t\t\t\t\t\tduration: undefined,\n\t\t\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tshownBar.afterDismissed().subscribe(() => location.reload());\n\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t});\n\n\tcreateApiKey$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(ApiKeysActions.createApiKey),\n\t\t\tconcatLatestFrom(() => this.store.select(ProjectSelectors.selectProject)),\n\t\t\tmergeMap(([action, project]) => {\n\t\t\t\tif (project === undefined) {\n\t\t\t\t\treturn throwError(() => new Error('Cannot add api key, the project is not selected'));\n\t\t\t\t}\n\t\t\t\treturn this.apiKeysService.create(project.id, { name: action.name }).pipe(\n\t\t\t\t\tmap(apiKey => {\n\t\t\t\t\t\treturn ApiKeysActions.createApiKeySuccess({ apiKey: apiKey });\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}),\n\t\t\tcatchError(err => {\n\t\t\t\treturn of(ApiKeysActions.createApiKeyFailed({ error: err }));\n\t\t\t})\n\t\t);\n\t});\n\n\tdeleteApiKey$ = createEffect(\n\t\t() => {\n\t\t\treturn this.actions$.pipe(\n\t\t\t\tofType(ApiKeysActions.deleteApiKey),\n\t\t\t\tswitchMap((action: { id: UUID }) => {\n\t\t\t\t\treturn this.apiKeysService.delete(action.id).pipe(\n\t\t\t\t\t\tcatchError(err => {\n\t\t\t\t\t\t\tconst shownBar = this.snackBar.open('Failed to delete api key, please try again.', 'Refresh', {\n\t\t\t\t\t\t\t\tduration: undefined,\n\t\t\t\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tshownBar.afterDismissed().subscribe(() => location.reload());\n\t\t\t\t\t\t\treturn EMPTY;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\t\t{ dispatch: false }\n\t);\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "apiKeysService",
                        "type": "ApiKeyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "apiKeysService",
                        "type": "ApiKeyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ApiKeyService",
            "id": "injectable-ApiKeyService-9587fa56ba3a7b580771f01922d42e6c76a768c7343d3b13cb845ed5ea44dca0290dc51b71bd3dd14c92997092be2d0b8d2d9ae45ccbcecfc2359af6ed918e8f",
            "file": "src/app/layout/common-layout/service/api-key.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ApiKey>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "apiKeyId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "apiKeyId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "apiKeyId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ApiKey>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "apiKeyId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<ApiKey>>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "apiKeyId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ApiKey>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "apiKeyId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { UUID } from 'angular2-uuid';\nimport { SeekPage } from './seek-page';\nimport { ApiKey } from '../model/api-key.interface';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ApiKeyService {\n\tconstructor(private http: HttpClient) {}\n\n\tcreate(projectId: UUID, request: { name: string }): Observable<ApiKey> {\n\t\treturn this.http.post<ApiKey>(environment.apiUrl + '/projects/' + projectId + '/api-keys', request);\n\t}\n\n\tupdate(apiKeyId: UUID, request: { name: string }): Observable<ApiKey> {\n\t\treturn this.http.post<ApiKey>(environment.apiUrl + '/api-keys/' + apiKeyId, request);\n\t}\n\n\tget(apiKeyId: string): Observable<ApiKey> {\n\t\treturn this.http.get<ApiKey>(environment.apiUrl + '/api-keys/' + apiKeyId);\n\t}\n\n\tlist(projectId: string, limit: number): Observable<SeekPage<ApiKey>> {\n\t\treturn this.http.get<SeekPage<ApiKey>>(environment.apiUrl + '/projects/' + projectId + '/api-keys?limit=' + limit);\n\t}\n\n\tdelete(apiKeyId: UUID): Observable<void> {\n\t\treturn this.http.delete<void>(environment.apiUrl + '/api-keys/' + apiKeyId);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthenticationEffects",
            "id": "injectable-AuthenticationEffects-1f050637deff679e9e9f3dcb9277ae4c731217bb347d31166f2a3e0ec4325ca7b06dcfab3a6d831070b1afe807d1e0757426e723176b148999c21185c0756f36",
            "file": "src/app/layout/dashboard-layout/store/effect/authentication.effects.ts",
            "properties": [
                {
                    "name": "generatesigningKey$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(authenticationActions.generateSigningKey),\n\t\t\tswitchMap(action => {\n\t\t\t\tconsole.log();\n\t\t\t\treturn this.authenticationService.generateSigningKey(action.environmentId).pipe(\n\t\t\t\t\tmap(authentication => {\n\t\t\t\t\t\treturn authenticationActions.generateSigningKeySuccessful({\n\t\t\t\t\t\t\tsigningKey: authentication,\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t\tcatchError(err => {\n\t\t\t\t\t\treturn of(authenticationActions.generateSigningKeyFailed(err));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "updateFirebaseProjectId$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(authenticationActions.updateFirebaseProjectId),\n\t\t\tswitchMap(action => {\n\t\t\t\treturn this.authenticationService.updateFirebaseProjectId(action.projectId, action.environmentId).pipe(\n\t\t\t\t\tmap(authentication => {\n\t\t\t\t\t\treturn authenticationActions.updateFirebaseProjectIdSuccessful({\n\t\t\t\t\t\t\tproject: authentication,\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t\tcatchError(err => {\n\t\t\t\t\t\treturn of(authenticationActions.updateFirebaseProjectIdFailed(err));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { ProjectAuthenticationService } from '../../service/project-authentications.service';\nimport * as authenticationActions from '../action/authentication.action';\n\n@Injectable()\nexport class AuthenticationEffects {\n\tconstructor(private actions$: Actions, private authenticationService: ProjectAuthenticationService) {}\n\n\tupdateFirebaseProjectId$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(authenticationActions.updateFirebaseProjectId),\n\t\t\tswitchMap(action => {\n\t\t\t\treturn this.authenticationService.updateFirebaseProjectId(action.projectId, action.environmentId).pipe(\n\t\t\t\t\tmap(authentication => {\n\t\t\t\t\t\treturn authenticationActions.updateFirebaseProjectIdSuccessful({\n\t\t\t\t\t\t\tproject: authentication,\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t\tcatchError(err => {\n\t\t\t\t\t\treturn of(authenticationActions.updateFirebaseProjectIdFailed(err));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t});\n\n\tgeneratesigningKey$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(authenticationActions.generateSigningKey),\n\t\t\tswitchMap(action => {\n\t\t\t\tconsole.log();\n\t\t\t\treturn this.authenticationService.generateSigningKey(action.environmentId).pipe(\n\t\t\t\t\tmap(authentication => {\n\t\t\t\t\t\treturn authenticationActions.generateSigningKeySuccessful({\n\t\t\t\t\t\t\tsigningKey: authentication,\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t\tcatchError(err => {\n\t\t\t\t\t\treturn of(authenticationActions.generateSigningKeyFailed(err));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t});\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "ProjectAuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "ProjectAuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthenticationService",
            "id": "injectable-AuthenticationService-9d972587dec1042ffa7f620727cc9eb89560288e9f79a2c9d434a7b7b0a64d37cd02fc9f4109663177e32635805c928b4560961d4b47bc1cd03b4372aff4c8a2",
            "file": "src/app/layout/common-layout/service/authentication.service.ts",
            "properties": [
                {
                    "name": "currentUserSubject",
                    "defaultValue": "new BehaviorSubject<User | undefined>(\n\t\tthis.currentUser\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<User | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "jwtHelper",
                    "defaultValue": "new JwtHelperService()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "changePassword",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpResponse<any>>",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveToken",
                    "args": [
                        {
                            "name": "response",
                            "type": "HttpResponse<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "HttpResponse<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveUser",
                    "args": [
                        {
                            "name": "response",
                            "type": "HttpResponse<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "HttpResponse<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendEmailVerification",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpResponse<any>>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "sendResetPasswordEmail",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signIn",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpResponse<User>>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signUp",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpResponse<User>>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { User } from '../model/user.interface';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class AuthenticationService {\n\tpublic currentUserSubject: BehaviorSubject<User | undefined> = new BehaviorSubject<User | undefined>(\n\t\tthis.currentUser\n\t);\n\n\tprivate jwtHelper = new JwtHelperService();\n\n\tconstructor(private router: Router, private http: HttpClient) {}\n\n\tget currentUser(): User {\n\t\treturn JSON.parse(localStorage.getItem(environment.userPropertyNameInLocalStorage) || '{}');\n\t}\n\n\tsignIn(request: { email; password }): Observable<HttpResponse<User>> {\n\t\treturn this.http.post<User>(environment.apiUrl + '/authentication/sign-in', request, {\n\t\t\tobserve: 'response',\n\t\t});\n\t}\n\n\tsignUp(request: { email; password; firstName; lastName }): Observable<HttpResponse<User>> {\n\t\treturn this.http.post<User>(environment.apiUrl + '/authentication/sign-up', request, {\n\t\t\tobserve: 'response',\n\t\t});\n\t}\n\n\tsendEmailVerification(request: { email }): Observable<HttpResponse<any>> {\n\t\treturn this.http.post<void>(environment.apiUrl + '/authentication/send-verification-email', request, {\n\t\t\tobserve: 'response',\n\t\t});\n\t}\n\n\tsendResetPasswordEmail(request: { email }): Observable<void> {\n\t\treturn this.http.post<void>(environment.apiUrl + '/authentication/send-reset-password-email', request);\n\t}\n\n\tchangePassword(request: { token; newPassword }): Observable<HttpResponse<any>> {\n\t\treturn this.http.post<void>(environment.apiUrl + '/authentication/change-password', request, {\n\t\t\tobserve: 'response',\n\t\t});\n\t}\n\n\tsaveToken(response: HttpResponse<any>) {\n\t\tlocalStorage.setItem(environment.jwtTokenName, <string>response.headers.get('Authorization'));\n\t}\n\tsaveUser(response: HttpResponse<any>) {\n\t\tthis.saveToken(response);\n\t\tthis.updateUser(response.body);\n\t}\n\n\tupdateUser(user: User) {\n\t\tlocalStorage.setItem(environment.userPropertyNameInLocalStorage, JSON.stringify(user));\n\t\tthis.currentUserSubject.next(user);\n\t}\n\n\tisLoggedIn() {\n\t\tlet jwtToken: any = localStorage.getItem(environment.jwtTokenName);\n\t\tif (jwtToken == null) {\n\t\t\tjwtToken = undefined;\n\t\t}\n\t\ttry {\n\t\t\tif (jwtToken && this.jwtHelper.isTokenExpired(jwtToken)) {\n\t\t\t\tthis.logout();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} catch (exception_var) {\n\t\t\tthis.logout();\n\t\t\treturn false;\n\t\t}\n\t\treturn localStorage.getItem(environment.jwtTokenName) != null;\n\t}\n\n\tlogout(): void {\n\t\tlocalStorage.removeItem(environment.jwtTokenName);\n\t\tlocalStorage.removeItem(environment.userPropertyNameInLocalStorage);\n\t\tthis.currentUserSubject.next(undefined);\n\t\tthis.router.navigate(['sign-in']);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "currentUser": {
                    "name": "currentUser",
                    "getSignature": {
                        "name": "currentUser",
                        "type": "",
                        "returnType": "User",
                        "line": 21
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "CodeService",
            "id": "injectable-CodeService-5f89ed42f8fb5be60f5057529f41df5f493e04219989ff31804682b2b7318a2b15a3a67c590525f29699c1d8c14c48268b601fac71192be746534198c1bb7437",
            "file": "src/app/layout/flow-builder/service/code.service.ts",
            "properties": [
                {
                    "name": "artifactsCacheForCollectionConfigs",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArtifactsCache",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "artifactsCacheForFlowConfigs",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArtifactsCache",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "artifactsCacheForSteps",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArtifactsCache",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "cachedFile",
                    "defaultValue": "new Map<String, any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<String | any>",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methods": [
                {
                    "name": "beautifyJson",
                    "args": [
                        {
                            "name": "content",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "content",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "downloadFile",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Map<String, any>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dynamicDropdownDefaultArtifact",
                    "args": [],
                    "optional": false,
                    "returnType": "Artifact",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "executeTest",
                    "args": [
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "context",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CodeTestExecutionResult>",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "context",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getArtifactFromCache",
                    "args": [
                        {
                            "name": "artifactsCache",
                            "type": "ArtifactsCache",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "artifactKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "artifactUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "uploadNewArtifacts",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "artifactsCache",
                            "type": "ArtifactsCache",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "artifactKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "artifactUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "uploadNewArtifacts",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "true",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getArtifactNameMethod",
                    "args": [
                        {
                            "name": "artifactCacheKey",
                            "type": "ArtifactCacheKey",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 195,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "artifactCacheKey",
                            "type": "ArtifactCacheKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDirtyArtifactsForFlowSteps",
                    "args": [
                        {
                            "name": "flowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 206,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDirtyArtifactsFromCache",
                    "args": [
                        {
                            "name": "cache",
                            "type": "ArtifactsCache",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "incompleteArtifactKey",
                            "type": "ArtifactCacheKey",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "cache",
                            "type": "ArtifactsCache",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "incompleteArtifactKey",
                            "type": "ArtifactCacheKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLatestVersionOfNpmPackage",
                    "args": [
                        {
                            "name": "npmName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type | null>",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "npmName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getNpmPackage",
                    "args": [
                        {
                            "name": "npmName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<NpmPkg>",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "npmName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOrCreateStepArtifact",
                    "args": [
                        {
                            "name": "stepCacheKey",
                            "type": "StepCacheKey",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "artifactUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "stepCacheKey",
                            "type": "StepCacheKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "artifactUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "helloWorld",
                    "args": [],
                    "optional": false,
                    "returnType": "Artifact",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "readFile",
                    "args": [
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Artifact>",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeArtifactInFlowStepsCache",
                    "args": [
                        {
                            "name": "artifactKey",
                            "type": "StepCacheKey",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "artifactKey",
                            "type": "StepCacheKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeFromCache",
                    "args": [
                        {
                            "name": "artifactsCache",
                            "type": "ArtifactsCache",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "artifactKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "artifactsCache",
                            "type": "ArtifactsCache",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "artifactKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unmarkDirtyArtifacts",
                    "args": [
                        {
                            "name": "cache",
                            "type": "ArtifactsCache",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "incompleteArtifactKey",
                            "type": "ArtifactCacheKey",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "cache",
                            "type": "ArtifactsCache",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "incompleteArtifactKey",
                            "type": "ArtifactCacheKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unmarkDirtyArtifactsInCollectionConfigsCache",
                    "args": [
                        {
                            "name": "collectionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collectionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "unmarkDirtyArtifactsInFlowStepsCache",
                    "args": [
                        {
                            "name": "flowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateArtifactInCache",
                    "args": [
                        {
                            "name": "artifactsCache",
                            "type": "ArtifactsCache",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "artifactKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "artifactsCache",
                            "type": "ArtifactsCache",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "artifactKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateArtifactInCollectionConfigsCache",
                    "args": [
                        {
                            "name": "artifactKey",
                            "type": "CollectionConfigsCacheKey",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "artifactKey",
                            "type": "CollectionConfigsCacheKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateArtifactInFlowConfigsCache",
                    "args": [
                        {
                            "name": "artifactKey",
                            "type": "FlowConfigsCacheKey",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "artifactKey",
                            "type": "FlowConfigsCacheKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateArtifactInFlowStepsCache",
                    "args": [
                        {
                            "name": "artifactKey",
                            "type": "StepCacheKey",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "artifactKey",
                            "type": "StepCacheKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "zipFile",
                    "args": [
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string | Uint8Array>",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport * as JSZip from 'jszip';\nimport { catchError, from, map, Observable, of, switchMap, tap } from 'rxjs';\nimport { Artifact } from '../model/artifact.interface';\nimport { UUID } from 'angular2-uuid';\nimport { ArtifactCacheKey, CollectionConfigsCacheKey, FlowConfigsCacheKey, StepCacheKey } from './artifact-cache-key';\nimport { CodeTestExecutionResult } from '../../common-layout/model/flow-builder/code-test-execution-result';\nimport { ArtifactAndItsNameInFormData } from '../../common-layout/model/helper/artifacts-zipping-helper';\n\ntype NpmPkg = {\n\t'dist-tags': {\n\t\tlatest: string;\n\t};\n};\ntype PackageName = string;\ntype PackageVersion = string;\ntype ArtifactCacheResult = {\n\tartifact: Artifact;\n\tneedsToBeUploadedToServer: boolean;\n};\n\ntype ArtifactsCache = Map<string, ArtifactCacheResult>;\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class CodeService {\n\tartifactsCacheForFlowConfigs: ArtifactsCache = new Map();\n\tartifactsCacheForCollectionConfigs: ArtifactsCache = new Map();\n\tartifactsCacheForSteps: ArtifactsCache = new Map();\n\tcachedFile: Map<String, any> = new Map<String, any>();\n\n\tconstructor(private http: HttpClient) {}\n\n\tpublic beautifyJson(content: any) {\n\t\treturn JSON.stringify(content, null, 2);\n\t}\n\n\tprivate downloadFile(url: string) {\n\t\tif (this.cachedFile[url] == null) {\n\t\t\tthis.cachedFile[url] = this.http.get(url, {\n\t\t\t\tresponseType: 'arraybuffer',\n\t\t\t});\n\t\t}\n\t\treturn this.cachedFile[url];\n\t}\n\n\texecuteTest(artifact: Artifact, context: any): Observable<CodeTestExecutionResult> {\n\t\tconst formData = new FormData();\n\t\tconst zippedFile$ = CodeService.zipFile(artifact);\n\t\treturn zippedFile$.pipe(\n\t\t\tswitchMap(zippedFile => {\n\t\t\t\tlet file = new File([new Blob([zippedFile])], 'artifact.zip');\n\t\t\t\tformData.append('artifact', file);\n\t\t\t\tformData.append('input', new Blob([JSON.stringify(context)], { type: 'application/json' }));\n\t\t\t\treturn this.http.post<CodeTestExecutionResult>(environment.apiUrl + '/execute-code', formData);\n\t\t\t})\n\t\t);\n\t}\n\n\tpublic dynamicDropdownDefaultArtifact(): Artifact {\n\t\treturn {\n\t\t\tcontent:\n\t\t\t\t'exports.codePiece = async (params) => {\\n    // You can use params.key to refer to another config variable\\n    // Please check the following Slack `Select Channel` example:\\n    // https://docs.activepieces.com/guides/create-an-integration/create-flow#add-config-variable\\n    \\n    return {\\n        disabled: false,\\n        placeholder: \"Select an options\",\\n        options: [\\n            { value: \"1\", option: \"Option 1\" },\\n            { value: \"2\", option: \"Option 2\" }\\n        ]\\n    };\\n};',\n\t\t\tpackage: '{\\n' + '  \"dependencies\": {\\n' + '  }\\n' + '}\\n',\n\t\t};\n\t}\n\tpublic helloWorld(): Artifact {\n\t\treturn {\n\t\t\tcontent: 'exports.codePiece = async (params) => {\\n' + '    return true;\\n' + '};\\n',\n\t\t\tpackage: '{\\n' + '  \"dependencies\": {\\n' + '  }\\n' + '}\\n',\n\t\t};\n\t}\n\n\tstatic zipFile(artifact: Artifact): Observable<string | Uint8Array> {\n\t\tconst zip = new JSZip();\n\t\tzip.folder('build');\n\t\tzip.file('build/index.js', artifact.content, {\n\t\t\tcreateFolders: false,\n\t\t});\n\t\tzip.file('build/package.json', artifact.package, {\n\t\t\tcreateFolders: false,\n\t\t});\n\n\t\tif (JSZip.support.uint8array) {\n\t\t\treturn from(zip.generateAsync({ type: 'uint8array' }));\n\t\t} else {\n\t\t\treturn from(zip.generateAsync({ type: 'string' }));\n\t\t}\n\t}\n\n\tpublic readFile(filename: string): Observable<Artifact> {\n\t\treturn this.downloadFile(filename).pipe(\n\t\t\tswitchMap(async file => {\n\t\t\t\tlet content = { content: '', package: '' };\n\t\t\t\t// @ts-ignore\n\t\t\t\tlet zipFile = await JSZip.loadAsync(file);\n\t\t\t\tfor (const filename1 of Object.keys(zipFile.files)) {\n\t\t\t\t\tif (filename1.split('/').length > 2) continue;\n\t\t\t\t\tif (filename1.endsWith('index.js') || filename1.endsWith('package.json')) {\n\t\t\t\t\t\tlet fileData = await zipFile.files[filename1].async('string');\n\t\t\t\t\t\tif (filename1.endsWith('index.js')) {\n\t\t\t\t\t\t\tcontent.content = fileData;\n\t\t\t\t\t\t} else if (filename1.endsWith('package.json')) {\n\t\t\t\t\t\t\tcontent.package = fileData;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn content;\n\t\t\t})\n\t\t);\n\t}\n\n\tgetNpmPackage(npmName: string): Observable<NpmPkg> {\n\t\treturn this.http.get<NpmPkg>('https://registry.npmjs.org/' + npmName, undefined);\n\t}\n\n\tgetLatestVersionOfNpmPackage(npmName: string): Observable<{ [key: PackageName]: PackageVersion } | null> {\n\t\treturn this.getNpmPackage(npmName).pipe(\n\t\t\tmap(pkg => {\n\t\t\t\tconst pkgJson = {};\n\t\t\t\tpkgJson[npmName] = pkg['dist-tags'].latest;\n\t\t\t\treturn pkgJson;\n\t\t\t}),\n\t\t\tcatchError(() => {\n\t\t\t\treturn of(null);\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate getArtifactFromCache(\n\t\tartifactsCache: ArtifactsCache,\n\t\tartifactKey: string,\n\t\tartifactUrl: string,\n\t\tuploadNewArtifacts: boolean = true\n\t) {\n\t\tconst artifactCacheResult = artifactsCache.get(artifactKey);\n\t\tif (artifactCacheResult) {\n\t\t\treturn of(artifactCacheResult.artifact);\n\t\t} else if (artifactUrl) {\n\t\t\treturn this.readFile(artifactUrl).pipe(\n\t\t\t\ttap(artifact => {\n\t\t\t\t\tartifactsCache.set(artifactKey, { artifact: artifact, needsToBeUploadedToServer: false });\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\t//In case this is a newly added code step/config :D\n\t\tartifactsCache.set(artifactKey, { artifact: this.helloWorld(), needsToBeUploadedToServer: uploadNewArtifacts });\n\t\treturn of(this.helloWorld());\n\t}\n\n\tgetOrCreateStepArtifact(stepCacheKey: StepCacheKey, artifactUrl: string) {\n\t\treturn this.getArtifactFromCache(this.artifactsCacheForSteps, stepCacheKey.toString(), artifactUrl);\n\t}\n\n\tprivate removeFromCache(artifactsCache: ArtifactsCache, artifactKey: string) {\n\t\tartifactsCache.delete(artifactKey);\n\t}\n\n\tremoveArtifactInFlowStepsCache(artifactKey: StepCacheKey) {\n\t\tthis.removeFromCache(this.artifactsCacheForSteps, artifactKey.toString());\n\t}\n\n\tprivate updateArtifactInCache(artifactsCache: ArtifactsCache, artifactKey: string, artifact: Artifact) {\n\t\tconst cacheResult = artifactsCache.get(artifactKey);\n\t\tif (!cacheResult) {\n\t\t\tthrow new Error(`trying to update an empty artifacts' cache entry,  ${artifactKey}`);\n\t\t}\n\t\tcacheResult.needsToBeUploadedToServer = true;\n\t\tcacheResult.artifact = artifact;\n\t}\n\n\tupdateArtifactInFlowStepsCache(artifactKey: StepCacheKey, artifact: Artifact) {\n\t\tthis.updateArtifactInCache(this.artifactsCacheForSteps, artifactKey.toString(), artifact);\n\t}\n\tupdateArtifactInFlowConfigsCache(artifactKey: FlowConfigsCacheKey, artifact: Artifact) {\n\t\tthis.updateArtifactInCache(this.artifactsCacheForFlowConfigs, artifactKey.toString(), artifact);\n\t}\n\tupdateArtifactInCollectionConfigsCache(artifactKey: CollectionConfigsCacheKey, artifact: Artifact) {\n\t\tthis.updateArtifactInCache(this.artifactsCacheForSteps, artifactKey.toString(), artifact);\n\t}\n\tprivate getDirtyArtifactsFromCache(cache: ArtifactsCache, incompleteArtifactKey: ArtifactCacheKey) {\n\t\tconst dirtyArtifacts: ArtifactAndItsNameInFormData[] = [];\n\t\tconst getArtifactNameMethod = CodeService.getArtifactNameMethod(incompleteArtifactKey);\n\t\tcache.forEach((cacheResult, key) => {\n\t\t\tif (key.startsWith(`${incompleteArtifactKey.toString()}`) && cacheResult.needsToBeUploadedToServer) {\n\t\t\t\tconst artifactAndName = { artifact: cacheResult.artifact, name: getArtifactNameMethod(key) };\n\t\t\t\tdirtyArtifacts.push(artifactAndName);\n\t\t\t}\n\t\t});\n\t\treturn dirtyArtifacts;\n\t}\n\tprivate static getArtifactNameMethod(artifactCacheKey: ArtifactCacheKey) {\n\t\tif (artifactCacheKey instanceof StepCacheKey) {\n\t\t\treturn StepCacheKey.getStepName;\n\t\t} else if (artifactCacheKey instanceof FlowConfigsCacheKey) {\n\t\t\treturn FlowConfigsCacheKey.getConfigKey;\n\t\t} else if (artifactCacheKey instanceof CollectionConfigsCacheKey) {\n\t\t\treturn CollectionConfigsCacheKey.getConfigKey;\n\t\t}\n\t\tthrow new Error('Aritfact cache key type has no method to get artifact name');\n\t}\n\n\tgetDirtyArtifactsForFlowSteps(flowId: UUID) {\n\t\treturn this.getDirtyArtifactsFromCache(this.artifactsCacheForSteps, new StepCacheKey(flowId, ''));\n\t}\n\tprivate unmarkDirtyArtifacts(cache: ArtifactsCache, incompleteArtifactKey: ArtifactCacheKey) {\n\t\tcache.forEach((result, key) => {\n\t\t\tif (key.startsWith(`${incompleteArtifactKey.toString()}`)) {\n\t\t\t\tresult.needsToBeUploadedToServer = false;\n\t\t\t}\n\t\t});\n\t}\n\n\tunmarkDirtyArtifactsInCollectionConfigsCache(collectionId: UUID) {\n\t\tthis.unmarkDirtyArtifacts(this.artifactsCacheForCollectionConfigs, new CollectionConfigsCacheKey(collectionId, ''));\n\t}\n\tunmarkDirtyArtifactsInFlowStepsCache(flowId: UUID) {\n\t\tthis.unmarkDirtyArtifacts(this.artifactsCacheForCollectionConfigs, new StepCacheKey(flowId, ''));\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CollectionService",
            "id": "injectable-CollectionService-029fd2beb8d74556b5cfebdcca76a80d20fc031f196feff16a9e60a64a5e15d1d0723490d4daba91d3076982aeb11edfbf52b482273c9229d4c301dd0f1968e1",
            "file": "src/app/layout/common-layout/service/collection.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "archive",
                    "args": [
                        {
                            "name": "pieceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pieceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "piece",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Collection>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "piece",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "pieceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Collection>",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pieceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDynamicDropdownConfigsArtifacts",
                    "args": [
                        {
                            "name": "collection",
                            "type": "CollectionVersion",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collection",
                            "type": "CollectionVersion",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVersion",
                    "args": [
                        {
                            "name": "versionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CollectionVersion>",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "versionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<Collection>>",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listVersions",
                    "args": [
                        {
                            "name": "pieceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CollectionVersion[]>",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pieceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "lock",
                    "args": [
                        {
                            "name": "pieceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Collection>",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pieceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "collectionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "collection",
                            "type": "CollectionVersion",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "logo",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Collection>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collectionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "collection",
                            "type": "CollectionVersion",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "logo",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { Collection, CollectionVersion } from '../model/piece.interface';\nimport { forkJoin, Observable, switchMap, tap } from 'rxjs';\nimport { SeekPage } from './seek-page';\nimport { UUID } from 'angular2-uuid';\nimport { PieceAccess } from '../model/enum/piece-access';\nimport { Config } from '../model/fields/variable/config';\n\nimport {\n\taddArtifactsToFormData,\n\tArtifactAndItsNameInFormData,\n\tzipAllArtifacts,\n} from '../model/helper/artifacts-zipping-helper';\nimport { CodeService } from '../../flow-builder/service/code.service';\nimport { ConfigType, DropdownType } from '../model/enum/config.enum';\nimport { DynamicDropdownSettings } from '../model/fields/variable/config-settings';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class CollectionService {\n\tconstructor(private http: HttpClient, private codeService: CodeService) {}\n\n\tcreate(\n\t\tprojectId: UUID,\n\t\tpiece: {\n\t\t\tname: string;\n\t\t\tversion: {\n\t\t\t\tdisplayName: string;\n\t\t\t\tdescription: string;\n\t\t\t\tconfigs: Config[];\n\t\t\t\taccess: PieceAccess;\n\t\t\t};\n\t\t}\n\t): Observable<Collection> {\n\t\tlet formData = new FormData();\n\t\tformData.append('collection', new Blob([JSON.stringify(piece)], { type: 'application/json' }));\n\t\treturn this.http.post<Collection>(environment.apiUrl + '/projects/' + projectId + '/collections', formData);\n\t}\n\n\tupdate(collectionId: UUID, collection: CollectionVersion, logo?: File): Observable<Collection> {\n\t\tlet formData = new FormData();\n\t\tif (logo != undefined) {\n\t\t\tformData.append('logo', logo);\n\t\t}\n\t\tformData.append('collection', new Blob([JSON.stringify(collection)], { type: 'application/json' }));\n\t\tconst artifactsAndTheirNames: ArtifactAndItsNameInFormData[] = [\n\t\t\t...this.getDynamicDropdownConfigsArtifacts(collection),\n\t\t];\n\n\t\tconst updatePiece$ = this.http.put<Collection>(environment.apiUrl + '/collections/' + collectionId, formData);\n\t\tconst artifacts$ = zipAllArtifacts(artifactsAndTheirNames);\n\t\tif (artifacts$.length == 0) return updatePiece$;\n\t\treturn forkJoin(artifacts$).pipe(\n\t\t\ttap(zippedFilesAndTheirNames => {\n\t\t\t\taddArtifactsToFormData(zippedFilesAndTheirNames, formData);\n\t\t\t}),\n\t\t\tswitchMap(() => {\n\t\t\t\treturn updatePiece$;\n\t\t\t}),\n\t\t\ttap(() => {\n\t\t\t\tthis.codeService.unmarkDirtyArtifactsInCollectionConfigsCache(collectionId);\n\t\t\t})\n\t\t);\n\t}\n\n\tgetVersion(versionId: UUID): Observable<CollectionVersion> {\n\t\treturn this.http.get<CollectionVersion>(environment.apiUrl + '/collection-versions/' + versionId);\n\t}\n\n\tlistVersions(pieceId: UUID): Observable<CollectionVersion[]> {\n\t\treturn this.http.get<CollectionVersion[]>(environment.apiUrl + '/collections/' + pieceId + '/versions/', {});\n\t}\n\n\tlock(pieceId: UUID): Observable<Collection> {\n\t\treturn this.http.post<Collection>(environment.apiUrl + '/collections/' + pieceId + '/commit', {});\n\t}\n\n\tget(pieceId: UUID): Observable<Collection> {\n\t\treturn this.http.get<Collection>(environment.apiUrl + '/collections/' + pieceId);\n\t}\n\n\tlist(projectId: string, limit: number): Observable<SeekPage<Collection>> {\n\t\treturn this.http.get<SeekPage<Collection>>(\n\t\t\tenvironment.apiUrl + '/projects/' + projectId + '/collections?limit=' + limit\n\t\t);\n\t}\n\n\tarchive(pieceId: UUID): Observable<void> {\n\t\treturn this.http.delete<void>(environment.apiUrl + '/collections/' + pieceId);\n\t}\n\n\tgetDynamicDropdownConfigsArtifacts(collection: CollectionVersion) {\n\t\tconst artifacts: ArtifactAndItsNameInFormData[] = [];\n\t\tcollection.configs.forEach(config => {\n\t\t\tconst settings = config.settings as DynamicDropdownSettings;\n\t\t\tif (config.type === ConfigType.DROPDOWN && settings.dropdownType == DropdownType.DYNAMIC) {\n\t\t\t\tif (settings.artifactContent) artifacts.push({ artifact: settings.artifactContent, name: config.key });\n\t\t\t}\n\t\t});\n\t\treturn artifacts;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DynamicDropdownService",
            "id": "injectable-DynamicDropdownService-04e039a6e492096576ff892eeef889ef29ac76632de2e9f0c4a8c8c358ba13c27aa3f2b3657d65f2a9513eebf22bd5dac52f4f3ac9785b20d457ef11bf106fad",
            "file": "src/app/layout/common-layout/service/dynamic-dropdown.service.ts",
            "properties": [
                {
                    "name": "refreshersListenerIsReadySubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<string>",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "refreshCollectionDynamicDropdownConfig",
                    "args": [
                        {
                            "name": "collectionVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payload",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collectionVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payload",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "refreshFlowDynamicDropdownConfig",
                    "args": [
                        {
                            "name": "flowVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payload",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payload",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UUID } from 'angular2-uuid';\nimport { Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { DynamicDropdownResult } from '../model/dynamic-controls/dynamic-dropdown-result';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class DynamicDropdownService {\n\trefreshersListenerIsReadySubject: Subject<string> = new Subject();\n\n\tconstructor(private http: HttpClient) {}\n\n\trefreshCollectionDynamicDropdownConfig(collectionVersionId: UUID, configKey: string, payload: any) {\n\t\tpayload = { configs: payload };\n\t\treturn this.http.post<DynamicDropdownResult>(\n\t\t\tenvironment.apiUrl + `/collection-versions/${collectionVersionId.toString()}/config/${configKey}/refresh`,\n\t\t\tpayload\n\t\t);\n\t}\n\n\trefreshFlowDynamicDropdownConfig(flowVersionId: UUID, configKey: string, payload: any) {\n\t\tpayload = { configs: payload };\n\t\treturn this.http.post<DynamicDropdownResult>(\n\t\t\tenvironment.apiUrl + `/flow-versions/${flowVersionId.toString()}/config/${configKey}/refresh`,\n\t\t\tpayload\n\t\t);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "EnvironmentsEffect",
            "id": "injectable-EnvironmentsEffect-66ec4e3401a09845156f7ab8d404b4858ac16e1b051051f573db02605b0881d155ff8b805475c00176b12bc526b8e797571b80fe1c10c0d6aeddb86b0af957f9",
            "file": "src/app/layout/common-layout/store/effect/environments.effect.ts",
            "properties": [
                {
                    "name": "clearState$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(CommonActions.clearState),\n\t\t\tmap(({}) => {\n\t\t\t\treturn EnvironmentActions.clearEnvironments();\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "loadInitial$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(ProjectActions.setProjects),\n\t\t\tswitchMap(({ projects }) => {\n\t\t\t\treturn this.environmentService.list(projects[0].id, 9999).pipe(\n\t\t\t\t\tswitchMap(environments => {\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tEnvironmentActions.setEnvironments({\n\t\t\t\t\t\t\t\tenvironments: environments.data,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, of, switchMap } from 'rxjs';\nimport { ProjectActions } from '../action/project.action';\nimport { EnvironmentService } from '../../service/environment.service';\nimport { EnvironmentActions } from '../action/environment.action';\nimport { CommonActions } from '../action/common.action';\n\n@Injectable()\nexport class EnvironmentsEffect {\n\tconstructor(private actions$: Actions, private environmentService: EnvironmentService) {}\n\n\tloadInitial$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(ProjectActions.setProjects),\n\t\t\tswitchMap(({ projects }) => {\n\t\t\t\treturn this.environmentService.list(projects[0].id, 9999).pipe(\n\t\t\t\t\tswitchMap(environments => {\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tEnvironmentActions.setEnvironments({\n\t\t\t\t\t\t\t\tenvironments: environments.data,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t});\n\n\tclearState$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(CommonActions.clearState),\n\t\t\tmap(({}) => {\n\t\t\t\treturn EnvironmentActions.clearEnvironments();\n\t\t\t})\n\t\t);\n\t});\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "EnvironmentService",
            "id": "injectable-EnvironmentService-4160431fd4ee3db8e5a0c1d94f4f6f8bcc10251e0b1a12e6cdeb64736e9fde1dae7e727ba58cc7b181e3538be73287af6bec6111d17766c5670ce88a30929414",
            "file": "src/app/layout/common-layout/service/environment.service.ts",
            "properties": [
                {
                    "name": "_selectedEnvironment",
                    "defaultValue": "new BehaviorSubject<\n\t\tProjectEnvironment | undefined\n\t>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<ProjectEnvironment | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "cachedSelectedEnvironment",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ProjectEnvironment | undefined>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ProjectEnvironment>",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ProjectEnvironment>",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<ProjectEnvironment>>",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "publish",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ProjectEnvironment>",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedEnvironment",
                    "args": [
                        {
                            "name": "environmentName",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ProjectEnvironment | undefined>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentName",
                            "type": "string | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { ProjectEnvironment } from '../model/project-environment.interface';\nimport { BehaviorSubject, Observable, of, switchMap, take } from 'rxjs';\nimport { UUID } from 'angular2-uuid';\nimport { SeekPage } from './seek-page';\nimport { ProjectService } from './project.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class EnvironmentService {\n\tconstructor(private projectService: ProjectService, private actRoute: ActivatedRoute, private http: HttpClient) {\n\t\tthis.actRoute.queryParams.subscribe(value => {});\n\t}\n\n\tprivate _selectedEnvironment: BehaviorSubject<ProjectEnvironment | undefined> = new BehaviorSubject<\n\t\tProjectEnvironment | undefined\n\t>(undefined);\n\n\tcachedSelectedEnvironment(): Observable<ProjectEnvironment | undefined> {\n\t\treturn this._selectedEnvironment.pipe();\n\t}\n\n\tselectedEnvironment(environmentName: string | null): Observable<ProjectEnvironment | undefined> {\n\t\tif (this._selectedEnvironment.value && this._selectedEnvironment.value?.name === environmentName) {\n\t\t\treturn this._selectedEnvironment.pipe(take(1));\n\t\t}\n\t\treturn this.projectService.selectedProjectAndTakeOne().pipe(\n\t\t\tswitchMap(project =>\n\t\t\t\tthis.list(project.id, 9999).pipe(\n\t\t\t\t\tswitchMap(environments => {\n\t\t\t\t\t\tfor (let i = 0; i < environments.data.length; ++i) {\n\t\t\t\t\t\t\tif (environments.data[i].name === environmentName) {\n\t\t\t\t\t\t\t\tthis._selectedEnvironment.next(environments.data[i]);\n\t\t\t\t\t\t\t\treturn of(environments.data[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._selectedEnvironment.next(environments.data[0]);\n\t\t\t\t\t\treturn of(environments.data[0]);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n\n\tcreate(projectId: UUID, request: { name: string; deployedPieces: any[] }): Observable<ProjectEnvironment> {\n\t\treturn this.http.post<ProjectEnvironment>(environment.apiUrl + '/projects/' + projectId + '/environments', request);\n\t}\n\n\tpublish(environmentId: UUID, request: { collectionVersionId: UUID }): Observable<ProjectEnvironment> {\n\t\treturn this.http.post<ProjectEnvironment>(\n\t\t\tenvironment.apiUrl + '/environments/' + environmentId + '/publish',\n\t\t\trequest\n\t\t);\n\t}\n\n\tget(environmentId: string): Observable<ProjectEnvironment> {\n\t\treturn this.http.get<ProjectEnvironment>(environment.apiUrl + '/environments/' + environmentId);\n\t}\n\n\tlist(projectId: string, limit: number): Observable<SeekPage<ProjectEnvironment>> {\n\t\treturn this.http\n\t\t\t.get<SeekPage<ProjectEnvironment>>(environment.apiUrl + '/projects/' + projectId + '/environments?limit=' + limit)\n\t\t\t.pipe(\n\t\t\t\tswitchMap(seekPage => {\n\t\t\t\t\tif (seekPage.data.length > 0) {\n\t\t\t\t\t\treturn of(seekPage);\n\t\t\t\t\t}\n\t\t\t\t\treturn this.create(projectId, { name: 'production', deployedPieces: [] }).pipe(\n\t\t\t\t\t\tswitchMap(value => {\n\t\t\t\t\t\t\tseekPage.data.push(value);\n\t\t\t\t\t\t\treturn of(seekPage);\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tdelete(environmentId: string): Observable<void> {\n\t\treturn this.http.delete<void>(environment.apiUrl + '/environments/' + environmentId);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "EventDefinitionService",
            "id": "injectable-EventDefinitionService-08677b8c00a430c0754ea0cfd382dbb92a199f11cd9009f600312c96abc37216faca4db7eb87ad9ceafb1e148e02c3efad7f560d55447efff6b737cc64d0cb36",
            "file": "src/app/layout/common-layout/service/events-definitions.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<EventDefinition>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "eventId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<EventDefinition>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<EventDefinition>>",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<EventDefinition>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { SeekPage } from './seek-page';\nimport { EventDefinition } from '../model/event.-definition.interface';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class EventDefinitionService {\n\tconstructor(private http: HttpClient) {}\n\n\tcreate(\n\t\tprojectId: string,\n\t\trequest: { name: string; displayName: string; hidden: boolean; description: string }\n\t): Observable<EventDefinition> {\n\t\treturn this.http.post<EventDefinition>(\n\t\t\tenvironment.apiUrl + '/projects/' + projectId + '/event-definitions',\n\t\t\trequest\n\t\t);\n\t}\n\n\tupdate(request: {\n\t\tid: string;\n\t\tdisplayName: string;\n\t\thidden: boolean;\n\t\tdescription: string;\n\t}): Observable<EventDefinition> {\n\t\treturn this.http.post<EventDefinition>(environment.apiUrl + '/event-definitions/' + request.id, request);\n\t}\n\n\tget(eventId: string): Observable<EventDefinition> {\n\t\treturn this.http.get<EventDefinition>(environment.apiUrl + '/event-definitions/' + eventId);\n\t}\n\n\tlist(projectId: string, limit: number): Observable<SeekPage<EventDefinition>> {\n\t\treturn this.http.get<SeekPage<EventDefinition>>(\n\t\t\tenvironment.apiUrl + '/projects/' + projectId + '/event-definitions?limit=' + limit\n\t\t);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "EventsEffect",
            "id": "injectable-EventsEffect-ed97bc5c33116d6fa410af8674c19d134b50233f8aadc8f22d00720dbf7764ebdca27b0728b7bdb480ad13759312396c1f756b2fed3f70f20a66eafb27107f34",
            "file": "src/app/layout/common-layout/store/effect/events.effect.ts",
            "properties": [
                {
                    "name": "clearState$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(CommonActions.clearState),\n\t\t\tmap(({}) => {\n\t\t\t\treturn EventActions.clearEvents();\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "loadInitial$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(ProjectActions.setProjects),\n\t\t\tswitchMap(({ projects }) => {\n\t\t\t\treturn this.eventsService.list(projects[0].id, 9999).pipe(\n\t\t\t\t\tswitchMap(events => {\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tEventActions.setEvents({\n\t\t\t\t\t\t\t\tevents: events.data,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ProjectActions } from '../action/project.action';\nimport { map, of, switchMap } from 'rxjs';\nimport { EventDefinitionService } from '../../service/events-definitions.service';\nimport { EventActions } from '../action/events.action';\nimport { CommonActions } from '../action/common.action';\n\n@Injectable()\nexport class EventsEffect {\n\tconstructor(private actions$: Actions, private eventsService: EventDefinitionService) {}\n\n\tloadInitial$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(ProjectActions.setProjects),\n\t\t\tswitchMap(({ projects }) => {\n\t\t\t\treturn this.eventsService.list(projects[0].id, 9999).pipe(\n\t\t\t\t\tswitchMap(events => {\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tEventActions.setEvents({\n\t\t\t\t\t\t\t\tevents: events.data,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t});\n\n\tclearState$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(CommonActions.clearState),\n\t\t\tmap(({}) => {\n\t\t\t\treturn EventActions.clearEvents();\n\t\t\t})\n\t\t);\n\t});\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "eventsService",
                        "type": "EventDefinitionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "eventsService",
                        "type": "EventDefinitionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FlowItemsDetailsEffects",
            "id": "injectable-FlowItemsDetailsEffects-22c1903c9bcb87be4b5e54c85145370be21fb0dc885c1b837d0923d628f2a4bc5ac3daea8b0e1e172e82c9ee91e6b8e68c0085636f6f9cb4c3eeb1f67cc0c7ff",
            "file": "src/app/layout/flow-builder/store/effect/flow-items-details.effects.ts",
            "properties": [
                {
                    "name": "load$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(FlowItemDetailsActions.loadFlowItemsDetails),\n\t\t\tswitchMap(() => {\n\t\t\t\tconst coreFlowItemsDetails$ = this.flowItemsDetailsService\n\t\t\t\t\t.getDetailsForCollectionsWeBuilt()\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tmap(collectionsWeBuiltDetails => [\n\t\t\t\t\t\t\t...collectionsWeBuiltDetails,\n\t\t\t\t\t\t\t...this.flowItemsDetailsService.coreFlowItemsDetails,\n\t\t\t\t\t\t])\n\t\t\t\t\t);\n\t\t\t\tconst triggerFlowItemsDetails$ = of(this.flowItemsDetailsService.triggerItemsDetails);\n\t\t\t\tconst connectorsFlowItemsDetails$ = this.flowItemsDetailsService.getConnectorsFlowItemsDetails();\n\t\t\t\tconst userCollectionsFlowItemsDetails$ = this.flowItemsDetailsService\n\t\t\t\t\t.getFlowItemDetailsForUserCollections()\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tfilter(res => {\n\t\t\t\t\t\t\tif (res) return true;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\n\t\t\t\treturn forkJoin({\n\t\t\t\t\tcoreFlowItemsDetails: coreFlowItemsDetails$,\n\t\t\t\t\ttriggerFlowItemsDetails: triggerFlowItemsDetails$,\n\t\t\t\t\tconnectorsFlowItemsDetails: connectorsFlowItemsDetails$,\n\t\t\t\t\tuserCollectionsFlowItemsDetails: userCollectionsFlowItemsDetails$,\n\t\t\t\t});\n\t\t\t}),\n\t\t\tpipe(\n\t\t\t\tswitchMap(allFlowItemsDetails => {\n\t\t\t\t\treturn of(\n\t\t\t\t\t\tFlowItemDetailsActions.flowItemsDetailsLoadedSuccessfully({\n\t\t\t\t\t\t\tflowItemsDetailsLoaded: { loaded: true, ...allFlowItemsDetails },\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "loadOldRemoteFlowItemDetails$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(FlowItemDetailsActions.loadOldRemoteFlowItemDetails),\n\t\t\tmergeMap(({ collectionVersionId }) => {\n\t\t\t\treturn this.collectionService.getVersion(collectionVersionId).pipe(\n\t\t\t\t\tthis.flowItemsDetailsService.mapCollectionVersionToFlowItemDetails,\n\t\t\t\t\tswitchMap(oldRemoteFlowItemDetails => {\n\t\t\t\t\t\toldRemoteFlowItemDetails.extra!.old = true;\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tFlowItemDetailsActions.oldRemoteFlowItemDetailsLoadedSuccessfully({\n\t\t\t\t\t\t\t\toldRemoteFlowItemDetails: oldRemoteFlowItemDetails,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { filter, forkJoin, map, mergeMap, of, pipe, switchMap } from 'rxjs';\n\nimport { CollectionService } from 'src/app/layout/common-layout/service/collection.service';\nimport { ActionMetaService } from '../../service/action-meta.service';\nimport { FlowItemDetailsActions } from '../action/flow-items-details.action';\n\n@Injectable()\nexport class FlowItemsDetailsEffects {\n\tload$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(FlowItemDetailsActions.loadFlowItemsDetails),\n\t\t\tswitchMap(() => {\n\t\t\t\tconst coreFlowItemsDetails$ = this.flowItemsDetailsService\n\t\t\t\t\t.getDetailsForCollectionsWeBuilt()\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tmap(collectionsWeBuiltDetails => [\n\t\t\t\t\t\t\t...collectionsWeBuiltDetails,\n\t\t\t\t\t\t\t...this.flowItemsDetailsService.coreFlowItemsDetails,\n\t\t\t\t\t\t])\n\t\t\t\t\t);\n\t\t\t\tconst triggerFlowItemsDetails$ = of(this.flowItemsDetailsService.triggerItemsDetails);\n\t\t\t\tconst connectorsFlowItemsDetails$ = this.flowItemsDetailsService.getConnectorsFlowItemsDetails();\n\t\t\t\tconst userCollectionsFlowItemsDetails$ = this.flowItemsDetailsService\n\t\t\t\t\t.getFlowItemDetailsForUserCollections()\n\t\t\t\t\t.pipe(\n\t\t\t\t\t\tfilter(res => {\n\t\t\t\t\t\t\tif (res) return true;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\n\t\t\t\treturn forkJoin({\n\t\t\t\t\tcoreFlowItemsDetails: coreFlowItemsDetails$,\n\t\t\t\t\ttriggerFlowItemsDetails: triggerFlowItemsDetails$,\n\t\t\t\t\tconnectorsFlowItemsDetails: connectorsFlowItemsDetails$,\n\t\t\t\t\tuserCollectionsFlowItemsDetails: userCollectionsFlowItemsDetails$,\n\t\t\t\t});\n\t\t\t}),\n\t\t\tpipe(\n\t\t\t\tswitchMap(allFlowItemsDetails => {\n\t\t\t\t\treturn of(\n\t\t\t\t\t\tFlowItemDetailsActions.flowItemsDetailsLoadedSuccessfully({\n\t\t\t\t\t\t\tflowItemsDetailsLoaded: { loaded: true, ...allFlowItemsDetails },\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t});\n\tloadOldRemoteFlowItemDetails$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(FlowItemDetailsActions.loadOldRemoteFlowItemDetails),\n\t\t\tmergeMap(({ collectionVersionId }) => {\n\t\t\t\treturn this.collectionService.getVersion(collectionVersionId).pipe(\n\t\t\t\t\tthis.flowItemsDetailsService.mapCollectionVersionToFlowItemDetails,\n\t\t\t\t\tswitchMap(oldRemoteFlowItemDetails => {\n\t\t\t\t\t\toldRemoteFlowItemDetails.extra!.old = true;\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tFlowItemDetailsActions.oldRemoteFlowItemDetailsLoadedSuccessfully({\n\t\t\t\t\t\t\t\toldRemoteFlowItemDetails: oldRemoteFlowItemDetails,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t});\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate flowItemsDetailsService: ActionMetaService,\n\t\tprivate collectionService: CollectionService\n\t) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowItemsDetailsService",
                        "type": "ActionMetaService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "collectionService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 69,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowItemsDetailsService",
                        "type": "ActionMetaService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "collectionService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FlowRendererService",
            "id": "injectable-FlowRendererService-81e6a26d9f5c4f0d99b34275c0a2c3e94c1760c8a9b92052a37e0bbe9219da6c3f9abff5e994c8976599f07ab4d7cd8be4144f75af2086da2d372170737bc971",
            "file": "src/app/layout/flow-builder/service/flow-renderer.service.ts",
            "properties": [
                {
                    "name": "addButtonsWithStepNamesContainers",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AddButtonAndFlowItemNameContainer[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "attachmentCandidate",
                    "defaultValue": "new BehaviorSubject<\n\t\tAddButtonAndFlowItemNameContainer | undefined\n\t>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<AddButtonAndFlowItemNameContainer | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "candidateAddButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AddButtonAndFlowItemNameContainer | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "debuggerNewDropPointSubject",
                    "defaultValue": "new Subject<{ x: number; y: number }>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "draggingSubject",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "droppedPiece",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItem | null",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "rootPiece",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItem",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "structureChanged",
                    "defaultValue": "new BehaviorSubject<FlowItem | undefined>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<FlowItem | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "findCandidateButton",
                    "args": [
                        {
                            "name": "dropPoint",
                            "type": "Point",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AddButtonAndFlowItemNameContainer | undefined",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "dropPoint",
                            "type": "Point",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDraggedInformation",
                    "args": [],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "refreshCoordinatesAndSetActivePiece",
                    "args": [
                        {
                            "name": "clonedActivePiece",
                            "type": "FlowItem | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "clonedActivePiece",
                            "type": "FlowItem | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDragPiece",
                    "args": [
                        {
                            "name": "draggedPiece",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "draggedPiece",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDropPoint",
                    "args": [
                        {
                            "name": "point",
                            "type": "Point",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "draggedPiece",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "point",
                            "type": "Point",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "draggedPiece",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { Point } from '../../common-layout/model/helper/point';\nimport { AddButtonAndFlowItemNameContainer } from '../../common-layout/model/flow-builder/flow-add-button';\nimport { FlowRenderUtil } from './flowRenderUtil';\n\nimport { FlowItem } from '../../common-layout/model/flow-builder/flow-item';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class FlowRendererService {\n\tdebuggerNewDropPointSubject = new Subject<{ x: number; y: number }>();\n\tdraggingSubject = new Subject<boolean>();\n\tpublic structureChanged: BehaviorSubject<FlowItem | undefined> = new BehaviorSubject<FlowItem | undefined>(undefined);\n\tpublic addButtonsWithStepNamesContainers: AddButtonAndFlowItemNameContainer[] = [];\n\tpublic rootPiece: FlowItem;\n\tpublic attachmentCandidate: BehaviorSubject<AddButtonAndFlowItemNameContainer | undefined> = new BehaviorSubject<\n\t\tAddButtonAndFlowItemNameContainer | undefined\n\t>(undefined);\n\tprivate droppedPiece: FlowItem | null;\n\tcandidateAddButton: AddButtonAndFlowItemNameContainer | undefined;\n\tconstructor() {}\n\n\tpublic getDraggedInformation(): {\n\t\tdraggedPiece: FlowItem | null;\n\t\tcandidateAddButton: AddButtonAndFlowItemNameContainer | undefined;\n\t} {\n\t\treturn {\n\t\t\tdraggedPiece: this.droppedPiece,\n\t\t\tcandidateAddButton: this.candidateAddButton,\n\t\t};\n\t}\n\n\tpublic setDropPoint(point: Point, draggedPiece: FlowItem) {\n\t\tthis.droppedPiece = draggedPiece;\n\t\tthis.debuggerNewDropPointSubject.next(point);\n\t\tthis.candidateAddButton = this.findCandidateButton(point);\n\t}\n\n\tpublic setDragPiece(draggedPiece: FlowItem) {\n\t\tthis.droppedPiece = draggedPiece;\n\t}\n\n\tpublic refreshCoordinatesAndSetActivePiece(clonedActivePiece: FlowItem | undefined): void {\n\t\tif (clonedActivePiece) {\n\t\t\tclonedActivePiece.xOffset = clonedActivePiece.yOffset = 0;\n\t\t\tthis.rootPiece = clonedActivePiece;\n\t\t\tFlowRenderUtil.buildBoxes(clonedActivePiece);\n\t\t\tFlowRenderUtil.buildCoordinates(clonedActivePiece);\n\t\t}\n\n\t\tthis.structureChanged.next(clonedActivePiece);\n\t}\n\n\tprivate findCandidateButton(dropPoint: Point): AddButtonAndFlowItemNameContainer | undefined {\n\t\tlet candidate: AddButtonAndFlowItemNameContainer | undefined = undefined;\n\t\tthis.addButtonsWithStepNamesContainers.forEach(btn => {\n\t\t\tif (btn.stepName !== this.droppedPiece?.name) {\n\t\t\t\tif (FlowRenderUtil.isButtonWithinCandidateDistance(btn, dropPoint)) {\n\t\t\t\t\tif (!candidate) {\n\t\t\t\t\t\tcandidate = btn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst distanceBetweenCandidateAndDropPoint = FlowRenderUtil.dist(\n\t\t\t\t\t\t\tdropPoint,\n\t\t\t\t\t\t\tcandidate.htmlElementForButton.getBoundingClientRect()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst distanceBetweenBtnAndDropPoint = FlowRenderUtil.dist(\n\t\t\t\t\t\t\tdropPoint,\n\t\t\t\t\t\t\tbtn.htmlElementForButton.getBoundingClientRect()\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (distanceBetweenBtnAndDropPoint < distanceBetweenCandidateAndDropPoint) {\n\t\t\t\t\t\t\tcandidate = btn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tif (candidate) console.log((candidate as AddButtonAndFlowItemNameContainer).htmlElementForButton);\n\t\treturn candidate;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "type": "injectable"
        },
        {
            "name": "FlowsEffects",
            "id": "injectable-FlowsEffects-c206944fc464d3e140df42e9cb5580c7bd9111675034eac75fab80469d11336b11567ed4c447fd9d6b961ea9df8866920afd5653ba6721c6e23db52cb54ceb9e",
            "file": "src/app/layout/flow-builder/store/effect/flow.effects.ts",
            "properties": [
                {
                    "name": "addFlow$",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.addFlow),\r\n\t\t\tswitchMap((action: { flow: Flow }) => {\r\n\t\t\t\treturn of(FlowsActions.selectFlow({ flowId: action.flow.id }));\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 221
                },
                {
                    "name": "addStep",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.addStep),\r\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentFlowId)),\r\n\t\t\tswitchMap(([{ newAction }]) => {\r\n\t\t\t\treturn of(FlowsActions.selectStep({ step: newAction }));\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 275
                },
                {
                    "name": "deleteConfig$",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.deleteConfig),\r\n\t\t\tconcatLatestFrom(action => [\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentFlow),\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentCollection),\r\n\t\t\t]),\r\n\t\t\tconcatMap(([action, flow, collection]) => {\r\n\t\t\t\tif (flow && collection) {\r\n\t\t\t\t\tconst configToDelete = flow.lastVersion.configs[action.configIndex];\r\n\t\t\t\t\tconst allConfigs = [...flow.lastVersion.configs, ...collection.lastVersion.configs];\r\n\t\t\t\t\tconst refreshedConfig = findRefreshedConfig(allConfigs, configToDelete);\r\n\t\t\t\t\tif (refreshedConfig) {\r\n\t\t\t\t\t\treturn of(\r\n\t\t\t\t\t\t\tFlowsActions.deleteConfigFailed({\r\n\t\t\t\t\t\t\t\treferenceKey: configToDelete.key,\r\n\t\t\t\t\t\t\t\trefreshedKey: refreshedConfig.key,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn of(FlowsActions.deleteConfigSucceeded({ configIndex: action.configIndex }));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn EMPTY;\r\n\t\t\t}),\r\n\t\t\tcatchError(error => {\r\n\t\t\t\treturn of(FlowsActions.savedFailed(error));\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "deleteConfigFailed$",
                    "defaultValue": "createEffect(\r\n\t\t() => {\r\n\t\t\treturn this.actions$.pipe(\r\n\t\t\t\tofType(FlowsActions.deleteConfigFailed),\r\n\t\t\t\ttap(action => {\r\n\t\t\t\t\tthis.snackBar.open(`This variable can't be deleted because it's a refresher for ${action.refreshedKey}`, '', {\r\n\t\t\t\t\t\tpanelClass: 'error',\r\n\t\t\t\t\t\tduration: 5000,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\t{ dispatch: false }\r\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 180
                },
                {
                    "name": "deleteFlowStarted$",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.deleteFlowStarted),\r\n\t\t\tconcatMap((action: { flowId: UUID; saveId: UUID }) => {\r\n\t\t\t\treturn this.flowService.delete(action.flowId).pipe(\r\n\t\t\t\t\tmap(() => {\r\n\t\t\t\t\t\treturn FlowsActions.deleteSuccess({ saveId: action.saveId });\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}),\r\n\t\t\tcatchError(error => of(FlowsActions.savedFailed(error)))\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 195
                },
                {
                    "name": "deleteStep",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.deleteStep),\r\n\t\t\tconcatLatestFrom(() => [\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentTabState),\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentStepName),\r\n\t\t\t]),\r\n\t\t\tswitchMap(([{ stepName: stepToDeleteName }, state, currentStepName]) => {\r\n\t\t\t\tif (state && currentStepName === stepToDeleteName && state.rightSidebar.type === RightSideBarType.EDIT_STEP) {\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tFlowsActions.setRightSidebar({\r\n\t\t\t\t\t\t\tsidebarType: RightSideBarType.NONE,\r\n\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn EMPTY;\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 254
                },
                {
                    "name": "deleteStepArtifactFromCache",
                    "defaultValue": "createEffect(\r\n\t\t() => {\r\n\t\t\treturn this.actions$.pipe(\r\n\t\t\t\tofType(FlowsActions.deleteStep),\r\n\t\t\t\tconcatLatestFrom(() => [this.store.select(BuilderSelectors.selectCurrentFlow)]),\r\n\t\t\t\tconcatMap(([action, flow]) => {\r\n\t\t\t\t\tif (flow === undefined) {\r\n\t\t\t\t\t\treturn throwError(() => new Error('Internal error, current flow cannot be selected when deleting step'));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.codeService.removeArtifactInFlowStepsCache(new StepCacheKey(flow.id, action.stepName));\r\n\t\t\t\t\treturn of(void 0);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\t{\r\n\t\t\tdispatch: false,\r\n\t\t}\r\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "exitRun",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.exitRun),\r\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentLeftSidebar)),\r\n\t\t\tswitchMap(([{ flowId }, leftSideBar]) => {\r\n\t\t\t\tif (leftSideBar != null && leftSideBar.type === LeftSideBarType.SHOW_RUN) {\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tFlowsActions.setLeftSidebar({\r\n\t\t\t\t\t\t\tsidebarType: LeftSideBarType.NONE,\r\n\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn EMPTY;\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 325
                },
                {
                    "name": "handleRunSnackbar$",
                    "defaultValue": "createEffect(\r\n\t\t() => {\r\n\t\t\treturn this.actions$.pipe(\r\n\t\t\t\tofType(FlowsActions.selectFlow),\r\n\t\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentFlowRun)),\r\n\t\t\t\ttap(([{ flowId }, run]) => {\r\n\t\t\t\t\tif (run === undefined) {\r\n\t\t\t\t\t\tthis.snackBar.dismiss();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.snackBar.openFromComponent(TestRunBarComponent, {\r\n\t\t\t\t\t\t\tduration: undefined,\r\n\t\t\t\t\t\t\tdata: { flowId: flowId },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\t{\r\n\t\t\tdispatch: false,\r\n\t\t}\r\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 285
                },
                {
                    "name": "loadInitial$",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(BuilderActions.loadInitial),\r\n\t\t\tmap(({ flows, run }: { flows: Flow[]; run: InstanceRun | undefined }) => {\r\n\t\t\t\treturn FlowsActions.setInitial({\r\n\t\t\t\t\tflows: flows,\r\n\t\t\t\t\trun: run,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 209
                },
                {
                    "name": "removePieceSelection",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.setRightSidebar),\r\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentStepName)),\r\n\t\t\tswitchMap(\r\n\t\t\t\t([{ sidebarType }, stepName]: [request: { sidebarType: RightSideBarType }, stepName: string | undefined]) => {\r\n\t\t\t\t\tif (sidebarType !== RightSideBarType.EDIT_STEP && stepName != undefined) {\r\n\t\t\t\t\t\treturn of(FlowsActions.deselectStep());\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn EMPTY;\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 230
                },
                {
                    "name": "replaceTrigger",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.replaceTrigger),\r\n\t\t\tswitchMap((params: { newTrigger: Trigger }) => {\r\n\t\t\t\treturn of(FlowsActions.selectStep({ step: params.newTrigger }));\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 245
                },
                {
                    "name": "saveFlowStarted$",
                    "defaultValue": "createEffect(\r\n\t\t() => {\r\n\t\t\treturn this.actions$.pipe(\r\n\t\t\t\tofType(FlowsActions.saveFlowStarted),\r\n\t\t\t\tgroupBy(action => action.flow.id),\r\n\t\t\t\tmergeMap(changeFlowPendingAction$ => {\r\n\t\t\t\t\treturn changeFlowPendingAction$.pipe(\r\n\t\t\t\t\t\tconcatLatestFrom(action => [\r\n\t\t\t\t\t\t\tthis.store.select(BuilderSelectors.selectFlow(action.flow.id)),\r\n\t\t\t\t\t\t\tthis.store.select(BuilderSelectors.selectTabState(action.flow.id)),\r\n\t\t\t\t\t\t]),\r\n\t\t\t\t\t\tthrottle(\r\n\t\t\t\t\t\t\t([action, flow, tabState]) => {\r\n\t\t\t\t\t\t\t\tif (flow === undefined || tabState === undefined) {\r\n\t\t\t\t\t\t\t\t\treturn throwError(() => new Error('Flow is not selected'));\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\treturn this.processFlowUpdate({ flow: flow, tabState: tabState, saveId: action.saveId });\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{ trailing: true, leading: true }\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tcatchError(e => {\r\n\t\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t\t\tconst shownBar = this.snackBar.open(\r\n\t\t\t\t\t\t\t\t'You have unsaved changes on this page due to network disconnection.',\r\n\t\t\t\t\t\t\t\t'Refresh',\r\n\t\t\t\t\t\t\t\t{ duration: undefined, panelClass: 'error' }\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tshownBar.afterDismissed().subscribe(() => location.reload());\r\n\t\t\t\t\t\t\treturn of(FlowsActions.savedFailed(e));\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\t{ dispatch: false }\r\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "selectPieceOpenLeftsideBar",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.selectStep),\r\n\t\t\tconcatLatestFrom(() => [this.store.select(BuilderSelectors.selectCurrentFlowRun)]),\r\n\t\t\tswitchMap(([{ step }, selectedRun]) => {\r\n\t\t\t\tif (selectedRun != null) {\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tFlowsActions.setLeftSidebar({\r\n\t\t\t\t\t\t\tsidebarType: LeftSideBarType.SHOW_RUN,\r\n\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn EMPTY;\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 343
                },
                {
                    "name": "selectPieceOpenRightSidebar",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.selectStep),\r\n\t\t\tconcatLatestFrom(() => [this.store.select(BuilderSelectors.selectCurrentStep)]),\r\n\t\t\tswitchMap(([{ step }, flowItem]) => {\r\n\t\t\t\tif (flowItem && flowItem.type === TriggerType.EMPTY) {\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tFlowsActions.setRightSidebar({\r\n\t\t\t\t\t\t\tsidebarType: RightSideBarType.TRIGGER_TYPE,\r\n\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn of(\r\n\t\t\t\t\tFlowsActions.setRightSidebar({\r\n\t\t\t\t\t\tsidebarType: RightSideBarType.EDIT_STEP,\r\n\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 361
                },
                {
                    "name": "setRun",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.setRun),\r\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentStepName)),\r\n\t\t\tswitchMap(([{}, stepName]) => {\r\n\t\t\t\tif (stepName != null) {\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tFlowsActions.setLeftSidebar({\r\n\t\t\t\t\t\t\tsidebarType: LeftSideBarType.SHOW_RUN,\r\n\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn EMPTY;\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 307
                },
                {
                    "name": "startDeleteFlow$",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.deleteFlow),\r\n\t\t\tconcatMap(action => {\r\n\t\t\t\tlet genSavedId = UUID.UUID();\r\n\t\t\t\treturn of(FlowsActions.deleteFlowStarted({ flowId: action.flowId, saveId: genSavedId }));\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "startSaveFlow$",
                    "defaultValue": "createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(...SingleFlowModifyingState),\r\n\t\t\tconcatLatestFrom(action => [\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentFlow),\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentCollection),\r\n\t\t\t]),\r\n\t\t\tconcatMap(([action, flow, collection]) => {\r\n\t\t\t\tif (collection.lastVersion.state === VersionEditState.LOCKED) {\r\n\t\t\t\t\treturn this.collectionService.update(collection.id, collection.lastVersion).pipe(\r\n\t\t\t\t\t\tmap(() => {\r\n\t\t\t\t\t\t\tlet genSavedId = UUID.UUID();\r\n\t\t\t\t\t\t\treturn FlowsActions.saveFlowStarted({ flow: flow!, saveId: genSavedId });\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet genSavedId = UUID.UUID();\r\n\t\t\t\t\treturn of(FlowsActions.saveFlowStarted({ flow: flow!, saveId: genSavedId }));\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                }
            ],
            "methods": [
                {
                    "name": "processFlowUpdate",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Flow>",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects';\r\nimport {\r\n\tcatchError,\r\n\tconcatMap,\r\n\tEMPTY,\r\n\tgroupBy,\r\n\tmergeMap,\r\n\tObservable,\r\n\tof,\r\n\tswitchMap,\r\n\ttap,\r\n\tthrottle,\r\n\tthrowError,\r\n} from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport { FlowsActions, SingleFlowModifyingState } from '../action/flows.action';\r\nimport { FlowService } from '../../../common-layout/service/flow.service';\r\nimport { PieceBuilderService } from '../../service/piece-builder.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BuilderSelectors } from '../selector/flow-builder.selector';\r\nimport { RightSideBarType } from '../../../common-layout/model/enum/right-side-bar-type.enum';\r\nimport { LeftSideBarType } from '../../../common-layout/model/enum/left-side-bar-type.enum';\r\nimport { TriggerType } from '../../../common-layout/model/enum/trigger-type.enum';\r\nimport { TestRunBarComponent } from '../../page/flow-builder/test-run-bar/test-run-bar.component';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { Flow } from 'src/app/layout/common-layout/model/flow.class';\r\nimport { Trigger } from 'src/app/layout/common-layout/model/flow-builder/trigger/trigger.interface';\r\nimport { InstanceRun } from 'src/app/layout/common-layout/model/instance-run.interface';\r\nimport { BuilderActions } from '../action/builder.action';\r\nimport { CodeService } from '../../service/code.service';\r\nimport { StepCacheKey } from '../../service/artifact-cache-key';\r\nimport { TabState } from '../model/tab-state';\r\nimport { findRefreshedConfig } from './helper';\r\nimport { VersionEditState } from 'src/app/layout/common-layout/model/enum/version-edit-state.enum';\r\nimport { CollectionService } from 'src/app/layout/common-layout/service/collection.service';\r\n\r\n@Injectable()\r\nexport class FlowsEffects {\r\n\t// We cannot merge deleteFlow with SingleFlowModifyingState,\r\n\t// as usage of current flow selector to fetch flow id\r\n\t// but after deletion instantly this will be another flow after deleted flow.\r\n\tstartDeleteFlow$ = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.deleteFlow),\r\n\t\t\tconcatMap(action => {\r\n\t\t\t\tlet genSavedId = UUID.UUID();\r\n\t\t\t\treturn of(FlowsActions.deleteFlowStarted({ flowId: action.flowId, saveId: genSavedId }));\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\tdeleteStepArtifactFromCache = createEffect(\r\n\t\t() => {\r\n\t\t\treturn this.actions$.pipe(\r\n\t\t\t\tofType(FlowsActions.deleteStep),\r\n\t\t\t\tconcatLatestFrom(() => [this.store.select(BuilderSelectors.selectCurrentFlow)]),\r\n\t\t\t\tconcatMap(([action, flow]) => {\r\n\t\t\t\t\tif (flow === undefined) {\r\n\t\t\t\t\t\treturn throwError(() => new Error('Internal error, current flow cannot be selected when deleting step'));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.codeService.removeArtifactInFlowStepsCache(new StepCacheKey(flow.id, action.stepName));\r\n\t\t\t\t\treturn of(void 0);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\t{\r\n\t\t\tdispatch: false,\r\n\t\t}\r\n\t);\r\n\r\n\tstartSaveFlow$ = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(...SingleFlowModifyingState),\r\n\t\t\tconcatLatestFrom(action => [\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentFlow),\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentCollection),\r\n\t\t\t]),\r\n\t\t\tconcatMap(([action, flow, collection]) => {\r\n\t\t\t\tif (collection.lastVersion.state === VersionEditState.LOCKED) {\r\n\t\t\t\t\treturn this.collectionService.update(collection.id, collection.lastVersion).pipe(\r\n\t\t\t\t\t\tmap(() => {\r\n\t\t\t\t\t\t\tlet genSavedId = UUID.UUID();\r\n\t\t\t\t\t\t\treturn FlowsActions.saveFlowStarted({ flow: flow!, saveId: genSavedId });\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet genSavedId = UUID.UUID();\r\n\t\t\t\t\treturn of(FlowsActions.saveFlowStarted({ flow: flow!, saveId: genSavedId }));\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\tsaveFlowStarted$ = createEffect(\r\n\t\t() => {\r\n\t\t\treturn this.actions$.pipe(\r\n\t\t\t\tofType(FlowsActions.saveFlowStarted),\r\n\t\t\t\tgroupBy(action => action.flow.id),\r\n\t\t\t\tmergeMap(changeFlowPendingAction$ => {\r\n\t\t\t\t\treturn changeFlowPendingAction$.pipe(\r\n\t\t\t\t\t\tconcatLatestFrom(action => [\r\n\t\t\t\t\t\t\tthis.store.select(BuilderSelectors.selectFlow(action.flow.id)),\r\n\t\t\t\t\t\t\tthis.store.select(BuilderSelectors.selectTabState(action.flow.id)),\r\n\t\t\t\t\t\t]),\r\n\t\t\t\t\t\tthrottle(\r\n\t\t\t\t\t\t\t([action, flow, tabState]) => {\r\n\t\t\t\t\t\t\t\tif (flow === undefined || tabState === undefined) {\r\n\t\t\t\t\t\t\t\t\treturn throwError(() => new Error('Flow is not selected'));\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\treturn this.processFlowUpdate({ flow: flow, tabState: tabState, saveId: action.saveId });\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{ trailing: true, leading: true }\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tcatchError(e => {\r\n\t\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t\t\tconst shownBar = this.snackBar.open(\r\n\t\t\t\t\t\t\t\t'You have unsaved changes on this page due to network disconnection.',\r\n\t\t\t\t\t\t\t\t'Refresh',\r\n\t\t\t\t\t\t\t\t{ duration: undefined, panelClass: 'error' }\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tshownBar.afterDismissed().subscribe(() => location.reload());\r\n\t\t\t\t\t\t\treturn of(FlowsActions.savedFailed(e));\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\t{ dispatch: false }\r\n\t);\r\n\r\n\tprivate processFlowUpdate(request: { flow: Flow; tabState: TabState; saveId: UUID }): Observable<Flow> {\r\n\t\treturn this.flowService.update(request.flow.id, request.flow.lastVersion).pipe(\r\n\t\t\ttap(updatedFlow => {\r\n\t\t\t\tthis.store.dispatch(FlowsActions.savedSuccess({ saveId: request.saveId, flow: updatedFlow }));\r\n\t\t\t\tlet now = new Date();\r\n\t\t\t\tlet nowDate = now.toLocaleDateString('en-us', {\r\n\t\t\t\t\tmonth: 'long',\r\n\t\t\t\t\tday: 'numeric',\r\n\t\t\t\t\tyear: 'numeric',\r\n\t\t\t\t});\r\n\t\t\t\tlet nowTime = `${now.getHours().toString().padEnd(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\r\n\t\t\t\tthis.pieceBuilderService.lastSuccessfulSaveDate = `Last saved on ${nowDate} at ${nowTime}.`;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tdeleteConfig$ = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.deleteConfig),\r\n\t\t\tconcatLatestFrom(action => [\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentFlow),\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentCollection),\r\n\t\t\t]),\r\n\t\t\tconcatMap(([action, flow, collection]) => {\r\n\t\t\t\tif (flow && collection) {\r\n\t\t\t\t\tconst configToDelete = flow.lastVersion.configs[action.configIndex];\r\n\t\t\t\t\tconst allConfigs = [...flow.lastVersion.configs, ...collection.lastVersion.configs];\r\n\t\t\t\t\tconst refreshedConfig = findRefreshedConfig(allConfigs, configToDelete);\r\n\t\t\t\t\tif (refreshedConfig) {\r\n\t\t\t\t\t\treturn of(\r\n\t\t\t\t\t\t\tFlowsActions.deleteConfigFailed({\r\n\t\t\t\t\t\t\t\treferenceKey: configToDelete.key,\r\n\t\t\t\t\t\t\t\trefreshedKey: refreshedConfig.key,\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn of(FlowsActions.deleteConfigSucceeded({ configIndex: action.configIndex }));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn EMPTY;\r\n\t\t\t}),\r\n\t\t\tcatchError(error => {\r\n\t\t\t\treturn of(FlowsActions.savedFailed(error));\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\tdeleteConfigFailed$ = createEffect(\r\n\t\t() => {\r\n\t\t\treturn this.actions$.pipe(\r\n\t\t\t\tofType(FlowsActions.deleteConfigFailed),\r\n\t\t\t\ttap(action => {\r\n\t\t\t\t\tthis.snackBar.open(`This variable can't be deleted because it's a refresher for ${action.refreshedKey}`, '', {\r\n\t\t\t\t\t\tpanelClass: 'error',\r\n\t\t\t\t\t\tduration: 5000,\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\t{ dispatch: false }\r\n\t);\r\n\r\n\tdeleteFlowStarted$ = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.deleteFlowStarted),\r\n\t\t\tconcatMap((action: { flowId: UUID; saveId: UUID }) => {\r\n\t\t\t\treturn this.flowService.delete(action.flowId).pipe(\r\n\t\t\t\t\tmap(() => {\r\n\t\t\t\t\t\treturn FlowsActions.deleteSuccess({ saveId: action.saveId });\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}),\r\n\t\t\tcatchError(error => of(FlowsActions.savedFailed(error)))\r\n\t\t);\r\n\t});\r\n\r\n\tloadInitial$ = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(BuilderActions.loadInitial),\r\n\t\t\tmap(({ flows, run }: { flows: Flow[]; run: InstanceRun | undefined }) => {\r\n\t\t\t\treturn FlowsActions.setInitial({\r\n\t\t\t\t\tflows: flows,\r\n\t\t\t\t\trun: run,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\taddFlow$ = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.addFlow),\r\n\t\t\tswitchMap((action: { flow: Flow }) => {\r\n\t\t\t\treturn of(FlowsActions.selectFlow({ flowId: action.flow.id }));\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\tremovePieceSelection = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.setRightSidebar),\r\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentStepName)),\r\n\t\t\tswitchMap(\r\n\t\t\t\t([{ sidebarType }, stepName]: [request: { sidebarType: RightSideBarType }, stepName: string | undefined]) => {\r\n\t\t\t\t\tif (sidebarType !== RightSideBarType.EDIT_STEP && stepName != undefined) {\r\n\t\t\t\t\t\treturn of(FlowsActions.deselectStep());\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn EMPTY;\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n\r\n\treplaceTrigger = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.replaceTrigger),\r\n\t\t\tswitchMap((params: { newTrigger: Trigger }) => {\r\n\t\t\t\treturn of(FlowsActions.selectStep({ step: params.newTrigger }));\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\tdeleteStep = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.deleteStep),\r\n\t\t\tconcatLatestFrom(() => [\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentTabState),\r\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentStepName),\r\n\t\t\t]),\r\n\t\t\tswitchMap(([{ stepName: stepToDeleteName }, state, currentStepName]) => {\r\n\t\t\t\tif (state && currentStepName === stepToDeleteName && state.rightSidebar.type === RightSideBarType.EDIT_STEP) {\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tFlowsActions.setRightSidebar({\r\n\t\t\t\t\t\t\tsidebarType: RightSideBarType.NONE,\r\n\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn EMPTY;\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\taddStep = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.addStep),\r\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentFlowId)),\r\n\t\t\tswitchMap(([{ newAction }]) => {\r\n\t\t\t\treturn of(FlowsActions.selectStep({ step: newAction }));\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\thandleRunSnackbar$ = createEffect(\r\n\t\t() => {\r\n\t\t\treturn this.actions$.pipe(\r\n\t\t\t\tofType(FlowsActions.selectFlow),\r\n\t\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentFlowRun)),\r\n\t\t\t\ttap(([{ flowId }, run]) => {\r\n\t\t\t\t\tif (run === undefined) {\r\n\t\t\t\t\t\tthis.snackBar.dismiss();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.snackBar.openFromComponent(TestRunBarComponent, {\r\n\t\t\t\t\t\t\tduration: undefined,\r\n\t\t\t\t\t\t\tdata: { flowId: flowId },\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\t{\r\n\t\t\tdispatch: false,\r\n\t\t}\r\n\t);\r\n\r\n\tsetRun = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.setRun),\r\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentStepName)),\r\n\t\t\tswitchMap(([{}, stepName]) => {\r\n\t\t\t\tif (stepName != null) {\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tFlowsActions.setLeftSidebar({\r\n\t\t\t\t\t\t\tsidebarType: LeftSideBarType.SHOW_RUN,\r\n\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn EMPTY;\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\texitRun = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.exitRun),\r\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentLeftSidebar)),\r\n\t\t\tswitchMap(([{ flowId }, leftSideBar]) => {\r\n\t\t\t\tif (leftSideBar != null && leftSideBar.type === LeftSideBarType.SHOW_RUN) {\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tFlowsActions.setLeftSidebar({\r\n\t\t\t\t\t\t\tsidebarType: LeftSideBarType.NONE,\r\n\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn EMPTY;\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\tselectPieceOpenLeftsideBar = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.selectStep),\r\n\t\t\tconcatLatestFrom(() => [this.store.select(BuilderSelectors.selectCurrentFlowRun)]),\r\n\t\t\tswitchMap(([{ step }, selectedRun]) => {\r\n\t\t\t\tif (selectedRun != null) {\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tFlowsActions.setLeftSidebar({\r\n\t\t\t\t\t\t\tsidebarType: LeftSideBarType.SHOW_RUN,\r\n\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn EMPTY;\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\tselectPieceOpenRightSidebar = createEffect(() => {\r\n\t\treturn this.actions$.pipe(\r\n\t\t\tofType(FlowsActions.selectStep),\r\n\t\t\tconcatLatestFrom(() => [this.store.select(BuilderSelectors.selectCurrentStep)]),\r\n\t\t\tswitchMap(([{ step }, flowItem]) => {\r\n\t\t\t\tif (flowItem && flowItem.type === TriggerType.EMPTY) {\r\n\t\t\t\t\treturn of(\r\n\t\t\t\t\t\tFlowsActions.setRightSidebar({\r\n\t\t\t\t\t\t\tsidebarType: RightSideBarType.TRIGGER_TYPE,\r\n\t\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn of(\r\n\t\t\t\t\tFlowsActions.setRightSidebar({\r\n\t\t\t\t\t\tsidebarType: RightSideBarType.EDIT_STEP,\r\n\t\t\t\t\t\tprops: {},\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t});\r\n\r\n\tconstructor(\r\n\t\tprivate pieceBuilderService: PieceBuilderService,\r\n\t\tprivate flowService: FlowService,\r\n\t\tprivate store: Store,\r\n\t\tprivate actions$: Actions,\r\n\t\tprivate snackBar: MatSnackBar,\r\n\t\tprivate codeService: CodeService,\r\n\t\tprivate collectionService: CollectionService\r\n\t) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pieceBuilderService",
                        "type": "PieceBuilderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "collectionService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 382,
                "jsdoctags": [
                    {
                        "name": "pieceBuilderService",
                        "type": "PieceBuilderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "collectionService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FlowService",
            "id": "injectable-FlowService-c4246db26b1bc9e7479c07441365205ad946709da19d986e190d86c1b53a9142f0a228d4d8ce8d54ae58416807e8523deedbccb7ff78632d5d7a1532ce41324b",
            "file": "src/app/layout/common-layout/service/flow.service.ts",
            "properties": [
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "count",
                    "args": [
                        {
                            "name": "integrationId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "integrationId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "colelctionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Flow>",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "colelctionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createFlowTemplate",
                    "args": [
                        {
                            "name": "flowTemplate",
                            "type": "FlowTemplateInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "flowTemplate",
                            "type": "FlowTemplateInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "workflowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 192,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "workflowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "execute",
                    "args": [
                        {
                            "name": "collectionVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "flowVersionId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<InstanceRun>",
                    "typeParameters": [],
                    "line": 233,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collectionVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "flowVersionId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "flowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Flow>",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDynamicDropdownConfigsArtifacts",
                    "args": [
                        {
                            "name": "flow",
                            "type": "FlowVersion",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 260,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flow",
                            "type": "FlowVersion",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getVersion",
                    "args": [
                        {
                            "name": "flowVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FlowVersion>",
                    "typeParameters": [],
                    "line": 170,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listByPiece",
                    "args": [
                        {
                            "name": "integrationId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<Flow>>",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "integrationId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "limit",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listByPieceVersion",
                    "args": [
                        {
                            "name": "pieceVersion",
                            "type": "CollectionVersion",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FlowVersion[]>",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pieceVersion",
                            "type": "CollectionVersion",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listVersionsByFlowId",
                    "args": [
                        {
                            "name": "flowID",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<FlowVersion[]>",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowID",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showModalFlow",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "flowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "flow",
                            "type": "FlowVersion",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Flow>",
                    "typeParameters": [],
                    "line": 196,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "flow",
                            "type": "FlowVersion",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { CollectionVersion } from '../model/piece.interface';\nimport { forkJoin, map, Observable, of, skipWhile, switchMap, take, tap } from 'rxjs';\nimport { Flow } from '../model/flow.class';\nimport { SeekPage } from './seek-page';\nimport { UUID } from 'angular2-uuid';\nimport { FlowVersion } from '../model/flow-version.class';\nimport { InstanceRun } from '../model/instance-run.interface';\nimport { InstanceRunService } from './instance-run.service';\nimport { TriggerType } from '../model/enum/trigger-type.enum';\nimport { FlowTemplateInterface } from '../../flow-builder/model/flow-template.interface';\nimport { CreateNewFlowModalComponent } from '../../flow-builder/page/flow-builder/flow-right-sidebar/create-new-flow-modal/create-new-flow-modal.component';\nimport { BuilderSelectors } from '../../flow-builder/store/selector/flow-builder.selector';\nimport { findDefaultFlowDisplayName } from '../utils';\nimport { Store } from '@ngrx/store';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { FlowsActions } from '../../flow-builder/store/action/flows.action';\nimport { RightSideBarType } from '../model/enum/right-side-bar-type.enum';\nimport { VersionEditState } from '../model/enum/version-edit-state.enum';\nimport {\n\taddArtifactsToFormData,\n\tArtifactAndItsNameInFormData,\n\tzipAllArtifacts,\n} from '../model/helper/artifacts-zipping-helper';\nimport { CodeService } from '../../flow-builder/service/code.service';\nimport { CodeAction } from '../model/flow-builder/actions/code-action.interface';\nimport { Artifact } from '../../flow-builder/model/artifact.interface';\nimport { ConfigType } from '../model/enum/config-type';\nimport { DropdownType } from '../model/enum/config.enum';\nimport { DynamicDropdownSettings } from '../model/fields/variable/config-settings';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class FlowService {\n\tprivate bsModalRef: BsModalRef;\n\n\tconstructor(\n\t\tprivate instanceRunService: InstanceRunService,\n\t\tprivate store: Store,\n\t\tprivate modalService: BsModalService,\n\t\tprivate http: HttpClient,\n\t\tprivate codeService: CodeService\n\t) {}\n\n\tpublic showModalFlow() {\n\t\tthis.bsModalRef = this.modalService.show(CreateNewFlowModalComponent, {\n\t\t\tignoreBackdropClick: true,\n\t\t});\n\t\tthis.bsModalRef.content.selectedTemplate\n\t\t\t.pipe(\n\t\t\t\ttake(1),\n\t\t\t\tswitchMap(template => {\n\t\t\t\t\tif (template == undefined) {\n\t\t\t\t\t\treturn of(undefined);\n\t\t\t\t\t}\n\t\t\t\t\tlet flowTemplate: FlowTemplateInterface = template as FlowTemplateInterface;\n\t\t\t\t\treturn this.createFlowTemplate(flowTemplate);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe();\n\t}\n\n\tpublic createFlowTemplate(flowTemplate: FlowTemplateInterface) {\n\t\treturn forkJoin({\n\t\t\tpiece: this.store.select(BuilderSelectors.selectCurrentCollection).pipe(take(1)),\n\t\t\tflows: this.store.select(BuilderSelectors.selectFlows).pipe(take(1)),\n\t\t})\n\t\t\t.pipe(\n\t\t\t\tswitchMap(pieceWithFlows => {\n\t\t\t\t\tlet flowDisplayName = findDefaultFlowDisplayName(pieceWithFlows.flows);\n\t\t\t\t\treturn this.create(pieceWithFlows.piece.id, {\n\t\t\t\t\t\tflowDisplayName: flowDisplayName,\n\t\t\t\t\t\ttemplate: flowTemplate,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tmap(response => {\n\t\t\t\t\tif (response != undefined) {\n\t\t\t\t\t\tthis.store\n\t\t\t\t\t\t\t.select(BuilderSelectors.selectCurrentFlowId)\n\t\t\t\t\t\t\t.pipe(skipWhile(f => f != response.id))\n\t\t\t\t\t\t\t.pipe(take(1))\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tswitchMap(f => {\n\t\t\t\t\t\t\t\t\treturn this.store\n\t\t\t\t\t\t\t\t\t\t.select(BuilderSelectors.selectCurrentTabState)\n\t\t\t\t\t\t\t\t\t\t.pipe(skipWhile(f => f == undefined))\n\t\t\t\t\t\t\t\t\t\t.pipe(take(1));\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.subscribe(tab => {\n\t\t\t\t\t\t\t\tif (response.lastVersion.trigger?.type === TriggerType.EMPTY) {\n\t\t\t\t\t\t\t\t\tthis.store.dispatch(\n\t\t\t\t\t\t\t\t\t\tFlowsActions.setRightSidebar({\n\t\t\t\t\t\t\t\t\t\t\tsidebarType: RightSideBarType.TRIGGER_TYPE,\n\t\t\t\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.store.dispatch(FlowsActions.addFlow({ flow: response }));\n\t\t\t\t\t}\n\t\t\t\t\treturn response;\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tcreate(colelctionId: UUID, request: { flowDisplayName: string; template: FlowTemplateInterface }): Observable<Flow> {\n\t\tconst formData = new FormData();\n\t\tlet clonedTemplate: FlowTemplateInterface = JSON.parse(JSON.stringify(request.template));\n\t\tlet flowVersion: FlowVersion = new FlowVersion({\n\t\t\tepochCreationTime: 0,\n\t\t\tepochUpdateTime: 0,\n\t\t\t// IGNORED\n\t\t\tflowId: UUID.UUID(),\n\t\t\t// IGNORED\n\t\t\tid: UUID.UUID(),\n\t\t\t// IGNORED\n\t\t\tstate: VersionEditState.DRAFT,\n\t\t\tvalid: false,\n\t\t\taccess: clonedTemplate.version.access,\n\t\t\tdisplayName: request.flowDisplayName,\n\t\t\tdescription: request.flowDisplayName + ' description',\n\t\t\tconfigs: clonedTemplate.version.configs,\n\t\t\ttrigger: clonedTemplate.version.trigger,\n\t\t});\n\t\tconst codeActions: CodeAction[] = flowVersion.codeActions();\n\t\tconst codeActionsArtifacts: Artifact[] = new Array(codeActions.length);\n\t\tcodeActionsArtifacts.fill(this.codeService.helloWorld());\n\t\tconst artifacts$ = zipAllArtifacts(\n\t\t\tcodeActionsArtifacts.map((art, idx) => {\n\t\t\t\treturn { artifact: art, name: codeActions[idx].name };\n\t\t\t})\n\t\t);\n\n\t\tformData.append(\n\t\t\t'flow',\n\t\t\tnew Blob(\n\t\t\t\t[\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tversion: flowVersion,\n\t\t\t\t\t}),\n\t\t\t\t],\n\t\t\t\t{ type: 'application/json' }\n\t\t\t)\n\t\t);\n\n\t\tconst createFlow$ = this.http.post<Flow>(environment.apiUrl + '/collections/' + colelctionId + '/flows', formData);\n\t\tif (artifacts$.length == 0) {\n\t\t\treturn createFlow$;\n\t\t}\n\t\treturn forkJoin(artifacts$).pipe(\n\t\t\ttap(zippedFilesAndTheirNames => {\n\t\t\t\taddArtifactsToFormData(zippedFilesAndTheirNames, formData);\n\t\t\t}),\n\t\t\tswitchMap(() => {\n\t\t\t\treturn createFlow$;\n\t\t\t})\n\t\t);\n\t}\n\n\tget(flowId: UUID): Observable<Flow> {\n\t\treturn this.http.get<Flow>(environment.apiUrl + '/flows/' + flowId);\n\t}\n\n\tgetVersion(flowVersionId: UUID): Observable<FlowVersion> {\n\t\treturn this.http.get<FlowVersion>(environment.apiUrl + '/flows/versions/' + flowVersionId);\n\t}\n\n\tlistByPiece(integrationId: UUID, limit: number): Observable<SeekPage<Flow>> {\n\t\treturn this.http.get<SeekPage<Flow>>(\n\t\t\tenvironment.apiUrl + '/collections/' + integrationId + '/flows?limit=' + limit\n\t\t);\n\t}\n\n\tlistVersionsByFlowId(flowID: UUID): Observable<FlowVersion[]> {\n\t\treturn this.http.get<FlowVersion[]>(environment.apiUrl + '/flows/' + flowID + '/versions');\n\t}\n\n\tlistByPieceVersion(pieceVersion: CollectionVersion): Observable<FlowVersion[]> {\n\t\treturn forkJoin(pieceVersion.flowsVersionId.map(item => this.getVersion(item)));\n\t}\n\n\tcount(integrationId: UUID): Observable<number> {\n\t\treturn this.http.get<number>(environment.apiUrl + '/collections/' + integrationId + '/flows/count');\n\t}\n\n\tdelete(workflowId: UUID): Observable<void> {\n\t\treturn this.http.delete<void>(environment.apiUrl + '/flows/' + workflowId);\n\t}\n\n\tupdate(flowId: UUID, flow: FlowVersion): Observable<Flow> {\n\t\tconst formData = new FormData();\n\t\tlet clonedFlowVersion: FlowVersion = FlowVersion.clone(flow);\n\t\tformData.append(\n\t\t\t'flow',\n\t\t\tnew Blob([JSON.stringify(clonedFlowVersion)], {\n\t\t\t\ttype: 'application/json',\n\t\t\t})\n\t\t);\n\t\tconst dirtyStepsArtifacts = this.codeService.getDirtyArtifactsForFlowSteps(flowId);\n\t\tconst artifactsAndTheirNames: ArtifactAndItsNameInFormData[] = [\n\t\t\t...this.getDynamicDropdownConfigsArtifacts(flow),\n\t\t\t...dirtyStepsArtifacts,\n\t\t];\n\n\t\tconst updateFlow$ = this.http.put<any>(environment.apiUrl + '/flows/' + flowId + '/versions/latest', formData);\n\t\tconst artifacts$ = zipAllArtifacts(artifactsAndTheirNames);\n\t\tif (artifacts$.length == 0) {\n\t\t\treturn updateFlow$;\n\t\t}\n\t\treturn forkJoin(artifacts$).pipe(\n\t\t\ttap(zippedFilesAndTheirNames => {\n\t\t\t\taddArtifactsToFormData(zippedFilesAndTheirNames, formData);\n\t\t\t}),\n\t\t\tswitchMap(() => {\n\t\t\t\tconst updateFlowWithArtifacts$ = this.http.put<any>(\n\t\t\t\t\tenvironment.apiUrl + '/flows/' + flowId + '/versions/latest',\n\t\t\t\t\tformData\n\t\t\t\t);\n\t\t\t\treturn updateFlowWithArtifacts$;\n\t\t\t}),\n\t\t\ttap(() => {\n\t\t\t\tthis.codeService.unmarkDirtyArtifactsInFlowStepsCache(flowId);\n\t\t\t})\n\t\t);\n\t}\n\n\texecute(\n\t\tcollectionVersionId: UUID,\n\t\tflowVersionId,\n\t\trequest: { configs: Map<String, Object>; trigger: any }\n\t): Observable<InstanceRun> {\n\t\tconsole.log(request.configs);\n\t\treturn this.http\n\t\t\t.post<any>(\n\t\t\t\tenvironment.apiUrl +\n\t\t\t\t\t'/collection-versions/' +\n\t\t\t\t\tcollectionVersionId +\n\t\t\t\t\t'/flow-versions/' +\n\t\t\t\t\tflowVersionId +\n\t\t\t\t\t'/runs',\n\t\t\t\trequest\n\t\t\t)\n\t\t\t.pipe(\n\t\t\t\tswitchMap(value => {\n\t\t\t\t\t// TODO REMOVE AFTER RELEASE NEW WORKERS\n\t\t\t\t\tif (value.runId !== undefined) {\n\t\t\t\t\t\treturn this.instanceRunService.get(value.runId);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn of(value);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t}\n\tgetDynamicDropdownConfigsArtifacts(flow: FlowVersion) {\n\t\tconst artifacts: ArtifactAndItsNameInFormData[] = [];\n\t\tflow.configs.forEach(config => {\n\t\t\tconst settings = config.settings as DynamicDropdownSettings;\n\t\t\tif (config.type === ConfigType.DROPDOWN && settings.dropdownType == DropdownType.DYNAMIC) {\n\t\t\t\tif (settings.artifactContent) artifacts.push({ artifact: settings.artifactContent, name: config.key });\n\t\t\t}\n\t\t});\n\t\treturn artifacts;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "instanceRunService",
                        "type": "InstanceRunService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "instanceRunService",
                        "type": "InstanceRunService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "FlowTemplateService",
            "id": "injectable-FlowTemplateService-c09f4aed10fd2b057915de7c841f2cde9915947a4f24f34824e6dfae6f0ac3f281a177b3b4b9baf11e18c3e9fcfd2809f7c956b71da51d452a0d5c8d55af0a62",
            "file": "src/app/layout/flow-builder/service/flow-template.service.ts",
            "properties": [
                {
                    "name": "FLOW_EMPTY_TEMPLATE",
                    "defaultValue": "{\n\t\ttitle: 'Start from scratch',\n\t\tdescription: 'Start building your collection form scratch.',\n\t\ticon: '/assets/img/custom/template/add-flow-rounded.svg',\n\t\tversion: {\n\t\t\taccess: 'PRIVATE',\n\t\t\tconfigs: [],\n\t\t\ttrigger: {\n\t\t\t\tyOffsetFromLastNode: 0,\n\t\t\t\tname: 'trigger',\n\t\t\t\tdisplayName: 'Empty Trigger',\n\t\t\t\ttype: TriggerType.EMPTY,\n\t\t\t\tsettings: {},\n\t\t\t},\n\t\t},\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowTemplateInterface",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "FLOW_HELLO_WORLD_TEMPLATE",
                    "defaultValue": "{\n\t\ttitle: 'Hello World',\n\t\tdescription: 'Let this flow print hello world for you',\n\t\ticon: '/assets/img/custom/template/template-1.png',\n\t\tversion: {\n\t\t\taccess: 'PRIVATE',\n\t\t\tconfigs: [],\n\t\t\ttrigger: {\n\t\t\t\tyOffsetFromLastNode: 0,\n\t\t\t\tname: 'trigger',\n\t\t\t\tdisplayName: 'Every 10 minutes',\n\t\t\t\ttype: TriggerType.SCHEDULE,\n\t\t\t\tsettings: {\n\t\t\t\t\tcronExpression: '0 */10 * ? * *',\n\t\t\t\t},\n\t\t\t\tnextAction: {\n\t\t\t\t\tname: 'step_1',\n\t\t\t\t\tdisplayName: 'Hello World',\n\t\t\t\t\ttype: ActionType.CODE,\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tinput: {},\n\t\t\t\t\t},\n\t\t\t\t} as CodeAction,\n\t\t\t},\n\t\t},\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowTemplateInterface",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "FLOW_TEMPLATE_INTERFACE",
                    "defaultValue": "[this.FLOW_EMPTY_TEMPLATE, this.FLOW_HELLO_WORLD_TEMPLATE]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowTemplateInterface[]",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "HELLO_WORLD",
                    "defaultValue": "{\n\t\tcontent: 'exports.codePiece = async (params) => {\\n' + '    return true;\\n' + '};\\n',\n\t\tpackage: '{\\n' + '  \"dependencies\": {\\n' + '  }\\n' + '}\\n',\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Artifact",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { FlowTemplateInterface } from '../model/flow-template.interface';\nimport { TriggerType } from '../../common-layout/model/enum/trigger-type.enum';\nimport { ActionType } from '../../common-layout/model/enum/action-type.enum';\nimport { CodeAction } from '../../common-layout/model/flow-builder/actions/code-action.interface';\nimport { Artifact } from '../model/artifact.interface';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class FlowTemplateService {\n\tpublic FLOW_EMPTY_TEMPLATE: FlowTemplateInterface = {\n\t\ttitle: 'Start from scratch',\n\t\tdescription: 'Start building your collection form scratch.',\n\t\ticon: '/assets/img/custom/template/add-flow-rounded.svg',\n\t\tversion: {\n\t\t\taccess: 'PRIVATE',\n\t\t\tconfigs: [],\n\t\t\ttrigger: {\n\t\t\t\tyOffsetFromLastNode: 0,\n\t\t\t\tname: 'trigger',\n\t\t\t\tdisplayName: 'Empty Trigger',\n\t\t\t\ttype: TriggerType.EMPTY,\n\t\t\t\tsettings: {},\n\t\t\t},\n\t\t},\n\t};\n\n\tpublic HELLO_WORLD: Artifact = {\n\t\tcontent: 'exports.codePiece = async (params) => {\\n' + '    return true;\\n' + '};\\n',\n\t\tpackage: '{\\n' + '  \"dependencies\": {\\n' + '  }\\n' + '}\\n',\n\t};\n\n\tpublic FLOW_HELLO_WORLD_TEMPLATE: FlowTemplateInterface = {\n\t\ttitle: 'Hello World',\n\t\tdescription: 'Let this flow print hello world for you',\n\t\ticon: '/assets/img/custom/template/template-1.png',\n\t\tversion: {\n\t\t\taccess: 'PRIVATE',\n\t\t\tconfigs: [],\n\t\t\ttrigger: {\n\t\t\t\tyOffsetFromLastNode: 0,\n\t\t\t\tname: 'trigger',\n\t\t\t\tdisplayName: 'Every 10 minutes',\n\t\t\t\ttype: TriggerType.SCHEDULE,\n\t\t\t\tsettings: {\n\t\t\t\t\tcronExpression: '0 */10 * ? * *',\n\t\t\t\t},\n\t\t\t\tnextAction: {\n\t\t\t\t\tname: 'step_1',\n\t\t\t\t\tdisplayName: 'Hello World',\n\t\t\t\t\ttype: ActionType.CODE,\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tinput: {},\n\t\t\t\t\t},\n\t\t\t\t} as CodeAction,\n\t\t\t},\n\t\t},\n\t};\n\n\tpublic FLOW_TEMPLATE_INTERFACE: FlowTemplateInterface[] = [this.FLOW_EMPTY_TEMPLATE, this.FLOW_HELLO_WORLD_TEMPLATE];\n\n\tconstructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 61
            },
            "type": "injectable"
        },
        {
            "name": "FormService",
            "id": "injectable-FormService-322323c52b40927d869b688a45dd07c38cfa736ec9962d2c219cce3e1ae15e5f92e8d2433c731f0ffdf0ea117fa98471c71b57d69965ae83672838390c2283c5",
            "file": "src/app/layout/common-layout/service/form.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createDynamicControl",
                    "args": [
                        {
                            "name": "variable",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "viewMode",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DynamicFormControl | null",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "variable",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "viewMode",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createDynamicControls",
                    "args": [
                        {
                            "name": "variables",
                            "type": "Config[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "viewMode",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "DynamicFormControl[]",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "variables",
                            "type": "Config[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "viewMode",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createInternalDynamicControl",
                    "args": [
                        {
                            "name": "variable",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "flowId",
                            "type": "UUID | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "piecePanel",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "viewMode",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any | null",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "variable",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "flowId",
                            "type": "UUID | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "piecePanel",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "viewMode",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getErrorCount",
                    "args": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "FormGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Config } from '../model/fields/variable/config';\nimport { ConfigType } from '../model/enum/config-type';\nimport { DynamicFormControl } from '../model/dynamic-controls/dynamic-form-control';\nimport { IntegerFormControl } from '../model/dynamic-controls/integer-form-control';\nimport { IntegerVariable } from '../model/fields/variable/integer-variable.class';\nimport { KeyValueVariable } from '../model/fields/variable/key-value-variable';\nimport { LongTextFormControl } from '../model/dynamic-controls/long-text-form-control';\nimport { LongTextVariableClass } from '../model/fields/variable/subfields/long-text-variable.class';\nimport { KeyValueFormControl } from '../model/dynamic-controls/key-value-form-control';\nimport { UUID } from 'angular2-uuid';\nimport { OAuth2Response } from '../model/fields/variable/subfields/oauth2-response.interface';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class FormService {\n\tconstructor() {}\n\n\tpublic createInternalDynamicControl(\n\t\tvariable: any,\n\t\tflowId: UUID | null,\n\t\tpiecePanel: boolean,\n\t\tviewMode: boolean\n\t): any | null {\n\t\tswitch (variable.type) {\n\t\t\tcase ConfigType.LONG_TEXT:\n\t\t\t\tlet longtextVariable = variable as LongTextVariableClass;\n\t\t\t\treturn new LongTextFormControl({\n\t\t\t\t\tname: variable.key,\n\t\t\t\t\tlabel: variable.label,\n\t\t\t\t\tvalue: longtextVariable.value,\n\t\t\t\t\tdisabled: viewMode,\n\t\t\t\t\tvalidatorFns: variable.settings.required ? [Validators.required] : [],\n\t\t\t\t});\n\t\t\tcase ConfigType.INTEGER:\n\t\t\t\tlet integerVariable = variable as IntegerVariable;\n\t\t\t\treturn new IntegerFormControl({\n\t\t\t\t\tname: variable.key,\n\t\t\t\t\tlabel: variable.label,\n\t\t\t\t\tvalue: integerVariable.value,\n\t\t\t\t\thelpText: integerVariable.hintText,\n\t\t\t\t\tdisabled: viewMode,\n\t\t\t\t\tvalidatorFns: variable.settings.required ? [Validators.required] : [],\n\t\t\t\t});\n\t\t\tcase ConfigType.SHORT_TEXT: {\n\t\t\t\tlet shortTextVariable = variable;\n\t\t\t\treturn {\n\t\t\t\t\tname: variable.key,\n\t\t\t\t\tlabel: variable.label,\n\t\t\t\t\tvalue: shortTextVariable.value,\n\t\t\t\t\thelpText: shortTextVariable.hintText,\n\t\t\t\t\tdisabled: viewMode,\n\t\t\t\t\tvalidatorFns: variable.settings.required ? [Validators.required] : [],\n\t\t\t\t};\n\t\t\t}\n\t\t\tcase ConfigType.DICTIONARY: {\n\t\t\t\tlet dictionary = variable as KeyValueVariable;\n\t\t\t\treturn new KeyValueFormControl({\n\t\t\t\t\tname: variable.key,\n\t\t\t\t\tlabel: variable.label,\n\t\t\t\t\tvalue: dictionary.value,\n\t\t\t\t\thelpText: dictionary.hintText,\n\t\t\t\t\tdisabled: viewMode,\n\t\t\t\t\tvalidatorFns: [Validators.required],\n\t\t\t\t});\n\t\t\t}\n\t\t\tcase ConfigType.OAUTH2:\n\t\t\t\tif (piecePanel) {\n\t\t\t\t\tlet oauth2 = variable;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: variable.key,\n\t\t\t\t\t\tlabel: variable.label,\n\t\t\t\t\t\tflowId: flowId!,\n\t\t\t\t\t\tvalue: oauth2.value as string,\n\t\t\t\t\t\tvariable: oauth2,\n\t\t\t\t\t\thelpText: oauth2.hintText,\n\t\t\t\t\t\tdisabled: viewMode,\n\t\t\t\t\t\tvalidatorFns: [Validators.required],\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tlet oauth2 = variable;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: variable.key,\n\t\t\t\t\t\tlabel: variable.label,\n\t\t\t\t\t\tvalue: oauth2.value as OAuth2Response,\n\t\t\t\t\t\tsettings: oauth2.settings,\n\t\t\t\t\t\thelpText: oauth2.hintText,\n\t\t\t\t\t\tdisabled: viewMode,\n\t\t\t\t\t\tvalidatorFns: [Validators.required],\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\tcase ConfigType.DROPDOWN: {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: variable.label,\n\t\t\t\t\tname: variable.key,\n\t\t\t\t\thelpText: variable.hintText,\n\t\t\t\t\tvalidatorFns: variable.settings.required ? [Validators.required] : [],\n\t\t\t\t\tdisabled: viewMode,\n\t\t\t\t\tvalue: variable.value,\n\t\t\t\t\tdropdownOptions: variable.settings.options ? variable.settings.options : [],\n\t\t\t\t\tisDynamic: variable.settings.dropdownType ? variable.settings.dropdownType === 'DYNAMIC' : false,\n\t\t\t\t\trefreshReferences: variable.settings.dropdownType === 'DYNAMIC' ? variable.settings.refreshReferences : [],\n\t\t\t\t\t//for test flow\n\t\t\t\t\tcollectionVersionId: variable.collectionVersionId,\n\t\t\t\t\tflowVersionId: variable.flowVersionId,\n\t\t\t\t};\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unsupported type ' + variable.type);\n\t\t}\n\t}\n\n\tpublic createDynamicControl(variable: Config, viewMode: boolean): DynamicFormControl | null {\n\t\treturn this.createInternalDynamicControl(variable, null, false, viewMode);\n\t}\n\n\tpublic createDynamicControls(\n\t\tvariables: Config[],\n\n\t\tviewMode: boolean = false\n\t): DynamicFormControl[] {\n\t\tlet dynamicControls: DynamicFormControl[] = [];\n\t\tfor (let i = 0; i < variables.length; ++i) {\n\t\t\tconst dynamicControl = this.createDynamicControl(variables[i], viewMode);\n\t\t\tif (dynamicControl) dynamicControls.push(dynamicControl);\n\t\t}\n\t\treturn dynamicControls;\n\t}\n\n\tgetErrorCount(form: FormGroup): number {\n\t\tlet errorCount = 0;\n\t\tfor (let controlKey in form.controls) {\n\t\t\tif (form.controls.hasOwnProperty(controlKey)) {\n\t\t\t\tif (form.controls[controlKey].errors != null) {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\terrorCount += Object.keys(form.controls[controlKey].errors).length;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn errorCount;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "type": "injectable"
        },
        {
            "name": "HighlightService",
            "id": "injectable-HighlightService-1901a1dcb5d672886ff966cecbfd01a64fcb29990d640fdbdf8c5bbe1a5c7458ef0841b9037228e83ce4d979a6184d6d3d7f20111f47dae037449f16b91b485d",
            "file": "src/app/layout/common-layout/service/highlightservice.ts",
            "properties": [],
            "methods": [
                {
                    "name": "highlightAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport 'prismjs';\nimport 'prismjs/plugins/line-numbers/prism-line-numbers';\nimport 'prismjs/components/prism-json';\nimport 'prismjs/components/prism-javascript';\n\ndeclare var Prism: any;\n\n@Injectable()\nexport class HighlightService {\n\tconstructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n\thighlightAll() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tPrism.highlightAll();\n\t\t}\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "platformId",
                        "type": "Object",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "platformId",
                        "type": "Object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HttpInterceptorService",
            "id": "injectable-HttpInterceptorService-3c445c47474b100ee4f29506ec7986d77585bebca97d8ba4f396d76451fa46a5dd4639beeb25e9116204cbd12ce8bd33957e3922caefe1adb4135dedb9437736",
            "file": "src/app/service/http-interceptor.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "_next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "_next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpErrorResponse, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { catchError, Observable, tap, throwError } from 'rxjs';\nimport { StatusCodes } from 'http-status-codes';\nimport { ErrorCode, ErrorMessage } from '../model/error-message';\nimport { Router } from '@angular/router';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class HttpInterceptorService {\n\tconstructor(private router: Router) {}\n\n\tintercept(request: HttpRequest<any>, _next: HttpHandler): Observable<HttpEvent<any>> {\n\t\treturn _next.handle(request).pipe(\n\t\t\ttap({\n\t\t\t\terror: res => {\n\t\t\t\t\tswitch (res.status) {\n\t\t\t\t\t\tcase StatusCodes.UNAUTHORIZED: {\n\t\t\t\t\t\t\tlet errorMessage = res.error as ErrorMessage;\n\t\t\t\t\t\t\tif (errorMessage.errorCode == ErrorCode.USER_TRIAL_EXPIRED) {\n\t\t\t\t\t\t\t\tthis.router.navigate(['/trial-status']).then(value => {});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//Unknown error\n\t\t\t\t\t\tcase 0: {\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}),\n\t\t\tcatchError((error: HttpErrorResponse) => {\n\t\t\t\treturn throwError(error);\n\t\t\t})\n\t\t);\n\t}\n}\n\nexport const HttpInterceptorProvider = {\n\tprovide: HTTP_INTERCEPTORS,\n\tuseClass: HttpInterceptorService,\n\tmulti: true,\n\tdeps: [Router],\n};\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "InstanceRunService",
            "id": "injectable-InstanceRunService-a68694bb18602175fca0f51b183ae15ebbf11e092deb2103c8a4b41024780bdd189c7c70d70b83413bd809cdf8ba8048d0965981dd020a9f2a14a26da31e5fa2",
            "file": "src/app/layout/common-layout/service/instance-run.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "count",
                    "args": [
                        {
                            "name": "instanceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "instanceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emptyPage",
                    "args": [],
                    "optional": false,
                    "returnType": "{ hasMore: boolean; data: {}; }",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "instanceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<InstanceRun>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "instanceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<InstanceRun>>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logs",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<InstanceRunState>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { map, Observable, of, switchMap } from 'rxjs';\nimport { UUID } from 'angular2-uuid';\nimport { SeekPage } from './seek-page';\nimport { InstanceRun, InstanceRunState } from '../model/instance-run.interface';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class InstanceRunService {\n\tconstructor(private http: HttpClient) {}\n\n\tget(instanceId: UUID): Observable<InstanceRun> {\n\t\treturn this.http.get<InstanceRun>(environment.apiUrl + '/instance-runs/' + instanceId).pipe(\n\t\t\tswitchMap(instanceRun => {\n\t\t\t\tif (instanceRun.stateUrl != undefined) {\n\t\t\t\t\treturn this.logs(instanceRun.stateUrl).pipe(\n\t\t\t\t\t\tmap(st => {\n\t\t\t\t\t\t\tinstanceRun.state = st;\n\t\t\t\t\t\t\treturn instanceRun;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn of(instanceRun);\n\t\t\t})\n\t\t);\n\t}\n\n\tlist(environmentId: UUID, params: any): Observable<SeekPage<InstanceRun>> {\n\t\treturn this.http.get<SeekPage<InstanceRun>>(\n\t\t\tenvironment.apiUrl + '/environments/' + environmentId + '/instance-runs',\n\t\t\t{ params: params }\n\t\t);\n\t}\n\n\tprivate logs(url: string): Observable<InstanceRunState> {\n\t\treturn this.http.get<InstanceRunState>(url);\n\t}\n\n\tcount(instanceId: UUID): Observable<number> {\n\t\treturn this.http.get<number>(environment.apiUrl + '/instances/' + instanceId + '/instance-runs/count');\n\t}\n\n\temptyPage() {\n\t\treturn {\n\t\t\thasMore: false,\n\t\t\tdata: [],\n\t\t};\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "InstanceService",
            "id": "injectable-InstanceService-255b590b963fc46081c27eaa400d9b21a3c92870a4a7063ea637be05aae99122bf01b38827d6846975f774fb078fa7726848df42cbd6928185a29c6e72daca2d",
            "file": "src/app/layout/common-layout/service/instance.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "countByAccountId",
                    "args": [
                        {
                            "name": "accountId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<number>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "accountId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Instance>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "instanceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "instanceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "instanceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Instance>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "instanceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<Instance>>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { UUID } from 'angular2-uuid';\nimport { SeekPage } from './seek-page';\nimport { Instance } from '../model/instance.interface';\nimport { InstanceStatus } from '../model/enum/instance-status';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class InstanceService {\n\tconstructor(private http: HttpClient) {}\n\n\tcreate(request: {\n\t\tstatus: InstanceStatus;\n\t\taccountId: UUID;\n\t\tcollectionVersionId: UUID;\n\t\tconfigs: any;\n\t}): Observable<Instance> {\n\t\treturn this.http.post<Instance>(environment.apiUrl + '/instances', request);\n\t}\n\n\tget(instanceId: UUID): Observable<Instance> {\n\t\treturn this.http.get<Instance>(environment.apiUrl + '/instances/' + instanceId);\n\t}\n\n\tlist(environmentId: UUID, params: any): Observable<SeekPage<Instance>> {\n\t\treturn this.http.get<SeekPage<Instance>>(environment.apiUrl + '/environments/' + environmentId + '/instances', {\n\t\t\tparams: params,\n\t\t});\n\t}\n\n\tdelete(instanceId: UUID): Observable<void> {\n\t\treturn this.http.delete<void>(environment.apiUrl + '/instances/' + instanceId);\n\t}\n\n\tcountByAccountId(accountId: UUID): Observable<number> {\n\t\treturn this.http.get<number>(environment.apiUrl + '/accounts/' + accountId + '/instances/count');\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "IterationDetailsService",
            "id": "injectable-IterationDetailsService-28316c9d1fb9523481910d2abb9cb0c8569f0bde9f0b7d558dc12c86bfa1b695e6a08e2a0e683a9badb5acac942470e906d2e24b368e199a2c5df7d4a0f32eac",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/run-details/iteration-details.service.ts",
            "properties": [
                {
                    "name": "currentStepResult$",
                    "defaultValue": "new BehaviorSubject<StepResult | undefined>(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<StepResult | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { StepResult } from 'src/app/layout/common-layout/model/instance-run.interface';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class IterationDetailsService {\r\n\tcurrentStepResult$: BehaviorSubject<StepResult | undefined> = new BehaviorSubject<StepResult | undefined>(undefined);\r\n\tconstructor() {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "type": "injectable"
        },
        {
            "name": "NavigationService",
            "id": "injectable-NavigationService-40da9ff998655075c28a944d05fca2fdf3da6bd1946fdf7266b5dc838a4e51e14b5a53886dda393969d7deb09af0ff7cbdb9998e3030c14537a3c11541e42c9a",
            "file": "src/app/layout/dashboard-layout/service/navigation.service.ts",
            "properties": [
                {
                    "name": "isInBuilder",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "lastPageTitle",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "loading",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedMenuIndex",
                    "defaultValue": "new BehaviorSubject(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectedRouteIndex",
                    "defaultValue": "new BehaviorSubject(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "sidebarRoutes",
                    "defaultValue": "[\n\t\t{\n\t\t\tid: 'flows',\n\t\t\ticon: '/assets/img/custom/sidebar/pieces.svg',\n\t\t\tdisabledIcon: '/assets/img/custom/sidebar/disabled/disabled-flows.svg',\n\t\t\ttext: 'Flows',\n\t\t\tlink: '/flows',\n\t\t\tsubmenu: false,\n\t\t\tcolor: '#af6cd9',\n\t\t\tsubmenuItems: [],\n\t\t\thover: false,\n\t\t},\n\t\t{\n\t\t\tid: 'accounts',\n\t\t\ticon: '/assets/img/custom/sidebar/accounts.svg',\n\t\t\tdisabledIcon: '/assets/img/custom/sidebar/disabled/disabled-accounts.svg',\n\t\t\ttext: 'Accounts',\n\t\t\tsubmenu: true,\n\t\t\tcolor: '#6385dc',\n\t\t\tsubmenuItems: [\n\t\t\t\t{ id: 'accounts', text: 'All Accounts', link: '/accounts' },\n\t\t\t\t{ id: 'accounts', text: 'Instances', link: '/instances' },\n\t\t\t\t{ id: 'accounts', text: 'Runs', link: '/runs' },\n\t\t\t],\n\t\t\thover: false,\n\t\t},\n\t\t{\n\t\t\tid: 'settings',\n\t\t\ticon: '/assets/img/custom/sidebar/settings.svg',\n\t\t\tdisabledIcon: '/assets/img/custom/sidebar/disabled/disabled-settings.svg',\n\t\t\ttext: 'Settings',\n\t\t\tsubmenu: true,\n\t\t\tcolor: '#5fd2b0',\n\t\t\tsubmenuItems: [\n\t\t\t\t{\n\t\t\t\t\tid: 'authentication',\n\t\t\t\t\ttext: 'Authentication',\n\t\t\t\t\tlink: '/authentication',\n\t\t\t\t},\n\t\t\t\t{ id: 'settings', text: 'Environments', link: '/environments' },\n\t\t\t\t{ id: 'settings', text: 'Events', link: '/events' },\n\t\t\t\t{ id: 'settings', text: 'API Keys', link: '/api-keys' },\n\t\t\t],\n\t\t\thover: false,\n\t\t},\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "submenuState",
                    "defaultValue": "new BehaviorSubject(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<any>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getSelectedMenuIndex",
                    "args": [],
                    "optional": false,
                    "returnType": "BehaviorSubject<any>",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getSelectedRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "BehaviorSubject<any>",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getSubmenuState",
                    "args": [],
                    "optional": false,
                    "returnType": "BehaviorSubject<any>",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "navigatingToBuilder",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigationInterceptor",
                    "args": [
                        {
                            "name": "event",
                            "type": "RouterEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "RouterEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelectedMenuIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelectedRoute",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSubmenuState",
                    "args": [
                        {
                            "name": "open",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "open",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setTitle",
                    "args": [
                        {
                            "name": "pageTitle",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "pageTitle",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { BehaviorSubject, filter } from 'rxjs';\nimport {\n\tNavigationCancel,\n\tNavigationEnd,\n\tNavigationError,\n\tNavigationStart,\n\tRouter,\n\tRouterEvent,\n} from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class NavigationService {\n\tisInBuilder = false;\n\tlastPageTitle = '';\n\tprivate selectedMenuIndex: BehaviorSubject<any> = new BehaviorSubject(0);\n\tprivate selectedRouteIndex: BehaviorSubject<any> = new BehaviorSubject(undefined);\n\tprivate submenuState: BehaviorSubject<any> = new BehaviorSubject(false);\n\tpublic loading: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\tpublic sidebarRoutes = [\n\t\t{\n\t\t\tid: 'flows',\n\t\t\ticon: '/assets/img/custom/sidebar/pieces.svg',\n\t\t\tdisabledIcon: '/assets/img/custom/sidebar/disabled/disabled-flows.svg',\n\t\t\ttext: 'Flows',\n\t\t\tlink: '/flows',\n\t\t\tsubmenu: false,\n\t\t\tcolor: '#af6cd9',\n\t\t\tsubmenuItems: [],\n\t\t\thover: false,\n\t\t},\n\t\t{\n\t\t\tid: 'accounts',\n\t\t\ticon: '/assets/img/custom/sidebar/accounts.svg',\n\t\t\tdisabledIcon: '/assets/img/custom/sidebar/disabled/disabled-accounts.svg',\n\t\t\ttext: 'Accounts',\n\t\t\tsubmenu: true,\n\t\t\tcolor: '#6385dc',\n\t\t\tsubmenuItems: [\n\t\t\t\t{ id: 'accounts', text: 'All Accounts', link: '/accounts' },\n\t\t\t\t{ id: 'accounts', text: 'Instances', link: '/instances' },\n\t\t\t\t{ id: 'accounts', text: 'Runs', link: '/runs' },\n\t\t\t],\n\t\t\thover: false,\n\t\t},\n\t\t{\n\t\t\tid: 'settings',\n\t\t\ticon: '/assets/img/custom/sidebar/settings.svg',\n\t\t\tdisabledIcon: '/assets/img/custom/sidebar/disabled/disabled-settings.svg',\n\t\t\ttext: 'Settings',\n\t\t\tsubmenu: true,\n\t\t\tcolor: '#5fd2b0',\n\t\t\tsubmenuItems: [\n\t\t\t\t{\n\t\t\t\t\tid: 'authentication',\n\t\t\t\t\ttext: 'Authentication',\n\t\t\t\t\tlink: '/authentication',\n\t\t\t\t},\n\t\t\t\t{ id: 'settings', text: 'Environments', link: '/environments' },\n\t\t\t\t{ id: 'settings', text: 'Events', link: '/events' },\n\t\t\t\t{ id: 'settings', text: 'API Keys', link: '/api-keys' },\n\t\t\t],\n\t\t\thover: false,\n\t\t},\n\t];\n\n\tconstructor(private router: Router, private titleService: Title) {\n\t\tthis.router.events.pipe(filter(event => event instanceof RouterEvent)).subscribe((event: any) => {\n\t\t\tthis.navigationInterceptor(event);\n\t\t});\n\t}\n\n\tpublic navigatingToBuilder(url: string) {\n\t\treturn url.indexOf('/flows/') != -1;\n\t}\n\tpublic setTitle(pageTitle: string) {\n\t\tif (pageTitle != 'Loading') {\n\t\t\tthis.lastPageTitle = pageTitle;\n\t\t}\n\t\tthis.titleService.setTitle('AP - ' + pageTitle);\n\t}\n\tprivate navigationInterceptor(event: RouterEvent): void {\n\t\tif (event instanceof NavigationStart) {\n\t\t\tthis.setTitle('Loading');\n\t\t\tthis.loading.next(true);\n\t\t}\n\t\tif (event instanceof NavigationEnd) {\n\t\t\tthis.loading.next(false);\n\t\t}\n\t\tif (event instanceof NavigationCancel) {\n\t\t\tthis.setTitle(this.lastPageTitle);\n\t\t\tthis.loading.next(false);\n\t\t}\n\t\tif (event instanceof NavigationError) {\n\t\t\tthis.setTitle(this.lastPageTitle);\n\t\t\tthis.loading.next(false);\n\t\t}\n\t}\n\n\tpublic setSubmenuState(open: boolean) {\n\t\tthis.submenuState.next(open);\n\t}\n\n\tpublic getSubmenuState() {\n\t\treturn this.submenuState;\n\t}\n\n\tpublic setSelectedRoute(request: { menu: number; submenu: number | undefined } | undefined) {\n\t\tthis.selectedRouteIndex.next(request);\n\t}\n\n\tpublic getSelectedRoute() {\n\t\treturn this.selectedRouteIndex;\n\t}\n\n\tpublic setSelectedMenuIndex(index: number | undefined) {\n\t\tthis.selectedMenuIndex.next(index);\n\t}\n\n\tpublic getSelectedMenuIndex() {\n\t\treturn this.selectedMenuIndex;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 68,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "Oauth2Service",
            "id": "injectable-Oauth2Service-54bafd1ec6af70b2c4fab7f5a507f486193724d76c8e6d7bb3b21224d1056870065c1aa721ad665be11f45b973555395e774e21b63e90dfac138828644c860fb",
            "file": "src/app/layout/common-layout/service/oauth2.service.ts",
            "properties": [
                {
                    "name": "currentlyOpenPopUp",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Window | null",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "claimWithSecret",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openPopup",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { OAuth2Response } from '../model/fields/variable/subfields/oauth2-response.interface';\nimport { UUID } from 'angular2-uuid';\nimport { map, Observable, switchMap } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class Oauth2Service {\n\tprivate currentlyOpenPopUp: Window | null = null;\n\n\tconstructor(private httpClient: HttpClient) {}\n\n\tpublic claimWithSecret(request: { code: string; clientId: string; tokenUrl: string; clientSecret: string }) {\n\t\treturn this.httpClient.post<OAuth2Response>(environment.apiUrl + '/oauth2/claim-with-secret', request);\n\t}\n\n\tpublic openPopup(request: {\n\t\tauthUrl: string;\n\t\tclientId: string;\n\t\tclientSecret: string;\n\t\tscope: string;\n\t\ttokenUrl: string;\n\t\tresponseType: string;\n\t}): Observable<any> {\n\t\tthis.currentlyOpenPopUp?.close();\n\t\tconst winTarget = '_blank';\n\t\tconst winFeatures =\n\t\t\t'resizable=no, toolbar=no,left=100, top=100, scrollbars=no, menubar=no, status=no, directories=no, location=no, width=600, height=800';\n\t\tconst redirect_uri = environment.redirectUrl;\n\t\tconst url =\n\t\t\trequest.authUrl +\n\t\t\t'?response_type=' +\n\t\t\trequest.responseType +\n\t\t\t'&client_id=' +\n\t\t\trequest.clientId +\n\t\t\t'&redirect_uri=' +\n\t\t\tredirect_uri +\n\t\t\t'&access_type=offline' +\n\t\t\t'&state=' +\n\t\t\tUUID.UUID() +\n\t\t\t'&prompt=consent' +\n\t\t\t'&scope=' +\n\t\t\trequest.scope;\n\t\tconst popup = window.open(url, winTarget, winFeatures);\n\t\tthis.currentlyOpenPopUp = popup;\n\t\tconst codeObs$ = new Observable<any>(observer => {\n\t\t\twindow.addEventListener('message', function (event) {\n\t\t\t\tif (environment.redirectUrl.startsWith(event.origin)) {\n\t\t\t\t\tif (event.data != undefined) {\n\t\t\t\t\t\tevent.data.code = decodeURIComponent(event.data.code);\n\t\t\t\t\t\tobserver.next(event.data);\n\t\t\t\t\t\tpopup?.close();\n\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobserver.error('No code returned');\n\t\t\t\t\t\tpopup?.close();\n\t\t\t\t\t\tobserver.complete();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn codeObs$.pipe(\n\t\t\tswitchMap(params => {\n\t\t\t\tif (params != undefined && params.code != undefined) {\n\t\t\t\t\treturn this.claimWithSecret({\n\t\t\t\t\t\tcode: decodeURIComponent(params.code),\n\t\t\t\t\t\tclientId: request.clientId,\n\t\t\t\t\t\tclientSecret: request.clientSecret,\n\t\t\t\t\t\ttokenUrl: request.tokenUrl,\n\t\t\t\t\t}).pipe(\n\t\t\t\t\t\tmap(value => {\n\t\t\t\t\t\t\tdelete params['code'];\n\t\t\t\t\t\t\tvalue.auth_response = params;\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`params for openPopUp is empty or the code is, params:${params}`);\n\t\t\t})\n\t\t);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OnboardingService",
            "id": "injectable-OnboardingService-954fffa576b86b931051189f5cfebfdd6b54a74047fbed9aa59c17c8d917fe119d2075f9404c043ab4bf7c9fb842e82c93958aff6c94a6e2249f1287897f4374",
            "file": "src/app/layout/common-layout/service/onboarding.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "submitOnboardingQuestions",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { OnboardingUserRoleEnum } from '../model/enum/onboarding-user-role.enum';\nimport { OnboardingUsecasesEnum } from '../model/enum/onboarding-usecases.enum';\nimport { OnboardingTechnicalLevelEnum } from '../model/enum/onboarding-technical-level.enum';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class OnboardingService {\n\tconstructor(private http: HttpClient) {}\n\n\tsubmitOnboardingQuestions(request: {\n\t\trole: OnboardingUserRoleEnum;\n\t\tusecases: OnboardingUsecasesEnum[];\n\t\ttechnicalLevel: OnboardingTechnicalLevelEnum;\n\t}): Observable<void> {\n\t\treturn this.http.post<void>(environment.apiUrl + '/onboarding-questions', request);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OrganizationsEffect",
            "id": "injectable-OrganizationsEffect-7ee2090035b79e4e754383b8e438efc98c58f1bd1cb05d6f9d39b2372539b7813a8549489c4a21afaff936822a45fa0741e8f3c392c20b6d2c47692518ccc8f6",
            "file": "src/app/layout/common-layout/store/effect/organizations.effect.ts",
            "properties": [
                {
                    "name": "clearState$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(CommonActions.clearState),\n\t\t\tmap(({}) => {\n\t\t\t\treturn OrganizationActions.clearOrganizations();\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "loadInitial$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(CommonActions.loadInitial),\n\t\t\tconcatMap(({ user }) => {\n\t\t\t\treturn this.organizationService.list().pipe(\n\t\t\t\t\tswitchMap(orgs => {\n\t\t\t\t\t\tif (orgs.length === 0) {\n\t\t\t\t\t\t\treturn this.organizationService\n\t\t\t\t\t\t\t\t.create({\n\t\t\t\t\t\t\t\t\tname: user.company,\n\t\t\t\t\t\t\t\t\tsize: OrganizationSize.UNKNOWN,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\tmap(org => {\n\t\t\t\t\t\t\t\t\t\treturn OrganizationActions.setOrganizations({ organizations: [org] });\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tOrganizationActions.setOrganizations({\n\t\t\t\t\t\t\t\torganizations: orgs,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { CommonActions } from '../action/common.action';\nimport { concatMap, map, of, switchMap } from 'rxjs';\nimport { OrganizationActions } from '../action/organizations.action';\nimport { OrganizationService } from '../../service/organization.service';\nimport { OrganizationSize } from '../../model/enum/organization-size';\n\n@Injectable()\nexport class OrganizationsEffect {\n\tconstructor(private actions$: Actions, private organizationService: OrganizationService) {}\n\n\tloadInitial$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(CommonActions.loadInitial),\n\t\t\tconcatMap(({ user }) => {\n\t\t\t\treturn this.organizationService.list().pipe(\n\t\t\t\t\tswitchMap(orgs => {\n\t\t\t\t\t\tif (orgs.length === 0) {\n\t\t\t\t\t\t\treturn this.organizationService\n\t\t\t\t\t\t\t\t.create({\n\t\t\t\t\t\t\t\t\tname: user.company,\n\t\t\t\t\t\t\t\t\tsize: OrganizationSize.UNKNOWN,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\tmap(org => {\n\t\t\t\t\t\t\t\t\t\treturn OrganizationActions.setOrganizations({ organizations: [org] });\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tOrganizationActions.setOrganizations({\n\t\t\t\t\t\t\t\torganizations: orgs,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t});\n\n\tclearState$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(CommonActions.clearState),\n\t\t\tmap(({}) => {\n\t\t\t\treturn OrganizationActions.clearOrganizations();\n\t\t\t})\n\t\t);\n\t});\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OrganizationService",
            "id": "injectable-OrganizationService-2669ff23278d2bc044f3dc006618fc8d5e32d0043abe0d9ab1b43c90e43b946d09c28ef418266782bcf4b60c6a21ed88a2d40d1d79b512c9fae3ec901d63a44a",
            "file": "src/app/layout/common-layout/service/organization.service.ts",
            "properties": [
                {
                    "name": "cachedOrg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Organization>",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "waitingForOrg",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Organization>",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "organisationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organisationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "organizationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Organization>",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organizationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Organization[]>",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "organization",
                            "type": "Organization",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Organization>",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organization",
                            "type": "Organization",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Organization } from '../model/organisation.interface';\nimport { environment } from '../../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { OrganizationSize } from '../model/enum/organization-size';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class OrganizationService {\n\tconstructor(private http: HttpClient) {}\n\n\tcachedOrg: Observable<Organization>;\n\twaitingForOrg: boolean = false;\n\n\t/*\tselectedOrganization(): Observable<Organization> {\n\t\treturn this.list().pipe(\n\t\t\tswitchMap(org => {\n\t\t\t\tif (org.length > 0) {\n\t\t\t\t\treturn of(org[0]);\n\t\t\t\t}\n\t\t\t\tif (this.cachedOrg == undefined && !this.waitingForOrg) {\n\t\t\t\t\tthis.waitingForOrg = true;\n\t\t\t\t\tthis.cachedOrg = this.create({\n\t\t\t\t\t\tname: this.authenticationService.currentUser.company,\n\t\t\t\t\t\tsize: OrganizationSize.UNKNOWN,\n\t\t\t\t\t}).pipe(map(f => f));\n\t\t\t\t}\n\t\t\t\treturn this.cachedOrg;\n\t\t\t})\n\t\t);\n\t}*/\n\n\tcreate(request: { name: string; size: OrganizationSize }): Observable<Organization> {\n\t\treturn this.http.post<Organization>(environment.apiUrl + '/organizations', request);\n\t}\n\n\tupdate(organization: Organization): Observable<Organization> {\n\t\treturn this.http.post<Organization>(environment.apiUrl + '/organizations/' + organization.id, organization);\n\t}\n\n\tget(organizationId: string): Observable<Organization> {\n\t\treturn this.http.get<Organization>(environment.apiUrl + '/organizations/' + organizationId);\n\t}\n\n\tlist(): Observable<Organization[]> {\n\t\treturn this.http.get<Organization[]>(environment.apiUrl + '/organizations');\n\t}\n\n\tdelete(organisationId: string): Observable<void> {\n\t\treturn this.http.delete<void>(environment.apiUrl + '/organizations/' + organisationId);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PieceBuilderService",
            "id": "injectable-PieceBuilderService-1f1a78ed027ccbac56f6d1cb34d3a8d1603e153780ed1cff145de91754ae751df7e7ade405eb1134b56782f37d014b794552a2830d8449bf9b825191705048a3",
            "file": "src/app/layout/flow-builder/service/piece-builder.service.ts",
            "properties": [
                {
                    "name": "lastSuccessfulSaveDate",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { FlowRendererService } from './flow-renderer.service';\nimport { Store } from '@ngrx/store';\nimport { BuilderSelectors } from '../store/selector/flow-builder.selector';\nimport { distinctUntilChanged } from 'rxjs';\nimport { FlowFactoryUtil } from './flowFactoryUtil';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class PieceBuilderService {\n\tlastSuccessfulSaveDate = '';\n\n\tconstructor(private flowRendererService: FlowRendererService, private store: Store) {\n\t\tthis.store\n\t\t\t.select(BuilderSelectors.selectCurrentFlow)\n\t\t\t.pipe(distinctUntilChanged())\n\t\t\t.subscribe(value => {\n\t\t\t\tif (value) {\n\t\t\t\t\tlet flow = FlowFactoryUtil.createRootPiece(value);\n\t\t\t\t\tthis.flowRendererService.refreshCoordinatesAndSetActivePiece(flow);\n\t\t\t\t} else {\n\t\t\t\t\tthis.flowRendererService.refreshCoordinatesAndSetActivePiece(undefined);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tget unsavedNote() {\n\t\treturn `Some changes are not saved due to disconnetion. Don't make new changes until your work is saved.\n     ${this.lastSuccessfulSaveDate}`;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "flowRendererService",
                        "type": "FlowRendererService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "flowRendererService",
                        "type": "FlowRendererService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "unsavedNote": {
                    "name": "unsavedNote",
                    "getSignature": {
                        "name": "unsavedNote",
                        "type": "",
                        "returnType": "",
                        "line": 28
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "PieceEffects",
            "id": "injectable-PieceEffects-8be6d6d8dd61e5d1311cba3504f554433127350e40a51a9ba754b9af0b5e376cf0f964e144270a8f7d95f8295ddc73149ec5b817d19125276d81f9e0e2a4d929",
            "file": "src/app/layout/flow-builder/store/effect/piece.effects.ts",
            "properties": [
                {
                    "name": "createNewVersion$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(...SingleFlowModifyingState),\n\t\t\tconcatLatestFrom(action => [this.store.select(BuilderSelectors.selectCurrentCollection)]),\n\t\t\tfilter(([action, collection]) => {\n\t\t\t\tconsole.log(collection.lastVersion.state === VersionEditState.LOCKED);\n\t\t\t\treturn collection.lastVersion.state === VersionEditState.LOCKED;\n\t\t\t}),\n\t\t\tmap(([action, collection]) => {\n\t\t\t\treturn PieceAction.updateSettings({\n\t\t\t\t\tdescription: collection.lastVersion.description,\n\t\t\t\t\tlogoFile: undefined,\n\t\t\t\t\tlogoEncodedUrl: undefined,\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "deleteConfig$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(PieceAction.deleteConfig),\n\t\t\tconcatLatestFrom(action => [\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentFlow),\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentCollection),\n\t\t\t]),\n\t\t\tconcatMap(([action, flow, collection]) => {\n\t\t\t\tif (flow && collection) {\n\t\t\t\t\tconst configToDelete = collection.lastVersion.configs[action.configIndex];\n\t\t\t\t\tconst allConfigs = [...flow.lastVersion.configs, ...collection.lastVersion.configs];\n\t\t\t\t\tconst refreshedConfig = findRefreshedConfig(allConfigs, configToDelete);\n\t\t\t\t\tif (refreshedConfig) {\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tPieceAction.deleteConfigFailed({\n\t\t\t\t\t\t\t\treferenceKey: configToDelete.key,\n\t\t\t\t\t\t\t\trefreshedKey: refreshedConfig.key,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn of(PieceAction.deleteConfigSucceeded({ configIndex: action.configIndex }));\n\t\t\t\t}\n\t\t\t\treturn EMPTY;\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 147
                },
                {
                    "name": "deleteConfigFailed$",
                    "defaultValue": "createEffect(\n\t\t() => {\n\t\t\treturn this.actions$.pipe(\n\t\t\t\tofType(PieceAction.deleteConfigFailed),\n\t\t\t\ttap(action => {\n\t\t\t\t\tthis.snackBar.open(`This variable can't be deleted because it's a refresher for ${action.refreshedKey}`, '', {\n\t\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\t\t{ dispatch: false }\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 174
                },
                {
                    "name": "loadInitial$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(BuilderActions.loadInitial),\n\t\t\tmap(({ piece }: { piece: Collection }) => {\n\t\t\t\treturn PieceAction.setInitial({\n\t\t\t\t\tcollection: piece,\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 136
                },
                {
                    "name": "publishCollection$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(PieceAction.publishCollection),\n\t\t\tswitchMap(({ environmentIds, collection }) => {\n\t\t\t\tlet publishRequests: Observable<ProjectEnvironment>[] = [];\n\t\t\t\tenvironmentIds.forEach(environmentId => {\n\t\t\t\t\tpublishRequests.push(\n\t\t\t\t\t\tthis.environmentService.publish(environmentId, { collectionVersionId: collection.lastVersion.id })\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\treturn forkJoin(publishRequests).pipe(\n\t\t\t\t\tmap(() => {\n\t\t\t\t\t\treturn PieceAction.publishCollectionSuccess({ environmentIds: environmentIds, collection: collection });\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}),\n\t\t\tcatchError(error => {\n\t\t\t\treturn of(PieceAction.publishCollectionFailed({ error: error }));\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "publishCollectionFailed$",
                    "defaultValue": "createEffect(\n\t\t() => {\n\t\t\treturn this.actions$.pipe(\n\t\t\t\tofType(PieceAction.publishCollectionFailed),\n\t\t\t\ttap(({ error }) => {\n\t\t\t\t\tthis.snackBar.open('Publish collection failed, please check your console.', '', {\n\t\t\t\t\t\tduration: 3000,\n\t\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t\tignoreElements()\n\t\t\t);\n\t\t},\n\t\t{ dispatch: false }\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "publishCollectionSucess$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(PieceAction.publishCollectionSuccess),\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentCollection)),\n\t\t\tswitchMap(([type, collection]) => {\n\t\t\t\tcollection.lastVersion.state = VersionEditState.LOCKED;\n\t\t\t\tthis.snackBar.open(\n\t\t\t\t\t`${collection.lastVersion.displayName} V${collection.versionsList.length} published successfully`\n\t\t\t\t);\n\t\t\t\treturn of(PieceAction.savedSuccess({ collection: collection }));\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "saving$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(...CollectionModifyingState),\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentCollection)),\n\t\t\tdebounceTime(autoSaveDebounceTime),\n\t\t\tconcatMap(([action, collection]) => {\n\t\t\t\tlet fileLogo = undefined;\n\t\t\t\tif (action.type === CollectionActionType.UPDATE_SETTINGS) {\n\t\t\t\t\tfileLogo = action['logoFile'];\n\t\t\t\t}\n\t\t\t\treturn this.pieceService.update(collection.id, collection.lastVersion, fileLogo).pipe(\n\t\t\t\t\ttap(() => {\n\t\t\t\t\t\tlet now = new Date();\n\t\t\t\t\t\tlet nowDate = now.toLocaleDateString('en-us', {\n\t\t\t\t\t\t\tmonth: 'long',\n\t\t\t\t\t\t\tday: 'numeric',\n\t\t\t\t\t\t\tyear: 'numeric',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlet nowTime = `${now.getHours().toString().padEnd(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\n\t\t\t\t\t\tthis.pieceBuilderService.lastSuccessfulSaveDate = `Last saved on ${nowDate} at ${nowTime}.`;\n\t\t\t\t\t}),\n\t\t\t\t\tconcatMap(piece => {\n\t\t\t\t\t\treturn of(savedSuccess({ collection: piece }));\n\t\t\t\t\t}),\n\t\t\t\t\tcatchError(error => {\n\t\t\t\t\t\tconst shownBar = this.snackBar.open(\n\t\t\t\t\t\t\t'You have unsaved changes on this page due to network disconnection.',\n\t\t\t\t\t\t\t'Refresh',\n\t\t\t\t\t\t\t{ panelClass: 'error', duration: undefined }\n\t\t\t\t\t\t);\n\t\t\t\t\t\tshownBar.afterDismissed().subscribe(() => location.reload());\n\t\t\t\t\t\treturn of(savedFailed(error));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType, concatLatestFrom } from '@ngrx/effects';\nimport { catchError, debounceTime, EMPTY, forkJoin, Observable, of, switchMap, tap } from 'rxjs';\nimport { concatMap, filter, ignoreElements, map } from 'rxjs/operators';\nimport {\n\tPieceAction,\n\tCollectionActionType,\n\tCollectionModifyingState,\n\tsavedFailed,\n\tsavedSuccess,\n} from '../action/piece.action';\nimport { CollectionService } from '../../../common-layout/service/collection.service';\nimport { Store } from '@ngrx/store';\nimport { PieceBuilderService } from '../../service/piece-builder.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BuilderSelectors } from '../selector/flow-builder.selector';\nimport { SingleFlowModifyingState } from '../action/flows.action';\nimport { BuilderActions } from '../action/builder.action';\nimport { Collection } from '../../../common-layout/model/piece.interface';\nimport { autoSaveDebounceTime } from 'src/app/layout/common-layout/utils';\nimport { findRefreshedConfig } from './helper';\nimport { VersionEditState } from 'src/app/layout/common-layout/model/enum/version-edit-state.enum';\nimport { ProjectEnvironment } from 'src/app/layout/common-layout/model/project-environment.interface';\nimport { EnvironmentService } from 'src/app/layout/common-layout/service/environment.service';\n\n@Injectable()\nexport class PieceEffects {\n\tcreateNewVersion$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(...SingleFlowModifyingState),\n\t\t\tconcatLatestFrom(action => [this.store.select(BuilderSelectors.selectCurrentCollection)]),\n\t\t\tfilter(([action, collection]) => {\n\t\t\t\tconsole.log(collection.lastVersion.state === VersionEditState.LOCKED);\n\t\t\t\treturn collection.lastVersion.state === VersionEditState.LOCKED;\n\t\t\t}),\n\t\t\tmap(([action, collection]) => {\n\t\t\t\treturn PieceAction.updateSettings({\n\t\t\t\t\tdescription: collection.lastVersion.description,\n\t\t\t\t\tlogoFile: undefined,\n\t\t\t\t\tlogoEncodedUrl: undefined,\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t});\n\n\tsaving$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(...CollectionModifyingState),\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentCollection)),\n\t\t\tdebounceTime(autoSaveDebounceTime),\n\t\t\tconcatMap(([action, collection]) => {\n\t\t\t\tlet fileLogo = undefined;\n\t\t\t\tif (action.type === CollectionActionType.UPDATE_SETTINGS) {\n\t\t\t\t\tfileLogo = action['logoFile'];\n\t\t\t\t}\n\t\t\t\treturn this.pieceService.update(collection.id, collection.lastVersion, fileLogo).pipe(\n\t\t\t\t\ttap(() => {\n\t\t\t\t\t\tlet now = new Date();\n\t\t\t\t\t\tlet nowDate = now.toLocaleDateString('en-us', {\n\t\t\t\t\t\t\tmonth: 'long',\n\t\t\t\t\t\t\tday: 'numeric',\n\t\t\t\t\t\t\tyear: 'numeric',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tlet nowTime = `${now.getHours().toString().padEnd(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\n\t\t\t\t\t\tthis.pieceBuilderService.lastSuccessfulSaveDate = `Last saved on ${nowDate} at ${nowTime}.`;\n\t\t\t\t\t}),\n\t\t\t\t\tconcatMap(piece => {\n\t\t\t\t\t\treturn of(savedSuccess({ collection: piece }));\n\t\t\t\t\t}),\n\t\t\t\t\tcatchError(error => {\n\t\t\t\t\t\tconst shownBar = this.snackBar.open(\n\t\t\t\t\t\t\t'You have unsaved changes on this page due to network disconnection.',\n\t\t\t\t\t\t\t'Refresh',\n\t\t\t\t\t\t\t{ panelClass: 'error', duration: undefined }\n\t\t\t\t\t\t);\n\t\t\t\t\t\tshownBar.afterDismissed().subscribe(() => location.reload());\n\t\t\t\t\t\treturn of(savedFailed(error));\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t});\n\n\tpublishCollection$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(PieceAction.publishCollection),\n\t\t\tswitchMap(({ environmentIds, collection }) => {\n\t\t\t\tlet publishRequests: Observable<ProjectEnvironment>[] = [];\n\t\t\t\tenvironmentIds.forEach(environmentId => {\n\t\t\t\t\tpublishRequests.push(\n\t\t\t\t\t\tthis.environmentService.publish(environmentId, { collectionVersionId: collection.lastVersion.id })\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\treturn forkJoin(publishRequests).pipe(\n\t\t\t\t\tmap(() => {\n\t\t\t\t\t\treturn PieceAction.publishCollectionSuccess({ environmentIds: environmentIds, collection: collection });\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}),\n\t\t\tcatchError(error => {\n\t\t\t\treturn of(PieceAction.publishCollectionFailed({ error: error }));\n\t\t\t})\n\t\t);\n\t});\n\n\tpublishCollectionSucess$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(PieceAction.publishCollectionSuccess),\n\t\t\tconcatLatestFrom(() => this.store.select(BuilderSelectors.selectCurrentCollection)),\n\t\t\tswitchMap(([type, collection]) => {\n\t\t\t\tcollection.lastVersion.state = VersionEditState.LOCKED;\n\t\t\t\tthis.snackBar.open(\n\t\t\t\t\t`${collection.lastVersion.displayName} V${collection.versionsList.length} published successfully`\n\t\t\t\t);\n\t\t\t\treturn of(PieceAction.savedSuccess({ collection: collection }));\n\t\t\t})\n\t\t);\n\t});\n\n\tpublishCollectionFailed$ = createEffect(\n\t\t() => {\n\t\t\treturn this.actions$.pipe(\n\t\t\t\tofType(PieceAction.publishCollectionFailed),\n\t\t\t\ttap(({ error }) => {\n\t\t\t\t\tthis.snackBar.open('Publish collection failed, please check your console.', '', {\n\t\t\t\t\t\tduration: 3000,\n\t\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t\t});\n\t\t\t\t}),\n\t\t\t\tignoreElements()\n\t\t\t);\n\t\t},\n\t\t{ dispatch: false }\n\t);\n\n\tloadInitial$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(BuilderActions.loadInitial),\n\t\t\tmap(({ piece }: { piece: Collection }) => {\n\t\t\t\treturn PieceAction.setInitial({\n\t\t\t\t\tcollection: piece,\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t});\n\n\tdeleteConfig$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(PieceAction.deleteConfig),\n\t\t\tconcatLatestFrom(action => [\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentFlow),\n\t\t\t\tthis.store.select(BuilderSelectors.selectCurrentCollection),\n\t\t\t]),\n\t\t\tconcatMap(([action, flow, collection]) => {\n\t\t\t\tif (flow && collection) {\n\t\t\t\t\tconst configToDelete = collection.lastVersion.configs[action.configIndex];\n\t\t\t\t\tconst allConfigs = [...flow.lastVersion.configs, ...collection.lastVersion.configs];\n\t\t\t\t\tconst refreshedConfig = findRefreshedConfig(allConfigs, configToDelete);\n\t\t\t\t\tif (refreshedConfig) {\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tPieceAction.deleteConfigFailed({\n\t\t\t\t\t\t\t\treferenceKey: configToDelete.key,\n\t\t\t\t\t\t\t\trefreshedKey: refreshedConfig.key,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn of(PieceAction.deleteConfigSucceeded({ configIndex: action.configIndex }));\n\t\t\t\t}\n\t\t\t\treturn EMPTY;\n\t\t\t})\n\t\t);\n\t});\n\n\tdeleteConfigFailed$ = createEffect(\n\t\t() => {\n\t\t\treturn this.actions$.pipe(\n\t\t\t\tofType(PieceAction.deleteConfigFailed),\n\t\t\t\ttap(action => {\n\t\t\t\t\tthis.snackBar.open(`This variable can't be deleted because it's a refresher for ${action.refreshedKey}`, '', {\n\t\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t\t},\n\t\t{ dispatch: false }\n\t);\n\n\tconstructor(\n\t\tprivate pieceBuilderService: PieceBuilderService,\n\t\tprivate pieceService: CollectionService,\n\t\tprivate store: Store,\n\t\tprivate actions$: Actions,\n\t\tprivate snackBar: MatSnackBar,\n\t\tprivate environmentService: EnvironmentService\n\t) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pieceBuilderService",
                        "type": "PieceBuilderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 187,
                "jsdoctags": [
                    {
                        "name": "pieceBuilderService",
                        "type": "PieceBuilderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackBar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProjectAuthenticationService",
            "id": "injectable-ProjectAuthenticationService-5e6568461b0f1f1b59604ce62464df7fcfa7cb639952b174a6eb4b480d393712a7d35d8c2835488d2c0bfadc0f65428c802b691be1216abfadbec3af94b62a1f",
            "file": "src/app/layout/dashboard-layout/service/project-authentications.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "generateSigningKey",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAuthentications",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateFirebaseProjectId",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UUID } from 'angular2-uuid';\nimport { skipWhile, switchMap, take } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { AuthenticationType } from '../../common-layout/helper/authentication-type.enum';\nimport { ProjectAuthentication } from '../../common-layout/model/authentication';\nimport { Store } from '@ngrx/store';\nimport { ProjectSelectors } from '../../common-layout/store/selector/project.selector';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ProjectAuthenticationService {\n\tconstructor(private http: HttpClient, private store: Store) {}\n\n\tgetAuthentications() {\n\t\treturn this.store.select(ProjectSelectors.selectProject).pipe(\n\t\t\tskipWhile(project => project === undefined),\n\t\t\ttake(1),\n\t\t\tswitchMap(project => {\n\t\t\t\treturn this.http.get<ProjectAuthentication[]>(environment.apiUrl + `/projects/${project!.id}/authentications`);\n\t\t\t})\n\t\t);\n\t}\n\n\tupdateFirebaseProjectId(projectId: string, environmentId: UUID) {\n\t\treturn this.http.post<ProjectAuthentication>(\n\t\t\tenvironment.apiUrl + `/environments/${environmentId}/authentications`,\n\t\t\t{ type: AuthenticationType.FIREBASE, firebaseProjectId: projectId }\n\t\t);\n\t}\n\tgenerateSigningKey(environmentId: UUID) {\n\t\treturn this.http.post<ProjectAuthentication>(\n\t\t\tenvironment.apiUrl + `/environments/${environmentId}/authentications`,\n\t\t\t{ type: AuthenticationType.SIGNING_KEY }\n\t\t);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProjectsEffect",
            "id": "injectable-ProjectsEffect-1bc33358fcec92479aa736030fc6247b802fce805c1345847b0247919d1b91136a482f4225abeb9035a95e2bc706b404da0e63673680f79252d5a7ca2800fdd3",
            "file": "src/app/layout/common-layout/store/effect/projects.effect.ts",
            "properties": [
                {
                    "name": "clearState$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(CommonActions.clearState),\n\t\t\tmap(({}) => {\n\t\t\t\treturn ProjectActions.clearProjects();\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "loadInitial$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(OrganizationActions.setOrganizations),\n\t\t\tswitchMap(({ organizations }) => {\n\t\t\t\treturn this.projectService.list(organizations[0].id).pipe(\n\t\t\t\t\tswitchMap(projects => {\n\t\t\t\t\t\tif (projects.length === 0) {\n\t\t\t\t\t\t\treturn this.projectService.create(organizations[0].id, { displayName: 'My project' }).pipe(\n\t\t\t\t\t\t\t\tmap(project => {\n\t\t\t\t\t\t\t\t\treturn ProjectActions.setProjects({ projects: [project] });\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tProjectActions.setProjects({\n\t\t\t\t\t\t\t\tprojects: projects,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { map, of, switchMap } from 'rxjs';\nimport { OrganizationActions } from '../action/organizations.action';\nimport { ProjectService } from '../../service/project.service';\nimport { ProjectActions } from '../action/project.action';\nimport { CommonActions } from '../action/common.action';\n\n@Injectable()\nexport class ProjectsEffect {\n\tconstructor(private actions$: Actions, private projectService: ProjectService) {}\n\n\tloadInitial$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(OrganizationActions.setOrganizations),\n\t\t\tswitchMap(({ organizations }) => {\n\t\t\t\treturn this.projectService.list(organizations[0].id).pipe(\n\t\t\t\t\tswitchMap(projects => {\n\t\t\t\t\t\tif (projects.length === 0) {\n\t\t\t\t\t\t\treturn this.projectService.create(organizations[0].id, { displayName: 'My project' }).pipe(\n\t\t\t\t\t\t\t\tmap(project => {\n\t\t\t\t\t\t\t\t\treturn ProjectActions.setProjects({ projects: [project] });\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\tProjectActions.setProjects({\n\t\t\t\t\t\t\t\tprojects: projects,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t});\n\n\tclearState$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(CommonActions.clearState),\n\t\t\tmap(({}) => {\n\t\t\t\treturn ProjectActions.clearProjects();\n\t\t\t})\n\t\t);\n\t});\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProjectService",
            "id": "injectable-ProjectService-835b9ea1368d092b7887929cb0f748d449f62820a9f81b70520732e6901213f2aecfbb8a9e934a4bb9a6b84daf6a4a932611264f87956ddc9edd5e241afbf0c5",
            "file": "src/app/layout/common-layout/service/project.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "organisationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Project>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organisationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "request",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<void>",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Project>",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [
                        {
                            "name": "organisationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Project[]>",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "organisationId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedProjectAndTakeOne",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Project>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "project",
                            "type": "Project",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Project>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "project",
                            "type": "Project",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { Project } from '../model/project.interface';\nimport { map, Observable, skipWhile, take } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { ProjectSelectors } from '../store/selector/project.selector';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ProjectService {\n\tconstructor(private http: HttpClient, private store: Store) {}\n\n\tselectedProjectAndTakeOne(): Observable<Project> {\n\t\treturn this.store.select(ProjectSelectors.selectProject).pipe(\n\t\t\tskipWhile(project => project === undefined),\n\t\t\ttake(1),\n\t\t\tmap(project => project!)\n\t\t);\n\t}\n\tcreate(organisationId: string, request: { displayName }): Observable<Project> {\n\t\treturn this.http.post<Project>(environment.apiUrl + '/organizations/' + organisationId + '/projects', request);\n\t}\n\n\tupdate(project: Project): Observable<Project> {\n\t\treturn this.http.post<Project>(environment.apiUrl + '/projects/' + project.id, project);\n\t}\n\n\tget(projectId: string): Observable<Project> {\n\t\treturn this.http.get<Project>(environment.apiUrl + '/projects/' + projectId);\n\t}\n\n\tlist(organisationId: string): Observable<Project[]> {\n\t\treturn this.http.get<Project[]>(environment.apiUrl + '/organizations/' + organisationId + '/projects');\n\t}\n\n\tdelete(projectId: string): Observable<void> {\n\t\treturn this.http.delete<void>(environment.apiUrl + '/projects/' + projectId);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RemoteFlowCacheService",
            "id": "injectable-RemoteFlowCacheService-471be0909d1d46d3e51bb4a094e62fcf0be2bf4fac025310b558ee5163e8db2da41b202301191344d025c6021325a16012f600180acb8e1cd0a0661a131f9e19",
            "file": "src/app/layout/flow-builder/service/remote-flow-cache.service.ts",
            "properties": [
                {
                    "name": "cache",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<UUID | Observable<FlowVersion[]>>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCollectionFlowsVersions",
                    "args": [
                        {
                            "name": "collectionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "flowsVersionsIds",
                            "type": "UUID[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collectionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "flowsVersionsIds",
                            "type": "UUID[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { UUID } from 'angular2-uuid';\nimport { forkJoin, map, Observable, shareReplay } from 'rxjs';\n\nimport { FlowVersion } from '../../common-layout/model/flow-version.class';\nimport { FlowService } from '../../common-layout/service/flow.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class RemoteFlowCacheService {\n\tprivate cache: Map<UUID, Observable<FlowVersion[]>> = new Map();\n\tconstructor(private flowService: FlowService) {}\n\n\tgetCollectionFlowsVersions(collectionId: UUID, flowsVersionsIds: UUID[]) {\n\t\tconst cacheResult = this.cache.get(collectionId);\n\t\tif (cacheResult) {\n\t\t\treturn cacheResult;\n\t\t} else {\n\t\t\tconst flows$: { [key: string]: Observable<FlowVersion> } = {};\n\t\t\tflowsVersionsIds.forEach(flowVerId => {\n\t\t\t\tflows$[flowVerId.toString()] = this.flowService.getVersion(flowVerId);\n\t\t\t});\n\t\t\tconst joinedRequests = forkJoin(flows$).pipe(\n\t\t\t\tmap(res => {\n\t\t\t\t\tconst flowVersions = Object.keys(res).map(flowVerId => {\n\t\t\t\t\t\treturn res[flowVerId];\n\t\t\t\t\t});\n\t\t\t\t\treturn flowVersions;\n\t\t\t\t}),\n\t\t\t\tshareReplay(1)\n\t\t\t);\n\t\t\tthis.cache.set(collectionId, joinedRequests);\n\t\t\treturn joinedRequests;\n\t\t}\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RollbarErrorHandler",
            "id": "injectable-RollbarErrorHandler-d58376a80ba734b31234a69a9c87e8ec936a824094675f45e11eca6974fb2a6fad78be1c9496f2dec99a2d25bc63b04018bf489010f63aa1b98cd8a2c9677a32",
            "file": "src/app/rollbar.ts",
            "properties": [],
            "methods": [
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "err",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import * as Rollbar from 'rollbar'; // When using Typescript < 3.6.0.\r\n// `import Rollbar from 'rollbar';` is the required syntax for Typescript 3.6.x.\r\n// However, it will only work when setting either `allowSyntheticDefaultImports`\r\n// or `esModuleInterop` in your Typescript options.\r\n\r\nimport { Injectable, Inject, InjectionToken, ErrorHandler } from '@angular/core';\r\nimport { environment } from '../environments/environment';\r\n\r\nconst rollbarConfig = {\r\n\taccessToken: 'fff0a98a8ab24448ae2529cd340df356',\r\n\tcaptureUncaught: true,\r\n\tenvironment: environment.stageName,\r\n\tcaptureUnhandledRejections: true,\r\n\tpayload: {},\r\n};\r\n\r\nexport const RollbarService = new InjectionToken<Rollbar>('rollbar');\r\n\r\n@Injectable()\r\nexport class RollbarErrorHandler implements ErrorHandler {\r\n\tconstructor(@Inject(RollbarService) private rollbar: Rollbar) {}\r\n\r\n\thandleError(err: any): void {\r\n\t\tif (environment.stageName !== 'stg') {\r\n\t\t\tthis.rollbar.error(err.originalError || err);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function rollbarFactory() {\r\n\treturn new Rollbar(rollbarConfig);\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "rollbar",
                        "type": "Rollbar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "rollbar",
                        "type": "Rollbar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-56c8c38f3312855aeea4ac69ef269dc404f38bd92d190dfad7dcb2c98c06b4cccbd46c87709dd9dc64d9b56d0ab3b3d1a116c3d5c9664f08a54209f571de0d54",
            "file": "src/app/layout/common-layout/service/theme.service.ts",
            "properties": [
                {
                    "name": "BODY_COLOR",
                    "defaultValue": "'#4F4F4F'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "BORDER_COLOR",
                    "defaultValue": "'#C2C9D1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "DANGER_COLOR",
                    "defaultValue": "'#DC3545'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "DELAY_LOADING_DURATION",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "DIVIDERS_COLOR",
                    "defaultValue": "'#E0E4E8'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "GRAYCARD_COLOR",
                    "defaultValue": "'#FAFAFA'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ICON_COLOR",
                    "defaultValue": "'#555555'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "PRIMARY_COLOR",
                    "defaultValue": "'#6E41E2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "RESET_COLOR",
                    "defaultValue": "'#C8C8C8'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "SIDEBAR_COLOR",
                    "defaultValue": "'#FAFBFC'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "SUCCESS_COLOR",
                    "defaultValue": "'#209e34'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "WARNING_COLOR",
                    "defaultValue": "'#fb6340'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "BODY_COLOR_SVG_STYLE",
                    "args": [],
                    "optional": false,
                    "returnType": "{ fill: string; }",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ThemeService {\n\tpublic DANGER_COLOR = '#DC3545';\n\tpublic BODY_COLOR = '#4F4F4F';\n\tpublic RESET_COLOR = '#C8C8C8';\n\tpublic PRIMARY_COLOR = '#6E41E2';\n\tpublic BORDER_COLOR = '#C2C9D1';\n\tpublic DIVIDERS_COLOR = '#E0E4E8';\n\tpublic GRAYCARD_COLOR = '#FAFAFA';\n\tpublic SIDEBAR_COLOR = '#FAFBFC';\n\tpublic ICON_COLOR = '#555555';\n\tpublic WARNING_COLOR = '#fb6340';\n\tpublic SUCCESS_COLOR = '#209e34';\n\n\tBODY_COLOR_SVG_STYLE() {\n\t\treturn { fill: this.BODY_COLOR };\n\t}\n\tpublic DELAY_LOADING_DURATION = 500;\n\n\tconstructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "type": "injectable"
        },
        {
            "name": "TimeHelperService",
            "id": "injectable-TimeHelperService-fa3595e95f08b49c469340672010194cf91b8e1e40f054d89c1a85097dfb2c872ecca4e557a345a0541c9c33059fb929a345218487e967f607e1fd6834a32200",
            "file": "src/app/layout/common-layout/service/time-helper.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "countDownTimeDaysOnly",
                    "args": [
                        {
                            "name": "epochTimestamp",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "epochTimestamp",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "countDownTimeLeft",
                    "args": [
                        {
                            "name": "epochTimestamp",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "epochTimestamp",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "epochSeconds",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "epochSeconds",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDateTime",
                    "args": [
                        {
                            "name": "epochSeconds",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "epochSeconds",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDateTimeMilli",
                    "args": [
                        {
                            "name": "epochMilli",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "epochMilli",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDateTimeMills",
                    "args": [
                        {
                            "name": "epochMills",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "epochMills",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDateToString",
                    "args": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "date",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class TimeHelperService {\n\tconstructor() {}\n\n\tformatDateTimeMilli(epochMilli: number) {\n\t\tlet date = new Date(epochMilli);\n\t\treturn date.toLocaleString();\n\t}\n\n\tcountDownTimeDaysOnly(epochTimestamp: number) {\n\t\tconst now = new Date();\n\t\tconst utcSecondsSinceEpoch = now.getTime() / 1000;\n\t\tconst diff = epochTimestamp - utcSecondsSinceEpoch;\n\t\tif (diff < 0) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst days = Math.floor(diff / (24 * 60 * 60));\n\t\tconst daysString = days.toString();\n\t\treturn `${daysString}-Day` + (days > 1 ? 's' : '');\n\t}\n\n\tcountDownTimeLeft(epochTimestamp: number) {\n\t\tconst now = new Date();\n\t\tconst utcSecondsSinceEpoch = now.getTime() / 1000;\n\t\tconst diff = epochTimestamp - utcSecondsSinceEpoch;\n\t\tif (diff < 0) {\n\t\t\treturn '00 d - 00 hrs';\n\t\t}\n\t\tconst days = Math.floor(diff / (24 * 60 * 60));\n\t\tconst hours = Math.floor((diff - days * 24 * 60 * 60) / (60 * 60));\n\t\tconst daysString = days.toString().padStart(2, '0');\n\t\tconst hoursString = hours.toString().padStart(2, '0');\n\t\treturn `${daysString} d - ${hoursString} hrs `;\n\t}\n\n\tformatDateTimeMills(epochMills: number) {\n\t\tlet date = new Date(epochMills);\n\t\treturn date.toLocaleString();\n\t}\n\n\tformatDateTime(epochSeconds: number) {\n\t\tlet date = new Date(epochSeconds * 1000);\n\t\treturn date.toLocaleString();\n\t}\n\n\tformatDate(epochSeconds: number) {\n\t\tlet date = new Date(epochSeconds * 1000);\n\t\treturn date.toLocaleDateString();\n\t}\n\n\tformatDateToString(date: Date) {\n\t\tlet dateMonthAndYear = date.toLocaleDateString('en-us', {\n\t\t\tmonth: 'long',\n\t\t\tday: 'numeric',\n\t\t\tyear: 'numeric',\n\t\t});\n\t\tlet dateTime = `${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\n\t\treturn `${dateMonthAndYear} at ${dateTime}`;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "UserbackService",
            "id": "injectable-UserbackService-f981af1bb6da82ce91f7ff56a8df0a85d8cd077107c809d2371f7c66afcdc557ecd31d11a6a66a791ce50f0f6bf3d8a7ad69bb0d1979408e497ad414d5f91f68",
            "file": "src/app/layout/common-layout/service/userback.service.ts",
            "properties": [
                {
                    "name": "openUserbackSubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class UserbackService {\n\tconstructor() {}\n\topenUserbackSubject = new Subject();\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "type": "injectable"
        },
        {
            "name": "ViewModeEffects",
            "id": "injectable-ViewModeEffects-94dab3dba244c9f380b591be9e1a6102d8cb7b9583b56a932fe26ce75ad50ce340efa9c348955f280dafde759a8224eefa0071bad9b914b84e3f83e123bccdea",
            "file": "src/app/layout/flow-builder/store/effect/viewMode.effects.ts",
            "properties": [
                {
                    "name": "loadInitial$",
                    "defaultValue": "createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(BuilderActions.loadInitial),\n\t\t\tswitchMap(({ viewMode }: { viewMode: ViewModeEnum }) => {\n\t\t\t\tif (viewMode === undefined) {\n\t\t\t\t\treturn EMPTY;\n\t\t\t\t}\n\t\t\t\treturn of(\n\t\t\t\t\tViewModeActions.setViewMode({\n\t\t\t\t\t\tviewMode: viewMode,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\n\nimport { BuilderActions } from '../action/builder.action';\nimport { EMPTY, of, switchMap } from 'rxjs';\nimport { ViewModeEnum } from '../model/enums/view-mode.enum';\nimport { ViewModeActions } from '../action/view-mode.action';\n\n@Injectable()\nexport class ViewModeEffects {\n\tconstructor(private actions$: Actions) {}\n\n\tloadInitial$ = createEffect(() => {\n\t\treturn this.actions$.pipe(\n\t\t\tofType(BuilderActions.loadInitial),\n\t\t\tswitchMap(({ viewMode }: { viewMode: ViewModeEnum }) => {\n\t\t\t\tif (viewMode === undefined) {\n\t\t\t\t\treturn EMPTY;\n\t\t\t\t}\n\t\t\t\treturn of(\n\t\t\t\t\tViewModeActions.setViewMode({\n\t\t\t\t\t\tviewMode: viewMode,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t});\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthenticationResolver",
            "id": "injectable-AuthenticationResolver-163da1c0d6e826b072ca1e7849b99851e0b15e9fa673f70c3ae98a675bb5c33aad0c6de98585aadfd3ef9a0462a8e5b6baa0c1e256790db3aca650a4e224d4e5",
            "file": "src/app/layout/dashboard-layout/resolvers/authentication.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ProjectAuthentication[]>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ProjectAuthentication } from '../../common-layout/model/authentication';\nimport { ProjectAuthenticationService } from '../service/project-authentications.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class AuthenticationResolver implements Resolve<ProjectAuthentication[]> {\n\tconstructor(private authenticationsService: ProjectAuthenticationService) {}\n\tresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ProjectAuthentication[]> {\n\t\treturn this.authenticationsService.getAuthentications();\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authenticationsService",
                        "type": "ProjectAuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "authenticationsService",
                        "type": "ProjectAuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "BuilderSavingGuard",
            "id": "injectable-BuilderSavingGuard-545eaaf0b2dc55f665bdb2268597e514401b88ba49f9e80a713d9bc56eac3052d4c43e09f61f65bf661a685320730ea9fc5116bdd8c175f6defa0962e019279e",
            "file": "src/app/guards/builder-saving.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canDeactivate",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { map, Observable, take } from 'rxjs';\nimport { BuilderSelectors } from '../layout/flow-builder/store/selector/flow-builder.selector';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class BuilderSavingGuard implements CanDeactivate<any> {\n\tconstructor(private store: Store) {}\n\tcanDeactivate(): Observable<boolean> {\n\t\treturn this.store.select(BuilderSelectors.selectSavingChangeState).pipe(\n\t\t\tmap((saving: boolean) => {\n\t\t\t\tif (!saving) return true;\n\t\t\t\telse return confirm('You have unsaved changes on this page, are you sure you want to leave?');\n\t\t\t}),\n\t\t\ttake(1)\n\t\t);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "GetInstanceRunResolver",
            "id": "injectable-GetInstanceRunResolver-ef3c993e71500e4aa890e5b54b1f4bd4456b53cee76396b41ad719d3252740c8e78e5b00e9e7aaee787a16e1006061438fa64b8d60c9a4567a58fa31b571fe83",
            "file": "src/app/layout/flow-builder/resolvers/instance-run.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "snapshot",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "snapshot",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, of, switchMap } from 'rxjs';\nimport { Collection } from '../../common-layout/model/piece.interface';\nimport { CollectionService } from '../../common-layout/service/collection.service';\nimport { FlowService } from '../../common-layout/service/flow.service';\nimport { UUID } from 'angular2-uuid';\nimport { InstanceRunService } from '../../common-layout/service/instance-run.service';\nimport { InstanceRun } from '../../common-layout/model/instance-run.interface';\nimport { Flow } from '../../common-layout/model/flow.class';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class GetInstanceRunResolver\n\timplements Resolve<Observable<{ piece: Collection; flow: Flow; run: InstanceRun }>>\n{\n\tconstructor(\n\t\tprivate instanceRunService: InstanceRunService,\n\t\tprivate flowService: FlowService,\n\t\tprivate pieceService: CollectionService\n\t) {}\n\n\tresolve(snapshot: ActivatedRouteSnapshot): Observable<{ piece: Collection; flow: Flow; run: InstanceRun }> {\n\t\tlet runId = snapshot.paramMap.get('runId') as UUID;\n\t\treturn this.instanceRunService.get(runId).pipe(\n\t\t\tswitchMap(run => {\n\t\t\t\treturn this.flowService.getVersion(run.flowVersionId).pipe(\n\t\t\t\t\tswitchMap(flowVersion => {\n\t\t\t\t\t\treturn this.flowService.get(flowVersion.flowId).pipe(\n\t\t\t\t\t\t\tswitchMap(flow => {\n\t\t\t\t\t\t\t\treturn this.pieceService.get(flow.pieceId).pipe(\n\t\t\t\t\t\t\t\t\tswitchMap(piece => {\n\t\t\t\t\t\t\t\t\t\t// TODO(abuaboud) the builder always show last version, this is hacky way to show correct flow the run\n\t\t\t\t\t\t\t\t\t\tflow.versionsList = flow.versionsList.slice(flow.versionsList.indexOf(flowVersion.id));\n\t\t\t\t\t\t\t\t\t\tflow.lastVersion = flowVersion;\n\t\t\t\t\t\t\t\t\t\treturn of({ piece: piece, flow: flow, run: run });\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "instanceRunService",
                        "type": "InstanceRunService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "instanceRunService",
                        "type": "InstanceRunService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "GetPieceResolver",
            "id": "injectable-GetPieceResolver-dbed38a0a4627671c68e9612986688daa1f8143e81d442d4912de9e574421a836cf73865d4f84f22112b0d58fee8182f8ef5f8c40b8cc4e4faae768fbb428b14",
            "file": "src/app/layout/flow-builder/resolvers/get-piece.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "snapshot",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Collection>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "snapshot",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Collection } from '../../common-layout/model/piece.interface';\nimport { CollectionService } from '../../common-layout/service/collection.service';\nimport { UUID } from 'angular2-uuid';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class GetPieceResolver implements Resolve<Observable<Collection>> {\n\tconstructor(private pieceService: CollectionService) {}\n\n\tresolve(snapshot: ActivatedRouteSnapshot): Observable<Collection> {\n\t\tlet pieceId = snapshot.paramMap.get('id') as UUID;\n\t\treturn this.pieceService.get(pieceId);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "ListAccountsResolver",
            "id": "injectable-ListAccountsResolver-7390da50663179e11f47e4615a63c3054fe1cb2f9bcde3c21fc0740710a3212f20a8f519de4b3d11bc99edd4bc496df8297b62b7a895aa06a1b6ab62513e4f3d",
            "file": "src/app/layout/dashboard-layout/resolvers/list-accounts.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<Account>>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { first, Observable, switchMap } from 'rxjs';\nimport { SeekPage } from '../../common-layout/service/seek-page';\nimport { EnvironmentService } from '../../common-layout/service/environment.service';\nimport { Account } from '../../common-layout/model/account.interface';\nimport { AccountService } from '../../common-layout/service/account.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ListAccountsResolver implements Resolve<Observable<SeekPage<Account>>> {\n\tconstructor(private accountService: AccountService, private environmentService: EnvironmentService) {}\n\n\tresolve(route: ActivatedRouteSnapshot): Observable<SeekPage<Account>> {\n\t\treturn this.environmentService\n\t\t\t.selectedEnvironment(route.queryParamMap.get('environment'))\n\t\t\t.pipe(first())\n\t\t\t.pipe(\n\t\t\t\tswitchMap(environment => {\n\t\t\t\t\tif (environment == undefined) {\n\t\t\t\t\t\treturn new Observable<SeekPage<Account>>();\n\t\t\t\t\t}\n\t\t\t\t\treturn this.accountService.list(environment.id, 9999);\n\t\t\t\t})\n\t\t\t);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "ListFlowsResolver",
            "id": "injectable-ListFlowsResolver-af8255dcd1a9c3eaf3cd9f53ee915e83746526c2eb63b18f18163cf7bb8443b6b58be9365fc44a3af591dd4dd27af5fde24e741e9dc0945cfb7f591a8e4c85d6",
            "file": "src/app/layout/flow-builder/resolvers/list-flows.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "snapshot",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<Flow>>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "snapshot",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SeekPage } from '../../common-layout/service/seek-page';\nimport { Flow } from '../../common-layout/model/flow.class';\nimport { FlowService } from '../../common-layout/service/flow.service';\nimport { UUID } from 'angular2-uuid';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ListFlowsResolver implements Resolve<Observable<SeekPage<Flow>>> {\n\tconstructor(private flowService: FlowService) {}\n\n\tresolve(snapshot: ActivatedRouteSnapshot): Observable<SeekPage<Flow>> {\n\t\tlet pieceId = snapshot.paramMap.get('id') as UUID;\n\t\treturn this.flowService.listByPiece(pieceId, 9999);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "ListInstancesResolver",
            "id": "injectable-ListInstancesResolver-355bd3a5b6be24848387bb299937bf278cc23e24345121656b8a6297728724cd80b50c696c51ee6ebbd09fd331decafd948d9bd82b58437463b47cd33d2e3f2b",
            "file": "src/app/layout/dashboard-layout/resolvers/list-instances.resolver.ts",
            "properties": [
                {
                    "name": "cache",
                    "defaultValue": "new Map<UUID, Observable<any>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<UUID | Observable<any>>",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [
                {
                    "name": "cachedAccountName",
                    "args": [
                        {
                            "name": "accountId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "accountId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cachedFlowName",
                    "args": [
                        {
                            "name": "flowVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cachedPieceName",
                    "args": [
                        {
                            "name": "pieceVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pieceVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cachedRunsCount",
                    "args": [
                        {
                            "name": "instanceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "instanceId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "enrichItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "Instance",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Instance>",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "Instance",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadInstanceRun",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "queryParams",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<Instance>>",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "queryParams",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<Instance>>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { catchError, first, forkJoin, map, Observable, of, switchMap } from 'rxjs';\nimport { CollectionService } from '../../common-layout/service/collection.service';\nimport { SeekPage } from '../../common-layout/service/seek-page';\nimport { FlowService } from '../../common-layout/service/flow.service';\nimport { EnvironmentService } from '../../common-layout/service/environment.service';\nimport { AccountService } from '../../common-layout/service/account.service';\nimport { Instance } from '../../common-layout/model/instance.interface';\nimport { InstanceService } from '../../common-layout/service/instance.service';\nimport { UUID } from 'angular2-uuid';\nimport { InstanceRunService } from '../../common-layout/service/instance-run.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ListInstancesResolver implements Resolve<Observable<SeekPage<Instance>>> {\n\tcache: Map<UUID, Observable<any>> = new Map<UUID, Observable<any>>();\n\n\tconstructor(\n\t\tprivate instanceService: InstanceService,\n\t\tprivate accountService: AccountService,\n\t\tprivate pieceService: CollectionService,\n\t\tprivate flowService: FlowService,\n\t\tprivate instanceRunsService: InstanceRunService,\n\t\tprivate environmentService: EnvironmentService\n\t) {}\n\n\tresolve(route: ActivatedRouteSnapshot): Observable<SeekPage<Instance>> {\n\t\treturn this.environmentService\n\t\t\t.selectedEnvironment(route.queryParamMap.get('environment'))\n\t\t\t.pipe(first())\n\t\t\t.pipe(\n\t\t\t\tswitchMap(environment => {\n\t\t\t\t\tif (environment == undefined) {\n\t\t\t\t\t\treturn new Observable<SeekPage<Instance>>();\n\t\t\t\t\t}\n\t\t\t\t\tlet queryParams = { limit: 9999 };\n\t\t\t\t\tif (route.queryParamMap.has('accountName')) {\n\t\t\t\t\t\tlet accountName = route.queryParamMap.get('accountName');\n\t\t\t\t\t\tif (accountName === null) {\n\t\t\t\t\t\t\treturn of(this.accountService.emptyPage());\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this.accountService.getByNameAndEnvironment(environment.id, accountName).pipe(\n\t\t\t\t\t\t\tswitchMap(value => {\n\t\t\t\t\t\t\t\tqueryParams['accountId'] = value.id;\n\t\t\t\t\t\t\t\treturn this.loadInstanceRun(environment.id, queryParams);\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcatchError(e => {\n\t\t\t\t\t\t\t\treturn of(this.accountService.emptyPage());\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn this.loadInstanceRun(environment.id, queryParams);\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tloadInstanceRun(environmentId: UUID, queryParams): Observable<SeekPage<Instance>> {\n\t\treturn this.instanceService.list(environmentId, queryParams).pipe(\n\t\t\tswitchMap(page => {\n\t\t\t\tif (page.data.length === 0) {\n\t\t\t\t\treturn of(page);\n\t\t\t\t}\n\t\t\t\treturn forkJoin(page.data.map(item => this.enrichItem(item))).pipe(\n\t\t\t\t\tmap(items => {\n\t\t\t\t\t\tpage.data = items;\n\t\t\t\t\t\treturn page;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}\n\n\tenrichItem(item: Instance): Observable<Instance> {\n\t\treturn forkJoin(\n\t\t\tthis.cachedAccountName(item.accountId).pipe(),\n\t\t\tthis.cachedPieceName(item.pieceVersionId).pipe(),\n\t\t\tthis.cachedRunsCount(item.id).pipe()\n\t\t).pipe(\n\t\t\tmap(results => {\n\t\t\t\titem.accountDisplayName = results[0];\n\t\t\t\titem.pieceDisplayName = results[1];\n\t\t\t\titem.runs = results[2];\n\t\t\t\treturn item;\n\t\t\t})\n\t\t);\n\t}\n\n\tcachedFlowName(flowVersionId: UUID): Observable<string> {\n\t\tlet cacheName = this.cache.get(flowVersionId);\n\t\tif (cacheName === undefined) {\n\t\t\tcacheName = this.flowService.getVersion(flowVersionId).pipe(map(f => f.displayName));\n\t\t\tthis.cache.set(flowVersionId, cacheName);\n\t\t}\n\t\treturn cacheName;\n\t}\n\n\tcachedAccountName(accountId: UUID): Observable<string> {\n\t\tlet cacheName = this.cache.get(accountId);\n\t\tif (cacheName === undefined) {\n\t\t\tcacheName = this.accountService.get(accountId).pipe(map(f => f.name));\n\t\t\tthis.cache.set(accountId, cacheName);\n\t\t}\n\t\treturn cacheName;\n\t}\n\n\tcachedPieceName(pieceVersionId: UUID) {\n\t\tlet cacheName = this.cache.get(pieceVersionId);\n\t\tif (cacheName === undefined) {\n\t\t\tcacheName = this.pieceService.getVersion(pieceVersionId).pipe(map(f => f.displayName));\n\t\t\tthis.cache.set(pieceVersionId, cacheName);\n\t\t}\n\t\treturn cacheName;\n\t}\n\n\tcachedRunsCount(instanceId: UUID) {\n\t\tlet cacheName = this.cache.get(instanceId);\n\t\tif (cacheName === undefined) {\n\t\t\tcacheName = this.instanceRunsService.count(instanceId).pipe(map(f => f));\n\t\t\tthis.cache.set(instanceId, cacheName);\n\t\t}\n\t\treturn cacheName;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "instanceService",
                        "type": "InstanceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "instanceRunsService",
                        "type": "InstanceRunService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "instanceService",
                        "type": "InstanceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "instanceRunsService",
                        "type": "InstanceRunService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "ListInstancesRunResolver",
            "id": "injectable-ListInstancesRunResolver-05126cbfde5f6bd1b3c67c921962b1398769d1f28a583fb52fcc39e5cc77d8e23646893431045877d671a3c29c8eb8f0d244c352537eb0c923057876bd48bab2",
            "file": "src/app/layout/dashboard-layout/resolvers/list-instances-runs.resolver.ts",
            "properties": [
                {
                    "name": "accountNameCached",
                    "defaultValue": "new Map<UUID, Observable<string>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<UUID | Observable<string>>",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "flowNameCached",
                    "defaultValue": "new Map<UUID, Observable<string>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<UUID | Observable<string>>",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "pieceNameCached",
                    "defaultValue": "new Map<UUID, Observable<string>>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<UUID | Observable<string>>",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "loadInstanceRun",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "queryParams",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<InstanceRun>>",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "queryParams",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<SeekPage<InstanceRun>>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { catchError, first, Observable, of, switchMap } from 'rxjs';\nimport { SeekPage } from '../../common-layout/service/seek-page';\nimport { EnvironmentService } from '../../common-layout/service/environment.service';\nimport { AccountService } from '../../common-layout/service/account.service';\nimport { InstanceRun } from '../../common-layout/model/instance-run.interface';\nimport { InstanceRunService } from '../../common-layout/service/instance-run.service';\nimport { UUID } from 'angular2-uuid';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ListInstancesRunResolver implements Resolve<Observable<SeekPage<InstanceRun>>> {\n\tflowNameCached: Map<UUID, Observable<string>> = new Map<UUID, Observable<string>>();\n\taccountNameCached: Map<UUID, Observable<string>> = new Map<UUID, Observable<string>>();\n\tpieceNameCached: Map<UUID, Observable<string>> = new Map<UUID, Observable<string>>();\n\n\tconstructor(\n\t\tprivate accountService: AccountService,\n\t\tprivate instanceRunService: InstanceRunService,\n\t\tprivate environmentService: EnvironmentService\n\t) {}\n\n\tresolve(route: ActivatedRouteSnapshot): Observable<SeekPage<InstanceRun>> {\n\t\treturn this.environmentService\n\t\t\t.selectedEnvironment(route.queryParamMap.get('environment'))\n\t\t\t.pipe(first())\n\t\t\t.pipe(\n\t\t\t\tswitchMap(environment => {\n\t\t\t\t\tif (environment == undefined) {\n\t\t\t\t\t\treturn new Observable<SeekPage<InstanceRun>>();\n\t\t\t\t\t}\n\t\t\t\t\tlet queryParams: any = {};\n\t\t\t\t\tqueryParams.limit = 10;\n\t\t\t\t\tif (route.queryParamMap.has('startingAfter')) {\n\t\t\t\t\t\tqueryParams.startingAfter = route.queryParamMap.get('startingAfter');\n\t\t\t\t\t}\n\t\t\t\t\tif (route.queryParamMap.has('instanceId')) {\n\t\t\t\t\t\tqueryParams['instanceId'] = route.queryParamMap.get('instanceId');\n\t\t\t\t\t}\n\t\t\t\t\tif (route.queryParamMap.has('accountName')) {\n\t\t\t\t\t\tlet accountName = route.queryParamMap.get('accountName');\n\t\t\t\t\t\tif (accountName === null) {\n\t\t\t\t\t\t\treturn of(this.instanceRunService.emptyPage());\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn this.accountService.getByNameAndEnvironment(environment.id, accountName).pipe(\n\t\t\t\t\t\t\tswitchMap(value => {\n\t\t\t\t\t\t\t\tqueryParams['accountId'] = value.id;\n\t\t\t\t\t\t\t\treturn this.loadInstanceRun(environment.id, queryParams);\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tcatchError(e => {\n\t\t\t\t\t\t\t\tconsole.log(e);\n\t\t\t\t\t\t\t\treturn of(this.instanceRunService.emptyPage());\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn this.loadInstanceRun(environment.id, queryParams);\n\t\t\t\t})\n\t\t\t);\n\t}\n\n\tloadInstanceRun(environmentId: UUID, queryParams): Observable<SeekPage<InstanceRun>> {\n\t\treturn this.instanceRunService.list(environmentId, queryParams);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "instanceRunService",
                        "type": "InstanceRunService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "instanceRunService",
                        "type": "InstanceRunService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "ListPiecesResolver",
            "id": "injectable-ListPiecesResolver-3faee5b4c8625ee87eb1046bf7b8f272e138b00eb3b9a10008702774f6ce4fb07c0364b2bada1b4d30e7b802b92a2d95fdf6c81a12dcee2edd13af8908c90296",
            "file": "src/app/layout/dashboard-layout/resolvers/list-pieces-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<SeekPage<Collection>>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { map, Observable, switchMap } from 'rxjs';\nimport { Collection } from '../../common-layout/model/piece.interface';\nimport { CollectionService } from '../../common-layout/service/collection.service';\nimport { ProjectService } from '../../common-layout/service/project.service';\nimport { SeekPage } from '../../common-layout/service/seek-page';\nimport { FlowService } from '../../common-layout/service/flow.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class ListPiecesResolver implements Resolve<Observable<SeekPage<Collection>>> {\n\tconstructor(\n\t\tprivate flowService: FlowService,\n\t\tprivate projectService: ProjectService,\n\t\tprivate pieceService: CollectionService\n\t) {}\n\n\tresolve(): Observable<SeekPage<Collection>> {\n\t\treturn this.projectService.selectedProjectAndTakeOne().pipe(\n\t\t\tswitchMap(project => {\n\t\t\t\treturn this.pieceService.list(project.id, 9999).pipe(\n\t\t\t\t\tmap(f => {\n\t\t\t\t\t\t// f.data[i].flowCount = this.flowService.li\n\t\t\t\t\t\tfor (let i = 0; i < f.data.length; ++i) {\n\t\t\t\t\t\t\tf.data[i].flowCount = this.flowService.listByPiece(f.data[i].id, 9999).pipe(\n\t\t\t\t\t\t\t\tmap(value => {\n\t\t\t\t\t\t\t\t\treturn value.data.length;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn f;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "TrialExpiredGuard",
            "id": "injectable-TrialExpiredGuard-cfb655cf99925035a6d27ed22adc4af9821f632e021aa9fb3bd140422c5071f7eafe897d86463b54c16aea8f6fbb7bba1644fb56d7a559dcb105889363dcbe8d",
            "file": "src/app/guards/trial-expired.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../layout/common-layout/service/authentication.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class TrialExpiredGuard implements CanActivate {\n\tconstructor(private authenticationService: AuthenticationService, private router: Router) {}\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\t\tconst now = new Date().getTime() / 1000;\n\t\tif (\n\t\t\tthis.authenticationService.currentUser.epochExpirationTime &&\n\t\t\tthis.authenticationService.currentUser.epochExpirationTime < now\n\t\t) {\n\t\t\tthis.router.navigate(['/trial-status']);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "UserLoggedIn",
            "id": "injectable-UserLoggedIn-a16f61042ddf7678a087d28ffa66e289a9a2b9ce36e0aa778591ab2ff041d8a028e7336e9fd1030f0dcc50441ea3f94ac5a383e0348371ef3a66ee035f9e6add",
            "file": "src/app/guards/user-logged-in.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthenticationService } from '../layout/common-layout/service/authentication.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class UserLoggedIn implements CanActivate {\n\tconstructor(private auth: AuthenticationService, private router: Router) {}\n\n\tcanActivate(): boolean {\n\t\tif (!this.auth.isLoggedIn()) {\n\t\t\tthis.router.navigate(['/sign-in']);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "UserNotLoggedIn",
            "id": "injectable-UserNotLoggedIn-ae1129d11937eeec11e0a6406a1432c9834b58fa8d3aefe20760441b04706a40ac4466e8b2521710353250334e726233e0bfb3e6e31662d18c07397995b76ff3",
            "file": "src/app/guards/user-not-logged-in.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthenticationService } from '../layout/common-layout/service/authentication.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class UserNotLoggedIn implements CanActivate {\n\tconstructor(private auth: AuthenticationService, private router: Router) {}\n\n\tcanActivate(): boolean {\n\t\tif (this.auth.isLoggedIn()) {\n\t\t\tthis.router.navigate(['/']);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "AddButtonAndFlowItemNameContainer",
            "id": "class-AddButtonAndFlowItemNameContainer-b48443cfcf1a41417bf45a005955f29d601641fb2f1fdd0ed51aefc2a0639a3c9a8797592c3d1032599ede1bc85caf04047dcfcc6496c8f8b725212708fb2248",
            "file": "src/app/layout/common-layout/model/flow-builder/flow-add-button.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class AddButtonAndFlowItemNameContainer {\n\tconstructor(public htmlElementForButton: HTMLElement, public stepName: string) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "htmlElementForButton",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stepName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "htmlElementForButton",
                        "type": "HTMLElement",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stepName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "htmlElementForButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HTMLElement",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stepName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ArtifactCacheKey",
            "id": "class-ArtifactCacheKey-7d15f1e193cf5ab94774f07116ebcac5ac36a3293f4ad389fcdf8c921b6026dfc5880f1e71d93c2efb7a7ae9105ba4d38d06122c8074bf33ce10ded0fe606304",
            "file": "src/app/layout/flow-builder/service/artifact-cache-key.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { UUID } from 'angular2-uuid';\n\nexport class ArtifactCacheKey {\n\tprotected _prefix: ArtifactCachKeyPrefix;\n\n\tconstructor(private _value: string) {}\n\tpublic toString = () => {\n\t\treturn `${this._prefix}|${this._value}`;\n\t};\n}\n\nexport class FlowConfigsCacheKey extends ArtifactCacheKey {\n\tconstructor(flowId: UUID, configKey: string) {\n\t\tsuper(`${flowId.toString()}.${configKey}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.FLOW_CONFIG;\n\t}\n\tstatic getConfigKey(flowConfigCacheKey: string) {\n\t\tconst splitPrefixAndValue = flowConfigCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst configKey = value.split('.')[1];\n\t\treturn configKey;\n\t}\n}\nexport class CollectionConfigsCacheKey extends ArtifactCacheKey {\n\tconstructor(collectionId: UUID, configKey: string) {\n\t\tsuper(`${collectionId.toString()}.${configKey}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.COLLECTION_CONFIG;\n\t}\n\n\tstatic getConfigKey(flowConfigCacheKey: string) {\n\t\tconst splitPrefixAndValue = flowConfigCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst configKey = value.split('.')[1];\n\t\treturn configKey;\n\t}\n}\nexport class StepCacheKey extends ArtifactCacheKey {\n\tconstructor(flowId: UUID, stepName: string) {\n\t\tsuper(`${flowId.toString()}.${stepName}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.STEP;\n\t}\n\tstatic getStepName(stepCacheKey: string) {\n\t\tconst splitPrefixAndValue = stepCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst stepName = value.split('.')[1];\n\t\treturn stepName;\n\t}\n}\nenum ArtifactCachKeyPrefix {\n\tFLOW_CONFIG = 'flow.config',\n\tCOLLECTION_CONFIG = 'collection.config',\n\tSTEP = 'flow.step',\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_value",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "_value",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArtifactCachKeyPrefix",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "toString",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "BaseConfigSettings",
            "id": "class-BaseConfigSettings-fda1051283c569a7af5625657ca115b6983d328d0828644d22e60d4a366f14e4cd000d0b33f8fc3021de7a8f45eccd80237f2878646be6c621ab7e111ede7378",
            "file": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\n\nimport { DropdownType } from '../../enum/config.enum';\nimport { Oauth2UserInputType } from './subfields/oauth2-user-input.type';\nimport { DropdownItemOption } from './subfields/dropdown-item-option';\n\nexport class ConfigSettings {\n\trequired: boolean;\n}\n\nexport class BaseConfigSettings extends ConfigSettings {}\n\nexport class ShortTextSettings extends ConfigSettings {\n\tdropdown: boolean;\n\tdropdownOptions: DropdownItemOption[];\n}\nexport class DropdownSettings extends ConfigSettings {\n\tdropdownType: DropdownType;\n}\n\nexport class StaticDropdownSettings extends DropdownSettings {\n\toptions: DropdownOption[];\n}\n\nexport class DynamicDropdownSettings extends DropdownSettings {\n\trefreshReferences: string[]; //config key\n\tartifactContent?: Artifact;\n\tartifactUrl: string;\n}\n\nexport class OAuth2ConfigSettings extends ConfigSettings {\n\tauthUrl: string = '';\n\ttokenUrl: string = '';\n\trefreshUrl: string = '';\n\tclientId: string = '';\n\tscope: string = '';\n\tclientSecret: string = '';\n\tconfigParent?: {\n\t\tconfigKey: string;\n\t};\n\tuserInputType: Oauth2UserInputType = Oauth2UserInputType.LOGIN;\n\tresponseType: string = 'code';\n}\n\nexport interface DropdownOption {\n\tvalue: any;\n\tlabel: string;\n}\n",
            "properties": [
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "inheritance": {
                        "file": "ConfigSettings"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "ConfigSettings",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CodeEmbeddedControl",
            "id": "class-CodeEmbeddedControl-b58e893d8f13e88a78dd3d95caff932b9ed97f186695fd9336c89b17a0cd9848b86b878945dd68b95f433285259f27d4d7ffe8b9ed78286cc17d424497657d05",
            "file": "src/app/layout/common-layout/model/dynamic-controls/code-embedded-control-form.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Artifact } from '../../../flow-builder/model/artifact.interface';\n\nexport class CodeEmbeddedControl extends DynamicFormControl {\n\tconstructor({\n\t\tlabel,\n\t\tname,\n\t\thelpText = '',\n\t\tvalue = null,\n\t\thidden = false,\n\t\tdisabled = false,\n\t\tvalidatorFns = [],\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\thelpText?: string;\n\t\tvalidatorFns?: ValidatorFn[];\n\t\thidden?: boolean;\n\t\tdisabled?: boolean;\n\t\tvalue?: Artifact | null;\n\t}) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t\tthis.validatorFns = validatorFns;\n\t\tthis.label = label;\n\t\tthis.hidden = hidden;\n\t\tthis.disabled = disabled;\n\t\tthis.helpText = helpText;\n\t\tthis.type = ControlType.EMBEDDED_CODE_EDITOR;\n\t\t// this.value\n\t\tthis._formControl = new FormGroup(\n\t\t\t{\n\t\t\t\tcontent: new FormControl(value?.content ?? '', [Validators.required]),\n\t\t\t\tpackage: new FormControl(value?.package ?? '', [Validators.required]),\n\t\t\t},\n\t\t\t{ validators: validatorFns }\n\t\t);\n\t}\n\n\tformControl(): FormGroup {\n\t\treturn this._formControl as FormGroup;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "DynamicFormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CollectionConfigsCacheKey",
            "id": "class-CollectionConfigsCacheKey-7d15f1e193cf5ab94774f07116ebcac5ac36a3293f4ad389fcdf8c921b6026dfc5880f1e71d93c2efb7a7ae9105ba4d38d06122c8074bf33ce10ded0fe606304",
            "file": "src/app/layout/flow-builder/service/artifact-cache-key.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { UUID } from 'angular2-uuid';\n\nexport class ArtifactCacheKey {\n\tprotected _prefix: ArtifactCachKeyPrefix;\n\n\tconstructor(private _value: string) {}\n\tpublic toString = () => {\n\t\treturn `${this._prefix}|${this._value}`;\n\t};\n}\n\nexport class FlowConfigsCacheKey extends ArtifactCacheKey {\n\tconstructor(flowId: UUID, configKey: string) {\n\t\tsuper(`${flowId.toString()}.${configKey}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.FLOW_CONFIG;\n\t}\n\tstatic getConfigKey(flowConfigCacheKey: string) {\n\t\tconst splitPrefixAndValue = flowConfigCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst configKey = value.split('.')[1];\n\t\treturn configKey;\n\t}\n}\nexport class CollectionConfigsCacheKey extends ArtifactCacheKey {\n\tconstructor(collectionId: UUID, configKey: string) {\n\t\tsuper(`${collectionId.toString()}.${configKey}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.COLLECTION_CONFIG;\n\t}\n\n\tstatic getConfigKey(flowConfigCacheKey: string) {\n\t\tconst splitPrefixAndValue = flowConfigCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst configKey = value.split('.')[1];\n\t\treturn configKey;\n\t}\n}\nexport class StepCacheKey extends ArtifactCacheKey {\n\tconstructor(flowId: UUID, stepName: string) {\n\t\tsuper(`${flowId.toString()}.${stepName}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.STEP;\n\t}\n\tstatic getStepName(stepCacheKey: string) {\n\t\tconst splitPrefixAndValue = stepCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst stepName = value.split('.')[1];\n\t\treturn stepName;\n\t}\n}\nenum ArtifactCachKeyPrefix {\n\tFLOW_CONFIG = 'flow.config',\n\tCOLLECTION_CONFIG = 'collection.config',\n\tSTEP = 'flow.step',\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "collectionId",
                        "type": "UUID",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "configKey",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "collectionId",
                        "type": "UUID",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "configKey",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArtifactCachKeyPrefix",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "ArtifactCacheKey"
                    }
                },
                {
                    "name": "toString",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ArtifactCacheKey"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getConfigKey",
                    "args": [
                        {
                            "name": "flowConfigCacheKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "flowConfigCacheKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "ArtifactCacheKey",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Config",
            "id": "class-Config-eae9bba4615efa6062cc3b499fb774513c9827c77ff5ee72ccebee179f5c48d526178497b2e61e385484b45d9161f24662a36333783a3bdfdc672ec6aaad3241",
            "file": "src/app/layout/common-layout/model/fields/variable/config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { ConfigSource as ConfigSource } from '../../enum/config-source';\nimport {\n\tBaseConfigSettings,\n\tDropdownSettings,\n\tDynamicDropdownSettings,\n\tOAuth2ConfigSettings,\n\tShortTextSettings,\n} from './config-settings';\nimport { ConfigType } from '../../enum/config-type';\n\nexport class Config {\n\tkey: string;\n\ttype: ConfigType;\n\tlabel: string;\n\thintText?: string;\n\tsettings: DropdownSettings | DynamicDropdownSettings | OAuth2ConfigSettings | BaseConfigSettings | ShortTextSettings;\n\tsource: ConfigSource;\n\tvalue: any;\n\tcollectionVersionId?: UUID;\n\tflowVersionId?: UUID;\n\tplaceholder?: string;\n}\n",
            "properties": [
                {
                    "name": "collectionVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "flowVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "hintText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownSettings | DynamicDropdownSettings | OAuth2ConfigSettings | BaseConfigSettings | ShortTextSettings",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigSource",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigType",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ConfigKeyValidator",
            "id": "class-ConfigKeyValidator-6b36fb959fdc7407431302c73802b26a9227fabe70a80d94c6ee13e234898226cab31452d7f27803e2d4f7653f2fced86fabe0d4916a58eec5ed6060cf50bcaa",
            "file": "src/app/layout/flow-builder/page/flow-builder/validators/configKeyValidator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { AbstractControl } from '@angular/forms';\n\nimport { map, Observable } from 'rxjs';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\n\nexport class ConfigKeyValidator {\n\tstatic createValidator(allConfigs$: Observable<Config[]>, configToUpdateKey: string | undefined) {\n\t\treturn (control: AbstractControl) => {\n\t\t\tconst currentKey = control.value;\n\t\t\treturn allConfigs$.pipe(\n\t\t\t\tmap(configs => {\n\t\t\t\t\tconst configKeyUsed = !!configs.find(c => c.key === currentKey && configToUpdateKey !== c.key);\n\t\t\t\t\tif (configKeyUsed) {\n\t\t\t\t\t\treturn { keyUsed: true };\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t})\n\t\t\t);\n\t\t};\n\t}\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "createValidator",
                    "args": [
                        {
                            "name": "allConfigs$",
                            "type": "Observable<Config[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configToUpdateKey",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "(control: AbstractControl) => any",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "allConfigs$",
                            "type": "Observable<Config[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configToUpdateKey",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ConfigLabelValidator",
            "id": "class-ConfigLabelValidator-e3bdd27c68de4aa6b3ac8f3523fe8b2c4038460b115a4719575dabcd656a2879f6b2e7933b744509de2478b2845d132dbd5fb85e9b0c3f1ed6ac96f5eae14a13",
            "file": "src/app/layout/flow-builder/page/flow-builder/validators/configLabelValidator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { AbstractControl } from '@angular/forms';\n\nimport { map, Observable } from 'rxjs';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\n\nexport class ConfigLabelValidator {\n\tstatic createValidator(allConfigs$: Observable<Config[]>, configToUpdateLabel: string | undefined) {\n\t\treturn (control: AbstractControl) => {\n\t\t\tconst currentLabel = control.value;\n\t\t\treturn allConfigs$.pipe(\n\t\t\t\tmap(configs => {\n\t\t\t\t\tconst configLabelUsed = !!configs.find(\n\t\t\t\t\t\tc =>\n\t\t\t\t\t\t\tc.label.toLowerCase() === currentLabel.toLowerCase() &&\n\t\t\t\t\t\t\tconfigToUpdateLabel?.toLowerCase() !== c?.label.toLowerCase()\n\t\t\t\t\t);\n\t\t\t\t\tif (configLabelUsed) {\n\t\t\t\t\t\treturn { labelUsed: true };\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t})\n\t\t\t);\n\t\t};\n\t}\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "createValidator",
                    "args": [
                        {
                            "name": "allConfigs$",
                            "type": "Observable<Config[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configToUpdateLabel",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "(control: AbstractControl) => any",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "allConfigs$",
                            "type": "Observable<Config[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configToUpdateLabel",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ConfigSettings",
            "id": "class-ConfigSettings-fda1051283c569a7af5625657ca115b6983d328d0828644d22e60d4a366f14e4cd000d0b33f8fc3021de7a8f45eccd80237f2878646be6c621ab7e111ede7378",
            "file": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\n\nimport { DropdownType } from '../../enum/config.enum';\nimport { Oauth2UserInputType } from './subfields/oauth2-user-input.type';\nimport { DropdownItemOption } from './subfields/dropdown-item-option';\n\nexport class ConfigSettings {\n\trequired: boolean;\n}\n\nexport class BaseConfigSettings extends ConfigSettings {}\n\nexport class ShortTextSettings extends ConfigSettings {\n\tdropdown: boolean;\n\tdropdownOptions: DropdownItemOption[];\n}\nexport class DropdownSettings extends ConfigSettings {\n\tdropdownType: DropdownType;\n}\n\nexport class StaticDropdownSettings extends DropdownSettings {\n\toptions: DropdownOption[];\n}\n\nexport class DynamicDropdownSettings extends DropdownSettings {\n\trefreshReferences: string[]; //config key\n\tartifactContent?: Artifact;\n\tartifactUrl: string;\n}\n\nexport class OAuth2ConfigSettings extends ConfigSettings {\n\tauthUrl: string = '';\n\ttokenUrl: string = '';\n\trefreshUrl: string = '';\n\tclientId: string = '';\n\tscope: string = '';\n\tclientSecret: string = '';\n\tconfigParent?: {\n\t\tconfigKey: string;\n\t};\n\tuserInputType: Oauth2UserInputType = Oauth2UserInputType.LOGIN;\n\tresponseType: string = 'code';\n}\n\nexport interface DropdownOption {\n\tvalue: any;\n\tlabel: string;\n}\n",
            "properties": [
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CronExpressionFormControl",
            "id": "class-CronExpressionFormControl-d65b02f8766debf3cea2296f45486ed6cdef3868e39c53b43146a76e76abfa0484378af48672e4171f97b30e6c245b902512755610c29fd99790c1599aa56809",
            "file": "src/app/layout/common-layout/model/dynamic-controls/cron-expression-form-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { FormControl, ValidatorFn } from '@angular/forms';\n\nexport class CronExpressionFormControl extends DynamicFormControl {\n\tconstructor({\n\t\tlabel,\n\t\tname,\n\t\thelpText = '',\n\t\tvalue = null,\n\t\thidden = false,\n\t\tdisabled = false,\n\t\tvalidatorFns = [],\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\thelpText?: string;\n\t\tvalidatorFns?: ValidatorFn[];\n\t\thidden?: boolean;\n\t\tdisabled?: boolean;\n\t\tvalue?: string | null;\n\t}) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t\tthis.validatorFns = validatorFns;\n\t\tthis.label = label;\n\t\tthis.hidden = hidden;\n\t\tthis.disabled = disabled;\n\t\tthis.helpText = helpText;\n\t\tthis.type = ControlType.CRON_EXPRESSION;\n\t\tthis._formControl = new FormControl(this.value, { validators: validatorFns });\n\t\tif (this.disabled) {\n\t\t\tthis._formControl.disable();\n\t\t}\n\t}\n\n\tformControl(): FormControl {\n\t\treturn this._formControl as FormControl;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "DynamicFormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DictonaryItem",
            "id": "class-DictonaryItem-acb756da1dd3c7fd8c5a8974754d906fadb23896794bb59f8029d2a7dcd41c5e72abe14b73c0e0305db5a01273e097bb2067c76ada9050d49ab0bc4c0694a5bb",
            "file": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/dictionary-form/dictonary-item.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class DictonaryItem {\n\tkey: string;\n\tvalue: any;\n}\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DocumentationInfoControl",
            "id": "class-DocumentationInfoControl-a311b549cca6afaaee177508bcb775565bd32272b31c94ba9c08c4f9524e4252170a40d7e0901d81d6f9a1c2e4efe83b98a485646056f607bb6e245d7b10cb0e",
            "file": "src/app/layout/common-layout/model/dynamic-controls/documentation-info-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { FormControl, ValidatorFn } from '@angular/forms';\n\nexport class DocumentationInfoControl extends DynamicFormControl {\n\tprivate docUrl: string;\n\tprivate logoUrl: string;\n\tprivate pieceTitle: string;\n\n\tconstructor({\n\t\tlabel,\n\t\tname,\n\t\thelpText = '',\n\t\tdocUrl,\n\t\tlogoUrl,\n\t\tpieceTitle,\n\t\thidden = false,\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\tpieceTitle: string;\n\t\tlogoUrl: string;\n\t\tdocUrl: string;\n\t\thelpText?: string;\n\t\tvalidatorFns?: ValidatorFn[];\n\t\thidden?: boolean;\n\t}) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.docUrl = docUrl;\n\t\tthis.pieceTitle = pieceTitle;\n\t\tthis.label = label;\n\t\tthis.hidden = hidden;\n\t\tthis.helpText = helpText;\n\t\tthis.type = ControlType.DOCUMENTATION_LINK;\n\t\tthis.validatorFns = [];\n\t\tthis.logoUrl = logoUrl;\n\t\tthis.value = null;\n\t\tthis.disabled = true;\n\t\tthis._formControl = new FormControl(this.value, { validators: [] });\n\t\tthis._formControl.disable();\n\t}\n\n\tformControl(): FormControl {\n\t\treturn this._formControl as FormControl;\n\t}\n\n\tgetPieceTitle(): string {\n\t\treturn this.pieceTitle;\n\t}\n\n\tgetLogoUrl(): string {\n\t\treturn this.logoUrl;\n\t}\n\n\tgetDocumentationLink(): string {\n\t\treturn this.docUrl;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "docUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "logoUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "pieceTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getDocumentationLink",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLogoUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPieceTitle",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "DynamicFormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Drawer",
            "id": "class-Drawer-8fcfc12670ba642f83925fb7c9728132c03d3f3173e8e564f44faa148d2df47df7a19a7a08ab9f681772f9051ea6e7f760b8b26c110a1e551637b05552b966d0",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Drawer {\r\n\tdrawVerticalLine(dy: number) {\r\n\t\treturn `v ${dy}`;\r\n\t}\r\n\tdrawHorizontalLine(dx: number) {\r\n\t\treturn `h ${dx}`;\r\n\t}\r\n\r\n\tdrawLine(dx: number, dy: number) {\r\n\t\treturn `l ${dx} ${dy}`;\r\n\t}\r\n\r\n\tdrawArc(isLeft: boolean, isDownwards: boolean, shouldSweep: boolean) {\r\n\t\tconst sweepFlag = shouldSweep ? '0' : '1';\r\n\t\tconst xSign = isLeft ? '-' : '';\r\n\t\tconst ySign = isDownwards ? '' : '-';\r\n\t\treturn `a ${ARC_LENGTH} ${ARC_LENGTH} 0 0 ${sweepFlag} ${xSign}${ARC_LENGTH} ${ySign}${ARC_LENGTH}`;\r\n\t}\r\n\tmove(dx: number, dy: number) {\r\n\t\treturn `m ${dx} ${dy}`;\r\n\t}\r\n}\r\n\r\nexport const VERTICAL_LINE_LENGTH = 48;\r\nexport const ADD_BUTTON_SIZE = { width: 16, height: 16 };\r\nexport const ARROW_HEAD_SIZE = { width: 13, height: 7 };\r\nexport const FLOW_ITEM_WIDTH = 300;\r\nexport const HORZIONTAL_LINE_LENGTH = 95;\r\nexport const FLOW_ITEM_HEIGHT = 92;\r\nexport const ARC_LENGTH = 15;\r\nexport const EMPTY_LOOP_ADD_BUTTON_WIDTH = 40;\r\nexport const EMPTY_LOOP_ADD_BUTTON_HEIGHT = 40;\r\nexport const SVG_ELEMENT_DEFAULT_HEIGHT = 150;\r\nexport const SVG_ELEMENT_DEFAULT_WIDTH = 300;\r\nexport const LINES_WIDTH = 2;\r\nexport const SPACE_BETWEEN_ITEM_CONTENT_AND_LINE = 8;\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "drawArc",
                    "args": [
                        {
                            "name": "isLeft",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isDownwards",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "shouldSweep",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isLeft",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isDownwards",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "shouldSweep",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drawHorizontalLine",
                    "args": [
                        {
                            "name": "dx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drawLine",
                    "args": [
                        {
                            "name": "dx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dy",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dy",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drawVerticalLine",
                    "args": [
                        {
                            "name": "dy",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dy",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "move",
                    "args": [
                        {
                            "name": "dx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dy",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dy",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DropdownFormControl",
            "id": "class-DropdownFormControl-889583fb181d3de50e77c05150803ac8d8f5bf03a40eda00d36c3f4ba208c18a35bfbd17b9fc46c7ddbe9209da0f4556d6f37e0ac3ae8dbf1222e3a8050c5623",
            "file": "src/app/layout/common-layout/model/dynamic-controls/dropdown-form-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { FormControl, ValidatorFn, Validators } from '@angular/forms';\nimport { DropdownItemOption } from '../fields/variable/subfields/dropdown-item-option';\nimport { UUID } from 'angular2-uuid';\nimport { Subject } from 'rxjs';\n\nexport class DropdownFormControl extends DynamicFormControl {\n\tprivate dropdownOptions: DropdownItemOption[];\n\tprivate _isDynamic = false;\n\tprivate _collectionVersionId: UUID = '';\n\tprivate _flowVersionId: UUID = '';\n\tprivate _refreshReferences: string[] = [];\n\tpublic dynamicDropdownRefreshSubject: Subject<any> = new Subject();\n\tconstructor({\n\t\tlabel,\n\t\tname,\n\t\thelpText = '',\n\t\tvalidatorFns = [],\n\t\tdropdownOptions,\n\t\thidden = false,\n\t\tdisabled = false,\n\t\tvalue = null,\n\t\tisDynamic = false,\n\t\trefreshReferences = [],\n\t\tcollectionVersionId = '',\n\t\tflowVersionId = '',\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\thelpText?: string;\n\t\tvalidatorFns?: ValidatorFn[];\n\t\tdropdownOptions: DropdownItemOption[];\n\t\thidden?: boolean;\n\t\tdisabled?: boolean;\n\t\tvalue?: string | null;\n\t\tisDynamic?: boolean;\n\t\trefreshReferences?: string[];\n\t\tcollectionVersionId?: UUID;\n\t\tflowVersionId?: UUID;\n\t}) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.label = label;\n\t\tthis.disabled = disabled;\n\t\tthis.hidden = hidden;\n\t\tthis.helpText = helpText;\n\t\tthis.validatorFns = validatorFns;\n\t\tthis.dropdownOptions = dropdownOptions;\n\t\tthis.value = value;\n\t\tthis.type = ControlType.DROPDOWN;\n\t\tthis._isDynamic = isDynamic;\n\t\tthis._refreshReferences = refreshReferences;\n\t\tthis._collectionVersionId = collectionVersionId;\n\t\tthis._flowVersionId = flowVersionId;\n\t\tthis._formControl = new FormControl(value, this.validatorFns);\n\t\tif (this.disabled) {\n\t\t\tthis._formControl.disable();\n\t\t}\n\t}\n\n\tformControl(): FormControl {\n\t\treturn this._formControl as FormControl;\n\t}\n\n\tsetDropdownOptions(dropdownOptions: DropdownItemOption[]) {\n\t\tthis.dropdownOptions = dropdownOptions;\n\t}\n\n\tgetDropdownOptions() {\n\t\treturn this.dropdownOptions;\n\t}\n\tget isDynamic() {\n\t\treturn this._isDynamic;\n\t}\n\n\tget collectionVersionId() {\n\t\treturn this._collectionVersionId;\n\t}\n\tget flowVersionId() {\n\t\treturn this._flowVersionId;\n\t}\n\tget refreshReferences() {\n\t\treturn this._refreshReferences;\n\t}\n\tget isRequired() {\n\t\treturn this.validatorFns.findIndex(fn => fn == Validators.required) !== -1;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_collectionVersionId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_flowVersionId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_isDynamic",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_refreshReferences",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dropdownOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownItemOption[]",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dynamicDropdownRefreshSubject",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<any>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getDropdownOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDropdownOptions",
                    "args": [
                        {
                            "name": "dropdownOptions",
                            "type": "DropdownItemOption[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dropdownOptions",
                            "type": "DropdownItemOption[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "DynamicFormControl",
            "accessors": {
                "isDynamic": {
                    "name": "isDynamic",
                    "getSignature": {
                        "name": "isDynamic",
                        "type": "",
                        "returnType": "",
                        "line": 73
                    }
                },
                "collectionVersionId": {
                    "name": "collectionVersionId",
                    "getSignature": {
                        "name": "collectionVersionId",
                        "type": "",
                        "returnType": "",
                        "line": 77
                    }
                },
                "flowVersionId": {
                    "name": "flowVersionId",
                    "getSignature": {
                        "name": "flowVersionId",
                        "type": "",
                        "returnType": "",
                        "line": 80
                    }
                },
                "refreshReferences": {
                    "name": "refreshReferences",
                    "getSignature": {
                        "name": "refreshReferences",
                        "type": "",
                        "returnType": "",
                        "line": 83
                    }
                },
                "isRequired": {
                    "name": "isRequired",
                    "getSignature": {
                        "name": "isRequired",
                        "type": "",
                        "returnType": "",
                        "line": 86
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DropdownSettings",
            "id": "class-DropdownSettings-fda1051283c569a7af5625657ca115b6983d328d0828644d22e60d4a366f14e4cd000d0b33f8fc3021de7a8f45eccd80237f2878646be6c621ab7e111ede7378",
            "file": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\n\nimport { DropdownType } from '../../enum/config.enum';\nimport { Oauth2UserInputType } from './subfields/oauth2-user-input.type';\nimport { DropdownItemOption } from './subfields/dropdown-item-option';\n\nexport class ConfigSettings {\n\trequired: boolean;\n}\n\nexport class BaseConfigSettings extends ConfigSettings {}\n\nexport class ShortTextSettings extends ConfigSettings {\n\tdropdown: boolean;\n\tdropdownOptions: DropdownItemOption[];\n}\nexport class DropdownSettings extends ConfigSettings {\n\tdropdownType: DropdownType;\n}\n\nexport class StaticDropdownSettings extends DropdownSettings {\n\toptions: DropdownOption[];\n}\n\nexport class DynamicDropdownSettings extends DropdownSettings {\n\trefreshReferences: string[]; //config key\n\tartifactContent?: Artifact;\n\tartifactUrl: string;\n}\n\nexport class OAuth2ConfigSettings extends ConfigSettings {\n\tauthUrl: string = '';\n\ttokenUrl: string = '';\n\trefreshUrl: string = '';\n\tclientId: string = '';\n\tscope: string = '';\n\tclientSecret: string = '';\n\tconfigParent?: {\n\t\tconfigKey: string;\n\t};\n\tuserInputType: Oauth2UserInputType = Oauth2UserInputType.LOGIN;\n\tresponseType: string = 'code';\n}\n\nexport interface DropdownOption {\n\tvalue: any;\n\tlabel: string;\n}\n",
            "properties": [
                {
                    "name": "dropdownType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownType",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "inheritance": {
                        "file": "ConfigSettings"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "ConfigSettings",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DynamicDropdownResult",
            "id": "class-DynamicDropdownResult-c4134577b5563cc391fd32348270ba1ce9f94b7a01760bd2fd7b6e064def30889d6ccccbecca45ada0023d72ec34743819ed771cd2529248f4d794857cc71fbf",
            "file": "src/app/layout/common-layout/model/dynamic-controls/dynamic-dropdown-result.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DropdownOption } from './dropdown-options';\n\nexport class DynamicDropdownResult {\n\tplaceholder: string;\n\tdisabled: boolean;\n\toptions: DropdownOption[];\n\tloaded?: boolean = false;\n\tconstructor() {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "loaded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownOption[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DynamicDropdownSettings",
            "id": "class-DynamicDropdownSettings-fda1051283c569a7af5625657ca115b6983d328d0828644d22e60d4a366f14e4cd000d0b33f8fc3021de7a8f45eccd80237f2878646be6c621ab7e111ede7378",
            "file": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\n\nimport { DropdownType } from '../../enum/config.enum';\nimport { Oauth2UserInputType } from './subfields/oauth2-user-input.type';\nimport { DropdownItemOption } from './subfields/dropdown-item-option';\n\nexport class ConfigSettings {\n\trequired: boolean;\n}\n\nexport class BaseConfigSettings extends ConfigSettings {}\n\nexport class ShortTextSettings extends ConfigSettings {\n\tdropdown: boolean;\n\tdropdownOptions: DropdownItemOption[];\n}\nexport class DropdownSettings extends ConfigSettings {\n\tdropdownType: DropdownType;\n}\n\nexport class StaticDropdownSettings extends DropdownSettings {\n\toptions: DropdownOption[];\n}\n\nexport class DynamicDropdownSettings extends DropdownSettings {\n\trefreshReferences: string[]; //config key\n\tartifactContent?: Artifact;\n\tartifactUrl: string;\n}\n\nexport class OAuth2ConfigSettings extends ConfigSettings {\n\tauthUrl: string = '';\n\ttokenUrl: string = '';\n\trefreshUrl: string = '';\n\tclientId: string = '';\n\tscope: string = '';\n\tclientSecret: string = '';\n\tconfigParent?: {\n\t\tconfigKey: string;\n\t};\n\tuserInputType: Oauth2UserInputType = Oauth2UserInputType.LOGIN;\n\tresponseType: string = 'code';\n}\n\nexport interface DropdownOption {\n\tvalue: any;\n\tlabel: string;\n}\n",
            "properties": [
                {
                    "name": "artifactContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Artifact",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "artifactUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "refreshReferences",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "dropdownType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownType",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "DropdownSettings"
                    }
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "inheritance": {
                        "file": "ConfigSettings"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "DropdownSettings",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DynamicFormControl",
            "id": "class-DynamicFormControl-baf7147b11cb2b86661b669729b7d1ca79405fce845bfb4ac9b26244db3f6f7bc1485a56b460cf21252fb92302b23140619fb94cfbdef745af37d3794cba8cb7",
            "file": "src/app/layout/common-layout/model/dynamic-controls/dynamic-form-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { AbstractControl, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\nexport abstract class DynamicFormControl {\n\tprotected label: string;\n\tprotected name: string;\n\tprotected placeholder: string;\n\tprotected helpText?: string;\n\tprotected value: any;\n\tprotected hidden: boolean = false;\n\tprotected disabled: boolean = false;\n\tprotected initialValue: Observable<any>;\n\tprotected type: ControlType;\n\tprotected errorMessages: { [key: string]: string };\n\tprotected validatorFns: ValidatorFn[];\n\tprotected _formControl: AbstractControl;\n\n\tpublic abstract formControl(): FormControl | FormGroup;\n\n\tpublic getName(): string {\n\t\treturn this.name;\n\t}\n\n\tpublic getrequired(): string {\n\t\tlet suffix = '';\n\t\tif (this.validatorFns.indexOf(Validators.required) != -1) {\n\t\t\tsuffix = ' *';\n\t\t}\n\t\treturn this.label + suffix;\n\t}\n\n\tpublic getLabel(): string {\n\t\treturn this.label;\n\t}\n\n\tpublic getHelpText() {\n\t\treturn this.helpText;\n\t}\n\n\tpublic getErrorMessages() {\n\t\treturn this.errorMessages;\n\t}\n\n\tpublic isHidden() {\n\t\treturn this.hidden;\n\t}\n\n\tpublic getType() {\n\t\treturn this.type;\n\t}\n\n\tpublic isDisabled() {\n\t\treturn this.disabled;\n\t}\n\n\tsetHidden(b: boolean) {\n\t\tthis.hidden = b;\n\t}\n\n\tgetPlaceholder() {\n\t\treturn this.placeholder;\n\t}\n}\n",
            "properties": [
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl | FormGroup",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123,
                        126
                    ]
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Flow",
            "id": "class-Flow-229ef454ca16d3ca63d4b49a19ab5cf2ce409f63ac656db61b8f7de5c7ae78e892cdbb6416f350ce18076635911b264b03882674befb096401d41a3c68665b39",
            "file": "src/app/layout/common-layout/model/flow.class.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { FlowVersion } from './flow-version.class';\nimport { UUID } from 'angular2-uuid';\n\nexport class Flow {\n\tid: UUID;\n\tpieceId: string;\n\tepochCreationTime?: number;\n\tepochUpdateTime?: number;\n\tlastVersion: FlowVersion;\n\tversionsList: UUID[];\n}\n",
            "properties": [
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "lastVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowVersion",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "pieceId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "versionsList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FlowConfigsCacheKey",
            "id": "class-FlowConfigsCacheKey-7d15f1e193cf5ab94774f07116ebcac5ac36a3293f4ad389fcdf8c921b6026dfc5880f1e71d93c2efb7a7ae9105ba4d38d06122c8074bf33ce10ded0fe606304",
            "file": "src/app/layout/flow-builder/service/artifact-cache-key.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { UUID } from 'angular2-uuid';\n\nexport class ArtifactCacheKey {\n\tprotected _prefix: ArtifactCachKeyPrefix;\n\n\tconstructor(private _value: string) {}\n\tpublic toString = () => {\n\t\treturn `${this._prefix}|${this._value}`;\n\t};\n}\n\nexport class FlowConfigsCacheKey extends ArtifactCacheKey {\n\tconstructor(flowId: UUID, configKey: string) {\n\t\tsuper(`${flowId.toString()}.${configKey}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.FLOW_CONFIG;\n\t}\n\tstatic getConfigKey(flowConfigCacheKey: string) {\n\t\tconst splitPrefixAndValue = flowConfigCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst configKey = value.split('.')[1];\n\t\treturn configKey;\n\t}\n}\nexport class CollectionConfigsCacheKey extends ArtifactCacheKey {\n\tconstructor(collectionId: UUID, configKey: string) {\n\t\tsuper(`${collectionId.toString()}.${configKey}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.COLLECTION_CONFIG;\n\t}\n\n\tstatic getConfigKey(flowConfigCacheKey: string) {\n\t\tconst splitPrefixAndValue = flowConfigCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst configKey = value.split('.')[1];\n\t\treturn configKey;\n\t}\n}\nexport class StepCacheKey extends ArtifactCacheKey {\n\tconstructor(flowId: UUID, stepName: string) {\n\t\tsuper(`${flowId.toString()}.${stepName}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.STEP;\n\t}\n\tstatic getStepName(stepCacheKey: string) {\n\t\tconst splitPrefixAndValue = stepCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst stepName = value.split('.')[1];\n\t\treturn stepName;\n\t}\n}\nenum ArtifactCachKeyPrefix {\n\tFLOW_CONFIG = 'flow.config',\n\tCOLLECTION_CONFIG = 'collection.config',\n\tSTEP = 'flow.step',\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "flowId",
                        "type": "UUID",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "configKey",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "flowId",
                        "type": "UUID",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "configKey",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArtifactCachKeyPrefix",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "ArtifactCacheKey"
                    }
                },
                {
                    "name": "toString",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ArtifactCacheKey"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getConfigKey",
                    "args": [
                        {
                            "name": "flowConfigCacheKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "flowConfigCacheKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "ArtifactCacheKey",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FlowFactoryUtil",
            "id": "class-FlowFactoryUtil-7e8032248725237c73fcb47cd9ad50b6797aa140b8472bb6571bff8596b8ffdcf833c28245cb0559239c3e724d5eb90a091b9fe97b1a65d81f4cda53fe767ed2",
            "file": "src/app/layout/flow-builder/service/flowFactoryUtil.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { FlowItem } from '../../common-layout/model/flow-builder/flow-item';\nimport { Action } from '../../common-layout/model/flow-builder/actions/action.interface';\nimport { ActionType } from '../../common-layout/model/enum/action-type.enum';\nimport { Trigger } from '../../common-layout/model/flow-builder/trigger/trigger.interface';\nimport { Flow } from '../../common-layout/model/flow.class';\nimport { FlowStructureUtil } from './flowStructureUtil';\nimport {\n\tFLOW_ITEM_HEIGHT,\n\tFLOW_ITEM_WIDTH,\n} from '../page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils';\nimport { LoopOnItemActionInterface } from '../../common-layout/model/flow-builder/actions/loop-action.interface';\n\nexport class FlowFactoryUtil {\n\tconstructor() {}\n\n\tpublic static createRootPiece(flow: Flow): FlowItem | undefined {\n\t\tlet latestVersion = flow.lastVersion;\n\t\tif (latestVersion.trigger) {\n\t\t\tlet newFlow = FlowFactoryUtil.addCordDetails(latestVersion.trigger);\n\t\t\tFlowFactoryUtil.buildHelper(newFlow);\n\t\t\treturn newFlow;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate static createStepFromAction(content: Action | undefined): Action | undefined {\n\t\tif (content === undefined || content === null) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tlet clonedContent: Action = { ...content };\n\t\t\tswitch (clonedContent.type) {\n\t\t\t\tcase ActionType.CODE:\n\t\t\t\tcase ActionType.STORAGE:\n\t\t\t\tcase ActionType.REMOTE_FLOW:\n\t\t\t\tcase ActionType.LOOP_ON_ITEMS:\n\t\t\t\tcase ActionType.LOCAL_FLOW:\n\t\t\t\tcase ActionType.RESPONSE:\n\t\t\t\t\tlet simple = this.addCordDetails(clonedContent);\n\t\t\t\t\tFlowFactoryUtil.buildHelper(simple);\n\t\t\t\t\treturn simple as Action;\n\t\t\t\tcase ActionType.BRANCH:\n\t\t\t\t\tconsole.error('UNSUPPORTED TYPE');\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic static addCordDetails(content: FlowItem): FlowItem {\n\t\tlet cordDetails = {\n\t\t\twidth: FLOW_ITEM_WIDTH,\n\t\t\theight: FLOW_ITEM_HEIGHT,\n\t\t\txOffset: 0,\n\t\t\tyOffset: 0,\n\t\t\tboundingBox: { width: 0, height: 0 },\n\t\t};\n\t\treturn { ...content, ...cordDetails };\n\t}\n\n\tprivate static buildHelper(flowItemData: FlowItem) {\n\t\tif (!flowItemData) {\n\t\t\treturn;\n\t\t}\n\t\tif (FlowStructureUtil.isTrigger(flowItemData)) {\n\t\t\tlet trigger = flowItemData as Trigger;\n\t\t\tif (trigger.nextAction) {\n\t\t\t\tflowItemData.nextAction = FlowFactoryUtil.createStepFromAction(trigger.nextAction)!;\n\t\t\t}\n\t\t} else {\n\t\t\tlet action = flowItemData as Action;\n\t\t\tif (action.nextAction) {\n\t\t\t\tflowItemData.nextAction = FlowFactoryUtil.createStepFromAction(action.nextAction);\n\t\t\t}\n\t\t\tif (action.type === ActionType.LOOP_ON_ITEMS) {\n\t\t\t\tlet loopAction = action as LoopOnItemActionInterface;\n\t\t\t\tif (loopAction.firstLoopAction) {\n\t\t\t\t\tloopAction.firstLoopAction = FlowFactoryUtil.createStepFromAction(loopAction.firstLoopAction);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "properties": [],
            "methods": [
                {
                    "name": "addCordDetails",
                    "args": [
                        {
                            "name": "content",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FlowItem",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "content",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildHelper",
                    "args": [
                        {
                            "name": "flowItemData",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "flowItemData",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createRootPiece",
                    "args": [
                        {
                            "name": "flow",
                            "type": "Flow",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FlowItem | undefined",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "flow",
                            "type": "Flow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createStepFromAction",
                    "args": [
                        {
                            "name": "content",
                            "type": "Action | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Action | undefined",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "content",
                            "type": "Action | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FlowItemDetails",
            "id": "class-FlowItemDetails-9e086cc228ad992b0b2be1cb4368e2265b92e50b088ccb0e0e8202c9f0ced12fb48611f321befd6710ec611a83d670cf734c8552a800d2f8d8b2b9b5f88d292f",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-item/flow-item-details.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\nimport { ActionType } from '../../../../../../common-layout/model/enum/action-type.enum';\nimport { TriggerType } from '../../../../../../common-layout/model/enum/trigger-type.enum';\n\nexport class FlowItemDetails {\n\tconstructor(\n\t\tpublic type: ActionType | TriggerType,\n\t\tpublic name: string,\n\t\tpublic description: string,\n\t\tpublic logoUrl?: string,\n\t\tpublic extra?: {\n\t\t\tflowsVersionIds: UUID[];\n\t\t\tpieceVersionId: UUID;\n\t\t\tdocumentationUrl: string;\n\t\t\tclientId: string;\n\t\t\tscope: string;\n\t\t\tcollectionConfigs: Config[];\n\t\t\tflowVersiondIdToConfig: { id: UUID; configs: Config[]; displayName: string }[];\n\t\t\told: boolean;\n\t\t}\n\t) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "type",
                        "type": "ActionType | TriggerType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "logoUrl",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "extra",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "type",
                        "type": "ActionType | TriggerType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "logoUrl",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "extra",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "extra",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "logoUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionType | TriggerType",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FlowRenderUtil",
            "id": "class-FlowRenderUtil-91ef2623931233ae5051bcf86567d2e16aee9557fe954ba32a9550d01deb9cbf7452c85542df6bc9b7d157e6ae50c76b156905ad7202eef7d27e83176dcf6309",
            "file": "src/app/layout/flow-builder/service/flowRenderUtil.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { AddButtonAndFlowItemNameContainer } from '../../common-layout/model/flow-builder/flow-add-button';\nimport { Point } from '../../common-layout/model/helper/point';\nimport { FlowItem } from '../../common-layout/model/flow-builder/flow-item';\nimport {\n\tARC_LENGTH,\n\tEMPTY_LOOP_ADD_BUTTON_HEIGHT,\n\tFLOW_ITEM_HEIGHT,\n\tFLOW_ITEM_WIDTH,\n\tSPACE_BETWEEN_ITEM_CONTENT_AND_LINE,\n\tVERTICAL_LINE_LENGTH,\n} from '../page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils';\nimport { ActionType } from '../../common-layout/model/enum/action-type.enum';\nimport { LoopOnItemActionInterface } from '../../common-layout/model/flow-builder/actions/loop-action.interface';\n\nexport class FlowRenderUtil {\n\tconstructor() {}\n\n\tpublic static isButtonWithinCandidateDistance(addButton: AddButtonAndFlowItemNameContainer, dropPoint: Point) {\n\t\tif (dropPoint === null) return false;\n\t\tconst buttonRect = addButton.htmlElementForButton.getBoundingClientRect();\n\t\tlet distance = FlowRenderUtil.dist(buttonRect, dropPoint);\n\t\treturn distance <= ACCEPTED_DISTANCE_BETWEEN_DROP_POINT_AND_ADD_BUTTON;\n\t}\n\n\tpublic static dist(p1: { x: number; y: number }, p2: { x: number; y: number }) {\n\t\tlet dx = p1.x - p2.x;\n\t\tlet dy = p1.y - p2.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\n\tpublic static buildBoxes(flowItem: FlowItem | undefined): void {\n\t\tif (!flowItem) {\n\t\t\treturn;\n\t\t}\n\t\tflowItem.boundingBox = {\n\t\t\twidth: FLOW_ITEM_WIDTH,\n\t\t\theight: FLOW_ITEM_HEIGHT,\n\t\t};\n\t\tif (flowItem.type == ActionType.LOOP_ON_ITEMS) {\n\t\t\tlet loopItem = flowItem as LoopOnItemActionInterface;\n\t\t\tif (loopItem.firstLoopAction !== undefined && loopItem.firstLoopAction !== null) {\n\t\t\t\tthis.buildBoxes(loopItem.firstLoopAction);\n\t\t\t}\n\t\t\tconst subGraph = loopItem.firstLoopAction\n\t\t\t\t? loopItem.firstLoopAction.boundingBox!.height\n\t\t\t\t: EMPTY_LOOP_ADD_BUTTON_HEIGHT + VERTICAL_LINE_LENGTH;\n\t\t\tlet svgBoxHeight =\n\t\t\t\tSPACE_BETWEEN_ITEM_CONTENT_AND_LINE +\n\t\t\t\tVERTICAL_LINE_LENGTH +\n\t\t\t\tARC_LENGTH +\n\t\t\t\tARC_LENGTH +\n\t\t\t\tVERTICAL_LINE_LENGTH +\n\t\t\t\tSPACE_BETWEEN_ITEM_CONTENT_AND_LINE +\n\t\t\t\tsubGraph +\n\t\t\t\tSPACE_BETWEEN_ITEM_CONTENT_AND_LINE +\n\t\t\t\tARC_LENGTH +\n\t\t\t\tVERTICAL_LINE_LENGTH;\n\t\t\tflowItem.connectionsBox = {\n\t\t\t\twidth: FLOW_ITEM_WIDTH,\n\t\t\t\theight: svgBoxHeight,\n\t\t\t};\n\t\t} else {\n\t\t\tflowItem.connectionsBox = {\n\t\t\t\twidth: FLOW_ITEM_WIDTH,\n\t\t\t\theight: SPACE_BETWEEN_ITEM_CONTENT_AND_LINE + VERTICAL_LINE_LENGTH,\n\t\t\t};\n\t\t}\n\t\tflowItem.boundingBox.height += flowItem.connectionsBox.height;\n\t\tthis.buildBoxes(flowItem.nextAction);\n\t\tif (flowItem.nextAction !== undefined && flowItem.nextAction !== null) {\n\t\t\tflowItem.connectionsBox.height += SPACE_BETWEEN_ITEM_CONTENT_AND_LINE;\n\t\t\tflowItem.boundingBox.height += SPACE_BETWEEN_ITEM_CONTENT_AND_LINE + flowItem.nextAction?.boundingBox!.height;\n\t\t}\n\t}\n\n\tpublic static buildCoordinates(piece: FlowItem): void {\n\t\tif (!piece) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet simpleAction = piece;\n\t\tif (simpleAction.nextAction) {\n\t\t\tsimpleAction.nextAction.xOffset = 0;\n\t\t\t/*      simpleAction.nextAction.yOffset = FlowRendererService.SPACING_VERTICAL;*/\n\t\t\tthis.buildCoordinates(simpleAction.nextAction);\n\t\t}\n\t}\n}\n\n//check scss in simple-line-connection\nexport const ACCEPTED_DISTANCE_BETWEEN_DROP_POINT_AND_ADD_BUTTON = 250;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "properties": [],
            "methods": [
                {
                    "name": "buildBoxes",
                    "args": [
                        {
                            "name": "flowItem",
                            "type": "FlowItem | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "flowItem",
                            "type": "FlowItem | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildCoordinates",
                    "args": [
                        {
                            "name": "piece",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "piece",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dist",
                    "args": [
                        {
                            "name": "p1",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "p2",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "p1",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "p2",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isButtonWithinCandidateDistance",
                    "args": [
                        {
                            "name": "addButton",
                            "type": "AddButtonAndFlowItemNameContainer",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dropPoint",
                            "type": "Point",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "addButton",
                            "type": "AddButtonAndFlowItemNameContainer",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dropPoint",
                            "type": "Point",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FlowStructureUtil",
            "id": "class-FlowStructureUtil-70993907aacc93473f8879e14312b23f21b2f3b630bd8b2443a839ad1395ca7c8ec174373a58ed7e082c8eab070291f2f488f8cc5d5d15aa0a4432b65955518d",
            "file": "src/app/layout/flow-builder/service/flowStructureUtil.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { FlowItem } from '../../common-layout/model/flow-builder/flow-item';\nimport { TriggerType } from '../../common-layout/model/enum/trigger-type.enum';\nimport { ActionType } from '../../common-layout/model/enum/action-type.enum';\nimport { Action } from '../../common-layout/model/flow-builder/actions/action.interface';\nimport { Trigger } from '../../common-layout/model/flow-builder/trigger/trigger.interface';\nimport { LoopOnItemActionInterface } from '../../common-layout/model/flow-builder/actions/loop-action.interface';\n\nexport class FlowStructureUtil {\n\tconstructor() {}\n\n\tstatic isAction(piece: FlowItem): boolean {\n\t\tlet type = piece.type;\n\t\tif (type == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Object.values(ActionType).includes(type as ActionType);\n\t}\n\n\tstatic isTrigger(piece: FlowItem): boolean {\n\t\tlet type = piece.type;\n\t\tif (type == undefined) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Object.values(TriggerType).includes(type as TriggerType);\n\t}\n\n\tpublic static findParent(\n\t\tmainPiece: Action | Trigger | undefined,\n\t\ttargetStepName: string\n\t): Action | Trigger | undefined {\n\t\tif (mainPiece === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet branches = FlowStructureUtil.branches(mainPiece);\n\t\tfor (let i = 0; i < branches.length; ++i) {\n\t\t\tlet parent = this.findParent(branches[i], targetStepName);\n\t\t\tif (branches[i].name === targetStepName) {\n\t\t\t\treturn mainPiece;\n\t\t\t}\n\t\t\tif (parent !== undefined) {\n\t\t\t\treturn parent;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic static traverseAllSteps(mainPiece: Action | Trigger | undefined): FlowItem[] {\n\t\tif (mainPiece === undefined) {\n\t\t\treturn [];\n\t\t}\n\t\tlet steps: FlowItem[] = [mainPiece];\n\t\tlet branches = FlowStructureUtil.branches(mainPiece);\n\t\tfor (let i = 0; i < branches.length; ++i) {\n\t\t\tlet subSteps = this.traverseAllSteps(branches[i]);\n\t\t\tfor (let i = 0; i < subSteps.length; ++i) {\n\t\t\t\tsteps.push(subSteps[i]);\n\t\t\t}\n\t\t}\n\t\treturn steps;\n\t}\n\n\tpublic static findStep(\n\t\tmainPiece: Action | Trigger | undefined,\n\t\ttargetStepName: string\n\t): Action | Trigger | undefined {\n\t\tif (mainPiece === undefined) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (mainPiece.name === targetStepName) {\n\t\t\treturn mainPiece;\n\t\t}\n\t\tlet branches = FlowStructureUtil.branches(mainPiece);\n\t\tfor (let i = 0; i < branches.length; ++i) {\n\t\t\tlet action = this.findStep(branches[i], targetStepName);\n\t\t\tif (action !== undefined) {\n\t\t\t\treturn action;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tpublic static branches(mainPiece: Action | Trigger): Action[] {\n\t\tlet branches: Action[] = [];\n\t\tif (mainPiece.type === ActionType.BRANCH) {\n\t\t\tlet branchData = mainPiece as Action;\n\t\t\tfor (let i = 0; i < branchData.settings.branches.length; ++i) {\n\t\t\t\tlet nextAction = branchData.settings.branches[i].nextAction;\n\t\t\t\tif (nextAction) {\n\t\t\t\t\tbranches.push(nextAction);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (mainPiece.type === ActionType.LOOP_ON_ITEMS) {\n\t\t\tlet loopAction = mainPiece as LoopOnItemActionInterface;\n\t\t\tif (loopAction.firstLoopAction) {\n\t\t\t\tbranches.push(loopAction.firstLoopAction);\n\t\t\t}\n\t\t}\n\t\tlet nextAction = mainPiece.nextAction;\n\t\tif (nextAction) {\n\t\t\tbranches.push(nextAction);\n\t\t}\n\t\treturn branches;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "properties": [],
            "methods": [
                {
                    "name": "branches",
                    "args": [
                        {
                            "name": "mainPiece",
                            "type": "Action | Trigger",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Action[]",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "mainPiece",
                            "type": "Action | Trigger",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findParent",
                    "args": [
                        {
                            "name": "mainPiece",
                            "type": "Action | Trigger | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "targetStepName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Action | Trigger | undefined",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "mainPiece",
                            "type": "Action | Trigger | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "targetStepName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findStep",
                    "args": [
                        {
                            "name": "mainPiece",
                            "type": "Action | Trigger | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "targetStepName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Action | Trigger | undefined",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "mainPiece",
                            "type": "Action | Trigger | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "targetStepName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isAction",
                    "args": [
                        {
                            "name": "piece",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "piece",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isTrigger",
                    "args": [
                        {
                            "name": "piece",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "piece",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "traverseAllSteps",
                    "args": [
                        {
                            "name": "mainPiece",
                            "type": "Action | Trigger | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FlowItem[]",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "mainPiece",
                            "type": "Action | Trigger | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FlowVersion",
            "id": "class-FlowVersion-09675e0378fa67453d56de6d1c6ba8af0f970e79b3e539a3bff1c4dea594d1a9c092f0ffbc01581aa6f170c833e0c9aa5ee034534b51f88755db3420a4973f83",
            "file": "src/app/layout/common-layout/model/flow-version.class.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { VersionEditState } from './enum/version-edit-state.enum';\nimport { UUID } from 'angular2-uuid';\nimport { Trigger } from './flow-builder/trigger/trigger.interface';\nimport { Action } from './flow-builder/actions/action.interface';\nimport { ActionType } from './enum/action-type.enum';\nimport { CodeAction } from './flow-builder/actions/code-action.interface';\nimport { AddButtonType } from './enum/add-button-type';\nimport { LoopOnItemActionInterface } from './flow-builder/actions/loop-action.interface';\nimport { FlowStructureUtil } from '../../flow-builder/service/flowStructureUtil';\nimport { Config } from './fields/variable/config';\n\nexport class FlowVersion {\n\tid: UUID;\n\tflowId: UUID;\n\tdisplayName: string;\n\tdescription: string;\n\tstate: VersionEditState;\n\tconfigs: Config[];\n\tepochCreationTime: number;\n\tepochCreationTimeFormatted?: string;\n\tepochUpdateTime: number;\n\ttrigger?: Trigger;\n\tversionNumber?: number;\n\taccess: any;\n\tvalid: boolean;\n\n\tconstructor(obj: {\n\t\tid: UUID;\n\t\tflowId: UUID;\n\t\tdisplayName: string;\n\t\tdescription: string;\n\t\tstate: VersionEditState;\n\t\tconfigs: Config[];\n\t\tepochCreationTime: number;\n\t\tepochUpdateTime: number;\n\t\ttrigger: Trigger;\n\t\taccess: any;\n\t\tvalid: boolean;\n\t}) {\n\t\tthis.id = obj.id;\n\t\tthis.valid = obj.valid;\n\t\tthis.flowId = obj.flowId;\n\t\tthis.displayName = obj.displayName;\n\t\tthis.description = obj.description;\n\t\tthis.state = obj.state;\n\t\tthis.configs = obj.configs;\n\t\tthis.epochCreationTime = obj.epochCreationTime;\n\t\tthis.epochUpdateTime = obj.epochUpdateTime;\n\t\tthis.trigger = obj.trigger;\n\t\tthis.access = obj.access;\n\t}\n\n\tpublic static clone(flow: FlowVersion): FlowVersion {\n\t\treturn new FlowVersion(JSON.parse(JSON.stringify(flow)));\n\t}\n\n\tpublic updateStep(targetStepName: string, updatedValue: Action | Trigger): FlowVersion {\n\t\tlet step = FlowStructureUtil.findStep(this.trigger, targetStepName);\n\t\tif (step !== undefined) {\n\t\t\tstep.displayName = updatedValue.displayName;\n\t\t\tstep.type = updatedValue.type;\n\t\t\tstep.name = updatedValue.name;\n\t\t\tstep.valid = updatedValue.valid;\n\t\t\tstep.settings = updatedValue.settings;\n\t\t}\n\t\tthis.valid = this.isValid();\n\t\treturn this;\n\t}\n\n\tpublic isValid(): boolean {\n\t\treturn FlowStructureUtil.traverseAllSteps(this.trigger).findIndex(f => f.valid == false) == -1;\n\t}\n\n\tpublic dropPiece(draggedPieceName: string, newParentName: string) {\n\t\tlet draggedPiece = FlowStructureUtil.findStep(this.trigger, draggedPieceName);\n\t\tlet parentDraggedPiece = FlowStructureUtil.findParent(this.trigger, draggedPieceName);\n\t\tlet newParentPiece = FlowStructureUtil.findStep(this.trigger, newParentName);\n\t\tif (draggedPiece && newParentPiece && parentDraggedPiece) {\n\t\t\tparentDraggedPiece.nextAction = draggedPiece.nextAction;\n\t\t\tdraggedPiece.nextAction = newParentPiece.nextAction;\n\t\t\tnewParentPiece.nextAction = draggedPiece as Action;\n\t\t}\n\t}\n\n\tpublic replaceTrigger(trigger: Trigger): FlowVersion {\n\t\tthis.trigger!.type = trigger.type;\n\t\tthis.trigger!.displayName = trigger.displayName;\n\t\tthis.trigger!.name = trigger.name;\n\t\tthis.trigger!.settings = trigger.settings;\n\t\tthis.trigger!.valid = trigger.valid;\n\t\tthis.valid = this.isValid();\n\t\treturn this;\n\t}\n\n\tpublic addNewChild(\n\t\ttargetStepName: string,\n\t\tnewStep: Action,\n\t\tbuttonType: AddButtonType = AddButtonType.NEXT_ACTION\n\t): FlowVersion {\n\t\tlet step = FlowStructureUtil.findStep(this.trigger, targetStepName);\n\t\tlet cloneNewStep: Action = JSON.parse(JSON.stringify(newStep));\n\t\tif (step) {\n\t\t\tif (step.type === ActionType.LOOP_ON_ITEMS && buttonType === AddButtonType.FIRST_LOOP_ACTION) {\n\t\t\t\tlet loop: LoopOnItemActionInterface = step as LoopOnItemActionInterface;\n\t\t\t\tcloneNewStep.nextAction = loop.firstLoopAction;\n\t\t\t\tloop.firstLoopAction = cloneNewStep;\n\t\t\t} else {\n\t\t\t\tcloneNewStep.nextAction = step?.nextAction;\n\t\t\t\tstep.nextAction = cloneNewStep;\n\t\t\t}\n\t\t}\n\t\tthis.valid = this.isValid();\n\t\treturn this;\n\t}\n\n\tpublic deleteStep(targetStepName: string) {\n\t\tlet step = FlowStructureUtil.findStep(this.trigger, targetStepName);\n\t\tlet parent = FlowStructureUtil.findParent(this.trigger, targetStepName);\n\t\tif (step && parent) {\n\t\t\tif (parent.type === ActionType.LOOP_ON_ITEMS) {\n\t\t\t\tlet loopItem = parent as LoopOnItemActionInterface;\n\t\t\t\tif (\n\t\t\t\t\tloopItem.firstLoopAction !== undefined &&\n\t\t\t\t\tloopItem.firstLoopAction !== null &&\n\t\t\t\t\tloopItem.firstLoopAction.name === targetStepName\n\t\t\t\t) {\n\t\t\t\t\tloopItem.firstLoopAction = step?.nextAction;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (parent.nextAction !== undefined && parent.nextAction !== null && parent.nextAction.name === targetStepName) {\n\t\t\t\tparent.nextAction = step?.nextAction;\n\t\t\t}\n\t\t}\n\t\tthis.valid = this.isValid();\n\t\treturn this;\n\t}\n\n\tpublic findAvailableName(stepPrefix: string) {\n\t\tlet steps = FlowStructureUtil.traverseAllSteps(this.trigger);\n\t\tlet number = 1;\n\t\twhile (true) {\n\t\t\tlet exist = false;\n\t\t\tfor (let i = 0; i < steps.length; ++i) {\n\t\t\t\tlet action = steps[i] as Action;\n\t\t\t\tif (action.name === stepPrefix.toString().toLowerCase() + '_' + number) {\n\t\t\t\t\texist = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (exist) {\n\t\t\t\tnumber++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn stepPrefix.toString().toLowerCase() + '_' + number;\n\t}\n\n\tpublic codeActions(): CodeAction[] {\n\t\treturn FlowStructureUtil.traverseAllSteps(this.trigger)\n\t\t\t.filter(f => f.type === ActionType.CODE)\n\t\t\t.map(f => f as CodeAction);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "obj",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "obj",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "access",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "configs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Config[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "displayName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "epochCreationTimeFormatted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "flowId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VersionEditState",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "trigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Trigger",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "valid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "versionNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 23
                }
            ],
            "methods": [
                {
                    "name": "addNewChild",
                    "args": [
                        {
                            "name": "targetStepName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newStep",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "buttonType",
                            "type": "AddButtonType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "AddButtonType.NEXT_ACTION"
                        }
                    ],
                    "optional": false,
                    "returnType": "FlowVersion",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "targetStepName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newStep",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "buttonType",
                            "type": "AddButtonType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "AddButtonType.NEXT_ACTION",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clone",
                    "args": [
                        {
                            "name": "flow",
                            "type": "FlowVersion",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FlowVersion",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "flow",
                            "type": "FlowVersion",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "codeActions",
                    "args": [],
                    "optional": false,
                    "returnType": "CodeAction[]",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "deleteStep",
                    "args": [
                        {
                            "name": "targetStepName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "this",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "targetStepName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dropPiece",
                    "args": [
                        {
                            "name": "draggedPieceName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newParentName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "draggedPieceName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newParentName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findAvailableName",
                    "args": [
                        {
                            "name": "stepPrefix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "stepPrefix",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isValid",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "replaceTrigger",
                    "args": [
                        {
                            "name": "trigger",
                            "type": "Trigger",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FlowVersion",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "trigger",
                            "type": "Trigger",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateStep",
                    "args": [
                        {
                            "name": "targetStepName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "updatedValue",
                            "type": "Action | Trigger",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FlowVersion",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "targetStepName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "updatedValue",
                            "type": "Action | Trigger",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "FormContainer",
            "id": "class-FormContainer-98f509bc56d10e32c418aad712c26b85fb126d180bc82ac161538359d402e2e98a9d5ce7c8c93fa4a80cd4ed4f55f85f9092373ad2a91b456aa15f0c69e5ae6c",
            "file": "src/app/layout/common-layout/model/form-container.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { DynamicFormControl } from './dynamic-controls/dynamic-form-control';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nexport class FormContainer {\n\tsubmitted: boolean;\n\tfields: DynamicFormControl[];\n\tpublic form: FormGroup;\n\n\tconstructor({\n\t\tsubmitted,\n\t\tfields,\n\t\tformBuilder,\n\t}: {\n\t\tfields: DynamicFormControl[];\n\t\tsubmitted: boolean;\n\t\tformBuilder: FormBuilder;\n\t}) {\n\t\tthis.submitted = submitted;\n\t\tthis.fields = fields;\n\t\tthis.form = formBuilder.group({});\n\t\tfor (let i = 0; i < fields.length; ++i) {\n\t\t\tthis.form.addControl(fields[i].getName(), fields[i].formControl());\n\t\t}\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "fields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DynamicFormControl[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "submitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "GlobalBuilderState",
            "id": "class-GlobalBuilderState-57c96388737767625afe2a19bf4629d6917ab1803b362b85705204fd67ff5305c7a63f9f133f433b9cb4cf26d55a0ff1e933c7cf8dc880ba88cb8306076f4981",
            "file": "src/app/layout/flow-builder/store/model/builder-state.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Collection } from '../../../common-layout/model/piece.interface';\n\nimport { PieceStateEnum } from './enums/piece-state.enum';\n\nimport { ViewModeEnum } from './enums/view-mode.enum';\nimport { FlowItemsDetailsState } from './flow-items-details-state.model';\n\nimport { FlowsState } from './flows-state.model';\n\nexport class GlobalBuilderState {\n\treadonly pieceState: {\n\t\tcollection: Collection;\n\t\tstate: PieceStateEnum;\n\t};\n\treadonly flowsState: FlowsState;\n\treadonly viewMode: ViewModeEnum;\n\treadonly flowItemsDetailsState: FlowItemsDetailsState;\n}\n",
            "properties": [
                {
                    "name": "flowItemsDetailsState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItemsDetailsState",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "flowsState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowsState",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "pieceState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "viewMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewModeEnum",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IntegerFormControl",
            "id": "class-IntegerFormControl-1b9b4dc42f3f9fb880433e8d31082e0751b3dcd627d81035bf6ddd929b99828747f9375e888bf994afaef2e0a1bb0feb065927cda8e3a7b2804fd97561a3fa03",
            "file": "src/app/layout/common-layout/model/dynamic-controls/integer-form-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { FormControl, ValidatorFn } from '@angular/forms';\n\nexport class IntegerFormControl extends DynamicFormControl {\n\tconstructor({\n\t\tlabel,\n\t\tname,\n\t\thelpText = '',\n\t\tvalue = null,\n\t\thidden = false,\n\t\tdisabled = false,\n\t\tvalidatorFns = [],\n\t\tplaceholder = 0,\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\thelpText?: string;\n\t\tplaceholder?: number;\n\t\tvalidatorFns?: ValidatorFn[];\n\t\thidden?: boolean;\n\t\tdisabled?: boolean;\n\t\tvalue?: number | null;\n\t}) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t\tthis.validatorFns = validatorFns;\n\t\tthis.label = label;\n\t\tthis.hidden = hidden;\n\t\tthis.placeholder = placeholder.toString();\n\t\tthis.disabled = disabled;\n\t\tthis.helpText = helpText;\n\t\tthis.type = ControlType.INTEGER;\n\t\tthis._formControl = new FormControl(this.value, { validators: validatorFns });\n\t}\n\n\tformControl(): FormControl {\n\t\treturn this._formControl as FormControl;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "DynamicFormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IntegerVariable",
            "id": "class-IntegerVariable-988041824cdfcf32cb1e3885296a846941085c362dc3c0cb10f4657263330a3d8d23098dd382d325c50518f217087aafa8ae28b8f82e2f7f498423a1aded5d53",
            "file": "src/app/layout/common-layout/model/fields/variable/integer-variable.class.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Config } from './config';\n\nexport class IntegerVariable extends Config {\n\toverride value: number;\n}\n",
            "properties": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "collectionVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "flowVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "hintText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownSettings | DynamicDropdownSettings | OAuth2ConfigSettings | BaseConfigSettings | ShortTextSettings",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigSource",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "Config"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "Config",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "KeyValueFormControl",
            "id": "class-KeyValueFormControl-54e103113f8712e449bbb12f5b39411a076cd86695bccc0a68b75c9b1a5e9a0dd6062595c283efe750ab5de765a0efd581397238dac7889bf72ab5ea1a0f3ecb",
            "file": "src/app/layout/common-layout/model/dynamic-controls/key-value-form-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { FormControl, ValidatorFn } from '@angular/forms';\n\nexport class KeyValueFormControl extends DynamicFormControl {\n\tconstructor({\n\t\tlabel,\n\t\tname,\n\t\thelpText = '',\n\t\tvalue = null,\n\t\thidden = false,\n\t\tdisabled = false,\n\t\tvalidatorFns = [],\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\thelpText?: string;\n\t\tvalidatorFns?: ValidatorFn[];\n\t\thidden?: boolean;\n\t\tdisabled?: boolean;\n\t\tvalue?: any | null;\n\t}) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t\tthis.validatorFns = validatorFns;\n\t\tthis.label = label;\n\t\tthis.hidden = hidden;\n\t\tthis.disabled = disabled;\n\t\tthis.helpText = helpText;\n\t\tthis.type = ControlType.KEY_VALUE;\n\t\tthis._formControl = new FormControl(this.value ?? {}, { validators: validatorFns });\n\t}\n\n\tformControl(): FormControl {\n\t\treturn this._formControl as FormControl;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "DynamicFormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "KeyValueVariable",
            "id": "class-KeyValueVariable-30b8b75bd062379bb08fa852be00cdc3aa319ed1f5d4eec69893674344739f676676503e0d6d4be19117b0b98464fff7b135c96c060f27046a6e945b6161b2cf",
            "file": "src/app/layout/common-layout/model/fields/variable/key-value-variable.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Config } from './config';\n\nexport class KeyValueVariable extends Config {\n\toverride value: any;\n}\n",
            "properties": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "collectionVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "flowVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "hintText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownSettings | DynamicDropdownSettings | OAuth2ConfigSettings | BaseConfigSettings | ShortTextSettings",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigSource",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "Config"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "Config",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LongTextFormControl",
            "id": "class-LongTextFormControl-85e10ccb1361dc92d05803cc8cc1181e7ab983f01e49664946e8c0332834e95d79800baa0ab51eb19b84e86eabb5f5b997d747aea5ef9d42205acea6c6b8020b",
            "file": "src/app/layout/common-layout/model/dynamic-controls/long-text-form-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { FormControl, ValidatorFn } from '@angular/forms';\n\nexport class LongTextFormControl extends DynamicFormControl {\n\tconstructor({\n\t\tlabel,\n\t\thelpText = '',\n\t\tname,\n\t\tplaceholder = '',\n\t\thidden = false,\n\t\tdisabled = false,\n\t\tvalue = null,\n\t\tvalidatorFns = [],\n\t\terrorMessages = {},\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\tplaceholder?: string;\n\t\thelpText?: string;\n\t\terrorMessages?: { [key: string]: string };\n\t\tvalidatorFns?: ValidatorFn[];\n\t\thidden?: boolean;\n\t\tdisabled?: boolean;\n\t\tvalue?: string | null;\n\t}) {\n\t\tsuper();\n\t\tthis.placeholder = placeholder;\n\t\tthis.validatorFns = validatorFns;\n\t\tthis.name = name;\n\t\tthis.hidden = hidden;\n\t\tthis.disabled = disabled;\n\t\tthis.errorMessages = errorMessages;\n\t\tthis.value = value;\n\t\tthis.label = label;\n\t\tthis.helpText = helpText;\n\t\tthis.type = ControlType.LONG_TEXT;\n\t\tthis._formControl = new FormControl(this.value, { validators: validatorFns });\n\t\tif (this.disabled) {\n\t\t\tthis._formControl.disable();\n\t\t}\n\t}\n\n\tformControl(): FormControl {\n\t\treturn this._formControl as FormControl;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "DynamicFormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LongTextVariableClass",
            "id": "class-LongTextVariableClass-805804d3fb123aa1caa8de9510db274ed7b98babe36bde059745ebf3966e7d002790cec2bd9c22c8ea95d2f1caff73c0db2214ab4c3c15cd30db4a543eb2a26a",
            "file": "src/app/layout/common-layout/model/fields/variable/subfields/long-text-variable.class.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Config } from '../config';\n\nexport class LongTextVariableClass extends Config {\n\toverride value: string | null;\n}\n",
            "properties": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "collectionVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "flowVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "hintText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownSettings | DynamicDropdownSettings | OAuth2ConfigSettings | BaseConfigSettings | ShortTextSettings",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigSource",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "Config"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "Config",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MultiDropdownFormControl",
            "id": "class-MultiDropdownFormControl-fbb968c091afbb8ed4d42fbeb5d5b6090552c03e7118a17cbaff95bcbe1a9bc1950f668156da86f935715a07f60a36d04174ea73ef2163780bc677f4b3d5eac3",
            "file": "src/app/layout/common-layout/model/dynamic-controls/multi-dropdown-form-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { FormControl, ValidatorFn } from '@angular/forms';\nimport { DropdownItemOption } from '../fields/variable/subfields/dropdown-item-option';\n\nexport class MultiDropdownFormControl extends DynamicFormControl {\n\tprotected dropdownOptions: DropdownItemOption[];\n\n\tconstructor({\n\t\tlabel,\n\t\tname,\n\t\thelpText = '',\n\t\tvalidatorFns = [],\n\t\tdropdownOptions,\n\t\thidden = false,\n\t\tdisabled = false,\n\t\tvalue = [],\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\thelpText?: string;\n\t\tvalidatorFns?: ValidatorFn[];\n\t\tdropdownOptions: DropdownItemOption[];\n\t\thidden?: boolean;\n\t\tdisabled?: boolean;\n\t\tvalue?: any[] | null;\n\t}) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.label = label;\n\t\tthis.disabled = disabled;\n\t\tthis.hidden = hidden;\n\t\tthis.helpText = helpText;\n\t\tthis.validatorFns = validatorFns;\n\t\tthis.dropdownOptions = dropdownOptions;\n\t\tthis.value = value;\n\t\tthis.type = ControlType.MULTI_DROPDOWN;\n\t\tthis._formControl = new FormControl(this.value, validatorFns);\n\t}\n\n\tformControl(): FormControl {\n\t\treturn this._formControl as FormControl;\n\t}\n\n\tgetDropdownOptions() {\n\t\treturn this.dropdownOptions;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "dropdownOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownItemOption[]",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getDropdownOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "DynamicFormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MultilineVariable",
            "id": "class-MultilineVariable-3078a8e1344b97161a0538068009b309617cac4024361f647b543b97188d4788f6b64412dc9783f848b42794da0624ef07473eb96f93936612810e4c804524c7",
            "file": "src/app/layout/common-layout/model/fields/variable/multiline-variable.class.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Config } from './config';\n\nexport class MultilineVariable extends Config {\n\toverride value: string;\n}\n",
            "properties": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "collectionVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "flowVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "hintText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownSettings | DynamicDropdownSettings | OAuth2ConfigSettings | BaseConfigSettings | ShortTextSettings",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigSource",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "Config"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "Config",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OAuth2ConfigSettings",
            "id": "class-OAuth2ConfigSettings-fda1051283c569a7af5625657ca115b6983d328d0828644d22e60d4a366f14e4cd000d0b33f8fc3021de7a8f45eccd80237f2878646be6c621ab7e111ede7378",
            "file": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\n\nimport { DropdownType } from '../../enum/config.enum';\nimport { Oauth2UserInputType } from './subfields/oauth2-user-input.type';\nimport { DropdownItemOption } from './subfields/dropdown-item-option';\n\nexport class ConfigSettings {\n\trequired: boolean;\n}\n\nexport class BaseConfigSettings extends ConfigSettings {}\n\nexport class ShortTextSettings extends ConfigSettings {\n\tdropdown: boolean;\n\tdropdownOptions: DropdownItemOption[];\n}\nexport class DropdownSettings extends ConfigSettings {\n\tdropdownType: DropdownType;\n}\n\nexport class StaticDropdownSettings extends DropdownSettings {\n\toptions: DropdownOption[];\n}\n\nexport class DynamicDropdownSettings extends DropdownSettings {\n\trefreshReferences: string[]; //config key\n\tartifactContent?: Artifact;\n\tartifactUrl: string;\n}\n\nexport class OAuth2ConfigSettings extends ConfigSettings {\n\tauthUrl: string = '';\n\ttokenUrl: string = '';\n\trefreshUrl: string = '';\n\tclientId: string = '';\n\tscope: string = '';\n\tclientSecret: string = '';\n\tconfigParent?: {\n\t\tconfigKey: string;\n\t};\n\tuserInputType: Oauth2UserInputType = Oauth2UserInputType.LOGIN;\n\tresponseType: string = 'code';\n}\n\nexport interface DropdownOption {\n\tvalue: any;\n\tlabel: string;\n}\n",
            "properties": [
                {
                    "name": "authUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "clientId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "clientSecret",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "configParent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "refreshUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "responseType",
                    "defaultValue": "'code'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "scope",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "tokenUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "userInputType",
                    "defaultValue": "Oauth2UserInputType.LOGIN",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Oauth2UserInputType",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "inheritance": {
                        "file": "ConfigSettings"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "ConfigSettings",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Oauth2LoginFormControl",
            "id": "class-Oauth2LoginFormControl-fdfaf8240ced13cedf85a8dc1f7d30378a92148db378e4c3a9b4d09ec6997aada155f4eddff0e539e471099fc398fd5d6fa7f7bc38a4c9fc72cde74b942e1821",
            "file": "src/app/layout/common-layout/model/dynamic-controls/oauth2-login-form-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { FormControl, ValidatorFn } from '@angular/forms';\nimport { OAuth2Response } from '../fields/variable/subfields/oauth2-response.interface';\nimport { Oauth2LoginSettingsInterface } from '../fields/variable/subfields/oauth2-login-settings.interface';\n\nexport class Oauth2LoginFormControl extends DynamicFormControl {\n\tprivate settings: Oauth2LoginSettingsInterface;\n\n\tconstructor({\n\t\tlabel,\n\t\tname,\n\t\thelpText = '',\n\t\tvalue = null,\n\t\thidden = false,\n\t\tdisabled = false,\n\t\tvalidatorFns = [],\n\t\tsettings,\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\thelpText?: string;\n\t\tvalidatorFns?: ValidatorFn[];\n\t\thidden?: boolean;\n\t\tdisabled?: boolean;\n\t\tsettings: Oauth2LoginSettingsInterface;\n\t\tvalue?: OAuth2Response | null;\n\t}) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t\tthis.validatorFns = validatorFns;\n\t\tthis.label = label;\n\t\tthis.hidden = hidden;\n\t\tthis.disabled = disabled;\n\t\tthis.settings = settings;\n\t\tthis.helpText = helpText;\n\t\tthis.type = ControlType.OAUTH2_LOGIN;\n\t\tthis._formControl = new FormControl(this.value, { validators: validatorFns });\n\t}\n\n\tformControl(): FormControl {\n\t\treturn this._formControl as FormControl;\n\t}\n\n\tgetSettings() {\n\t\treturn this.settings;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Oauth2LoginSettingsInterface",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getSettings",
                    "args": [],
                    "optional": false,
                    "returnType": "Oauth2LoginSettingsInterface",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "DynamicFormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Oauth2LoginVariable",
            "id": "class-Oauth2LoginVariable-d160c484840fbbca6da206ff53486fe71b387df0848c43d75cf5005453a275e5d567934c5bd0451fdd5d49f9c60ab899723330c91d4faae53367679c387eca7e",
            "file": "src/app/layout/common-layout/model/fields/variable/oauth2-login-variable.class.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { OAuth2Variable } from './oauth2-variable.class';\nimport { OAuth2ConfigSettings } from './config-settings';\n\nexport class Oauth2LoginVariable extends OAuth2Variable {\n\toverride settings: OAuth2ConfigSettings;\n}\n",
            "properties": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OAuth2ConfigSettings",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "collectionVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "flowVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "hintText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigSource",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "Config"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "OAuth2Variable",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Oauth2SelectFormControl",
            "id": "class-Oauth2SelectFormControl-5c463ce6334cf836ef862ca1a3c4df178ebdbd4044a0c6ffd8fecf7ce56f0240d2bf54e8e6074e1c822cd5d43882fb60edcc86dc47bdd2c3d23bdb0499c22a67",
            "file": "src/app/layout/common-layout/model/dynamic-controls/oauth2-select-form-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { FormControl, ValidatorFn } from '@angular/forms';\nimport { Config } from '../fields/variable/config';\n\nimport { UUID } from 'angular2-uuid';\n\nexport class Oauth2SelectFormControl extends DynamicFormControl {\n\tprivate variable: any;\n\tprivate flowId: UUID;\n\n\tconstructor({\n\t\tlabel,\n\t\tname,\n\t\thelpText = '',\n\t\tvalue = null,\n\t\thidden = false,\n\t\tdisabled = false,\n\t\tvalidatorFns = [],\n\t\tvariable,\n\t\tflowId,\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\thelpText?: string;\n\t\tvalidatorFns?: ValidatorFn[];\n\t\tvariable: any;\n\t\thidden?: boolean;\n\t\tdisabled?: boolean;\n\t\tflowId: UUID;\n\t\tvalue?: string | null;\n\t}) {\n\t\tsuper();\n\t\tthis.variable = variable;\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t\tthis.validatorFns = validatorFns;\n\t\tthis.label = label;\n\t\tthis.flowId = flowId;\n\t\tthis.hidden = hidden;\n\t\tthis.disabled = disabled;\n\t\tthis.helpText = helpText;\n\t\tthis.type = ControlType.OAUTH2_SELECT;\n\t\tthis._formControl = new FormControl(this.value, {\n\t\t\tvalidators: validatorFns,\n\t\t});\n\t\tif (this.disabled) {\n\t\t\tthis._formControl.disable();\n\t\t}\n\t}\n\n\tgetVariable(): Config {\n\t\treturn this.variable;\n\t}\n\n\tformControl(): FormControl {\n\t\treturn this._formControl as FormControl;\n\t}\n\n\tgetFlowId() {\n\t\treturn this.flowId;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "flowId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "variable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getFlowId",
                    "args": [],
                    "optional": false,
                    "returnType": "UUID",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getVariable",
                    "args": [],
                    "optional": false,
                    "returnType": "Config",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "DynamicFormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OAuth2Variable",
            "id": "class-OAuth2Variable-e8379b56c388f4f79258a19ed0c5a88ced5e22e60b13b01838bfdc47b70180dca421090d86789bd43fe1d8d4bb41a1bcaf9b781bcfba3e30cd95f159cf90a382",
            "file": "src/app/layout/common-layout/model/fields/variable/oauth2-variable.class.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Config } from './config';\nimport { OAuth2ConfigSettings } from './config-settings';\n\nexport class OAuth2Variable extends Config {\n\toverride settings: OAuth2ConfigSettings;\n}\n",
            "properties": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OAuth2ConfigSettings",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "collectionVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "flowVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "hintText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigSource",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "Config"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "Config",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Point",
            "id": "class-Point-d3a8a59da647af3f73db501ed39855371209554af5d03e71c59d8989e394f5418bbfc9e19136088bb15f49c7e89dba06ee8cd935b46a4ebb0554b4679a0b9b46",
            "file": "src/app/layout/common-layout/model/helper/point.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Point {\n\tx: number;\n\ty: number;\n\n\tconstructor(x: number, y: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "x",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "y",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "x",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "y",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "x",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "y",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ProjectAuthentication",
            "id": "class-ProjectAuthentication-82e3158fcf12d40f4f53498ad919218f519f774d0113f20dd735e4b4b426d2d7fa764dae09463b32e21d46f3f7088f1d1c47074c95c90f8045e47554b5e93eea",
            "file": "src/app/layout/common-layout/model/authentication.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { UUID } from 'angular2-uuid';\nimport { AuthenticationType } from '../helper/authentication-type.enum';\n\nexport class ProjectAuthentication {\n\tenvironmentId: UUID;\n\tepochCreationTime: number;\n\tepochUpdateTime?: number;\n\tfirebaseProjectId?: string;\n\tprivateKey?: string;\n\tpublicKey?: string;\n\ttype: AuthenticationType;\n\tdateGeneratedText?: string;\n\tconstructor(public environmentName?: string) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "environmentName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "environmentName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "dateGeneratedText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "environmentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "environmentName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "epochCreationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "epochUpdateTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "firebaseProjectId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "privateKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "publicKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationType",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RefreshReferencesValidator",
            "id": "class-RefreshReferencesValidator-e33e826b31c95a18fdee8b1978e9ae4389be0e420df8d422c647e056f2248a730024b257ab86a75307b62404a6c8330ed377373cd4ee78a75abed91e15860009",
            "file": "src/app/layout/flow-builder/page/flow-builder/validators/refreshReferencesValidator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { AbstractControl, AsyncValidatorFn } from '@angular/forms';\nimport { map, Observable } from 'rxjs';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\nimport { DynamicDropdownSettings } from 'src/app/layout/common-layout/model/fields/variable/config-settings';\n\nexport class RefreshReferencesValidator {\n\tstatic createValidator(\n\t\tallConfigs$: Observable<Config[]>,\n\t\tcurrentConfig: Partial<Config> | undefined\n\t): AsyncValidatorFn {\n\t\treturn (control: AbstractControl) => {\n\t\t\treturn allConfigs$.pipe(\n\t\t\t\tmap(allConfigs => {\n\t\t\t\t\treturn JSON.parse(JSON.stringify(allConfigs));\n\t\t\t\t}),\n\t\t\t\tmap((allConfigs: Partial<Config>[]) => {\n\t\t\t\t\tconst controlValue: string[] = control.value;\n\t\t\t\t\tconst refreshReferences = controlValue.map(o => {\n\t\t\t\t\t\treturn allConfigs.find(c => c.key === o)!;\n\t\t\t\t\t});\n\t\t\t\t\tallConfigs = RefreshReferencesValidator.replaceCurrentConfigInAllConfigsListToSetNewRefreshReferences(\n\t\t\t\t\t\tcurrentConfig,\n\t\t\t\t\t\tallConfigs,\n\t\t\t\t\t\tcontrolValue\n\t\t\t\t\t);\n\t\t\t\t\tconst configKeyWhichCreatesCycle = RefreshReferencesValidator.validateReferences(\n\t\t\t\t\t\trefreshReferences,\n\t\t\t\t\t\tallConfigs\n\t\t\t\t\t);\n\n\t\t\t\t\tif (configKeyWhichCreatesCycle) {\n\t\t\t\t\t\tconsole.warn('cycle detected');\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tcycle: `This dropdown can't depend on ${configKeyWhichCreatesCycle} as ${configKeyWhichCreatesCycle} depends on this dropdown too.`,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t})\n\t\t\t);\n\t\t};\n\t}\n\n\tprivate static replaceCurrentConfigInAllConfigsListToSetNewRefreshReferences(\n\t\tcurrentConfig: Partial<Config> | undefined,\n\t\tallConfigs: Partial<Config>[],\n\t\tcontrolValue: string[]\n\t) {\n\t\tif (!currentConfig) {\n\t\t\tconst currentConfigReplacement = {\n\t\t\t\tkey: '!@#$',\n\t\t\t\tlabel: '!@#$',\n\t\t\t\tsettings: { refreshReferences: controlValue } as DynamicDropdownSettings,\n\t\t\t};\n\t\t\tallConfigs.push(currentConfigReplacement);\n\t\t} else {\n\t\t\tconst currentConfigReplacement = { ...currentConfig };\n\t\t\tcurrentConfigReplacement.settings = { refreshReferences: controlValue } as DynamicDropdownSettings;\n\t\t\tallConfigs = allConfigs.filter(c => c.key !== currentConfig.key);\n\t\t\tallConfigs.push(currentConfigReplacement);\n\t\t}\n\t\treturn allConfigs;\n\t}\n\tprivate static validateReferences(refreshReferences: Partial<Config>[], allConfigs: Partial<Config>[]) {\n\t\tlet configKeyWhichCreatesCycle: string | null = null;\n\t\trefreshReferences.forEach(c => {\n\t\t\tif (!configKeyWhichCreatesCycle) {\n\t\t\t\tconst visitedNodesMap = new Map<string, boolean>();\n\t\t\t\tconfigKeyWhichCreatesCycle = RefreshReferencesValidator.detectCycle(c, visitedNodesMap, allConfigs);\n\t\t\t}\n\t\t});\n\t\treturn configKeyWhichCreatesCycle;\n\t}\n\tprivate static detectCycle(\n\t\tconfig: Partial<Config>,\n\t\tvisitedConfigsMap: Map<string, boolean>,\n\t\tallConfigs: Partial<Config>[]\n\t) {\n\t\tif (visitedConfigsMap.get(config.key!)) {\n\t\t\treturn config.key!;\n\t\t}\n\t\tvisitedConfigsMap.set(config.key!, true);\n\t\tconst configSettings = config.settings as DynamicDropdownSettings;\n\t\tlet configKeyWhichCreatesCycle: null | string = null;\n\t\tif (configSettings.refreshReferences) {\n\t\t\tconfigSettings.refreshReferences\n\t\t\t\t.map(r => allConfigs.find(c => c.key === r)!)\n\t\t\t\t.forEach(c => {\n\t\t\t\t\tif (!configKeyWhichCreatesCycle) {\n\t\t\t\t\t\tconfigKeyWhichCreatesCycle = this.detectCycle(c, visitedConfigsMap, allConfigs);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\tvisitedConfigsMap.set(config.key!, false);\n\t\treturn configKeyWhichCreatesCycle;\n\t}\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "createValidator",
                    "args": [
                        {
                            "name": "allConfigs$",
                            "type": "Observable<Config[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "currentConfig",
                            "type": "Partial<Config> | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "AsyncValidatorFn",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "allConfigs$",
                            "type": "Observable<Config[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "currentConfig",
                            "type": "Partial<Config> | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "detectCycle",
                    "args": [
                        {
                            "name": "config",
                            "type": "Partial<Config>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "visitedConfigsMap",
                            "type": "Map<string | boolean>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "allConfigs",
                            "type": "Partial<Config>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Partial<Config>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "visitedConfigsMap",
                            "type": "Map<string | boolean>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "allConfigs",
                            "type": "Partial<Config>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "replaceCurrentConfigInAllConfigsListToSetNewRefreshReferences",
                    "args": [
                        {
                            "name": "currentConfig",
                            "type": "Partial<Config> | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "allConfigs",
                            "type": "Partial<Config>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "controlValue",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "currentConfig",
                            "type": "Partial<Config> | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "allConfigs",
                            "type": "Partial<Config>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "controlValue",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateReferences",
                    "args": [
                        {
                            "name": "refreshReferences",
                            "type": "Partial<Config>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "allConfigs",
                            "type": "Partial<Config>[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "refreshReferences",
                            "type": "Partial<Config>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "allConfigs",
                            "type": "Partial<Config>[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SelectEventFormControl",
            "id": "class-SelectEventFormControl-047fc6ec3ced6aa42ef08ad18145e0e1b163c6ccbde35107e966b924b0ef90b7fc90ea5aab40e6e188ee75071741c98c9d4b15f8bfc6fa8078ad95635af205be",
            "file": "src/app/layout/common-layout/model/dynamic-controls/select-event-form-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { FormControl, ValidatorFn } from '@angular/forms';\nimport { DropdownItemOption } from '../fields/variable/subfields/dropdown-item-option';\nimport { MultiDropdownFormControl } from './multi-dropdown-form-control';\n\nexport class SelectEventFormControl extends MultiDropdownFormControl {\n\tconstructor({\n\t\tlabel,\n\t\tname,\n\t\thelpText = '',\n\t\tvalidatorFns = [],\n\t\tdropdownOptions,\n\t\thidden = false,\n\t\tdisabled = false,\n\t\tvalue = [],\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\thelpText?: string;\n\t\tvalidatorFns?: ValidatorFn[];\n\t\tdropdownOptions: DropdownItemOption[];\n\t\thidden?: boolean;\n\t\tdisabled?: boolean;\n\t\tvalue?: any[] | null;\n\t}) {\n\t\tsuper({\n\t\t\tname,\n\t\t\tlabel,\n\t\t\tdisabled,\n\t\t\thidden,\n\t\t\thelpText,\n\t\t\tvalidatorFns,\n\t\t\tdropdownOptions,\n\t\t\tvalue,\n\t\t});\n\t\tthis.type = ControlType.SELECT_EVENT;\n\t\tthis._formControl = new FormControl(this.value, validatorFns);\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "dropdownOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownItemOption[]",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "MultiDropdownFormControl"
                    }
                },
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getDropdownOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "MultiDropdownFormControl"
                    }
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "MultiDropdownFormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ShortTextFormControl",
            "id": "class-ShortTextFormControl-b3a8af540e21d7dc56a243ec203c3ff332594525df5beed76966075423d0ce8d9b8dd479f9fc8db70f5039202af54fc396efd37f8ad787e2b1f04744ee81f7cf",
            "file": "src/app/layout/common-layout/model/dynamic-controls/short-text-form-control.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ControlType } from './control-type.enum';\nimport { DynamicFormControl } from './dynamic-form-control';\nimport { FormControl, ValidatorFn } from '@angular/forms';\n\nexport class ShortTextFormControl extends DynamicFormControl {\n\tconstructor({\n\t\tlabel,\n\t\tname,\n\t\thelpText = '',\n\t\tvalue = null,\n\t\thidden = false,\n\t\tdisabled = false,\n\t\tvalidatorFns = [],\n\t}: {\n\t\tlabel: string;\n\t\tname: string;\n\t\thelpText?: string;\n\t\tvalidatorFns?: ValidatorFn[];\n\t\thidden?: boolean;\n\t\tdisabled?: boolean;\n\t\tvalue?: string | null;\n\t}) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.value = value;\n\t\tthis.validatorFns = validatorFns;\n\t\tthis.label = label;\n\t\tthis.hidden = hidden;\n\t\tthis.disabled = disabled;\n\t\tthis.helpText = helpText;\n\t\tthis.type = ControlType.SHORT_TEXT;\n\t\tthis._formControl = new FormControl(this.value, { validators: validatorFns });\n\t\tif (this.disabled) {\n\t\t\tthis._formControl.disable();\n\t\t}\n\t}\n\n\tformControl(): FormControl {\n\t\treturn this._formControl as FormControl;\n\t}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbstractControl",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "errorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "helpText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "hidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ControlType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "validatorFns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "methods": [
                {
                    "name": "formControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getErrorMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: string; }",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getHelpText",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getLabel",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getName",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getPlaceholder",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getrequired",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "ControlType",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "isHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                },
                {
                    "name": "setHidden",
                    "args": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "b",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "DynamicFormControl"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "DynamicFormControl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ShortTextSettings",
            "id": "class-ShortTextSettings-fda1051283c569a7af5625657ca115b6983d328d0828644d22e60d4a366f14e4cd000d0b33f8fc3021de7a8f45eccd80237f2878646be6c621ab7e111ede7378",
            "file": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\n\nimport { DropdownType } from '../../enum/config.enum';\nimport { Oauth2UserInputType } from './subfields/oauth2-user-input.type';\nimport { DropdownItemOption } from './subfields/dropdown-item-option';\n\nexport class ConfigSettings {\n\trequired: boolean;\n}\n\nexport class BaseConfigSettings extends ConfigSettings {}\n\nexport class ShortTextSettings extends ConfigSettings {\n\tdropdown: boolean;\n\tdropdownOptions: DropdownItemOption[];\n}\nexport class DropdownSettings extends ConfigSettings {\n\tdropdownType: DropdownType;\n}\n\nexport class StaticDropdownSettings extends DropdownSettings {\n\toptions: DropdownOption[];\n}\n\nexport class DynamicDropdownSettings extends DropdownSettings {\n\trefreshReferences: string[]; //config key\n\tartifactContent?: Artifact;\n\tartifactUrl: string;\n}\n\nexport class OAuth2ConfigSettings extends ConfigSettings {\n\tauthUrl: string = '';\n\ttokenUrl: string = '';\n\trefreshUrl: string = '';\n\tclientId: string = '';\n\tscope: string = '';\n\tclientSecret: string = '';\n\tconfigParent?: {\n\t\tconfigKey: string;\n\t};\n\tuserInputType: Oauth2UserInputType = Oauth2UserInputType.LOGIN;\n\tresponseType: string = 'code';\n}\n\nexport interface DropdownOption {\n\tvalue: any;\n\tlabel: string;\n}\n",
            "properties": [
                {
                    "name": "dropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "dropdownOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownItemOption[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "inheritance": {
                        "file": "ConfigSettings"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "ConfigSettings",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "ShortTextVariable",
            "id": "class-ShortTextVariable-79dfcdc4a075daf708a3649e52c8262450f27be03dfc84e81fe72807b00900da6a5af3741f73bc0ed533dfc3fd4101f64ac39c08b7008b96031d429ebab54261",
            "file": "src/app/layout/common-layout/model/fields/variable/short-text-variable.class.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Config } from './config';\nimport { ShortTextSettings } from './config-settings';\n\nexport class ShortTextVariable extends Config {\n\toverride settings: ShortTextSettings;\n\toverride value: string;\n}\n",
            "properties": [
                {
                    "name": "settings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShortTextSettings",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        158
                    ],
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "collectionVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "flowVersionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": true,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "hintText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "source",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigSource",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "Config"
                    }
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigType",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "inheritance": {
                        "file": "Config"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "Config",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "StaticDropdownSettings",
            "id": "class-StaticDropdownSettings-fda1051283c569a7af5625657ca115b6983d328d0828644d22e60d4a366f14e4cd000d0b33f8fc3021de7a8f45eccd80237f2878646be6c621ab7e111ede7378",
            "file": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\n\nimport { DropdownType } from '../../enum/config.enum';\nimport { Oauth2UserInputType } from './subfields/oauth2-user-input.type';\nimport { DropdownItemOption } from './subfields/dropdown-item-option';\n\nexport class ConfigSettings {\n\trequired: boolean;\n}\n\nexport class BaseConfigSettings extends ConfigSettings {}\n\nexport class ShortTextSettings extends ConfigSettings {\n\tdropdown: boolean;\n\tdropdownOptions: DropdownItemOption[];\n}\nexport class DropdownSettings extends ConfigSettings {\n\tdropdownType: DropdownType;\n}\n\nexport class StaticDropdownSettings extends DropdownSettings {\n\toptions: DropdownOption[];\n}\n\nexport class DynamicDropdownSettings extends DropdownSettings {\n\trefreshReferences: string[]; //config key\n\tartifactContent?: Artifact;\n\tartifactUrl: string;\n}\n\nexport class OAuth2ConfigSettings extends ConfigSettings {\n\tauthUrl: string = '';\n\ttokenUrl: string = '';\n\trefreshUrl: string = '';\n\tclientId: string = '';\n\tscope: string = '';\n\tclientSecret: string = '';\n\tconfigParent?: {\n\t\tconfigKey: string;\n\t};\n\tuserInputType: Oauth2UserInputType = Oauth2UserInputType.LOGIN;\n\tresponseType: string = 'code';\n}\n\nexport interface DropdownOption {\n\tvalue: any;\n\tlabel: string;\n}\n",
            "properties": [
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownOption[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "dropdownType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownType",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "inheritance": {
                        "file": "DropdownSettings"
                    }
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "inheritance": {
                        "file": "ConfigSettings"
                    }
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "DropdownSettings",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "StepCacheKey",
            "id": "class-StepCacheKey-7d15f1e193cf5ab94774f07116ebcac5ac36a3293f4ad389fcdf8c921b6026dfc5880f1e71d93c2efb7a7ae9105ba4d38d06122c8074bf33ce10ded0fe606304",
            "file": "src/app/layout/flow-builder/service/artifact-cache-key.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { UUID } from 'angular2-uuid';\n\nexport class ArtifactCacheKey {\n\tprotected _prefix: ArtifactCachKeyPrefix;\n\n\tconstructor(private _value: string) {}\n\tpublic toString = () => {\n\t\treturn `${this._prefix}|${this._value}`;\n\t};\n}\n\nexport class FlowConfigsCacheKey extends ArtifactCacheKey {\n\tconstructor(flowId: UUID, configKey: string) {\n\t\tsuper(`${flowId.toString()}.${configKey}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.FLOW_CONFIG;\n\t}\n\tstatic getConfigKey(flowConfigCacheKey: string) {\n\t\tconst splitPrefixAndValue = flowConfigCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst configKey = value.split('.')[1];\n\t\treturn configKey;\n\t}\n}\nexport class CollectionConfigsCacheKey extends ArtifactCacheKey {\n\tconstructor(collectionId: UUID, configKey: string) {\n\t\tsuper(`${collectionId.toString()}.${configKey}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.COLLECTION_CONFIG;\n\t}\n\n\tstatic getConfigKey(flowConfigCacheKey: string) {\n\t\tconst splitPrefixAndValue = flowConfigCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst configKey = value.split('.')[1];\n\t\treturn configKey;\n\t}\n}\nexport class StepCacheKey extends ArtifactCacheKey {\n\tconstructor(flowId: UUID, stepName: string) {\n\t\tsuper(`${flowId.toString()}.${stepName}`);\n\t\tthis._prefix = ArtifactCachKeyPrefix.STEP;\n\t}\n\tstatic getStepName(stepCacheKey: string) {\n\t\tconst splitPrefixAndValue = stepCacheKey.split('|');\n\t\tconst value = splitPrefixAndValue[1];\n\t\tconst stepName = value.split('.')[1];\n\t\treturn stepName;\n\t}\n}\nenum ArtifactCachKeyPrefix {\n\tFLOW_CONFIG = 'flow.config',\n\tCOLLECTION_CONFIG = 'collection.config',\n\tSTEP = 'flow.step',\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "flowId",
                        "type": "UUID",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "stepName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "flowId",
                        "type": "UUID",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "stepName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArtifactCachKeyPrefix",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        122
                    ],
                    "inheritance": {
                        "file": "ArtifactCacheKey"
                    }
                },
                {
                    "name": "toString",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "ArtifactCacheKey"
                    }
                }
            ],
            "methods": [
                {
                    "name": "getStepName",
                    "args": [
                        {
                            "name": "stepCacheKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "stepCacheKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": "ArtifactCacheKey",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "tableColumnNameAndProperty",
            "id": "class-tableColumnNameAndProperty-f8c59d7274aee873233e5a3e36b6c596fb00d43367947b11d3c0a53015d42b47fd3aabc702c0a5d12d266c112a6b639509b86dad1d13075daf259fa9c55d22fa",
            "file": "src/app/layout/common-layout/components/table/columnNameAndProperty.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class tableColumnNameAndProperty {\n\tcolumnName: string;\n\tpropertyName: string;\n\temptyValueText?: string;\n}\n",
            "properties": [
                {
                    "name": "columnName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "emptyValueText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "propertyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "ClickStopPropagationDirective",
            "id": "directive-ClickStopPropagationDirective-d3b23a706f885dc045bf4378420107692e434462268a991e06c8278ad7b7aa0335f909521d31d96a675e82bde9ffb36139c0ce259fadd9136641305bf46fb163",
            "file": "src/app/layout/common-layout/click-stop-propgation.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostListener } from '@angular/core';\n\n/* eslint-disable */\r\n@Directive({\r\n\tselector: '[clickStopPropagation]',\r\n})\r\nexport class ClickStopPropagationDirective {\r\n\t@HostListener('click', ['$event'])\r\n\tpublic onClick(event: any): void {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n}\r\n",
            "selector": "[clickStopPropagation]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "DragDropDirective",
            "id": "directive-DragDropDirective-5925639a16808bd15ebb0cd9a0f97705184488ae0d385a3323ca629163a3142875d3f249977ac60ab59cce6dcbd36e4fa2e3306314a4ace5fdaa883b456bb749",
            "file": "src/app/layout/common-layout/components/upload-image-control/drag-drop.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\n\n@Directive({\n\tselector: '[appDragDrop]',\n})\nexport class DragDropDirective {\n\t@Output() fileDropped = new EventEmitter<any>();\n\n\t// Dragover Event\n\t@HostListener('dragover', ['$event']) dragOver(event: any) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t}\n\t// Dragleave Event\n\t@HostListener('dragleave', ['$event']) public dragLeave(event: any) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t}\n\t// Drop Event\n\t@HostListener('drop', ['$event']) public drop(event: DragEvent) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tconst files = event.dataTransfer?.files;\n\t\tif (files && files.length > 0) {\n\t\t\tthis.fileDropped.emit(files[0]);\n\t\t}\n\t}\n}\n",
            "selector": "[appDragDrop]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "fileDropped",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "dragleave",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15
                },
                {
                    "name": "dragover",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "DragEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "dragLeave",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'dragleave', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dragOver",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'dragover', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "DragEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'drop', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "DragEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "components": [
        {
            "name": "AccountsComponent",
            "id": "component-AccountsComponent-c1aedad9d29e80e585088ca82f8490b457b4fbd8720318ba27e8e5bd356a64b920d6af0610fe7b685c562d84c90d90d206f49d5f7bba7ef5e8da38381c19cf16",
            "file": "src/app/layout/dashboard-layout/pages/accounts/accounts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accounts",
            "styleUrls": [
                "./accounts.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./accounts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accountPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SeekPage<Account>",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "environment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "hoverIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "tableData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataRow[]",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "tableHeaders",
                    "defaultValue": "[\n\t\t{ content: 'Name' },\n\t\t{\n\t\t\talign: 'center',\n\t\t\tcontent: 'Instances',\n\t\t\twidth: '20%',\n\t\t},\n\t\t{ content: 'Created At', width: '15%' },\n\t\t{\n\t\t\tcontent: 'Create Account',\n\t\t\tisButton: true,\n\t\t\talign: 'center',\n\t\t\twidth: '15%',\n\t\t\tactionToReturn: 'create-account',\n\t\t},\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataHeader[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeHelperService",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "actionHandler",
                    "args": [
                        {
                            "name": "result",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "result",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addNewAccount",
                    "args": [
                        {
                            "name": "account",
                            "type": "Account",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "account",
                            "type": "Account",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteAccount",
                    "args": [
                        {
                            "name": "acc",
                            "type": "Account",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "accountIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "acc",
                            "type": "Account",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "accountIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAccountsCounts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updatePage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { DataHeader } from '../../../common-layout/components/responsive-table/data-header';\nimport { DataRow } from '../../../common-layout/components/responsive-table/data-row';\nimport { SeekPage } from '../../../common-layout/service/seek-page';\nimport { Account } from '../../../common-layout/model/account.interface';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NavigationService } from '../../service/navigation.service';\nimport { AccountService } from '../../../common-layout/service/account.service';\nimport { InstanceService } from '../../../common-layout/service/instance.service';\nimport { ThemeService } from '../../../common-layout/service/theme.service';\nimport { TimeHelperService } from '../../../common-layout/service/time-helper.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { ConfirmDeleteModalComponent } from '../../../common-layout/components/confirm-delete-modal/confirm-delete-modal.component';\nimport { forkJoin, switchMap, take, tap } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { DataCell } from '../../../common-layout/components/responsive-table/data-cell';\nimport { CreateAccountModalComponent } from '../../../common-layout/components/create-account-modal/create-account-modal.component';\n\n@Component({\n\tselector: 'app-accounts',\n\ttemplateUrl: './accounts.component.html',\n\tstyleUrls: ['./accounts.component.css'],\n})\nexport class AccountsComponent implements OnInit {\n\ttableHeaders: DataHeader[] = [\n\t\t{ content: 'Name' },\n\t\t{\n\t\t\talign: 'center',\n\t\t\tcontent: 'Instances',\n\t\t\twidth: '20%',\n\t\t},\n\t\t{ content: 'Created At', width: '15%' },\n\t\t{\n\t\t\tcontent: 'Create Account',\n\t\t\tisButton: true,\n\t\t\talign: 'center',\n\t\t\twidth: '15%',\n\t\t\tactionToReturn: 'create-account',\n\t\t},\n\t];\n\ttableData: DataRow[];\n\taccountPage: SeekPage<Account>;\n\n\tbsModalRef: BsModalRef;\n\thoverIndex: number;\n\tloading: boolean = false;\n\n\tenvironment: string;\n\n\tconstructor(\n\t\tprivate navigationService: NavigationService,\n\t\tprivate accountService: AccountService,\n\t\tprivate instanceService: InstanceService,\n\t\tprivate modalService: BsModalService,\n\t\tpublic themeService: ThemeService,\n\t\tpublic timeHelperService: TimeHelperService,\n\t\tprivate actRoute: ActivatedRoute\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.navigationService.setTitle('Accounts');\n\n\t\tconst routeData$ = this.actRoute.data.pipe(\n\t\t\ttap(routeData => {\n\t\t\t\tconst accounts = routeData['accounts'] as SeekPage<Account>;\n\t\t\t\tthis.accountPage = routeData['accounts'];\n\t\t\t\tthis.updatePage();\n\t\t\t\taccounts.data.forEach((acc, idx) => {\n\t\t\t\t\tthis.instanceService.countByAccountId(acc.id).subscribe(value => {\n\t\t\t\t\t\tthis.tableData[idx].columns[1].content = value + '';\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t\tconst queryParams$ = this.actRoute.queryParams;\n\t\tconst joinedRequests$ = forkJoin({\n\t\t\trouteData: routeData$,\n\t\t\tqueryParams: queryParams$,\n\t\t});\n\t\tjoinedRequests$.subscribe(response => {\n\t\t\tthis.environment = response.queryParams['environment'];\n\t\t\tthis.getAccountsCounts();\n\t\t});\n\t}\n\tgetAccountsCounts() {\n\t\tthis.accountPage.data.forEach((acc, idx) => {\n\t\t\tthis.instanceService.countByAccountId(acc.id).subscribe(value => {\n\t\t\t\tthis.tableData[idx].columns[1].content = value + '';\n\t\t\t});\n\t\t});\n\t}\n\tdeleteAccount(acc: Account, accountIndex: number) {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmDeleteModalComponent);\n\t\tthis.bsModalRef.content.entityName = acc.name;\n\t\t(this.bsModalRef.content as ConfirmDeleteModalComponent).confirmState\n\t\t\t.pipe(\n\t\t\t\tswitchMap(state => {\n\t\t\t\t\treturn this.accountService.delete(acc.id);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe({\n\t\t\t\tnext: () => {\n\t\t\t\t\tthis.accountPage?.data.splice(accountIndex, 1);\n\t\t\t\t\tthis.bsModalRef.hide();\n\t\t\t\t\tthis.updatePage();\n\t\t\t\t},\n\t\t\t\terror: (error: HttpErrorResponse) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t},\n\t\t\t});\n\t}\n\n\taddNewAccount(account: Account) {\n\t\tif (\n\t\t\tthis.accountPage.data.filter(f => {\n\t\t\t\treturn f.name === account.name;\n\t\t\t}).length == 0\n\t\t) {\n\t\t\tthis.accountPage?.data.push(account);\n\t\t\tthis.updatePage();\n\t\t}\n\t}\n\n\tupdatePage() {\n\t\tlet rows: DataRow[] = [];\n\t\tif (!this.accountPage) {\n\t\t\tthis.loading = true;\n\t\t\tfor (let i = 0; i < 2; ++i) {\n\t\t\t\tlet columns: DataCell[] = [\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\tcontent: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent: '',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent: '',\n\t\t\t\t\t\tonHover: true,\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t\trows.push({ columns: columns });\n\t\t\t}\n\t\t} else {\n\t\t\tthis.loading = false;\n\t\t\tfor (let i = 0; i < this.accountPage.data.length; ++i) {\n\t\t\t\tlet columns: DataCell[] = [];\n\t\t\t\tlet account = this.accountPage.data[i];\n\t\t\t\tcolumns.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent: account.name,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\troute: {\n\t\t\t\t\t\t\troute: 'instances',\n\t\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\t\tqueryParams: {\n\t\t\t\t\t\t\t\t\taccountName: account.name,\n\t\t\t\t\t\t\t\t\tenvironment: this.environment,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontent: '0',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent: this.timeHelperService.formatDateTime(account.epochCreationTime),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent: '',\n\t\t\t\t\t\tonHover: true,\n\t\t\t\t\t\talign: 'center',\n\t\t\t\t\t\tfaIcon: faTrash,\n\t\t\t\t\t\tactionToReturn: 'delete-account',\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\trows.push({ columns: columns });\n\t\t\t}\n\t\t}\n\t\tthis.tableData = rows;\n\t}\n\n\tactionHandler(result: { action: string; index: number }) {\n\t\tif (result.action === 'create-account') {\n\t\t\tthis.bsModalRef = this.modalService.show(CreateAccountModalComponent);\n\t\t\tthis.bsModalRef.content.created.pipe(take(1)).subscribe(value => {\n\t\t\t\tthis.addNewAccount(value);\n\t\t\t});\n\t\t} else if (result.action === 'delete-account') {\n\t\t\tlet account = this.accountPage?.data[result.index];\n\t\t\tif (account) {\n\t\t\t\tthis.deleteAccount(account, result.index);\n\t\t\t}\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./accounts.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "instanceService",
                        "type": "InstanceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "instanceService",
                        "type": "InstanceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-filter-bar></app-filter-bar>\r\n<app-responsive-table [headers]=\"tableHeaders\" [data]=\"tableData\" (actions)=\"actionHandler($event)\"></app-responsive-table>\r\n"
        },
        {
            "name": "AccountsFilterComponent",
            "id": "component-AccountsFilterComponent-6a768427bb4a0113163e00796ab611ebe753f71c5c067ce4f47746a754e4e8a76596dc6b77bb152dd5f8665df8b46b744fda3207c1e940546516d5d021486c9b",
            "file": "src/app/layout/dashboard-layout/components/accounts-filter/accounts-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-accounts-filter",
            "styleUrls": [
                "./accounts-filter.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./accounts-filter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faChevronDown",
                    "defaultValue": "faChevronDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "opened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "searchForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "wasInside",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "changeAccount",
                    "args": [
                        {
                            "name": "newValue",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newValue",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clickInside",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                },
                {
                    "name": "clickOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click'"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36
                },
                {
                    "name": "document:click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n\tselector: 'app-accounts-filter',\n\ttemplateUrl: './accounts-filter.component.html',\n\tstyleUrls: ['./accounts-filter.component.css'],\n})\nexport class AccountsFilterComponent implements OnInit {\n\tfaChevronDown = faChevronDown;\n\topened = false;\n\twasInside = false;\n\n\tselectedValue: any;\n\tsearchForm: FormGroup;\n\n\tconstructor(private formBuilder: FormBuilder, private router: Router, private actRoute: ActivatedRoute) {\n\t\tthis.searchForm = this.formBuilder.group({\n\t\t\taccountName: [, []],\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedValue = undefined;\n\t\tthis.actRoute.queryParams.subscribe(value => {\n\t\t\tthis.selectedValue = value['accountName'];\n\t\t\tif (this.selectedValue) {\n\t\t\t\tthis.searchForm.controls['accountName'].setValue(this.selectedValue);\n\t\t\t}\n\t\t});\n\t}\n\n\t@HostListener('click')\n\tclickInside() {\n\t\tthis.wasInside = true;\n\t}\n\n\t@HostListener('document:click')\n\tclickOut() {\n\t\tif (!this.wasInside) {\n\t\t\tthis.opened = false;\n\t\t}\n\t\tthis.wasInside = false;\n\t}\n\n\tapplyFilter() {\n\t\tif (this.searchForm.invalid) return;\n\t\tthis.opened = false;\n\t\tlet value = this.searchForm.value.accountName;\n\t\tthis.changeAccount(value && value.length > 0 ? value : undefined);\n\t}\n\n\tchangeAccount(newValue: string | undefined) {\n\t\tthis.opened = false;\n\t\tthis.actRoute.queryParams.subscribe(queryParams => {\n\t\t\tlet newQ = JSON.parse(JSON.stringify(queryParams));\n\t\t\tnewQ.accountName = newValue;\n\t\t\tthis.router.navigate([], { queryParams: newQ });\n\t\t});\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-control{\r\n  padding: 0.22rem 0.625rem !important;\r\n  height: 32px;\r\n}\r\n",
                    "styleUrl": "./accounts-filter.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  [ngStyle]=\"{\r\n        width: '250px',\r\n        position: 'relative'\r\n     }\"\r\n  class=\"form-group\">\r\n  <div class=\"form-control\" (click)=\"opened = !opened\"\r\n       style=\"    padding: 0.625rem 0.75rem;     border: 1px solid #CED4DA;\">\r\n    <span class=\"ml-1 text-default no-select\">{{selectedValue === undefined ? 'All Accounts' : selectedValue}}</span>\r\n    <span style=\"float: right;\">\r\n    <fa-icon [icon]=\"faChevronDown\"></fa-icon>\r\n  </span>\r\n  </div>\r\n  <div class=\"dropdown-menu {{opened?'show': ''}}\" style=\"min-width: 100%;\">\r\n    <a class=\"dropdown-item\" (click)=\"changeAccount(undefined)\">\r\n      <span class=\"ml-1 text-default no-select\">All Accounts</span>\r\n      <img *ngIf=\"selectedValue === undefined\" class=\"no-select float-right text-primary\" height=\"16\" width=\"16\"\r\n           src=\"../assets/img/custom/check.svg\"/>\r\n    </a>\r\n    <form class=\"p-3\" [formGroup]=\"searchForm\">\r\n      <input id=\"accountName\" class=\"form-control\"\r\n             formControlName=\"accountName\"\r\n             placeholder=\"account_id\" type=\"text\">\r\n             <app-button\r\n             btnColor=\"primary\"\r\n             [fullWidthOfContainer]=\"true\"\r\n             type=\"submit\"\r\n             class=\"float-right mt-3 ml-3\"\r\n             (buttonClicked)=\"applyFilter()\"\r\n             btnSize=\"small\"\r\n\r\n           >Apply\r\n           </app-button>\r\n           <app-button\r\n           btnColor=\"basic\"\r\n           [fullWidthOfContainer]=\"true\"\r\n           class=\"float-right mt-3 ml-3\"\r\n           btnSize=\"small\"\r\n           (buttonClicked)=\"changeAccount(undefined)\"\r\n         >Clear\r\n         </app-button>\r\n\r\n\r\n    </form>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n"
        },
        {
            "name": "AddNpmPackageModalComponent",
            "id": "component-AddNpmPackageModalComponent-23eb217ab6e6d20b5af869fba51bdbfce7bcd20453cbff1262e2f50dab8d0980a91a3ddd9e3620d5c7ffb90d2f2bb924da32df502b1297e9b654e5bce51470ca",
            "file": "src/app/layout/flow-builder/page/flow-builder/code-editor/add-npm-package-modal/add-npm-package-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-npm-package-modal",
            "styleUrls": [
                "./add-npm-package-modal.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./add-npm-package-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addNpmButtonClicked",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "modalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "npmButtonClicked$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "npmForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "packageEmitter",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventEmitter<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "latestVersion",
                    "args": [
                        {
                            "name": "npmName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "npmName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitText",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map, Observable, of, Subject, switchMap, tap } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\n\n@Component({\n\tselector: 'app-add-npm-package-modal',\n\ttemplateUrl: './add-npm-package-modal.component.html',\n\tstyleUrls: ['./add-npm-package-modal.component.css'],\n\tanimations: [fadeInUp400ms],\n})\nexport class AddNpmPackageModalComponent implements OnInit {\n\tloading = false;\n\tsubmitted = false;\n\n\tnpmForm: FormGroup;\n\terrorMessage: string | undefined = undefined;\n\n\tnpmButtonClicked$: Observable<void> = new Observable<void>();\n\n\tprivate addNpmButtonClicked: Subject<void> = new Subject<void>();\n\tpublic packageEmitter: EventEmitter<{ package: string; version: string }> = new EventEmitter<any>();\n\n\tconstructor(public modalRef: BsModalRef, private formBuilder: FormBuilder, private httpClient: HttpClient) {}\n\n\tngOnInit(): void {\n\t\tthis.npmForm = this.formBuilder.group({\n\t\t\tnpmName: [, [Validators.required]],\n\t\t});\n\t\tthis.npmButtonClicked$ = this.addNpmButtonClicked.pipe(\n\t\t\tswitchMap(value => {\n\t\t\t\tlet npmName = this.npmForm.controls['npmName'].value;\n\t\t\t\tthis.loading = true;\n\t\t\t\treturn this.latestVersion(npmName).pipe(catchError(err => of(undefined)));\n\t\t\t}),\n\t\t\ttap(pkg => {\n\t\t\t\tlet npmName = this.npmForm.controls['npmName'].value;\n\t\t\t\tif (pkg !== undefined) {\n\t\t\t\t\tlet lastVersion = pkg['dist-tags']['latest'];\n\t\t\t\t\tif (lastVersion != undefined) {\n\t\t\t\t\t\tthis.packageEmitter.emit({\n\t\t\t\t\t\t\tpackage: npmName,\n\t\t\t\t\t\t\tversion: lastVersion,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.modalRef.hide();\n\t\t\t\t\t}\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.errorMessage = npmName + ' is not found!';\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\t}\n\n\tlatestVersion(npmName: string): Observable<any> {\n\t\treturn this.httpClient.get('https://registry.npmjs.org/' + npmName, undefined);\n\t}\n\n\tsubmitText() {\n\t\tthis.errorMessage = undefined;\n\t\tthis.submitted = true;\n\t\tif (this.npmForm.invalid) {\n\t\t\treturn;\n\t\t}\n\t\tthis.addNpmButtonClicked.next();\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./add-npm-package-modal.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"npmForm\" [class.ng-submitted]=\"submitted\">\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title pull-left\">Add npm Package</h5>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn-close close pull-right\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modalRef?.hide()\"\r\n    >\r\n      <span aria-hidden=\"true\" class=\"visually-hidden close-custom\"\r\n        >&times;</span\r\n      >\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"form-group\">\r\n\r\n      <app-input\r\n        [inputType]=\"'text'\"\r\n        [required]=\"true\"\r\n        [label]=\"'Package Name'\"\r\n        [showErrors]=\"submitted\"\r\n        [inputControl]=\"npmForm.controls['npmName']\"\r\n        [hintText]=\"\r\n          'Please type the name of the npm package, It will fetch latest stable version, ' +\r\n          'and add it to package.json'\r\n        \"\r\n      >\r\n      </app-input>\r\n      <p @fadeInUp *ngIf=\"errorMessage !== undefined\" class=\"invalid-input\">\r\n        {{ errorMessage }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-secondary\"\r\n      data-dismiss=\"modal\"\r\n      (click)=\"modalRef?.hide()\"\r\n    >\r\n      Cancel\r\n    </button>\r\n    <app-button\r\n      type=\"submit\"\r\n      [disabled]=\"loading\"\r\n      btnColor=\"primary\"\r\n      (buttonClicked)=\"submitText()\"\r\n    >Add package</app-button>\r\n  </div>\r\n</form>\r\n<ng-container *ngIf=\"npmButtonClicked$ | async\"></ng-container>\r\n"
        },
        {
            "name": "ApButtonComponent",
            "id": "component-ApButtonComponent-defc5e99a21ac86d0229e1cd88146dc532ef95693222388a9b0a1515f756b8c65c7c21002c39f80048dfd295f393c8f4c669a3a094a0e52ac8c57cfe97f5d9c1",
            "file": "src/app/layout/common-layout/components/ap-button/ap-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./ap-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ap-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "btnColor",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "\"primary\" | \"warn\" | \"success\" | \"basic\"",
                    "decorators": []
                },
                {
                    "name": "btnSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"extraSmall\" | \"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "btnStyle",
                    "defaultValue": "'flat'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"flat\" | \"raised\" | \"stroked\" | \"basic\"",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": " |  | null",
                    "decorators": []
                },
                {
                    "name": "fullWidthOfContainer",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loadingCSS",
                    "defaultValue": "'text-white'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"text-white\" | \"text-primary\"",
                    "decorators": []
                },
                {
                    "name": "tooltipDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClicked",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter<Event>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "btnClassesMap",
                    "defaultValue": "new Map(\n\t\tObject.entries({\n\t\t\textraSmall: 'ap-btn-xs',\n\t\t\tsmall: 'ap-btn-sm',\n\t\t\tmedium: 'ap-btn-m',\n\t\t\tlarge: 'ap-btn-l',\n\t\t})\n\t)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | string>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "btnSizeClass",
                    "defaultValue": "'ap-btn-l'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n\tselector: 'app-button',\n\ttemplateUrl: './ap-button.component.html',\n\tstyleUrls: ['./ap-button.component.scss'],\n})\nexport class ApButtonComponent {\n\t@Input() loading: boolean;\n\t@Input() btnStyle: 'flat' | 'raised' | 'stroked' | 'basic' = 'flat';\n\t@Input() btnColor: 'primary' | 'warn' | 'success' | 'basic' = 'primary';\n\t@Input() disabled: true | false | null = false;\n\t@Input() loadingCSS: 'text-white' | 'text-primary' = 'text-white';\n\t@Input() fullWidthOfContainer = false;\n\t@Input() tooltipDisabled: boolean = false;\n\t@Input() tooltipText = '';\n\t@Input() set btnSize(value: 'extraSmall' | 'small' | 'medium' | 'large') {\n\t\tthis.btnSizeClass = this.btnClassesMap.get(value)!;\n\t}\n\tbtnClassesMap: Map<string, string> = new Map(\n\t\tObject.entries({\n\t\t\textraSmall: 'ap-btn-xs',\n\t\t\tsmall: 'ap-btn-sm',\n\t\t\tmedium: 'ap-btn-m',\n\t\t\tlarge: 'ap-btn-l',\n\t\t})\n\t);\n\tbtnSizeClass = 'ap-btn-l';\n\t@Output() buttonClicked: EventEmitter<Event> = new EventEmitter<Event>();\n\tconstructor() {}\n\n\tclick() {\n\t\tif (!this.loading) {\n\t\t\tthis.buttonClicked.emit();\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loading-spinner-size-and-position {\r\n  width: 1rem;\r\n  height: 1rem;\r\n  position: absolute;\r\n  left: calc(50% - 0.5rem);\r\n  top: calc(50% - 0.5rem);\r\n}\r\n\r\n.zero-opacity {\r\n  opacity: 0;\r\n}\r\n.ap-btn-sm\r\n{\r\n  font-size:0.75rem !important;\r\n  padding:.25rem .5rem !important;\r\n  line-height: 1.5 !important;\r\n}\r\n\r\n\r\n.ap-btn-xs\r\n{\r\n  padding:0 0 0 0  !important;\r\n  line-height: 1.5 !important;\r\n}\r\n.ap-btn-m\r\n{\r\n  padding:.3125rem .625rem !important;\r\n  line-height: 1.5 !important;\r\n}\r\n\r\n.ap-btn-l\r\n{\r\n  padding:.625rem 1.25rem !important;\r\n  line-height: 1.5 !important;\r\n}\r\n\r\n.mat-button.mat-success,\r\n.mat-stroked-button.mat-success:not([disabled]) {\r\n  &:not([disabled]){\r\n    color: #14AE5C;\r\n  }\r\n\r\n}\r\n.mat-button.mat-success:hover,\r\n.mat-stroked-button.mat-success:hover:not([disabled]) {\r\n  &:not([disabled]){\r\n    background-color: #cae7d8;\r\n  }\r\n\r\n}\r\n\r\n.mat-raised-button.mat-success,\r\n.mat-flat-button.mat-success,\r\n.mat-fab.mat-success,\r\n.mat-mini-fab.mat-success  {\r\n  &:not([disabled]){\r\n    color: white;\r\n    background-color: #14AE5C;\r\n  }\r\n\r\n}\r\n\r\n.mat-icon-button.mat-success {\r\n  &:not([disabled]){\r\n    color:#14AE5C;\r\n  }\r\n\r\n}\r\n\r\n.mat-button, .mat-icon-button, .mat-stroked-button, .mat-flat-button\r\n{\r\n  min-width: 45px !important\r\n}\r\n",
                    "styleUrl": "./ap-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 29
            },
            "accessors": {
                "btnSize": {
                    "name": "btnSize",
                    "setSignature": {
                        "name": "btnSize",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "\"extraSmall\" | \"small\" | \"medium\" | \"large\"",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 17,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "\"extraSmall\" | \"small\" | \"medium\" | \"large\"",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div [matTooltip]=\"tooltipDisabled?'':tooltipText\" placement=\"auto\" class=\"btn-container\">\r\n  <ng-container [ngSwitch]=\"btnStyle\">\r\n    <button [class]=\"btnSizeClass\" [class.w-100]=\"fullWidthOfContainer\" *ngSwitchCase=\"'flat'\" mat-flat-button\r\n      [color]=\"btnColor\" [disabled]=\"disabled ? true : false\" (click)=\"click()\">\r\n      <ng-container *ngTemplateOutlet=\"btnContent\"></ng-container>\r\n    </button>\r\n    <button [class]=\"btnSizeClass\" [class.w-100]=\"fullWidthOfContainer\" *ngSwitchCase=\"'basic'\" mat-button\r\n      [color]=\"btnColor\" [disabled]=\"disabled ? true : false\" (click)=\"click()\">\r\n      <ng-container *ngTemplateOutlet=\"btnContent\"></ng-container>\r\n    </button>\r\n    <button [class]=\"btnSizeClass\" [class.w-100]=\"fullWidthOfContainer\" *ngSwitchCase=\"'raised'\" mat-raised-button\r\n      [color]=\"btnColor\" [disabled]=\"disabled ? true : false\" (click)=\"click()\">\r\n      <ng-container *ngTemplateOutlet=\"btnContent\"></ng-container>\r\n    </button>\r\n    <button [class]=\"btnSizeClass\" [class.w-100]=\"fullWidthOfContainer\" *ngSwitchCase=\"'stroked'\" mat-stroked-button\r\n      [color]=\"btnColor\" [disabled]=\"disabled ? true : false\" (click)=\"click()\">\r\n      <ng-container *ngTemplateOutlet=\"btnContent\"></ng-container>\r\n    </button>\r\n  </ng-container>\r\n\r\n</div>\r\n<ng-template #btnContent>\r\n  <div [class.zero-opacity]=\"!loading\" class=\"spinner-border {{ loadingCSS }} loading-spinner-size-and-position\"  role=\"status\">\r\n    <span class=\"sr-only\">Loading...</span>\r\n  </div>\r\n    <div [class.zero-opacity]=\"loading\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n\r\n\r\n"
        },
        {
            "name": "ApiKeysComponent",
            "id": "component-ApiKeysComponent-800e1d4c8e9d1a3b59dacad7e934a1be38da099085d4b48d45b3433d26825243e964cc9bb93047c071034ca8ec90e4a4c2c358ac912da49d91c6f97709cb70fe",
            "file": "src/app/layout/dashboard-layout/pages/api-keys/api-keys.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-api-keys",
            "styleUrls": [
                "./api-keys.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./api-keys.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiKeyPage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<SeekPage | null>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "faKey",
                    "defaultValue": "faKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "faTrash",
                    "defaultValue": "faTrash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "hoverIndex",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "loadedState$",
                    "defaultValue": "new Observable<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "revealState",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeHelperService",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteApiKey",
                    "args": [
                        {
                            "name": "apikey",
                            "type": "ApiKey",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "apikey",
                            "type": "ApiKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "secretText",
                    "args": [
                        {
                            "name": "apiKey",
                            "type": "ApiKey",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "apiKey",
                            "type": "ApiKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleState",
                    "args": [
                        {
                            "name": "id",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { SeekPage } from '../../../common-layout/service/seek-page';\nimport { TimeHelperService } from '../../../common-layout/service/time-helper.service';\nimport { ApiKey } from '../../../common-layout/model/api-key.interface';\nimport { faKey, faTrash } from '@fortawesome/free-solid-svg-icons';\n\nimport { ThemeService } from '../../../common-layout/service/theme.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ConfirmDeleteModalComponent } from '../../../common-layout/components/confirm-delete-modal/confirm-delete-modal.component';\nimport { NavigationService } from '../../service/navigation.service';\nimport { Observable, take } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { ApiKeysSelector } from '../../store/selectors/api-keys.selector';\nimport { ApiKeysActions } from '../../store/action/api-keys.action';\nimport { UUID } from 'angular2-uuid';\n\n@Component({\n\tselector: 'app-api-keys',\n\ttemplateUrl: './api-keys.component.html',\n\tstyleUrls: ['./api-keys.component.css'],\n})\nexport class ApiKeysComponent implements OnInit {\n\tapiKeyPage$: Observable<SeekPage<ApiKey> | null>;\n\tloadedState$: Observable<boolean> = new Observable<boolean>();\n\trevealState: { [key: string]: boolean }[] = [];\n\n\tfaKey = faKey;\n\tfaTrash = faTrash;\n\thoverIndex: number = -1;\n\tbsModalRef: BsModalRef;\n\n\tconstructor(\n\t\tpublic themeService: ThemeService,\n\t\tpublic timeHelperService: TimeHelperService,\n\t\tprivate store: Store,\n\t\tprivate navigationService: NavigationService,\n\t\tprivate modalService: BsModalService\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.navigationService.setTitle('API Keys');\n\t\tthis.store.dispatch(ApiKeysActions.loadApiKeys());\n\t\tthis.loadedState$ = this.store.select(ApiKeysSelector.selectApiKeysLoaded);\n\t\tthis.apiKeyPage$ = this.store.select(ApiKeysSelector.selectApiKeys);\n\t}\n\n\tsecretText(apiKey: ApiKey) {\n\t\tlet secret = apiKey.secret;\n\t\tif (!this.revealState[apiKey.id.toString()]) {\n\t\t\tsecret = new Array(secret.length + 1).join('*');\n\t\t}\n\t\treturn secret;\n\t}\n\n\tdeleteApiKey(apikey: ApiKey, i: number) {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmDeleteModalComponent);\n\t\tthis.bsModalRef.content.entityName = apikey.name;\n\t\t(this.bsModalRef.content as ConfirmDeleteModalComponent).confirmState.pipe(take(1)).subscribe(value => {\n\t\t\tif (value) {\n\t\t\t\tthis.store.dispatch(ApiKeysActions.deleteApiKey({ id: apikey.id }));\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggleState(id: UUID) {\n\t\tthis.revealState[id.toString()] = !this.revealState[id.toString()];\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./api-keys.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"table-responsive\" *ngIf=\"loadedState$ | async else loading\">\r\n  <table class=\"table align-items-center table-flush\">\r\n    <thead class=\"thead-light\">\r\n    <tr>\r\n      <th scope=\"col\">API Key Name</th>\r\n      <th scope=\"col\" style=\"width: 50%\">Secret</th>\r\n      <th scope=\"col\" style=\"width: 15%\">Created At</th>\r\n      <th scope=\"col\" style=\"width: 10%\">\r\n        <app-create-api-key-modal\r\n        ></app-create-api-key-modal>\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody class=\"list\" *ngIf=\"apiKeyPage$ | async as apiKeyPage\">\r\n    <ng-container *ngIf=\"apiKeyPage.data !== null\">\r\n      <tr\r\n        *ngFor=\"let apiKey of apiKeyPage.data; let i = index\"\r\n        (mouseenter)=\"hoverIndex = i\"\r\n        (mouseleave)=\"hoverIndex = -1\"\r\n      >\r\n        <th scope=\"row\">\r\n          <div style=\"display: flex; flex-direction: row\">\r\n            <div>\r\n              <div\r\n                style=\"\r\n                  height: 100%;\r\n                  display: flex;\r\n                  justify-content: center;\r\n                  align-items: center;\r\n                \"\r\n              >\r\n                <fa-icon\r\n                  [size]=\"'1x'\"\r\n                  [icon]=\"faKey\"\r\n                  [styles]=\"{ color: themeService.PRIMARY_COLOR }\"\r\n                  class=\"mr-2\"\r\n                ></fa-icon>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <span>{{ apiKey.name }}</span>\r\n            </div>\r\n          </div>\r\n        </th>\r\n        <td>\r\n          <div class=\"font-weight-600\">{{ secretText(apiKey) }}</div>\r\n          <div\r\n            class=\"btn btn-sm btn-text text-primary\"\r\n            style=\"padding-left: 0px\"\r\n            (click)=\"toggleState(apiKey.id)\"\r\n          >\r\n            {{ revealState[i] ? \"Hide\" : \"Reveal\" }}\r\n          </div>\r\n        </td>\r\n        <td>\r\n          {{ timeHelperService.formatDateTime(apiKey.epochCreationTime) }}\r\n        </td>\r\n        <td>\r\n          <div\r\n            (click)=\"deleteApiKey(apiKey, i)\"\r\n            [ngStyle]=\"{\r\n              visibility: hoverIndex === i ? 'visible' : 'hidden',\r\n              float: 'right'\r\n            }\"\r\n            class=\"ml-4 btn btn-icon-white\"\r\n          >\r\n            <fa-icon [icon]=\"faTrash\"></fa-icon>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </ng-container>\r\n    <tbody class=\" list\">\r\n  </table>\r\n</div>\r\n<ng-template #loading>\r\n  <app-loading-skeleton></app-loading-skeleton>\r\n</ng-template>\r\n"
        },
        {
            "name": "ApImgComponent",
            "id": "component-ApImgComponent-9e7373fd8dc2e1b784d357b6f4adcaec8328d0dd3a878f81452648398e934ec1eba637a05af1766ee08ffa5f31929f0f2ca3912a5a0eae176ce72345cfd5ce9a",
            "file": "src/app/layout/common-layout/components/ap-img/ap-img.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-img",
            "styleUrls": [
                "./ap-img.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./ap-img.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "defaultSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rounded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'app-img',\n\ttemplateUrl: './ap-img.component.html',\n\tstyleUrls: ['./ap-img.component.css'],\n})\nexport class ApImgComponent {\n\t@Input() width: number;\n\t@Input() height: number;\n\t@Input() defaultSrc: string;\n\t@Input() src: string | undefined;\n\t@Input() rounded: boolean = false;\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "img{\r\n  vertical-align: unset !important;\r\n}\r\n",
                    "styleUrl": "./ap-img.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "templateData": "<img *ngIf=\"!src\" class=\"m-auto\" [src]=\"defaultSrc\" [width]=\"width\" [height]=\"height\" class=\"{{rounded?'rounded-circle':''}}\"/>\r\n<img *ngIf=\"src\" class=\"m-auto\" [src]=\"src\" [width]=\"width\" [height]=\"height\" class=\"{{rounded?'rounded-circle':''}}\"/>\r\n"
        },
        {
            "name": "ApInputComponent",
            "id": "component-ApInputComponent-eebb294e399b5a1fd559db7460273240c577a0266c0c672c9f3fe9eae8ec5e1e678d23728711b545b50068360af73b2ef101953c793ea0ce834b8c9eb821cfd1",
            "file": "src/app/layout/common-layout/components/ap-input/ap-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input",
            "styleUrls": [
                "./ap-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ap-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hintText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "inputType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showErrors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { fadeInUp400ms } from '../../animation/fade-in-up.animation';\n\n@Component({\n\tselector: 'app-input',\n\ttemplateUrl: './ap-input.component.html',\n\tstyleUrls: ['./ap-input.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class ApInputComponent {\n\t@Input() showErrors: boolean;\n\t@Input() inputControl: any;\n\t@Input() label: string | undefined;\n\t@Input() hintText: string = '';\n\t@Input() required: boolean;\n\t@Input() inputType: string;\n\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n",
                    "styleUrl": "./ap-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "templateData": "<div class=\"form-group\">\r\n  <label *ngIf=\"label\" [for]=\"label\" class=\"mr-3\"\r\n    >{{ label }}\r\n    <span class=\"required-star\">{{ required ? \"*\" : \"\" }}</span></label\r\n  >\r\n  <input\r\n    [formControl]=\"inputControl\"\r\n    [type]=\"inputType\"\r\n    class=\"form-control mr-3\"\r\n    [id]=\"label\"\r\n  />\r\n  <span *ngIf=\"hintText && hintText.length > 0\" class=\"text-sm text-muted\">{{\r\n    hintText\r\n  }}</span>\r\n  <p @fadeInUp *ngIf=\"showErrors && inputControl.invalid\" class=\"invalid-input\">\r\n    {{ label }} is required\r\n  </p>\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9810b2513435cf24bfe06a2909602806c37da5701a97105e182bb421458e4d92d7385da632d160a89be7a7d4803919995ab5b0eec5e6066a769ee8102926968d",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loggedInUser$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "routeLoader",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "routeLoader$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "title",
                    "defaultValue": "'piece-builder'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "unsavedIconLoader$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void> | undefined",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "userback$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { map, Observable, tap } from 'rxjs';\nimport { AuthenticationService } from './layout/common-layout/service/authentication.service';\nimport { Store } from '@ngrx/store';\nimport { UserbackService } from './layout/common-layout/service/userback.service';\nimport LogRocket from 'logrocket';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\nimport { NavigationService } from './layout/dashboard-layout/service/navigation.service';\nimport { SvgIconRegistryService } from 'angular-svg-icon';\nimport { CommonActions } from './layout/common-layout/store/action/common.action';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n\ttitle = 'piece-builder';\n\trouteLoader = true;\n\n\trouteLoader$: Observable<any>;\n\tunsavedIconLoader$: Observable<void> | undefined;\n\tloggedInUser$: Observable<any>;\n\tuserback$: Observable<any>;\n\n\tconstructor(\n\t\tprivate userbackService: UserbackService,\n\t\tprivate store: Store,\n\t\tprivate authenticationService: AuthenticationService,\n\t\tprivate router: Router,\n\t\tprivate navigationService: NavigationService,\n\t\tprivate iconReg: SvgIconRegistryService\n\t) {\n\t\tthis.unsavedIconLoader$ = this.iconReg.loadSvg('assets/img/custom/unsaved.svg')?.pipe(map(value => void 0));\n\n\t\tthis.routeLoader$ = this.router.events.pipe(\n\t\t\ttap(event => {\n\t\t\t\tif (event instanceof NavigationStart) {\n\t\t\t\t\tconst isNavigatingFromOrToBuilder =\n\t\t\t\t\t\tthis.navigationService.isInBuilder || this.navigationService.navigatingToBuilder(event.url);\n\t\t\t\t\tif (!this.routeLoader) this.routeLoader = isNavigatingFromOrToBuilder;\n\t\t\t\t}\n\n\t\t\t\tif (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n\t\t\t\t\tthis.routeLoader = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tngOnInit(): void {\n\t\tLogRocket.init('sz7toh/activepieces');\n\n\t\tthis.loggedInUser$ = this.authenticationService.currentUserSubject.pipe(\n\t\t\ttap(user => {\n\t\t\t\tif (user == undefined || Object.keys(user).length == 0) {\n\t\t\t\t\tthis.store.dispatch(CommonActions.clearState());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tLogRocket.identify(user.id.toString(), {\n\t\t\t\t\tname: user.firstName + ' ' + user.lastName,\n\t\t\t\t\temail: user.email,\n\t\t\t\t});\n\t\t\t\tthis.store.dispatch(CommonActions.loadInitial({ user: user }));\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\t\tthis.userback$ = this.userbackService.openUserbackSubject.pipe(\n\t\t\tmap(() => {\n\t\t\t\tif (document.querySelector('.userback-button')) {\n\t\t\t\t\t(document.querySelector('.userback-button') as HTMLElement).click();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('Userback is not ready yet.');\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n@keyframes loading-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.loading-spin-animation {\r\n  svg {\r\n    transform-origin: 25px 25px 0;\r\n    animation-name: loading-spin;\r\n    animation-duration: 1s;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n  }\r\n  fill: $description;\r\n}\r\n\r\n.route-loader {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: calc($appended-to-body-z-index + 1);\r\n  background-color: $white;\r\n}\r\n\r\n.grey-spinner {\r\n  fill: $description;\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userbackService",
                        "type": "UserbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "iconReg",
                        "type": "SvgIconRegistryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "userbackService",
                        "type": "UserbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "iconReg",
                        "type": "SvgIconRegistryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\r\n\r\n<div\r\n  *ngIf=\"routeLoader\"\r\n  class=\"d-flex flex-grow-1 justify-content-center align-items-center h-100 route-loader w-100\"\r\n>\r\n  <svg-icon\r\n    [svgStyle]=\"{ width: 50, height: 50 }\"\r\n    src=\"assets/img/custom/loading.svg\"\r\n    class=\"loading-spin-animation grey-spinner\"\r\n    [applyClass]=\"true\"\r\n  ></svg-icon>\r\n</div>\r\n<ng-container *ngIf=\"unsavedIconLoader$ | async\"></ng-container>\r\n<ng-container *ngIf=\"loggedInUser$ | async\"></ng-container>\r\n<ng-container *ngIf=\"routeLoader$ | async\"></ng-container>\r\n<ng-container *ngIf=\"userback$ | async\"></ng-container>\r\n\r\n"
        },
        {
            "name": "AuthCheckboxComponent",
            "id": "component-AuthCheckboxComponent-da58527ce4d8bd643c48d2cb300f526516f5a2911ee74df9815170dc5c434bfa6572e14c551b5a84035b294aa99b4ed91ae9c61c6d0833eb45c563ffffafc635",
            "file": "src/app/layout/auth-layout/pages/check-box/auth-checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth-checkbox",
            "styleUrls": [
                "./auth-checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./auth-checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "linkName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emailResetPressed",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "authenticationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationService",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AuthenticationService } from 'src/app/layout/common-layout/service/authentication.service';\n\n@Component({\n\tselector: 'app-auth-checkbox',\n\ttemplateUrl: './auth-checkbox.component.html',\n\tstyleUrls: ['./auth-checkbox.component.scss'],\n})\nexport class AuthCheckboxComponent {\n\t@Input() email: string;\n\t@Input() loading: boolean = false;\n\t@Input() linkName;\n\t@Output() emailResetPressed: EventEmitter<any> = new EventEmitter<any>();\n\n\tconstructor(public authenticationService: AuthenticationService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.auth-form-title {\r\n  font-weight: 600;\r\n  color: $title;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 1.563rem;\r\n}\r\n\r\n.card-footer {\r\n  text-align: center;\r\n  padding-top: 1.25rem;\r\n  padding-bottom: 0rem;;\r\n}\r\n",
                    "styleUrl": "./auth-checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"email-confirmation-container\">\r\n  <div class=\"auth-form-title\">Check your Inbox</div>\r\n\r\n  <div style=\"text-align: center;\" class=\"mb-4\">\r\n    <img class=\"m-auto\" src=\"/assets/img/custom/mail_sent.png\">\r\n  </div>\r\n  <div class=\"px-2 pb-4 text-center\">\r\n    We sent you a link a link to {{linkName}}, Check your email <strong>{{email}}</strong>\r\n  </div>\r\n  <div class=\"card-footer \">\r\n    <span>Didn't receive an email? <a [hidden]=\"loading\" class=\"text-link\"\r\n                                      (click)=\"emailResetPressed.emit(true)\">Resend</a></span>\r\n    <span [hidden]=\"!loading\" class=\"text-disable\">Resending</span>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AuthenticationComponent",
            "id": "component-AuthenticationComponent-eb84c8ed4b28a5868a3aac402df359b9fe2f624a14559900c68665f7318afcd701831b6134b8ce1343b84c698220cd71403cff590520bbd4365a9903e4451783",
            "file": "src/app/layout/dashboard-layout/pages/authentication/authentication.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-authentication",
            "styleUrls": [
                "./authentication.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./authentication.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authentications$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type[]>",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef<FirebaseProjectIdModalComponent | SigningKeyModalComponent>",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "environments$",
                    "defaultValue": "of([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ProjectEnvironment[]>",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "firebaseTableColumns",
                    "defaultValue": "[\n\t\t{ columnName: 'Environment', propertyName: 'environmentName' },\n\t\t{\n\t\t\tcolumnName: 'Firebase Project ID',\n\t\t\tpropertyName: 'projectId',\n\t\t\temptyValueText: 'Not set',\n\t\t},\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "tableColumnNameAndProperty[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "selectedAuthenticationType",
                    "defaultValue": "AuthenticationType.SIGNING_KEY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "signingKeyTableColumns",
                    "defaultValue": "[\n\t\t{ columnName: 'Environment', propertyName: 'environmentName' },\n\t\t{\n\t\t\tcolumnName: 'Key',\n\t\t\tpropertyName: 'dateGenerated',\n\t\t\temptyValueText: 'No key was generated',\n\t\t},\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "tableColumnNameAndProperty[]",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [
                {
                    "name": "firebaseAuthenticationsSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openFireabseProjectIdModal",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "environmentName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "environmentName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "projectId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openGenerateKeyModal",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "environmentName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "environmentName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "prepareTableData",
                    "args": [
                        {
                            "name": "authentications",
                            "type": "ProjectAuthentication[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "authentications",
                            "type": "ProjectAuthentication[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setAuthenticationType",
                    "args": [
                        {
                            "name": "type",
                            "type": "AuthenticationType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "AuthenticationType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signingKeyAuthenticationsSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { map, Observable, of, Subject, switchMap, takeUntil } from 'rxjs';\nimport { tableColumnNameAndProperty } from 'src/app/layout/common-layout/components/table/columnNameAndProperty';\nimport { AuthenticationType } from 'src/app/layout/common-layout/helper/authentication-type.enum';\nimport { ProjectAuthentication } from 'src/app/layout/common-layout/model/authentication';\nimport { ProjectEnvironment } from 'src/app/layout/common-layout/model/project-environment.interface';\nimport { TimeHelperService } from 'src/app/layout/common-layout/service/time-helper.service';\nimport { NavigationService } from '../../service/navigation.service';\nimport { fetchAuthenticationsSuccessful } from '../../store/action/authentication.action';\nimport {\n\tselectFirebaseAuthentications,\n\tselectSigningKeyAuthentications,\n} from '../../store/selectors/authentication.selector';\nimport { FirebaseProjectIdModalComponent } from './firebase-project-id-modal/firebase-project-id-modal.component';\nimport { SigningKeyModalComponent } from './signing-key-modal/signing-key-modal.component';\nimport { EnvironmentSelectors } from '../../../common-layout/store/selector/environment.selector';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\n\n@Component({\n\tselector: 'app-authentication',\n\ttemplateUrl: './authentication.component.html',\n\tstyleUrls: ['./authentication.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class AuthenticationComponent implements OnInit, OnDestroy {\n\tdestroyed$: Subject<boolean> = new Subject<boolean>();\n\tbsModalRef: BsModalRef<FirebaseProjectIdModalComponent | SigningKeyModalComponent>;\n\tselectedAuthenticationType = AuthenticationType.SIGNING_KEY;\n\tauthentications$: Observable<\n\t\t{\n\t\t\tenvironmentName: string;\n\t\t\tdateGenerated: string;\n\t\t\tprojectId: string;\n\t\t\tenvironmentId: string;\n\t\t}[]\n\t>;\n\tenvironments$: Observable<ProjectEnvironment[]> = of([]);\n\tfirebaseTableColumns: tableColumnNameAndProperty[] = [\n\t\t{ columnName: 'Environment', propertyName: 'environmentName' },\n\t\t{\n\t\t\tcolumnName: 'Firebase Project ID',\n\t\t\tpropertyName: 'projectId',\n\t\t\temptyValueText: 'Not set',\n\t\t},\n\t];\n\tsigningKeyTableColumns: tableColumnNameAndProperty[] = [\n\t\t{ columnName: 'Environment', propertyName: 'environmentName' },\n\t\t{\n\t\t\tcolumnName: 'Key',\n\t\t\tpropertyName: 'dateGenerated',\n\t\t\temptyValueText: 'No key was generated',\n\t\t},\n\t];\n\tconstructor(\n\t\tprivate modalService: BsModalService,\n\t\tprivate navigationService: NavigationService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate store: Store,\n\t\tprivate timeHelper: TimeHelperService\n\t) {}\n\n\tngOnDestroy(): void {\n\t\tthis.destroyed$.next(true);\n\t\tthis.destroyed$.complete();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.navigationService.setTitle('Authentication');\n\n\t\tthis.environments$ = this.store.select(EnvironmentSelectors.selectEnvironments);\n\t\tconst authentications = this.route.snapshot.data['authentications'] as ProjectAuthentication[];\n\t\tthis.store.dispatch(fetchAuthenticationsSuccessful({ authentications: authentications }));\n\t\tthis.signingKeyAuthenticationsSelected();\n\t}\n\n\tget AuthenticationType() {\n\t\treturn AuthenticationType;\n\t}\n\n\topenFireabseProjectIdModal(environmentId: string, environmentName: string, projectId: string) {\n\t\tthis.bsModalRef = this.modalService.show(FirebaseProjectIdModalComponent, {\n\t\t\tclass: 'modal-dialog-centered',\n\t\t\tinitialState: {\n\t\t\t\tenvironmentId: environmentId,\n\t\t\t\tenvironmentName: environmentName,\n\t\t\t\tcurrentProjectId: projectId,\n\t\t\t},\n\t\t});\n\t}\n\topenGenerateKeyModal(environmentId: string, environmentName: string) {\n\t\tthis.bsModalRef = this.modalService.show(SigningKeyModalComponent, {\n\t\t\tclass: 'modal-dialog-centered',\n\t\t\tkeyboard: false,\n\t\t\tbackdrop: 'static',\n\t\t\tinitialState: {\n\t\t\t\tenvironmentId: environmentId,\n\t\t\t\tenvironmentName: environmentName,\n\t\t\t},\n\t\t});\n\t}\n\n\tsetAuthenticationType(type: AuthenticationType) {\n\t\tthis.selectedAuthenticationType = type;\n\t\tif (this.selectedAuthenticationType === AuthenticationType.FIREBASE) {\n\t\t\tthis.firebaseAuthenticationsSelected();\n\t\t} else {\n\t\t\tthis.signingKeyAuthenticationsSelected();\n\t\t}\n\t}\n\n\tfirebaseAuthenticationsSelected() {\n\t\tthis.authentications$ = this.store\n\t\t\t.select(selectFirebaseAuthentications)\n\t\t\t.pipe(takeUntil(this.destroyed$))\n\t\t\t.pipe(switchMap(this.prepareTableData.bind(this)));\n\t}\n\n\tsigningKeyAuthenticationsSelected() {\n\t\tthis.authentications$ = this.store\n\t\t\t.select(selectSigningKeyAuthentications)\n\t\t\t.pipe(takeUntil(this.destroyed$))\n\t\t\t.pipe(switchMap(this.prepareTableData.bind(this)));\n\t}\n\n\tprepareTableData(authentications: ProjectAuthentication[]): Observable<any> {\n\t\treturn this.environments$.pipe(\n\t\t\tmap(environments => {\n\t\t\t\treturn environments.map(e => {\n\t\t\t\t\tconst tableValue = {\n\t\t\t\t\t\tenvironmentName: e.name,\n\t\t\t\t\t\tdateGenerated: '',\n\t\t\t\t\t\tprojectId: '',\n\t\t\t\t\t\tenvironmentId: e.id,\n\t\t\t\t\t};\n\t\t\t\t\tconst envAuthentication = authentications.find(a => a.environmentId === e.id);\n\t\t\t\t\tif (envAuthentication) {\n\t\t\t\t\t\tif (envAuthentication.type === AuthenticationType.FIREBASE && envAuthentication.firebaseProjectId) {\n\t\t\t\t\t\t\ttableValue.projectId = envAuthentication.firebaseProjectId;\n\t\t\t\t\t\t} else if (envAuthentication.type === AuthenticationType.SIGNING_KEY) {\n\t\t\t\t\t\t\ttableValue.dateGenerated = `Last key was generated on ${this.timeHelper.formatDateToString(\n\t\t\t\t\t\t\t\tnew Date(envAuthentication.epochCreationTime * 1000)\n\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn tableValue;\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.ap-title {\r\n  font-weight: 700;\r\n  font-size: 0.875rem;\r\n  line-height: 1.375rem;\r\n  color: $body;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.ap-description {\r\n  font-weight: 400;\r\n  font-size: 0.8125rem;\r\n  line-height: 1.375rem;\r\n  color: $description;\r\n  margin-bottom: 0px;\r\n}\r\n\r\n.description-column {\r\n  padding: 0rem 6.25rem 0rem 2.5rem;\r\n  min-width: 23.75rem;\r\n  .description-container {\r\n    max-width: 15rem;\r\n    gap: 0.3125rem;\r\n  }\r\n}\r\n\r\n.type-choice {\r\n  gap: 1.25rem;\r\n\r\n  .choice-icon {\r\n    width: 1.875rem;\r\n    height: 1.875rem;\r\n    margin-right: 10px;\r\n    &.staging-key-icon {\r\n      fill: $body;\r\n    }\r\n  }\r\n\r\n  .choice {\r\n    padding: 1.5625rem;\r\n    gap: 0.625rem;\r\n    border: 1px solid $dividers;\r\n    border-radius: 5px;\r\n    background: $grayCard;\r\n    &:hover {\r\n      border-color: $primary;\r\n      cursor: pointer;\r\n    }\r\n    transition: all 0.2s ease;\r\n    &.selected-choice {\r\n      border-color: $primary;\r\n      background-color: $primary-light;\r\n\r\n      .ap-title {\r\n        color: $primary-hover;\r\n      }\r\n      .ap-description {\r\n        color: $primary;\r\n      }\r\n      .choice-icon {\r\n        &.staging-key-icon {\r\n          fill: $primary;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.staging-key-note {\r\n  p {\r\n    margin: 0px;\r\n    font-weight: 400;\r\n    font-size: 0.875rem;\r\n    line-height: 1.375rem;\r\n  }\r\n  background-color: $grayCard;\r\n  color: $formLabel;\r\n  border: 1px solid $dividers;\r\n  border-radius: 5px;\r\n  padding: 1.25rem 1.5625rem;\r\n  gap: 2.5rem;\r\n  font-weight: 400;\r\n  font-size: 0.875rem;\r\n  line-height: 1.375rem;\r\n}\r\n\r\n.authentication-container {\r\n  margin-top: 2.5rem;\r\n  gap: 3.125rem;\r\n  margin-right: calc(40px - 1.25rem);\r\n}\r\n\r\n.generate-or-add-btn {\r\n  gap: 0.375rem;\r\n  .generate-or-add-btn-icon {\r\n    height: 0.75rem;\r\n    width: 0.75rem;\r\n    fill: $primary;\r\n  }\r\n}\r\n\r\n.table-and-note-container {\r\n  gap: 1.25rem;\r\n}\r\n",
                    "styleUrl": "./authentication.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeHelper",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeHelper",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "AuthenticationType": {
                    "name": "AuthenticationType",
                    "getSignature": {
                        "name": "AuthenticationType",
                        "type": "",
                        "returnType": "",
                        "line": 79
                    }
                }
            },
            "templateData": "<section class=\"authentication-container d-flex flex-column\">\r\n  <div class=\"auhtentication-type d-flex\">\r\n    <div class=\"description-column\">\r\n      <div class=\"description-container d-flex flex-column flex-grow-1\">\r\n        <p class=\"ap-title\">Authentication Type</p>\r\n        <p class=\"ap-description\">\r\n          How do you want to authenticate your app users' accounts?\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"type-choice flex-grow-1 d-flex\">\r\n      <div class=\"signing-keys w-50 choice d-flex flex-column\"\r\n        (click)=\"setAuthenticationType(AuthenticationType.SIGNING_KEY)\" [class.selected-choice]=\"\r\n          selectedAuthenticationType === AuthenticationType.SIGNING_KEY\r\n        \">\r\n        <div class=\"d-flex align-items-center\">\r\n          <svg-icon src=\"assets/img/custom/key.svg\" class=\"choice-icon staging-key-icon\" [applyClass]=\"true\"></svg-icon>\r\n          <p class=\"ap-title\">Signing Keys</p>\r\n        </div>\r\n        <p class=\"ap-description\">\r\n          Generate tokens with a signing key (Generate in the following\r\n          section).\r\n        </p>\r\n      </div>\r\n\r\n      <div class=\"firebase choice flex-column d-flex w-50\" (click)=\"setAuthenticationType(AuthenticationType.FIREBASE)\"\r\n        [class.selected-choice]=\"\r\n          selectedAuthenticationType === AuthenticationType.FIREBASE\r\n        \">\r\n        <div class=\"d-flex align-items-center\">\r\n          <svg-icon src=\"assets/img/custom/firebase.svg\" class=\"choice-icon\" [applyClass]=\"true\"></svg-icon>\r\n          <p class=\"ap-title\">Firebase</p>\r\n        </div>\r\n        <p class=\"ap-description\">\r\n          Use Firebase ID tokens (if you use Firebase Authentication).\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"authentication-values d-flex\">\r\n    <div class=\"description-column\">\r\n      <div class=\"description-container d-flex flex-column\">\r\n        <ng-container *ngIf=\"\r\n            selectedAuthenticationType === AuthenticationType.SIGNING_KEY;\r\n            else firebase\r\n          \">\r\n          <div @fadeInUp>\r\n            <p class=\"ap-title\">Signing Keys</p>\r\n            <p class=\"ap-description\">\r\n              Generate and download your private key to sign users IDs with it.\r\n            </p>\r\n          </div>\r\n        </ng-container>\r\n\r\n        <ng-template #firebase>\r\n          <div @fadeInUp>\r\n            <p class=\"ap-title\">Firebase Project ID</p>\r\n            <p class=\"ap-description\">\r\n              Find your Firebase Project ID in Firebase Console and set it here.\r\n            </p>\r\n          </div>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"selectedAuthenticationType === AuthenticationType.SIGNING_KEY\" @fadeInUp\r\n\r\n      class=\"flex-grow-1 d-flex flex-column table-and-note-container\">\r\n\r\n\r\n      <div class=\"staging-key-note d-flex align-items-center\">\r\n        <p>\r\n          To keep your keys safe, we don't store them on Activepieces. If you\r\n          lost an old signing key, generate a new one and make sure you update\r\n          it in your app.\r\n        </p>\r\n      </div>\r\n      <app-table [columnNamesAndProperties]=\"signingKeyTableColumns\" [values]=\"authentications$ | async\"\r\n        [actionButtonTemplate]=\"generateKeyBtn\">\r\n      </app-table>\r\n    </div>\r\n    <div  *ngIf=\"selectedAuthenticationType === AuthenticationType.FIREBASE\" @fadeInUp\r\n      class=\"flex-grow-1 d-flex flex-column\">\r\n      <app-table [columnNamesAndProperties]=\"firebaseTableColumns\" [values]=\"authentications$ | async\"\r\n        [actionButtonTemplate]=\"updateProjectIdBtn\">\r\n      </app-table>\r\n    </div>\r\n\r\n  </div>\r\n</section>\r\n\r\n<ng-template let-authentication #updateProjectIdBtn>\r\n  <app-button btnStyle=\"stroked\" (buttonClicked)=\"openFireabseProjectIdModal(\r\n    authentication.environmentId,\r\n    authentication.environmentName,\r\n    authentication.projectId\r\n  )\">\r\n<div class=\"d-flex generate-or-add-btn justify-content-center \">\r\n  <svg-icon class=\"generate-or-add-btn-icon\" src=\"assets/img/custom/pencil.svg\" [applyClass]=\"true\"></svg-icon>\r\n  Update\r\n</div>\r\n\r\n</app-button>\r\n\r\n</ng-template>\r\n<ng-template let-authentication #generateKeyBtn>\r\n  <app-button btnStyle=\"stroked\" (buttonClicked)=\"openGenerateKeyModal(\r\n    authentication.environmentId,\r\n    authentication.environmentName\r\n  )\">\r\n<div class=\"d-flex generate-or-add-btn justify-content-center \">\r\n  <svg-icon class=\"generate-or-add-btn-icon\" src=\"assets/img/custom/pencil.svg\" [applyClass]=\"true\"></svg-icon>\r\n  Generate\r\n</div>\r\n\r\n</app-button>\r\n\r\n</ng-template>\r\n"
        },
        {
            "name": "AuthLayoutComponent",
            "id": "component-AuthLayoutComponent-8e5368a34615282bb3fc4f87806334ed6c7f5f372185d264e96c4919662d4c9f9c0cc3e87f35595f744e9faf1c137451189c808cc3a4984c169f39a2ae246a2f",
            "file": "src/app/layout/auth-layout/auth-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth",
            "styleUrls": [
                "./auth-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./auth-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-auth',\n\ttemplateUrl: './auth-layout.component.html',\n\tstyleUrls: ['./auth-layout.component.scss'],\n})\nexport class AuthLayoutComponent {\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.auth-form-background {\r\n  background-image: url(\"/assets/img/custom/forms-background.png\");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\n.auth-logo-section {\r\n  color: $title;\r\n  font-weight: 600;\r\n  font-size: calc(1.2rem * 1.4);\r\n  margin-bottom: 1.875rem;\r\n  background: $white;\r\n}\r\n\r\n.auth-form-container {\r\n  width: 90%;\r\n  max-width: 480px;\r\n  padding: 1.75rem;\r\n  position: relative;\r\n  .form-control {\r\n    &:focus {\r\n      border: 1px solid #6e41e2;\r\n      box-shadow: 0px 0px 0px 4px rgba(110, 65, 226, 0.14);\r\n    }\r\n  }\r\n}\r\n\r\n.auth-logo {\r\n  margin-top: -2px;\r\n  margin-right: 0.313rem;\r\n}\r\n",
                    "styleUrl": "./auth-layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div\r\n  class=\"d-column justify-content-center align-items-center auth-form-background\"\r\n>\r\n  <div\r\n    class=\"auth-logo-section d-flex justify-content-center align-items-center\"\r\n  >\r\n    <svg-icon\r\n      [svgStyle]=\"{ width: 210, height: 32 }\"\r\n      src=\"assets/img/custom/full-logo.svg\"\r\n      class=\"auth-logo\"\r\n    >\r\n    </svg-icon>\r\n  </div>\r\n\r\n  <div class=\"card auth-form-container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "BasicSelectComponent",
            "id": "component-BasicSelectComponent-eef1d18d1ec7729218f2f3f5f0037ecaac401d5c66613f07bdcb0ce3f202ac81b0cbcc33845cc3d64dba345049ff54866c2388d1ce23cb37f5f6b920bd4ed297",
            "file": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/basic-select/basic-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-basic-select",
            "styleUrls": [
                "./basic-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./basic-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "clearable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "defaultMessage",
                    "defaultValue": "'No options'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dynamicControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "DropdownFormControl | null",
                    "decorators": []
                },
                {
                    "name": "searchable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dynamicDropdownObs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<DynamicDropdownResult>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "faChevronDown",
                    "defaultValue": "faChevronDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "opened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "wasInside",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "clicked",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "itemSelected",
                    "args": [
                        {
                            "name": "item",
                            "type": "DropdownItemOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "DropdownItemOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "refresh",
                    "args": [
                        {
                            "name": "requestBody",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "requestBody",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { map, Observable, shareReplay, tap } from 'rxjs';\nimport { DynamicDropdownResult } from 'src/app/layout/common-layout/model/dynamic-controls/dynamic-dropdown-result';\nimport { DropdownItemOption } from 'src/app/layout/common-layout/model/fields/variable/subfields/dropdown-item-option';\nimport { DynamicDropdownService } from 'src/app/layout/common-layout/service/dynamic-dropdown.service';\n\nimport { DropdownFormControl } from '../../../../model/dynamic-controls/dropdown-form-control';\n\n@Component({\n\tselector: 'app-basic-select',\n\ttemplateUrl: './basic-select.component.html',\n\tstyleUrls: ['./basic-select.component.scss'],\n})\nexport class BasicSelectComponent implements OnInit {\n\topened = false;\n\twasInside = false;\n\n\tfaChevronDown = faChevronDown;\n\t@Input() searchable = false;\n\t@Input() clearable = false;\n\t@Input() dynamicControl: DropdownFormControl | null;\n\t@Input() defaultMessage: string = 'No options';\n\tdynamicDropdownObs$: Observable<DynamicDropdownResult>;\n\tconstructor(private dynamicDropdownService: DynamicDropdownService) {}\n\tngOnInit(): void {\n\t\tif (this.dynamicControl?.isDynamic) {\n\t\t\tconsole.log('refresh listener');\n\t\t\tthis.dynamicControl.dynamicDropdownRefreshSubject.subscribe(refreshersValues => {\n\t\t\t\tconsole.log('refresh subscriber');\n\t\t\t\tthis.refresh(refreshersValues);\n\t\t\t});\n\t\t\tthis.dynamicDropdownService.refreshersListenerIsReadySubject.next(this.dynamicControl.getName());\n\t\t}\n\t}\n\n\trefresh(requestBody: { [key: string]: any }) {\n\t\tconsole.log('refresh');\n\t\tif (this.dynamicControl) {\n\t\t\tif (this.dynamicControl.collectionVersionId) {\n\t\t\t\tthis.dynamicDropdownObs$ = this.dynamicDropdownService.refreshCollectionDynamicDropdownConfig(\n\t\t\t\t\tthis.dynamicControl.collectionVersionId,\n\t\t\t\t\tthis.dynamicControl.getName(),\n\t\t\t\t\trequestBody\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.dynamicDropdownObs$ = this.dynamicDropdownService.refreshFlowDynamicDropdownConfig(\n\t\t\t\t\tthis.dynamicControl.flowVersionId,\n\t\t\t\t\tthis.dynamicControl.getName(),\n\t\t\t\t\trequestBody\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis.dynamicDropdownObs$ = this.dynamicDropdownObs$.pipe(\n\t\t\t\tmap(res => {\n\t\t\t\t\tif (!res) {\n\t\t\t\t\t\tconst emptyResult = new DynamicDropdownResult();\n\t\t\t\t\t\temptyResult.placeholder = 'No options';\n\t\t\t\t\t\temptyResult.loaded = true;\n\t\t\t\t\t\temptyResult.options = [];\n\t\t\t\t\t\tconsole.warn('returned result of dynamic dropdown was null');\n\t\t\t\t\t\treturn emptyResult;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres.loaded = true;\n\t\t\t\t\t}\n\t\t\t\t\treturn res;\n\t\t\t\t}),\n\t\t\t\ttap(res => {\n\t\t\t\t\t// if (res.disabled) this.dynamicControl?.formControl().disable();\n\t\t\t\t}),\n\t\t\t\tshareReplay()\n\t\t\t);\n\t\t\t// this.dynamicControl?.formControl().disable();\n\t\t}\n\t}\n\titemSelected(item: DropdownItemOption) {\n\t\treturn this.dynamicControl?.formControl().value == item.value;\n\t}\n\tclicked(event: Event) {\n\t\tevent.stopImmediatePropagation();\n\t\tconsole.log('clicked');\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n@keyframes loading-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.loading-spin-animation {\r\n  svg {\r\n    transform-origin: 6.7px 6.7px 0;\r\n    animation-name: loading-spin;\r\n    animation-duration: 1s;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n  }\r\n}\r\n",
                    "styleUrl": "./basic-select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dynamicDropdownService",
                        "type": "DynamicDropdownService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "dynamicDropdownService",
                        "type": "DynamicDropdownService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"dynamicControl\">\r\n  <ng-container *ngIf=\"!dynamicControl.isDynamic; else dynamicDropdown\">\r\n    <ng-select\r\n      [items]=\"dynamicControl.getDropdownOptions()\"\r\n      bindLabel=\"label\"\r\n      autofocus\r\n      bindValue=\"value\"\r\n      [clearable]=\"clearable\"\r\n      [searchable]=\"searchable\"\r\n      [formControl]=\"dynamicControl.formControl()\"\r\n      placeholder=\"Please select\"\r\n      appendTo=\"body\"\r\n    >\r\n      <ng-template ng-option-tmp let-item=\"item\">\r\n        <div class=\"d-flex\">\r\n          <div class=\"flex-grow-1\">{{ item.label }}</div>\r\n          <svg-icon\r\n            *ngIf=\"itemSelected(item)\"\r\n            src=\"assets/img/custom/check.svg\"\r\n            class=\"check-icon\"\r\n            [applyClass]=\"true\"\r\n          >\r\n          </svg-icon>\r\n        </div>\r\n      </ng-template>\r\n    </ng-select>\r\n  </ng-container>\r\n  <ng-template #dynamicDropdown>\r\n    <ng-select\r\n      [formControl]=\"dynamicControl.formControl()\"\r\n      [items]=\"(dynamicDropdownObs$ | async)?.options || []\"\r\n      [loading]=\"!(dynamicDropdownObs$ | async)?.loaded || false\"\r\n      appendTo=\"body\"\r\n      [placeholder]=\"\r\n        !(dynamicDropdownObs$ | async)?.loaded\r\n          ? 'Loading...'\r\n          : (dynamicDropdownObs$ | async)?.placeholder!\r\n      \"\r\n      bindLabel=\"label\"\r\n      bindValue=\"value\"\r\n      [clearable]=\"clearable\"\r\n      [searchable]=\"searchable\"\r\n    >\r\n      <ng-template ng-option-tmp let-item=\"item\">\r\n        <div class=\"d-flex option-container\">\r\n          <div class=\"flex-grow-1\">{{ item.label }}</div>\r\n          <svg-icon\r\n            *ngIf=\"itemSelected(item)\"\r\n            src=\"assets/img/custom/check.svg\"\r\n            class=\"check-icon\"\r\n            [applyClass]=\"true\"\r\n          >\r\n          </svg-icon>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template ng-loadingspinner-tmp>\r\n        <svg-icon\r\n          [svgStyle]=\"{ width: 14, height: 14 }\"\r\n          src=\"assets/img/custom/loading.svg\"\r\n          class=\"loading-spin-animation black-spinner\"\r\n          [applyClass]=\"true\"\r\n        ></svg-icon>\r\n      </ng-template>\r\n    </ng-select>\r\n  </ng-template>\r\n</div>\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-43a3e8873d1301367bef985b4d62ad85da506f5127fb73a3ded2eb978967db7ccbe1ce254ac7625aaf093f69f721e6f3dd1067026053af118d2b6dac60f224e8",
            "file": "src/app/layout/common-layout/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: CheckboxComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "state",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "stateChanged",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "falseSvgSrc",
                    "defaultValue": "'assets/img/custom/checkbox-control/false.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "trueSvgSrc",
                    "defaultValue": "'assets/img/custom/checkbox-control/true.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "checkboxClicked",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "onChange",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "onChange",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n\tselector: 'app-checkbox',\n\ttemplateUrl: './checkbox.component.html',\n\tstyleUrls: ['./checkbox.component.css'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: CheckboxComponent,\n\t\t},\n\t],\n})\nexport class CheckboxComponent implements ControlValueAccessor {\n\ttrueSvgSrc = 'assets/img/custom/checkbox-control/true.svg';\n\tfalseSvgSrc = 'assets/img/custom/checkbox-control/false.svg';\n\t@Input() label: string;\n\n\t@Input()\n\tstate = false;\n\t@Output() stateChanged: EventEmitter<boolean> = new EventEmitter();\n\tonChange = (state: boolean) => {};\n\tconstructor() {}\n\n\twriteValue(state: boolean): void {\n\t\tthis.state = state;\n\t}\n\tregisterOnChange(onChange: any): void {\n\t\tthis.onChange = onChange;\n\t}\n\tregisterOnTouched(fn: any): void {}\n\n\tcheckboxClicked(event: MouseEvent) {\n\t\tevent.stopPropagation();\n\t\tthis.state = !this.state;\n\t\tthis.onChange(this.state);\n\t\tthis.stateChanged.emit(this.state);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ap-checkbox {\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\n",
                    "styleUrl": "./checkbox.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 24
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<svg-icon\r\n  [svgStyle]=\"{ width: 16, height: 16 }\"\r\n  [src]=\"state ? trueSvgSrc : falseSvgSrc\"\r\n  class=\"ap-checkbox\"\r\n  (click)=\"checkboxClicked($event)\"\r\n>\r\n</svg-icon>\r\n<span class=\"ml-2 cursor-pointer\" (click)=\"checkboxClicked($event)\">{{label}}</span>\r\n"
        },
        {
            "name": "ChevronDropdownMenuComponent",
            "id": "component-ChevronDropdownMenuComponent-baaf88ac68370091f849f6885c58076a998447a30716ad131c2a58b0fd4968d9937fd23d731c0da5a34450e4624234f2c1219d84f1e89aa3c79f541a7d2b80a3",
            "file": "src/app/layout/flow-builder/components/chevron-dropdown-menu/chevron-dropdown-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-chevron-dropdown-menu",
            "styleUrls": [
                "./chevron-dropdown-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./chevron-dropdown-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appendToBody",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ChevronDropdownOption[]",
                    "decorators": []
                },
                {
                    "name": "elementPopupsAreRelativeTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "HTMLElement",
                    "decorators": []
                },
                {
                    "name": "useChevron",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dropDownOpenedChanged",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "selectValueChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "COPY_SVG",
                    "defaultValue": "'assets/img/custom/copy.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "copySvg",
                    "defaultValue": "this.COPY_SVG",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "dropwDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsDropdownDirective",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dropDown'"
                        }
                    ]
                },
                {
                    "name": "faCaretDown",
                    "defaultValue": "faCaretDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "faChevronDown",
                    "defaultValue": "faChevronDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "TRICK",
                    "defaultValue": "'assets/img/custom/transparent-check.svg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "copyId",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "option",
                            "type": "ChevronDropdownOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "option",
                            "type": "ChevronDropdownOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dropdownOpenStateChanged",
                    "args": [
                        {
                            "name": "opened",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "opened",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitAction",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { faCaretDown, faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { ChevronDropdownOption, ChevronDropdownOptionType } from './chevron-dropdown-option';\n\n@Component({\n\tselector: 'app-chevron-dropdown-menu',\n\ttemplateUrl: './chevron-dropdown-menu.component.html',\n\tstyleUrls: ['./chevron-dropdown-menu.component.scss'],\n})\nexport class ChevronDropdownMenuComponent {\n\t@Input() data: ChevronDropdownOption[];\n\t@Input() useChevron = false;\n\t@Output() selectValueChange: EventEmitter<string> = new EventEmitter<string>();\n\t@Output() dropDownOpenedChanged: EventEmitter<boolean> = new EventEmitter();\n\t@Input() appendToBody: boolean;\n\t@Input() elementPopupsAreRelativeTo: HTMLElement;\n\t@ViewChild('dropDown') dropwDown: BsDropdownDirective;\n\tCOPY_SVG = 'assets/img/custom/copy.svg';\n\tTRICK = 'assets/img/custom/transparent-check.svg';\n\n\tcopySvg = this.COPY_SVG;\n\n\tfaCaretDown = faCaretDown;\n\tfaChevronDown = faChevronDown;\n\tconstructor() {}\n\n\temitAction(id: string, event: MouseEvent) {\n\t\tevent.stopImmediatePropagation();\n\t\tthis.dropwDown?.hide();\n\t\tthis.selectValueChange.emit(id);\n\t}\n\n\tdropdownOpenStateChanged(opened: boolean) {\n\t\tthis.dropDownOpenedChanged.emit(opened);\n\t}\n\n\tget itemType() {\n\t\treturn ChevronDropdownOptionType;\n\t}\n\n\tcopyId(event, option: ChevronDropdownOption) {\n\t\tevent.stopPropagation();\n\t\tthis.copySvg = this.TRICK;\n\t\tnavigator.clipboard.writeText(option.name!);\n\t\tsetTimeout(() => {\n\t\t\tthis.copySvg = this.COPY_SVG;\n\t\t}, 1500);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.dropdown{\r\n  display: block !important;;\r\n}\r\n\r\n.dropdown-menu {\r\n  &::before{\r\n    background-color: transparent;\r\n  }\r\n  left:-5rem !important;\r\n}\r\n\r\n.id-text-height{\r\n  line-height: 34px;\r\n}\r\n\r\n.dropdown-item:hover {\r\n  background: $grayCard;\r\n}\r\n\r\n.caret {\r\n  color: $resetCase;\r\n}\r\n\r\n.chevron {\r\n  color: $body;\r\n}\r\n.non-locally-relative {\r\n  position: unset !important;\r\n}\r\n\r\n.dropdown-menu-margin-top\r\n{\r\n  margin-top: -12px !important;\r\n}\r\n\r\n.copy-icon\r\n{\r\n  margin-left:5px;\r\n  svg{\r\n    width: 15px;\r\n    height: 15px;\r\n    fill:$body;\r\n  }\r\n}\r\n",
                    "styleUrl": "./chevron-dropdown-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "accessors": {
                "itemType": {
                    "name": "itemType",
                    "getSignature": {
                        "name": "itemType",
                        "type": "",
                        "returnType": "",
                        "line": 38
                    }
                }
            },
            "templateData": "<div\r\n    class=\"dropdown\"\r\n    dropdown\r\n    (isOpenChange)=\"dropdownOpenStateChanged($event)\"\r\n    #dropDown=\"bs-dropdown\"\r\n    #dropDownButton\r\n    [container]=\"appendToBody?'body':''\"\r\n\r\n  >\r\n    <i\r\n      class=\"dropdown-toggle-pointer\"\r\n      dropdownToggle\r\n      [class.caret]=\"!useChevron\"\r\n      [class.chevron]=\"useChevron\"\r\n\r\n    >\r\n      <fa-icon *ngIf=\"!useChevron\" [icon]=\"faCaretDown\"></fa-icon>\r\n      <fa-icon *ngIf=\"useChevron\" [icon]=\"faChevronDown\"></fa-icon>\r\n    </i>\r\n    <div\r\n      *dropdownMenu\r\n      class=\"dropdown-menu\"\r\n      [class.dropdown-menu-margin-top]=\"appendToBody\"\r\n      #dropDownElement\r\n    >\r\n      <div class=\"dropwdown-items-container\">\r\n        <ng-container *ngFor=\"let option of data\">\r\n          <ng-container *ngIf=\"option.type === itemType.SEPARATOR\">\r\n            <div class=\"dropdown-divider\"></div>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"option.type === itemType.COPY_ID\">\r\n            <div class=\"dropdown-item d-flex align-items-center\">\r\n              <div class=\"id-text-height flex-grow-1 \" (click)=\"copyId($event, option)\">\r\n                <span class=\"text-description\">ID:</span> {{option.name!.substring(0,20)}}...\r\n              </div>\r\n               <svg-icon class=\"copy-icon\"\r\n                         [src]=\"copySvg\"\r\n                         matTooltip=\"Copy\"\r\n                         [applyClass]=\"true\"\r\n                         (click)=\"copyId($event, option)\"></svg-icon>\r\n            </div>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"option.type === itemType.NORMAL\">\r\n            <a\r\n              class=\"dropdown-item {{ option.cssClasses }}\"\r\n              (click)=\"emitAction(option.id, $event)\"\r\n            >{{ option.name }}</a\r\n            >\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "ClosedBetaComponent",
            "id": "component-ClosedBetaComponent-c509d6f6c5426b929772906a5184f9559301e8a3946432f123d8c61c955531b7e55659340dd89738a558c3b322274ef911aa23b604c5f20277de79724d5d6d44",
            "file": "src/app/layout/auth-layout/pages/closed-beta/closed-beta.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-closed-beta",
            "styleUrls": [
                "./closed-beta.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./closed-beta.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-closed-beta',\n\ttemplateUrl: './closed-beta.component.html',\n\tstyleUrls: ['./closed-beta.component.css'],\n})\nexport class ClosedBetaComponent {\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".card-footer {\r\n  text-align: center;\r\n}\r\n",
                    "styleUrl": "./closed-beta.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div class=\"card-body px-1\">\r\n  <h2 class=\"text-center mb-4 card-header-text\">\r\n    Thank you for your interest\r\n  </h2>\r\n  <div style=\"text-align: center;\" class=\"mb-4\">\r\n    <img class=\"m-auto\" src=\"/assets/img/custom/closed-beta-unicorn.png\">\r\n  </div>\r\n  <div class=\"card-text px-2 text-center\">\r\n    Currently sign up is closed, please contact <a href=\"mailto:hello@activepieces.com\">hello@activepieces.com</a> for\r\n    an access.\r\n  </div>\r\n  <div class=\"card-footer px-1 \">\r\n  </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "CodeArtifactControlFullscreenComponent",
            "id": "component-CodeArtifactControlFullscreenComponent-a3be208293c2d92b0b58b773400c721b7feff962975a94153da1edd3f5c3170ba8ce0c902dfbc4ff3ccfb04c8443ca75d8fb302dccf5220121abb20682892ae2",
            "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/code-artifact-control-fullscreen.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [
                "./code-artifact-control-fullscreen.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./code-artifact-control-fullscreen.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "codeFilesForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "readOnly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addNpmPackage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Object>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "codeEditorOptions",
                    "defaultValue": "{\n\t\tminimap: { enabled: false },\n\t\ttheme: 'vs',\n\t\tlanguage: 'javascript',\n\t\treadOnly: false,\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "consoleResultEditoroptions",
                    "defaultValue": "{\n\t\ttheme: 'lucario',\n\t\tlineWrapping: true,\n\t\treadOnly: 'nocursor',\n\t\tmode: 'shell',\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "executeCodeTest$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CodeTestExecutionResult>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "outputResultEditorOptions",
                    "defaultValue": "{\n\t\ttheme: 'lucario',\n\t\tlineWrapping: true,\n\t\treadOnly: 'nocursor',\n\t\tmode: 'javascript',\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "packageDotJsonOptions",
                    "defaultValue": "{\n\t\tminimap: { enabled: false },\n\t\ttheme: 'vs',\n\t\tlanguage: 'json',\n\t\treadOnly: false,\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "selectedFile",
                    "defaultValue": "SelectedFileInFullscreenCodeEditor.CONTENT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "selectedTab",
                    "defaultValue": "SelectedTabInFullscreenCodeEditor.OUTPUT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "testLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "testResultForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addNewPackage",
                    "args": [
                        {
                            "name": "pkg",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pkg",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "contentControl",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getConsoleResult",
                    "args": [
                        {
                            "name": "codeTestExecutionResult",
                            "type": "CodeTestExecutionResult",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "codeTestExecutionResult",
                            "type": "CodeTestExecutionResult",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPackageDotJsonObject",
                    "args": [],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 134,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openNpmPackageModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openTestCodeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "packageControl",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectFile",
                    "args": [
                        {
                            "name": "fileToSelect",
                            "type": "SelectedFileInFullscreenCodeEditor",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fileToSelect",
                            "type": "SelectedFileInFullscreenCodeEditor",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tabToSelect",
                            "type": "SelectedTabInFullscreenCodeEditor",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tabToSelect",
                            "type": "SelectedTabInFullscreenCodeEditor",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\n\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable, switchMap, take, tap } from 'rxjs';\nimport { CodeTestExecutionResult } from 'src/app/layout/common-layout/model/flow-builder/code-test-execution-result';\nimport { ThemeService } from 'src/app/layout/common-layout/service/theme.service';\nimport { CodeService } from 'src/app/layout/flow-builder/service/code.service';\nimport { SelectedFileInFullscreenCodeEditor } from '../selected-file-in-fullscreeen-code-editor.enum';\nimport { NewAddNpmPackageModalComponent } from './add-npm-package-modal/add-npm-package-modal.component';\nimport { SelectedTabInFullscreenCodeEditor } from './selected-tab-in-fullscreen-code-editor.enum';\nimport { TestCodeFormModalComponent } from './test-code-form-modal/test-code-form-modal.component';\n\ntype PackageName = string;\ntype PackageVersion = string;\n@Component({\n\ttemplateUrl: './code-artifact-control-fullscreen.component.html',\n\tstyleUrls: ['./code-artifact-control-fullscreen.component.scss'],\n})\nexport class CodeArtifactControlFullscreenComponent implements OnInit {\n\t@Input() codeFilesForm: FormGroup;\n\t@Input() readOnly: boolean;\n\tselectedFile = SelectedFileInFullscreenCodeEditor.CONTENT;\n\texecuteCodeTest$: Observable<CodeTestExecutionResult>;\n\tcodeEditorOptions = {\n\t\tminimap: { enabled: false },\n\t\ttheme: 'vs',\n\t\tlanguage: 'javascript',\n\t\treadOnly: false,\n\t};\n\tpackageDotJsonOptions = {\n\t\tminimap: { enabled: false },\n\t\ttheme: 'vs',\n\t\tlanguage: 'json',\n\t\treadOnly: false,\n\t};\n\ttestResultForm: FormGroup;\n\taddNpmPackage$: Observable<Object>;\n\tselectedTab = SelectedTabInFullscreenCodeEditor.OUTPUT;\n\tconsoleResultEditoroptions = {\n\t\ttheme: 'lucario',\n\t\tlineWrapping: true,\n\t\treadOnly: 'nocursor',\n\t\tmode: 'shell',\n\t};\n\toutputResultEditorOptions = {\n\t\ttheme: 'lucario',\n\t\tlineWrapping: true,\n\t\treadOnly: 'nocursor',\n\t\tmode: 'javascript',\n\t};\n\ttestLoading = false;\n\tconstructor(\n\t\tpublic themeService: ThemeService,\n\t\tprivate modalRef: BsModalRef,\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate modalService: BsModalService,\n\t\tprivate codeService: CodeService\n\t) {\n\t\tthis.testResultForm = this.formBuilder.group({ outputResult: new FormControl(), consoleResult: new FormControl() });\n\t}\n\tngOnInit(): void {\n\t\tif (this.readOnly) {\n\t\t\tthis.codeEditorOptions.readOnly = this.readOnly;\n\t\t\tthis.packageDotJsonOptions.readOnly = this.readOnly;\n\t\t}\n\t}\n\n\tselectFile(fileToSelect: SelectedFileInFullscreenCodeEditor) {\n\t\tthis.selectedFile = fileToSelect;\n\t}\n\tselectTab(tabToSelect: SelectedTabInFullscreenCodeEditor) {\n\t\tthis.selectedTab = tabToSelect;\n\t}\n\tget SelectedFileInFullscreenCodeEditor() {\n\t\treturn SelectedFileInFullscreenCodeEditor;\n\t}\n\tget SelectedTabInFullscreenCodeEditor() {\n\t\treturn SelectedTabInFullscreenCodeEditor;\n\t}\n\topenNpmPackageModal() {\n\t\tconst npmModal: BsModalRef<NewAddNpmPackageModalComponent> = this.modalService.show(NewAddNpmPackageModalComponent);\n\t\tthis.addNpmPackage$ = npmModal.content!.packageFound$.pipe(\n\t\t\ttake(1),\n\t\t\ttap(pkg => {\n\t\t\t\tthis.addNewPackage(pkg);\n\t\t\t\tthis.selectedFile = SelectedFileInFullscreenCodeEditor.PACKAGE;\n\t\t\t})\n\t\t);\n\t}\n\taddNewPackage(pkg: { [key: PackageName]: PackageVersion }) {\n\t\tconst packageDotJson = this.getPackageDotJsonObject();\n\t\tpackageDotJson.dependencies = { ...packageDotJson.dependencies, ...pkg };\n\t\tthis.codeFilesForm.get('package')!.setValue(this.codeService.beautifyJson(packageDotJson));\n\t}\n\tgetPackageDotJsonObject(): { dependencies: { [key: PackageName]: PackageVersion } } {\n\t\tconst packageControlValue = this.codeFilesForm.get('package')!.value;\n\t\ttry {\n\t\t\tconst packageDotJson = JSON.parse(packageControlValue);\n\t\t\tif (!packageDotJson.dependencies) {\n\t\t\t\treturn { dependencies: {} };\n\t\t\t}\n\t\t\treturn packageDotJson;\n\t\t} catch (ignored) {\n\t\t\treturn { dependencies: {} };\n\t\t}\n\t}\n\topenTestCodeModal() {\n\t\tconst testContextModal: BsModalRef<TestCodeFormModalComponent> = this.modalService.show(TestCodeFormModalComponent);\n\t\tthis.executeCodeTest$ = testContextModal.content!.contextSubmitted.pipe(\n\t\t\ttake(1),\n\t\t\ttap(() => {\n\t\t\t\tthis.testResultForm.setValue({ outputResult: '', consoleResult: '' });\n\t\t\t\tthis.testLoading = true;\n\t\t\t}),\n\t\t\tswitchMap(context => {\n\t\t\t\treturn this.codeService.executeTest(this.codeFilesForm.value, context);\n\t\t\t}),\n\t\t\ttap(result => {\n\t\t\t\tconst outputResult = this.codeService.beautifyJson(result.output);\n\t\t\t\tconst consoleResult = this.getConsoleResult(result);\n\t\t\t\tthis.testResultForm.setValue({ outputResult: outputResult, consoleResult: consoleResult });\n\t\t\t\tthis.testLoading = false;\n\t\t\t})\n\t\t);\n\t}\n\n\tgetConsoleResult(codeTestExecutionResult: CodeTestExecutionResult) {\n\t\tif (codeTestExecutionResult.errorMessage) {\n\t\t\treturn `${codeTestExecutionResult.standardOutput} \\n---------error-------\\n ${codeTestExecutionResult.errorMessage}`;\n\t\t}\n\t\treturn codeTestExecutionResult.standardOutput;\n\t}\n\thide() {\n\t\tthis.modalRef.hide();\n\t}\n\tpackageControl() {\n\t\treturn this.codeFilesForm.get('package')!;\n\t}\n\tcontentControl() {\n\t\treturn this.codeFilesForm.get('content')!;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/scss/custom/variables\";\r\n.code-container {\r\n  height: 100%;\r\n}\r\n\r\n.modal-body {\r\n  background: $sidebar;\r\n}\r\n\r\n.file-active {\r\n  background: $white;\r\n  border: 2px solid $line !important;\r\n}\r\n\r\n.file-container {\r\n  border: 2px solid transparent;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n\r\n  width: 140px;\r\n  cursor: pointer;\r\n}\r\n\r\n.console-container {\r\n  min-width: 25rem;\r\n  max-width: 25rem;\r\n}\r\n\r\n.modal-title {\r\n  color: $white;\r\n}\r\n\r\n.modal-background\r\n{\r\n  background-color: $primary;\r\n}\r\n\r\n.code-file-icon\r\n{\r\n  line-height: 100%;\r\n  vertical-align: \"middle\";\r\n}\r\n.test-code-loading-container\r\n{\r\n  position: absolute;\r\n  left:50%;\r\n  top:50%;\r\n}\r\n\r\n.code-editor\r\n{\r\n  .modal-header\r\n  {\r\n    background:$primary;\r\n  }\r\n}\r\n",
                    "styleUrl": "./code-artifact-control-fullscreen.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "SelectedFileInFullscreenCodeEditor": {
                    "name": "SelectedFileInFullscreenCodeEditor",
                    "getSignature": {
                        "name": "SelectedFileInFullscreenCodeEditor",
                        "type": "",
                        "returnType": "",
                        "line": 75
                    }
                },
                "SelectedTabInFullscreenCodeEditor": {
                    "name": "SelectedTabInFullscreenCodeEditor",
                    "getSignature": {
                        "name": "SelectedTabInFullscreenCodeEditor",
                        "type": "",
                        "returnType": "",
                        "line": 78
                    }
                }
            },
            "templateData": "<div class=\"code-editor h-100 d-flex flex-column\">\r\n  <div class=\"modal-header text-center d-flex justify-content-center align-items-center\">\r\n    <h5 class=\"modal-title\">Code Editor</h5>\r\n\r\n    <div class=\"flex-grow-1\"></div>\r\n\r\n    <app-button   *ngIf=\"!readOnly\" [loadingCSS]=\"'text-primary'\"\r\n    btnStyle=\"flat\" btnColor=\"basic\" (buttonClicked)=\"openNpmPackageModal()\" btnSize=\"small\">\r\n    Add npm package\r\n    </app-button>\r\n\r\n    <app-button  [loadingCSS]=\"'text-primary'\" [loading]=\"testLoading\"\r\n    btnStyle=\"flat\" btnColor=\"basic\" class=\"ml-1\"  btnSize=\"small\"  (buttonClicked)=\"openTestCodeModal()\">Test code\r\n    </app-button>\r\n    <div class=\"ml-3 d-inline-block\">\r\n      <app-icon-button [color]=\"'#FFFFFF'\" class=\"mr-0\" (click)=\"hide()\" [hoverColor]=\"themeService.PRIMARY_COLOR\"\r\n        [iconFilename]=\"'minimize.svg'\"></app-icon-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-body flex-grow-1\">\r\n    <div class=\"d-flex code-height-auto code-container\">\r\n      <div class=\"p-2\">\r\n        <div class=\"p-2\">\r\n          <div class=\"d-flex flex-column\">\r\n            <div class=\"p-2 align-items-center d-flex flex-row file-container\"\r\n              [class.file-active]=\"SelectedFileInFullscreenCodeEditor.CONTENT === selectedFile\"\r\n              (click)=\"selectFile(SelectedFileInFullscreenCodeEditor.CONTENT)\">\r\n              <div>\r\n                <app-img class=\"code-file-icon\" [width]=\"16\" [height]=\"16\" [src]=\"'/assets/img/custom/files/js.svg'\">\r\n                </app-img>\r\n              </div>\r\n              <div class=\"ml-2\">index.js</div>\r\n            </div>\r\n\r\n            <div class=\"p-2 align-items-center d-flex flex-row file-container mt-2\"\r\n              [class.file-active]=\"SelectedFileInFullscreenCodeEditor.PACKAGE === selectedFile\"\r\n              (click)=\"selectFile(SelectedFileInFullscreenCodeEditor.PACKAGE)\">\r\n              <div>\r\n                <app-img class=\"code-file-icon\" [width]=\"16\" [height]=\"16\"\r\n                  [src]=\"'/assets/img/custom/files/package.svg'\"></app-img>\r\n              </div>\r\n              <div class=\"ml-2\">package.json</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-2 flex-grow-1 overflow-auto\">\r\n        <div  class=\"h-100\">\r\n          <!-- Use ngModel to update the editor outside the modal -->\r\n          <ngx-monaco-editor\r\n          *ngIf=\"selectedFile === SelectedFileInFullscreenCodeEditor.CONTENT\"\r\n          [options]=\"codeEditorOptions\"\r\n          [ngModel]=\"contentControl().value\"\r\n          (ngModelChange)=\"contentControl().setValue($event)\"\r\n          class=\"h-100\"\r\n       ></ngx-monaco-editor>\r\n\r\n          <ngx-monaco-editor\r\n            *ngIf=\"selectedFile ===  SelectedFileInFullscreenCodeEditor.PACKAGE\"\r\n            class=\"h-100\"\r\n            [ngModel]=\"packageControl().value\"\r\n            (ngModelChange)=\"packageControl().setValue($event)\"\r\n            [options]=\"packageDotJsonOptions\"></ngx-monaco-editor>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"p-2 console-container\">\r\n        <div class=\"console-size code-height-auto h-100\">\r\n          <div class=\"d-flex flex-column h-100\">\r\n            <div class=\"d-flex\">\r\n              <app-button\r\n              btnColor=\"primary\"\r\n              [btnStyle]=\"selectedTab === SelectedTabInFullscreenCodeEditor.OUTPUT? 'flat':'stroked'\"\r\n              class=\"mr-2\"\r\n              btnSize=\"small\"\r\n              (buttonClicked)=\"selectTab(SelectedTabInFullscreenCodeEditor.OUTPUT)\"\r\n            > Output\r\n            </app-button>\r\n            <app-button\r\n            btnColor=\"primary\"\r\n            btnSize=\"small\"\r\n            [btnStyle]=\"selectedTab === SelectedTabInFullscreenCodeEditor.CONSOLE? 'flat':'stroked'\"\r\n            (buttonClicked)=\"selectTab(SelectedTabInFullscreenCodeEditor.CONSOLE)\"\r\n          > Console\r\n          </app-button>\r\n\r\n\r\n            </div>\r\n            <div class=\"mt-2 flex-grow-1 position-relative\">\r\n              <form [formGroup]=\"testResultForm\" class=\"h-100\">\r\n                <ngx-codemirror *ngIf=\"selectedTab === SelectedTabInFullscreenCodeEditor.OUTPUT\" class=\"h-100\"\r\n                  formControlName=\"outputResult\" [options]=\"outputResultEditorOptions\"></ngx-codemirror>\r\n                <ngx-codemirror *ngIf=\"selectedTab === SelectedTabInFullscreenCodeEditor.CONSOLE\"\r\n                  formControlName=\"consoleResult\" [options]=\"consoleResultEditoroptions\" class=\"h-100\"></ngx-codemirror>\r\n              </form>\r\n              <div class=\"test-code-loading-container\" *ngIf=\"testLoading\" >\r\n                <div>\r\n                  <app-loading-icon [whiteLoader]=\"true\"> </app-loading-icon>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-container *ngIf=\"addNpmPackage$ | async\"></ng-container>\r\n<ng-container *ngIf=\"executeCodeTest$ | async\"></ng-container>\r\n"
        },
        {
            "name": "CodeArtifactFormControlComponent",
            "id": "component-CodeArtifactFormControlComponent-268b5c4113a1996138e8e276ddbd23308a8ea07d1ab50bf669a35493c42f18f8bdc6d87b899d273dd081ef8376da232f9cdc93e1a97a471eb5ed5ce8325f1277",
            "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-form-control.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: CodeArtifactFormControlComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-code-artifact-form-control",
            "styleUrls": [
                "./code-artifact-form-control.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./code-artifact-form-control.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "artifactCacheKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "ArtifactCacheKey",
                    "decorators": []
                },
                {
                    "name": "artifactChanged$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Subject<boolean>",
                    "decorators": []
                },
                {
                    "name": "autosave",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_artifactCacheKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ArtifactCacheKey",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "codeArtifactForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "codeEditorOptions",
                    "defaultValue": "{ lineNumbers: true, lineWrapping: true, theme: 'lucario', readOnly: '', mode: 'javascript' }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "updateComponentValue$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 56
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "change",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "change",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "touched",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "touched",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setupCachingAndAutoSaveListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setupValueListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showFullscreenEditor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateArtifactCache",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "artifact",
                            "type": "Artifact",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormControl, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { debounceTime, distinctUntilChanged, Observable, Subject, takeUntil, tap } from 'rxjs';\nimport { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\nimport {\n\tArtifactCacheKey,\n\tCollectionConfigsCacheKey,\n\tFlowConfigsCacheKey,\n\tStepCacheKey,\n} from 'src/app/layout/flow-builder/service/artifact-cache-key';\nimport { CodeService } from 'src/app/layout/flow-builder/service/code.service';\nimport { cacheArtifactDebounceTime } from '../../../utils';\nimport { CodeArtifactControlFullscreenComponent } from './code-artifact-control-fullscreen/code-artifact-control-fullscreen.component';\n\n@Component({\n\tselector: 'app-code-artifact-form-control',\n\ttemplateUrl: './code-artifact-form-control.component.html',\n\tstyleUrls: ['./code-artifact-form-control.component.css'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: CodeArtifactFormControlComponent,\n\t\t},\n\t],\n})\nexport class CodeArtifactFormControlComponent implements ControlValueAccessor, OnInit {\n\t_artifactCacheKey: ArtifactCacheKey;\n\t@Input() autosave = true;\n\t@Input() set artifactCacheKey(key: ArtifactCacheKey) {\n\t\tthis._artifactCacheKey = key;\n\t\tif (key) this.setupCachingAndAutoSaveListener();\n\t}\n\t@Input() artifactChanged$: Subject<boolean> = new Subject();\n\tcodeArtifactForm: FormGroup;\n\tcodeEditorOptions = { lineNumbers: true, lineWrapping: true, theme: 'lucario', readOnly: '', mode: 'javascript' };\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate modalService: BsModalService,\n\t\tprivate codeService: CodeService\n\t) {\n\t\tthis.codeArtifactForm = this.formBuilder.group({ content: new FormControl(''), package: new FormControl('') });\n\t}\n\tngOnInit(): void {\n\t\tif (!this.autosave) {\n\t\t\tthis.setupValueListener();\n\t\t}\n\t}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.codeArtifactForm.disable();\n\t\t\tthis.codeEditorOptions.readOnly = 'nocursor';\n\t\t}\n\t}\n\tupdateComponentValue$: Observable<any>;\n\tonChange = val => {};\n\tonTouched = () => {};\n\n\twriteValue(artifact: Artifact): void {\n\t\tif (artifact && (artifact.content || artifact.package)) {\n\t\t\tthis.codeArtifactForm.patchValue(artifact);\n\t\t}\n\t}\n\n\tregisterOnChange(change: any): void {\n\t\tthis.onChange = change;\n\t}\n\tregisterOnTouched(touched: any): void {\n\t\tthis.onTouched = touched;\n\t}\n\tshowFullscreenEditor() {\n\t\tthis.modalService.show<CodeArtifactControlFullscreenComponent>(CodeArtifactControlFullscreenComponent, {\n\t\t\tclass: 'modal-fullscreen',\n\t\t\tignoreBackdropClick: false,\n\t\t\tinitialState: {\n\t\t\t\tcodeFilesForm: this.codeArtifactForm,\n\t\t\t\treadOnly: this.codeEditorOptions.readOnly === 'nocursor',\n\t\t\t},\n\t\t});\n\t}\n\n\tsetupValueListener() {\n\t\tthis.updateComponentValue$ = this.codeArtifactForm.valueChanges.pipe(\n\t\t\ttap(artifact => {\n\t\t\t\tthis.onChange(artifact);\n\t\t\t})\n\t\t);\n\t}\n\tsetupCachingAndAutoSaveListener() {\n\t\tthis.updateComponentValue$ = this.codeArtifactForm.valueChanges.pipe(\n\t\t\ttakeUntil(this.artifactChanged$),\n\t\t\tdebounceTime(cacheArtifactDebounceTime),\n\t\t\tdistinctUntilChanged((prev, current) => {\n\t\t\t\treturn prev.content == current.content && prev.package == current.package;\n\t\t\t}),\n\t\t\ttap(artifact => {\n\t\t\t\t// Make sure to mark update artifact as dirty before on change\n\t\t\t\tif (this.autosave) this.updateArtifactCache();\n\t\t\t\t//OnChange triggers auto saving.\n\t\t\t\tthis.onChange(artifact);\n\t\t\t})\n\t\t);\n\t}\n\tupdateArtifactCache() {\n\t\t//The only valid case in this is the step cache key\n\t\tif (this._artifactCacheKey) {\n\t\t\tif (this._artifactCacheKey instanceof CollectionConfigsCacheKey) {\n\t\t\t\tthis.codeService.updateArtifactInCollectionConfigsCache(this._artifactCacheKey, this.codeArtifactForm.value);\n\t\t\t} else if (this._artifactCacheKey instanceof FlowConfigsCacheKey) {\n\t\t\t\tthis.codeService.updateArtifactInFlowConfigsCache(this._artifactCacheKey, this.codeArtifactForm.value);\n\t\t\t} else if (this._artifactCacheKey instanceof StepCacheKey) {\n\t\t\t\tthis.codeService.updateArtifactInFlowStepsCache(this._artifactCacheKey, this.codeArtifactForm.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Cache key type has no corresponding cache');\n\t\t\t}\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".bar-containing-expand-button {\r\n  background-color: #2B3E50;\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n  margin-bottom: -3px;\r\n}\r\n",
                    "styleUrl": "./code-artifact-form-control.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit"
            ],
            "accessors": {
                "artifactCacheKey": {
                    "name": "artifactCacheKey",
                    "setSignature": {
                        "name": "artifactCacheKey",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "key",
                                "type": "ArtifactCacheKey",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 31,
                        "jsdoctags": [
                            {
                                "name": "key",
                                "type": "ArtifactCacheKey",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form [formGroup]=\"codeArtifactForm\">\r\n  <div class=\"code-font-sm code-size-200 code-block\">\r\n    <div class=\"py-2 px-4 d-flex bar-containing-expand-button\">\r\n      <div class=\"flex-grow-1\">\r\n        <span class=\"text-white\">Index.js</span>\r\n      </div>\r\n      <div>\r\n        <app-img [src]=\"'/assets/img/custom/maximize.svg'\" [width]=\"16\" [height]=\"16\"  class=\"cursor-pointer\" (click)=\"showFullscreenEditor()\"></app-img>\r\n      </div>\r\n    </div>\r\n\r\n      <ngx-codemirror\r\n      formControlName=\"content\"\r\n      [options]=\"codeEditorOptions\"\r\n    ></ngx-codemirror>\r\n\r\n  </div>\r\n</form>\r\n<ng-container *ngIf=\"updateComponentValue$|async\" ></ng-container>\r\n"
        },
        {
            "name": "CodeEditorComponent",
            "id": "component-CodeEditorComponent-c83ede4c5bc578296de5b98f51d2e8245c1e40271757708362b48e0daed6766292d3c2157ea44147f80fbc8cd84030d29c8afb92727bd378128ec8bbfe7ce16d",
            "file": "src/app/layout/flow-builder/page/flow-builder/code-editor/code-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-code-editor",
            "styleUrls": [
                "./code-editor.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./code-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "FormGroup",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addNpmPackage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "console",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "executionResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "faExpand",
                    "defaultValue": "faExpand",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "output",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "selectedFile",
                    "defaultValue": "'CONTENT'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "selectedTab",
                    "defaultValue": "'OUTPUT'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "testCode$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "testLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "viewMode$",
                    "defaultValue": "of(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "contentFormControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openNpmPackage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openTestModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "packageFormControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { CodeService } from '../../../service/code.service';\nimport { TestCodeModalComponent } from './test-code-modal/test-code-modal.component';\nimport { CodeTestExecutionResult } from '../../../../common-layout/model/flow-builder/code-test-execution-result';\nimport { faExpand } from '@fortawesome/free-solid-svg-icons';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ThemeService } from 'src/app/layout/common-layout/service/theme.service';\nimport { map, Observable, of, switchMap, take, tap } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { BuilderSelectors } from '../../../store/selector/flow-builder.selector';\nimport { AddNpmPackageModalComponent } from './add-npm-package-modal/add-npm-package-modal.component';\n\n@Component({\n\tselector: 'app-code-editor',\n\ttemplateUrl: './code-editor.component.html',\n\tstyleUrls: ['./code-editor.component.css'],\n})\nexport class CodeEditorComponent implements OnInit {\n\tfaExpand = faExpand;\n\t@Input() fControl: FormGroup;\n\n\tselectedFile = 'CONTENT';\n\tselectedTab = 'OUTPUT';\n\ttestLoading: boolean = false;\n\toutput: string = '';\n\tconsole: string = '';\n\texecutionResult: any;\n\tviewMode$: Observable<boolean> = of(false);\n\taddNpmPackage$: Observable<void>;\n\ttestCode$: Observable<void>;\n\n\tconstructor(\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate bsModalService: BsModalService,\n\t\tprivate codeService: CodeService,\n\t\tprivate store: Store,\n\t\tpublic themeService: ThemeService\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.viewMode$ = this.store.select(BuilderSelectors.selectReadOnly);\n\t}\n\n\topenNpmPackage() {\n\t\tlet bsModalRef = this.bsModalService.show(AddNpmPackageModalComponent, {\n\t\t\tinitialState: {},\n\t\t});\n\t\tthis.addNpmPackage$ = (bsModalRef.content as AddNpmPackageModalComponent).packageEmitter.pipe(\n\t\t\ttake(1),\n\t\t\ttap(npmPkg => {\n\t\t\t\tlet packageJson = JSON.parse(this.fControl.value.package);\n\t\t\t\tif (packageJson.dependencies == undefined) {\n\t\t\t\t\tpackageJson.dependencies = {};\n\t\t\t\t}\n\t\t\t\tpackageJson.dependencies[npmPkg.package] = npmPkg.version;\n\t\t\t\tthis.fControl.controls['package'].setValue(JSON.stringify(packageJson, null, 2));\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\t}\n\n\topenTestModal() {\n\t\tlet bsModalRef = this.bsModalService.show(TestCodeModalComponent, {\n\t\t\tinitialState: {},\n\t\t});\n\t\tthis.testCode$ = (bsModalRef.content as TestCodeModalComponent).contextSubmitted.pipe(\n\t\t\ttake(1),\n\t\t\ttap(value => {\n\t\t\t\tthis.testLoading = true;\n\t\t\t}),\n\t\t\tswitchMap(value => {\n\t\t\t\treturn this.codeService.executeTest(this.fControl.value, JSON.parse(value.context));\n\t\t\t}),\n\t\t\ttap({\n\t\t\t\tnext: value => {\n\t\t\t\t\tthis.executionResult = value as CodeTestExecutionResult;\n\t\t\t\t\tthis.output = this.codeService.beautifyJson(this.executionResult.output);\n\t\t\t\t\tthis.console = this.executionResult.standardOutput;\n\t\t\t\t\tif (this.executionResult.errorMessage != undefined && this.executionResult.errorMessage.length > 0) {\n\t\t\t\t\t\tthis.console = this.console + '\\n---------error-------\\n' + this.executionResult.errorMessage;\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log('done', value);\n\t\t\t\t\tthis.testLoading = false;\n\t\t\t\t},\n\t\t\t\terror: error => {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\tthis.testLoading = false;\n\t\t\t\t},\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\t}\n\n\tpackageFormControl() {\n\t\treturn this.fControl.controls['package'] as FormControl;\n\t}\n\n\tcontentFormControl() {\n\t\treturn this.fControl.controls['content'] as FormControl;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".code-container {\r\n  height: 100%;\r\n}\r\n\r\n.modal-body {\r\n  background: #F7F7F7;\r\n}\r\n\r\n.file-active {\r\n  background: #FFFFFF;\r\n  border: 2px solid #EEEEEE !important;\r\n}\r\n\r\n.file-container {\r\n  border: 2px solid transparent;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n\r\n  width: 140px;\r\n  cursor: pointer;\r\n}\r\n\r\n.console-container {\r\n  min-width: 400px;\r\n  max-width: 400px;\r\n}\r\n\r\n.modal-title {\r\n  color: white;\r\n}\r\n",
                    "styleUrl": "./code-editor.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "bsModalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "bsModalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  class=\"modal-content code-editor\"\r\n  [style.background-color]=\"themeService.PRIMARY_COLOR\"\r\n>\r\n  <div\r\n    class=\"modal-header text-center d-flex justify-content-center align-items-center\"\r\n  >\r\n    <h5 class=\"modal-title\">Code Editor</h5>\r\n\r\n    <div style=\"flex-grow: 1\"></div>\r\n\r\n    <app-button\r\n      [loadingCSS]=\"'text-primary'\"\r\n      btnStyle=\"basic\"\r\n      (buttonClicked)=\"openNpmPackage()\"\r\n    >Add npm package\r\n    </app-button>\r\n    <app-button\r\n      [loadingCSS]=\"'text-primary'\"\r\n      [loading]=\"testLoading\"\r\n      class=\"ml-2\"\r\n      btnStyle=\"basic\"\r\n      (buttonClicked)=\"openTestModal()\"\r\n      >Test code\r\n    </app-button>\r\n    <div class=\"ml-3\" style=\"display: inline-block\">\r\n      <app-icon-button\r\n        [color]=\"'#FFFFFF'\"\r\n        style=\"margin-right: 0\"\r\n        (click)=\"bsModalRef.hide()\"\r\n        [hoverColor]=\"themeService.PRIMARY_COLOR\"\r\n        [iconFilename]=\"'minimize.svg'\"\r\n      ></app-icon-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"d-flex code-height-auto code-container\">\r\n      <div class=\"p-2\">\r\n        <div class=\"p-2\">\r\n          <div class=\"d-flex flex-column\">\r\n            <div\r\n              class=\"p-2 d-flex flex-row file-container {{\r\n                selectedFile === 'CONTENT' ? 'file-active' : ''\r\n              }}\"\r\n              (click)=\"selectedFile = 'CONTENT'\"\r\n            >\r\n              <div>\r\n                <app-img\r\n                  style=\"line-height: 100%; vertical-align: middle\"\r\n                  [width]=\"16\"\r\n                  [height]=\"16\"\r\n                  [src]=\"'/assets/img/custom/files/js.svg'\"\r\n                ></app-img>\r\n              </div>\r\n              <div class=\"ml-2\">index.js</div>\r\n            </div>\r\n\r\n            <div\r\n              class=\"p-2 d-flex flex-row file-container {{\r\n                selectedFile === 'PACKAGE' ? 'file-active' : ''\r\n              }} mt-2\"\r\n              (click)=\"selectedFile = 'PACKAGE'\"\r\n            >\r\n              <div>\r\n                <app-img\r\n                  style=\"line-height: 100%; vertical-align: middle\"\r\n                  [width]=\"16\"\r\n                  [height]=\"16\"\r\n                  [src]=\"'/assets/img/custom/files/package.svg'\"\r\n                ></app-img>\r\n              </div>\r\n              <div class=\"ml-2\">package.json</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div style=\"flex: 1; overflow: auto\" class=\"p-2\">\r\n        <!-- formControl returns custom validation errors from monaco/ that why using ngModel / ngModelChange here-->\r\n        <ngx-monaco-editor\r\n          *ngIf=\"selectedFile === 'CONTENT'\"\r\n          [ngModel]=\"contentFormControl().value\"\r\n          (ngModelChange)=\"contentFormControl().setValue($event)\"\r\n          [options]=\"{\r\n            minimap: { enabled: false },\r\n            theme: 'vs',\r\n            language: 'javascript',\r\n            readOnly: this.viewMode$ | async | defaultTrue\r\n          }\"\r\n        ></ngx-monaco-editor>\r\n\r\n        <ngx-monaco-editor\r\n          *ngIf=\"selectedFile === 'PACKAGE'\"\r\n          [ngModel]=\"packageFormControl().value\"\r\n          (ngModelChange)=\"packageFormControl().setValue($event)\"\r\n          [options]=\"{\r\n            minimap: { enabled: false },\r\n            theme: 'vs',\r\n            language: 'json',\r\n            readOnly: this.viewMode$ | async | defaultTrue\r\n          }\"\r\n        ></ngx-monaco-editor>\r\n      </div>\r\n      <div class=\"p-2 console-container\">\r\n        <div\r\n          class=\"console-size code-height-auto\"\r\n          style=\"height: 100% !important\"\r\n        >\r\n          <div class=\"d-flex flex-column\" style=\"height: 100%\">\r\n            <div>\r\n              <button\r\n                class=\"btn btn-sm {{\r\n                  selectedTab === 'OUTPUT'\r\n                    ? 'btn-primary'\r\n                    : 'btn-outline-primary'\r\n                }} mr-2\"\r\n                (click)=\"selectedTab = 'OUTPUT'\"\r\n              >\r\n                Output\r\n              </button>\r\n              <button\r\n                class=\"btn btn-sm {{\r\n                  selectedTab === 'CONSOLE'\r\n                    ? 'btn-primary'\r\n                    : 'btn-outline-primary'\r\n                }}\"\r\n                (click)=\"selectedTab = 'CONSOLE'\"\r\n              >\r\n                Console\r\n              </button>\r\n            </div>\r\n            <div class=\"mt-2\" style=\"flex: 1 1 auto\">\r\n              <ngx-codemirror\r\n                [(ngModel)]=\"selectedTab === 'CONSOLE' ? console : output\"\r\n                [options]=\"{\r\n                  theme: 'material',\r\n                  lineWrapping: true,\r\n                  readOnly: true,\r\n                  mode: selectedTab === 'CONSOLE' ? 'shell' : 'javascript'\r\n                }\"\r\n              ></ngx-codemirror>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-container *ngIf=\"addNpmPackage$ | async\"></ng-container>\r\n<ng-container *ngIf=\"testCode$ | async\"></ng-container>\r\n"
        },
        {
            "name": "CodeEmbeddedEditorComponent",
            "id": "component-CodeEmbeddedEditorComponent-c1ec25b597df7f240a2b16b870bbff0974e542b88e303ad8b290a33bb83dfa59f0a65416e727d055df5cc97fdc95cf2d023011d4bd4c0d0ab2bcb9cabbae91b5",
            "file": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/code-embeddedEditor/code-embedded-editor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-embedded-code-editor",
            "styleUrls": [
                "./code-embedded-editor.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./code-embedded-editor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dynamicControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "CodeEmbeddedControl",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "contentControl",
                    "args": [],
                    "optional": false,
                    "returnType": "FormControl",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openCodeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { CodeEditorComponent } from '../../../../../flow-builder/page/flow-builder/code-editor/code-editor.component';\nimport { FormControl } from '@angular/forms';\nimport { CodeEmbeddedControl } from '../../../../model/dynamic-controls/code-embedded-control-form';\n\n@Component({\n\tselector: 'app-embedded-code-editor',\n\ttemplateUrl: './code-embedded-editor.component.html',\n\tstyleUrls: ['./code-embedded-editor.component.css'],\n})\nexport class CodeEmbeddedEditorComponent {\n\tbsModalRef: BsModalRef;\n\t@Input() dynamicControl: CodeEmbeddedControl;\n\n\tconstructor(private bsModalService: BsModalService) {}\n\n\topenCodeModal() {\n\t\tthis.bsModalRef = this.bsModalService.show(CodeEditorComponent, {\n\t\t\tclass: 'modal-fullscreen',\n\t\t\tignoreBackdropClick: false,\n\t\t\tinitialState: {\n\t\t\t\tfControl: this.dynamicControl.formControl(),\n\t\t\t},\n\t\t});\n\t}\n\n\tcontentControl() {\n\t\treturn this.dynamicControl.formControl().controls['content'] as FormControl;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./code-embedded-editor.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bsModalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "bsModalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div *ngIf=\"dynamicControl === undefined\">\r\n  <p><span class=\"spinner-border text-primary mr-1\"></span></p>\r\n</div>\r\n<div class=\"code-font-sm code-size-200 code-block\" *ngIf=\"dynamicControl !== undefined\">\r\n  <div class=\"py-2 px-4 d-flex\" style=\"background-color: #263238;\">\r\n    <div style=\"flex-grow: 1;\">\r\n      <span class=\"text-white\">Index.js</span>\r\n    </div>\r\n    <div>\r\n      <app-img [src]=\"'/assets/img/custom/maximize.svg'\" [width]=\"16\" [height]=\"16\"  (click)=\"openCodeModal()\" style=\"cursor:pointer;\"></app-img>\r\n    </div>\r\n  </div>\r\n\r\n  <ngx-codemirror\r\n    [ngModel]=\"contentControl().value\"\r\n    (ngModelChange)=\"contentControl().setValue($event)\"\r\n    [options]=\"{lineNumbers: true,\r\n                      lineWrapping: true,\r\n                      theme: 'material',readOnly: false,mode: 'javascript'}\"\r\n  ></ngx-codemirror>\r\n</div>\r\n"
        },
        {
            "name": "CodeStepInputFormComponent",
            "id": "component-CodeStepInputFormComponent-9163582761a64617bac3a21f20615a5a37bcaf82e455f1ff0a9d62c35fc80bc0ef420ae5d91623997c865c0ce18bddda9bec81981d9e3debfddb80c38cbbc092",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/code-step-input-form/code-step-input-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: CodeStepInputFormComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-code-step-input-form",
            "styleUrls": [
                "./code-step-input-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./code-step-input-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "stepArtifact$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "Observable<Artifact>",
                    "decorators": []
                },
                {
                    "name": "stepCacheKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "StepCacheKey",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_stepArtifact$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Artifact>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "artifactControlValueChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "codeStepForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "inputControlValueChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "stepArtifactChanged$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "InputFormsSchema",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "InputFormsSchema",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormControl, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, Subject, takeUntil, tap } from 'rxjs';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\nimport { StepCacheKey } from 'src/app/layout/flow-builder/service/artifact-cache-key';\nimport { CodeStepInputFormSchema, InputFormsSchema } from '../input-forms-schema';\n\n@Component({\n\tselector: 'app-code-step-input-form',\n\ttemplateUrl: './code-step-input-form.component.html',\n\tstyleUrls: ['./code-step-input-form.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: CodeStepInputFormComponent,\n\t\t},\n\t],\n})\nexport class CodeStepInputFormComponent implements ControlValueAccessor {\n\tcodeStepForm: FormGroup;\n\t_stepArtifact$: Observable<Artifact>;\n\tinputControlValueChanged$: Observable<any>;\n\tartifactControlValueChanged$: Observable<any>;\n\tstepArtifactChanged$: Subject<boolean> = new Subject();\n\t@Input()\n\tstepCacheKey: StepCacheKey;\n\t@Input()\n\tset stepArtifact$(artifact$: Observable<Artifact>) {\n\t\tthis._stepArtifact$ = artifact$.pipe(\n\t\t\ttap(artifact => {\n\t\t\t\tthis.stepArtifactChanged$.next(true);\n\t\t\t\tconst artifactControl = this.codeStepForm.get('artifact')!;\n\t\t\t\tartifactControl.setValue(artifact);\n\t\t\t\tthis.artifactControlValueChanged$ = artifactControl.valueChanges.pipe(\n\t\t\t\t\ttakeUntil(this.stepArtifactChanged$),\n\t\t\t\t\ttap(() => {\n\t\t\t\t\t\tconst parametersControlValue = this.codeStepForm.get('input')!.value;\n\t\t\t\t\t\tthis.onChange({ input: parametersControlValue });\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}\n\n\tonChange = (value: CodeStepInputFormSchema) => {};\n\tonTouch = () => {};\n\n\tconstructor(private formBuilder: FormBuilder) {\n\t\tthis.codeStepForm = this.formBuilder.group({\n\t\t\tinput: new FormControl(''),\n\t\t\tartifact: new FormControl(),\n\t\t});\n\t\tthis.inputControlValueChanged$ = this.codeStepForm.get('input')!.valueChanges.pipe(\n\t\t\ttap(parametersControlValue => {\n\t\t\t\tthis.onChange({ input: parametersControlValue });\n\t\t\t})\n\t\t);\n\t}\n\n\twriteValue(obj: InputFormsSchema): void {\n\t\tif (obj.type === ActionType.CODE) {\n\t\t\tthis.codeStepForm.patchValue(obj);\n\t\t}\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t}\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouch = fn;\n\t}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.codeStepForm.disable();\n\t\t} else if (this.codeStepForm.disabled) {\n\t\t\tthis.codeStepForm.enable();\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".artifact-loading-container\r\n{\r\n  min-height: 337px;\r\n  background-color: #263238;\r\n}\r\n",
                    "styleUrl": "./code-step-input-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "stepArtifact$": {
                    "name": "stepArtifact$",
                    "setSignature": {
                        "name": "stepArtifact$",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "artifact$",
                                "type": "Observable<Artifact>",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 30,
                        "jsdoctags": [
                            {
                                "name": "artifact$",
                                "type": "Observable<Artifact>",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<form [formGroup]=\"codeStepForm\" class=\"ng-submitted\">\r\n  <div class=\"d-flex flex-column accordion-form-controls-container\">\r\n    <div>\r\n      <label for=\"parameters\">Parameters</label>\r\n      <app-dictonary-form-control id=\"parameters\"\r\n        formControlName=\"input\"\r\n      ></app-dictonary-form-control>\r\n    </div>\r\n    <div>\r\n      <label for=\"code\">Code</label>\r\n      <app-code-artifact-form-control id=\"code\" [artifactChanged$]=\"stepArtifactChanged$\" [artifactCacheKey]=\"stepCacheKey\" *ngIf=\"_stepArtifact$ |async; else loading\" formControlName=\"artifact\"></app-code-artifact-form-control>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<ng-container *ngIf=\"inputControlValueChanged$ | async\"></ng-container>\r\n<ng-container *ngIf=\"artifactControlValueChanged$ | async\"></ng-container>\r\n<ng-template #loading>\r\n  <div class=\"d-flex align-items-center justify-content-center artifact-loading-container\" >\r\n    <app-loading-icon [whiteLoader]=\"true\"></app-loading-icon>\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "CollectionComponents",
            "id": "component-CollectionComponents-08096a39396ed67146d500ecad78664ff875622784404c2c6a70da08b3fdaeb3612841400912fcada2d805c6204715d7ebf30476797c872a2bdde96189da01a2",
            "file": "src/app/layout/dashboard-layout/pages/collections/collection-components.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flows-group",
            "styleUrls": [
                "./collection-components.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./collection-components.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "collectionsPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SeekPage<Collection>",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "creatingCollection",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "faArchive",
                    "defaultValue": "faArchive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "hoverIndex",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "timeHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeHelperService",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createCollection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteCollection",
                    "args": [
                        {
                            "name": "collection",
                            "type": "Collection",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collection",
                            "type": "Collection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openBuilder",
                    "args": [
                        {
                            "name": "integration",
                            "type": "Collection",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "integration",
                            "type": "Collection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { SeekPage } from '../../../common-layout/service/seek-page';\nimport { Collection } from '../../../common-layout/model/piece.interface';\nimport { TimeHelperService } from '../../../common-layout/service/time-helper.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { faArchive } from '@fortawesome/free-solid-svg-icons';\nimport { ConfirmDeleteModalComponent } from '../../../common-layout/components/confirm-delete-modal/confirm-delete-modal.component';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { CollectionService } from '../../../common-layout/service/collection.service';\nimport { CreateNewPieceModalComponent } from '../../../common-layout/components/create-new-piece-modal/create-new-piece-modal.component';\nimport { NavigationService } from '../../service/navigation.service';\nimport { AuthenticationService } from '../../../common-layout/service/authentication.service';\nimport { ProjectService } from 'src/app/layout/common-layout/service/project.service';\nimport { PieceAccess } from 'src/app/layout/common-layout/model/enum/piece-access';\nimport { Subject, switchMap } from 'rxjs';\nimport { FlowService } from 'src/app/layout/common-layout/service/flow.service';\nimport { UUID } from 'angular2-uuid';\n\n@Component({\n\tselector: 'app-flows-group',\n\ttemplateUrl: './collection-components.component.html',\n\tstyleUrls: ['./collection-components.component.scss'],\n})\nexport class CollectionComponents implements OnInit, OnDestroy {\n\tfaArchive = faArchive;\n\n\tcollectionsPage: SeekPage<Collection>;\n\thoverIndex: number = -1;\n\tbsModalRef: BsModalRef;\n\tcreatingCollection = false;\n\n\tprivate destroyed$: Subject<boolean> = new Subject<boolean>();\n\n\tconstructor(\n\t\tpublic timeHelperService: TimeHelperService,\n\t\tprivate actRoute: ActivatedRoute,\n\t\tprivate titleService: NavigationService,\n\t\tprivate router: Router,\n\t\tprivate authenticationService: AuthenticationService,\n\t\tprivate collectionService: CollectionService,\n\t\tprivate modalService: BsModalService,\n\t\tprivate projectService: ProjectService,\n\t\tprivate flowService: FlowService\n\t) {}\n\n\tngOnDestroy(): void {\n\t\tthis.destroyed$.next(true);\n\t\tthis.destroyed$.complete();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.titleService.setTitle('Collections');\n\t\tthis.actRoute.data.subscribe(value => {\n\t\t\tthis.collectionsPage = value['pieces'];\n\t\t});\n\t}\n\n\topenBuilder(integration: Collection) {\n\t\tlet link = '/flows/' + integration.id;\n\t\tthis.router.navigate([link]);\n\t}\n\n\tdeleteCollection(collection: Collection, i: number) {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmDeleteModalComponent, {\n\t\t\tinitialState: {\n\t\t\t\tarchive: true,\n\t\t\t\tentityName: collection.lastVersion.displayName,\n\t\t\t},\n\t\t});\n\t\tthis.bsModalRef.content.confirmState.subscribe(value => {\n\t\t\tif (value) {\n\t\t\t\tthis.collectionService.archive(collection.id).subscribe({\n\t\t\t\t\tnext: (response: void) => {\n\t\t\t\t\t\tthis.collectionsPage.data.splice(i, 1);\n\t\t\t\t\t\tthis.bsModalRef.hide();\n\t\t\t\t\t},\n\t\t\t\t\terror: (error: HttpErrorResponse) => {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t//wtf should this be removed\n\topenModal() {\n\t\tthis.bsModalRef = this.modalService.show(CreateNewPieceModalComponent, {\n\t\t\tinitialState: {},\n\t\t});\n\t}\n\n\tget currentUser() {\n\t\treturn this.authenticationService.currentUser;\n\t}\n\n\tcreateCollection() {\n\t\tif (!this.creatingCollection) {\n\t\t\tthis.creatingCollection = true;\n\t\t\tconst collectionDiplayName = 'Untitled';\n\t\t\tconst collectionName = UUID.UUID().replaceAll('-', '_');\n\t\t\tthis.projectService\n\t\t\t\t.selectedProjectAndTakeOne()\n\t\t\t\t.pipe(\n\t\t\t\t\tswitchMap(project => {\n\t\t\t\t\t\treturn this.collectionService.create(project.id, {\n\t\t\t\t\t\t\tname: collectionName,\n\t\t\t\t\t\t\tversion: {\n\t\t\t\t\t\t\t\tdisplayName: collectionDiplayName,\n\t\t\t\t\t\t\t\tdescription: 'Piece Description',\n\t\t\t\t\t\t\t\tconfigs: [],\n\t\t\t\t\t\t\t\taccess: PieceAccess.PRIVATE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.subscribe(collection => {\n\t\t\t\t\tthis.router.navigate(['/flows/', collection.id, {}]).then(() => {\n\t\t\t\t\t\tthis.flowService.showModalFlow();\n\t\t\t\t\t});\n\t\t\t\t\tthis.creatingCollection = false;\n\t\t\t\t});\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.td-description {\r\n  color: $formLabel;\r\n  font-size: 0.75rem;\r\n  display: block;\r\n}\r\n.margin-zero {\r\n  margin: 0px;\r\n}\r\n\r\n.empty-collections-table-height {\r\n  min-height: calc(100% - 52px);\r\n}\r\n",
                    "styleUrl": "./collection-components.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "titleService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "collectionService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "titleService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "collectionService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "currentUser": {
                    "name": "currentUser",
                    "getSignature": {
                        "name": "currentUser",
                        "type": "",
                        "returnType": "",
                        "line": 93
                    }
                }
            },
            "templateData": "<div class=\"table-responsive\">\r\n  <table class=\"table align-items-center table-flush margin-zero\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th scope=\"col\">Collection Name</th>\r\n        <th scope=\"col\">Latest version</th>\r\n        <th scope=\"col\" style=\"width: 15%\">Created At</th>\r\n        <th scope=\"col\" style=\"width: 10%; text-align: center\">Actions</th>\r\n        <th scope=\"col\" style=\"width: 10%\" class=\"text-center\">\r\n          <app-button\r\n            btnColor=\"primary\"\r\n            *ngIf=\"collectionsPage.data.length > 0\"\r\n            (buttonClicked)=\"createCollection()\"\r\n            [loading]=\"creatingCollection\"\r\n            btnSize=\"small\"\r\n          >New Collection\r\n          </app-button>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody class=\"list\" *ngIf=\"collectionsPage.data.length > 0\">\r\n      <tr\r\n        *ngFor=\"let collection of collectionsPage.data; let i = index\"\r\n        (mouseenter)=\"hoverIndex = i\"\r\n        (mouseleave)=\"hoverIndex = -1\"\r\n        (click)=\"openBuilder(collection)\"\r\n        style=\"cursor: pointer\"\r\n      >\r\n        <ng-container>\r\n          <th scope=\"row\">\r\n            <div style=\"display: inline-block\" class=\"px-2\">\r\n              <app-img\r\n                [width]=\"32\"\r\n                [height]=\"32\"\r\n                [rounded]=\"true\"\r\n                [defaultSrc]=\"\r\n                  '../assets/img/custom/connectors/default-connector.png'\r\n                \"\r\n                [src]=\"collection.lastVersion.logoUrl\"\r\n              ></app-img>\r\n            </div>\r\n            <div style=\"display: inline-block\">\r\n              <div>{{ collection.lastVersion.displayName }}</div>\r\n              <div class=\"td-description\">\r\n                {{ collection.flowCount | async }} Flows\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <td>v{{ collection.versionsList.length }}</td>\r\n          <td>\r\n            {{ timeHelperService.formatDateTime(collection.epochCreationTime) }}\r\n          </td>\r\n          <td class=\"text-center\">\r\n            <app-deploy-modal [collection]=\"collection\"></app-deploy-modal>\r\n          </td>\r\n          <td class=\"d-flex align-items-center justify-content-center\">\r\n            <div\r\n              (click)=\"\r\n                deleteCollection(collection, i); $event.stopPropagation()\r\n              \"\r\n              [ngStyle]=\"{\r\n                visibility: hoverIndex === i ? 'visible' : 'hidden',\r\n                float: 'right'\r\n              }\"\r\n              class=\"btn btn-icon-white\"\r\n            >\r\n              <fa-icon [icon]=\"faArchive\"></fa-icon>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<div\r\n  *ngIf=\"collectionsPage.data.length === 0\"\r\n  class=\"d-column justify-content-center align-items-center empty-collections-table-height\"\r\n>\r\n  <app-empty-collections-table></app-empty-collections-table>\r\n</div>\r\n"
        },
        {
            "name": "CollectionVersionSidebarComponent",
            "id": "component-CollectionVersionSidebarComponent-21832c9985e11a70c99db05b95624de17ae41003b5e1e1f7bbffdb6744fb620ecca49ded24beae8642aa4a245735e122830127a2412ab53a34bb218b2dcbaf04",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/collection-version-sidebar/collection-version-sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-piece-version-sidebar",
            "styleUrls": [
                "./collection-version-sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./collection-version-sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "collectionVersionsList$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CollectionVersion[]>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "publishedEnvironments$",
                    "defaultValue": "of(new Map<string, ProjectEnvironment[]>())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Map<string, ProjectEnvironment[]>>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeHelperService",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeVersionSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from '../../../../../common-layout/service/theme.service';\nimport { TimeHelperService } from '../../../../../common-layout/service/time-helper.service';\nimport { VersionEditState } from '../../../../../common-layout/model/enum/version-edit-state.enum';\nimport { CollectionService } from '../../../../../common-layout/service/collection.service';\nimport { CollectionVersion } from '../../../../../common-layout/model/piece.interface';\nimport { ProjectEnvironment } from '../../../../../common-layout/model/project-environment.interface';\nimport { RightSideBarType } from '../../../../../common-layout/model/enum/right-side-bar-type.enum';\nimport { Store } from '@ngrx/store';\nimport { BuilderSelectors } from '../../../../store/selector/flow-builder.selector';\nimport { FlowsActions } from '../../../../store/action/flows.action';\nimport { forkJoin, map, Observable, of, switchMap, take } from 'rxjs';\nimport { EnvironmentSelectors } from '../../../../../common-layout/store/selector/environment.selector';\n\n@Component({\n\tselector: 'app-piece-version-sidebar',\n\ttemplateUrl: './collection-version-sidebar.component.html',\n\tstyleUrls: ['./collection-version-sidebar.component.scss'],\n})\nexport class CollectionVersionSidebarComponent implements OnInit {\n\tcollectionVersionsList$: Observable<CollectionVersion[]>;\n\tpublishedEnvironments$: Observable<Map<string, ProjectEnvironment[]>> = of(new Map<string, ProjectEnvironment[]>());\n\n\tconstructor(\n\t\tpublic themeService: ThemeService,\n\t\tpublic timeHelperService: TimeHelperService,\n\t\tprivate store: Store,\n\t\tprivate pieceService: CollectionService\n\t) {}\n\n\tngOnInit(): void {\n\t\tconst selectedCollection$ = this.store.select(BuilderSelectors.selectCurrentCollection).pipe(take(1));\n\t\tconst projectEnvironmentsList$ = this.store.select(EnvironmentSelectors.selectEnvironments).pipe(take(1));\n\n\t\tthis.collectionVersionsList$ = selectedCollection$.pipe(\n\t\t\tswitchMap(collection => {\n\t\t\t\treturn this.pieceService.listVersions(collection.id).pipe(\n\t\t\t\t\tmap(versions => {\n\t\t\t\t\t\treturn versions.reverse();\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\n\t\tthis.publishedEnvironments$ = forkJoin({\n\t\t\tselectedCollection: selectedCollection$,\n\t\t\tprojectEnvironmentsList: projectEnvironmentsList$,\n\t\t\tcollectionVersionsList: this.collectionVersionsList$,\n\t\t}).pipe(\n\t\t\tmap(response => {\n\t\t\t\tlet versions = response.collectionVersionsList;\n\t\t\t\tlet publishedEnvironments = new Map<string, ProjectEnvironment[]>();\n\t\t\t\tversions.forEach(collectionVersion => {\n\t\t\t\t\tpublishedEnvironments[collectionVersion.id.toString()] = [];\n\t\t\t\t\tresponse.projectEnvironmentsList.forEach(env => {\n\t\t\t\t\t\tlet exists = false;\n\t\t\t\t\t\tenv.deployedCollections.forEach(deployedCollection => {\n\t\t\t\t\t\t\tif (deployedCollection.collectionId === response.selectedCollection.id) {\n\t\t\t\t\t\t\t\tif (deployedCollection.collectionVersionsId.indexOf(collectionVersion.id) !== -1) {\n\t\t\t\t\t\t\t\t\texists = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (exists) {\n\t\t\t\t\t\t\tpublishedEnvironments[collectionVersion.id.toString()].push(env);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn publishedEnvironments;\n\t\t\t})\n\t\t);\n\t}\n\n\tcloseVersionSidebar() {\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.setRightSidebar({\n\t\t\t\tsidebarType: RightSideBarType.NONE,\n\t\t\t\tprops: {},\n\t\t\t})\n\t\t);\n\t}\n\n\tget versionEditState() {\n\t\treturn VersionEditState;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.column {\r\n  height: 100%; /* allows both columns to span the full height of the browser window */\r\n  display: flex;\r\n  flex-direction: column; /* places the left and right headers above the bottom content */\r\n}\r\n\r\n.flip-chevorn-down {\r\n  transform: rotate(0deg);\r\n}\r\n\r\n.bottom {\r\n  flex-grow: 1; /* ensures that the container will take up the full height of the parent container */\r\n  overflow-y: auto; /* adds scroll to this container */\r\n}\r\n\r\n.piece-container {\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  border-radius: 5px;\r\n}\r\n.piece-container {\r\n  background-color: $grayCard;\r\n}\r\n\r\n.center-button {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.dropdown-menu {\r\n  margin-top: -40px !important;\r\n  left: -150px !important;\r\n}\r\n.dropdown .dropdown-menu:before {\r\n  background-color: unset;\r\n}\r\n\r\n.piece-version-list-height,.collections-versions-loading-icon-container {\r\n  min-height: calc(100vh - 175px);\r\n}\r\n\r\n\r\n\r\n",
                    "styleUrl": "./collection-version-sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "versionEditState": {
                    "name": "versionEditState",
                    "getSignature": {
                        "name": "versionEditState",
                        "type": "",
                        "returnType": "",
                        "line": 83
                    }
                }
            },
            "templateData": "<div class=\"column\">\r\n  <div class=\"p-3 top\">\r\n    <app-sidebar-header\r\n      (closeClicked)=\"closeVersionSidebar()\"\r\n      [title]=\"'Collection Versions'\"\r\n    ></app-sidebar-header>\r\n  </div>\r\n  <ng-container *ngIf=\"publishedEnvironments$ | async as publishedEnvironments; else loading\">\r\n    <div\r\n      *ngIf=\"collectionVersionsList$ | async as versions; else loading\"\r\n      class=\"px-4 bottom justify-content-center align-items-center piece-version-list-height\"\r\n      [class.d-column]=\"versions.length === 0\"\r\n    >\r\n      <ng-container *ngIf=\"versions.length > 0; else loading\">\r\n        <div\r\n          class=\"version-container p-4 mb-4\"\r\n          *ngFor=\"let version of versions; let i = index\"\r\n        >\r\n          <div class=\"d-flex\">\r\n            <div class=\"flex-grow-1\">\r\n              <span>Collection Version #{{ versions.length - i }}</span>\r\n            </div>\r\n            <div>\r\n            <span\r\n              class=\"badge badge-warning\"\r\n              *ngIf=\"version.state === versionEditState.DRAFT\"\r\n            >DRAFT</span\r\n            >\r\n              <span\r\n                class=\"badge badge-success\"\r\n                *ngIf=\"version.state === versionEditState.LOCKED\"\r\n              >LOCKED</span\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex mt-2\">\r\n            <div>\r\n              <div class=\"text-description\">\r\n                {{ timeHelperService.formatDateTime(version.epochCreationTime) }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex mt-2\">\r\n            <div\r\n              *ngIf=\"publishedEnvironments[version.id.toString()] !== undefined\"\r\n            >\r\n            <span\r\n              class=\"badge badge-primary mr-2\"\r\n              *ngFor=\"\r\n                let environment of publishedEnvironments[version.id.toString()];\r\n                let i = index\r\n              \"\r\n            >{{ environment.name }}</span\r\n            >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n<ng-template #loading>\r\n  <div class=\"collections-versions-loading-icon-container d-flex flex-direction-column justify-content-center align-items-center\">\r\n    <app-loading-icon></app-loading-icon>\r\n  </div>\r\n\r\n</ng-template>\r\n"
        },
        {
            "name": "ConfigCardComponent",
            "id": "component-ConfigCardComponent-76c7f37f1c959b5cccd65de6eedbc0c709483b05eab418e45fad7e46a392a345a81919eacb1d84da0dfe8e0aaff5af22a690e7e9d5a5e57d0c30528f8abe12b2",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/configs-sidebar/config-card/config-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-variable-content",
            "styleUrls": [
                "./config-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./config-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "variable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Config",
                    "decorators": []
                },
                {
                    "name": "viewMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "deleteEvent",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ThemeService } from '../../../../../../common-layout/service/theme.service';\nimport { Config } from '../../../../../../common-layout/model/fields/variable/config';\n\n@Component({\n\tselector: 'app-variable-content',\n\ttemplateUrl: './config-card.component.html',\n\tstyleUrls: ['./config-card.component.scss'],\n})\nexport class ConfigCardComponent {\n\t@Output() deleteEvent: EventEmitter<boolean> = new EventEmitter<boolean>();\n\t@Input() variable: Config;\n\t@Input() viewMode: boolean;\n\n\tconstructor(public themeService: ThemeService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/assets/scss/custom/variables';\r\n\r\n.variable-container{\r\n  padding: 20px 10px 20px 20px;\r\n\r\n  background: $white;\r\n  border: 1px solid $border;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n\r\n  cursor: pointer;\r\n  display: flex;\r\n}\r\n\r\n.info-container{\r\n  flex-grow: 1;\r\n}\r\n\r\n.variable-container:hover{\r\n  background-color: $grayCard;\r\n}\r\n",
                    "styleUrl": "./config-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"variable-container mb-3\">\r\n  <div class=\"info-container text-break\" *ngIf=\"variable\">\r\n    <div>{{variable.label}}</div>\r\n    <div class=\"text-description\">Key: {{variable.key}}</div>\r\n    <div class=\"text-description\">Type: {{variable.type}}</div>\r\n    <div class=\"text-description\">Hint: {{variable.hintText}}</div>\r\n  </div>\r\n  <app-icon-button [hidden]=\"viewMode\" [color]=\"themeService.BODY_COLOR\"\r\n                   (click)=\"deleteEvent.emit(); $event.stopPropagation();\"\r\n  [hoverColor]=\"themeService.DANGER_COLOR\" [iconFilename]=\"'trash.svg'\"></app-icon-button>\r\n</div>\r\n"
        },
        {
            "name": "ConfigsFormComponent",
            "id": "component-ConfigsFormComponent-bbba1337f1d5b222b9ae3ad0cf1b9ee8a823a61660b9c646ff76933582d57bc01b20b11d01d8bdcc103013a271dadbf0ba917b29cdf5c2dfaee9ea6d8dfd6a77",
            "file": "src/app/layout/common-layout/components/configs-form/configs-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: ConfigsFormComponent,\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, multi: true, useExisting: ConfigsFormComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-configs-form",
            "styleUrls": [
                "./configs-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./configs-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "configs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "Config[]",
                    "decorators": []
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "descriptionLimit",
                    "defaultValue": "45",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "dynamicDropdownsObservablesMap",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<ConfigKey | Observable<DynamicDropdownResult>>",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "hintTextShown",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean[]",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "OnChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "OnTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "refreshReferencesList$",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>[]",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "updateValueOnChange$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "createDynamicDropdownObservableBasedOnConfigScope",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "refreshEndPointBody",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "refreshEndPointBody",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createDynamicDropdownOptionsRequest",
                    "args": [
                        {
                            "name": "configToRefresh",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "configToRefresh",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createDynamicDropdownResultObservable",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "refreshEndPointBody",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<DynamicDropdownResult>",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "refreshEndPointBody",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAuthConfigSettings",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "OAuth2ConfigSettings",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getControl",
                    "args": [
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDropdownSettings",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DropdownSettings",
                    "typeParameters": [],
                    "line": 217,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDynamicDropdownObservable",
                    "args": [
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<DynamicDropdownResult>",
                    "typeParameters": [],
                    "line": 213,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getStaticDropdownSettings",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "StaticDropdownSettings",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listenToRefreshReferenceValuChanges",
                    "args": [
                        {
                            "name": "refresherConfigKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configToRefresh",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "refresherConfigKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configToRefresh",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prepareDynamicDropdowns",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "{ invalid: boolean; }",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n\tValidatorFn,\n\tValidators,\n} from '@angular/forms';\n\nimport { map, Observable, shareReplay, startWith, tap } from 'rxjs';\nimport { fadeInUp400ms } from '../../animation/fade-in-up.animation';\nimport { DynamicDropdownResult } from '../../model/dynamic-controls/dynamic-dropdown-result';\nimport { ConfigType, DropdownType } from '../../model/enum/config.enum';\nimport { Config } from '../../model/fields/variable/config';\nimport {\n\tDropdownSettings,\n\tDynamicDropdownSettings,\n\tOAuth2ConfigSettings,\n\tStaticDropdownSettings,\n} from '../../model/fields/variable/config-settings';\nimport { DynamicDropdownService } from '../../service/dynamic-dropdown.service';\n\ntype ConfigKey = string;\n\n@Component({\n\tselector: 'app-configs-form',\n\ttemplateUrl: './configs-form.component.html',\n\tstyleUrls: ['./configs-form.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: ConfigsFormComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: ConfigsFormComponent,\n\t\t},\n\t],\n\tanimations: [fadeInUp400ms],\n})\nexport class ConfigsFormComponent implements OnInit, ControlValueAccessor {\n\t@Input() configs: Config[] = [];\n\t@Input() submitted = false;\n\tform!: FormGroup;\n\tdescriptionLimit = 45;\n\thintTextShown: boolean[] = [];\n\tOnChange = value => {};\n\tOnTouched = () => {};\n\n\tupdateValueOnChange$: Observable<void> = new Observable<void>();\n\trefreshReferencesList$: Observable<void>[] = [];\n\tdynamicDropdownsObservablesMap: Map<ConfigKey, Observable<DynamicDropdownResult>> = new Map();\n\tconstructor(private dynamicDropdownService: DynamicDropdownService, private fb: FormBuilder) {}\n\n\tngOnInit(): void {\n\t\tthis.createForm();\n\t\tthis.prepareDynamicDropdowns();\n\t\tthis.hintTextShown = new Array(this.configs.length);\n\t\tthis.hintTextShown = this.hintTextShown.fill(false);\n\t}\n\n\twriteValue(obj: any): void {\n\t\tif (obj) {\n\t\t\tthis.form.patchValue(obj);\n\t\t}\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.OnChange = fn;\n\t\tthis.OnChange(this.form.value);\n\t}\n\tregisterOnTouched(fn: any): void {\n\t\tthis.OnTouched = fn;\n\t}\n\tsetDisabledState(disabled: boolean) {\n\t\tif (disabled) {\n\t\t\tthis.form.disable();\n\t\t} else {\n\t\t\tthis.form.enable();\n\t\t}\n\t}\n\tvalidate() {\n\t\tif (this.form.invalid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\tcreateForm() {\n\t\tconst controls: { [key: string]: FormControl } = {};\n\t\tthis.configs.forEach(c => {\n\t\t\tconst validators: ValidatorFn[] = [];\n\t\t\tif (c.settings?.required || c.settings?.required === undefined) {\n\t\t\t\tvalidators.push(Validators.required);\n\t\t\t}\n\t\t\tcontrols[c.key] = new FormControl(c.value, validators);\n\t\t});\n\t\tthis.form = this.fb.group(controls);\n\t\tthis.updateValueOnChange$ = this.form.valueChanges.pipe(\n\t\t\ttap(value => {\n\t\t\t\tthis.OnChange(value);\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\t}\n\n\tprepareDynamicDropdowns() {\n\t\tthis.configs.forEach(c => {\n\t\t\tconst configSettings = c.settings as DynamicDropdownSettings;\n\t\t\tif (c.type == ConfigType.DROPDOWN && configSettings.dropdownType === DropdownType.DYNAMIC) {\n\t\t\t\tif (!configSettings.refreshReferences || configSettings.refreshReferences.length == 0) {\n\t\t\t\t\tthis.dynamicDropdownsObservablesMap.set(c.key, this.createDynamicDropdownResultObservable(c, {}));\n\t\t\t\t} else {\n\t\t\t\t\tconfigSettings.refreshReferences.forEach(refresherConfigKey => {\n\t\t\t\t\t\tthis.listenToRefreshReferenceValuChanges(refresherConfigKey, c);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateDynamicDropdownResultObservable(config: Config, refreshEndPointBody: any) {\n\t\tvar dropdownResult$: Observable<DynamicDropdownResult> = this.createDynamicDropdownObservableBasedOnConfigScope(\n\t\t\tconfig,\n\t\t\trefreshEndPointBody\n\t\t);\n\n\t\tdropdownResult$ = dropdownResult$.pipe(\n\t\t\tmap(res => {\n\t\t\t\tif (!res) {\n\t\t\t\t\tconsole.warn(`Activepieces-response for config:${config.label} was null`);\n\t\t\t\t\tres = new DynamicDropdownResult();\n\t\t\t\t\tres.loaded = true;\n\t\t\t\t\tres.options = [];\n\t\t\t\t\tres.placeholder = 'No options';\n\t\t\t\t} else {\n\t\t\t\t\tres.loaded = true;\n\t\t\t\t}\n\t\t\t\tif (!res.options) {\n\t\t\t\t\tres.options = [];\n\t\t\t\t}\n\t\t\t\treturn res;\n\t\t\t}),\n\t\t\ttap(res => {\n\t\t\t\tconst configControl = this.form.get(config.key);\n\n\t\t\t\tif (!res.options.find(o => JSON.stringify(o.value) === JSON.stringify(configControl?.value))) {\n\t\t\t\t\tconfigControl?.setValue(null);\n\t\t\t\t}\n\t\t\t\tif (res?.disabled) {\n\t\t\t\t\tconfigControl?.disable();\n\t\t\t\t} else {\n\t\t\t\t\tconfigControl?.enable();\n\t\t\t\t}\n\t\t\t}),\n\t\t\tshareReplay()\n\t\t);\n\n\t\treturn dropdownResult$;\n\t}\n\n\tcreateDynamicDropdownObservableBasedOnConfigScope(config: Config, refreshEndPointBody) {\n\t\tif (config.collectionVersionId) {\n\t\t\treturn this.dynamicDropdownService.refreshCollectionDynamicDropdownConfig(\n\t\t\t\tconfig.collectionVersionId,\n\t\t\t\tconfig.key,\n\t\t\t\trefreshEndPointBody\n\t\t\t);\n\t\t} else if (config.flowVersionId) {\n\t\t\treturn this.dynamicDropdownService.refreshFlowDynamicDropdownConfig(\n\t\t\t\tconfig.flowVersionId,\n\t\t\t\tconfig.key,\n\t\t\t\trefreshEndPointBody\n\t\t\t);\n\t\t} else {\n\t\t\tthrow Error(`config ${config.label} does not have a collectionVersionId nor a flowVersionId`);\n\t\t}\n\t}\n\tlistenToRefreshReferenceValuChanges(refresherConfigKey: string, configToRefresh: Config) {\n\t\tconst refresherConfigControl = this.getControl(refresherConfigKey);\n\t\tthis.refreshReferencesList$.push(\n\t\t\trefresherConfigControl!.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tstartWith({}),\n\t\t\t\t\ttap(() => {\n\t\t\t\t\t\tconst requestBody = this.createDynamicDropdownOptionsRequest(configToRefresh);\n\t\t\t\t\t\tthis.dynamicDropdownsObservablesMap.set(\n\t\t\t\t\t\t\tconfigToRefresh.key,\n\t\t\t\t\t\t\tthis.createDynamicDropdownResultObservable(configToRefresh, requestBody)\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.pipe(map(() => void 0))\n\t\t);\n\t}\n\tcreateDynamicDropdownOptionsRequest(configToRefresh: Config) {\n\t\tconst refreshersConfigs = this.configs.filter(c =>\n\t\t\t(configToRefresh.settings as DynamicDropdownSettings).refreshReferences?.find(key => key == c.key)\n\t\t);\n\t\tconst requestBody = {};\n\t\trefreshersConfigs.forEach(c => {\n\t\t\trequestBody[c.key] = this.getControl(c.key)?.value;\n\t\t});\n\t\treturn requestBody;\n\t}\n\n\tgetControl(configKey: string) {\n\t\treturn this.form.get(configKey);\n\t}\n\tgetDynamicDropdownObservable(configKey: string) {\n\t\treturn this.dynamicDropdownsObservablesMap.get(configKey) as Observable<DynamicDropdownResult>;\n\t}\n\n\tgetDropdownSettings(config: Config) {\n\t\treturn config.settings as DropdownSettings;\n\t}\n\tgetStaticDropdownSettings(config: Config) {\n\t\treturn config.settings as StaticDropdownSettings;\n\t}\n\tgetAuthConfigSettings(config: Config) {\n\t\treturn config.settings as OAuth2ConfigSettings;\n\t}\n\tget configType() {\n\t\treturn ConfigType;\n\t}\n\tget dropdownType() {\n\t\treturn DropdownType;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.description-container {\r\n  font-weight: 400;\r\n  font-size: 0.75rem;\r\n  line-height: 1.375rem;\r\n  margin-bottom: 5px;\r\n  color: $description;\r\n}\r\n\r\n.ap-more-text {\r\n  color: $blue-link;\r\n  cursor: pointer;\r\n}\r\n",
                    "styleUrl": "./configs-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dynamicDropdownService",
                        "type": "DynamicDropdownService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 57,
                "jsdoctags": [
                    {
                        "name": "dynamicDropdownService",
                        "type": "DynamicDropdownService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "configType": {
                    "name": "configType",
                    "getSignature": {
                        "name": "configType",
                        "type": "",
                        "returnType": "",
                        "line": 226
                    }
                },
                "dropdownType": {
                    "name": "dropdownType",
                    "getSignature": {
                        "name": "dropdownType",
                        "type": "",
                        "returnType": "",
                        "line": 229
                    }
                }
            },
            "templateData": "<form *ngIf=\"form\" [formGroup]=\"form\" [class.ng-submitted]=\"submitted\">\r\n  <div\r\n    class=\"form-group\"\r\n    *ngFor=\"let config of configs; let i = index\"\r\n    [ngSwitch]=\"config.type\"\r\n  >\r\n    <label [attr.required]=\"config.settings?.required ||config.settings?.required === undefined? true:null\"  [for]=\"'form-input' + i\">{{ config.label }}</label>\r\n    <div class=\"d-flex description-container text-break\">\r\n      <span *ngIf=\"config.hintText\">\r\n        {{\r\n          hintTextShown[i]\r\n            ? config.hintText\r\n            : config.hintText.slice(0, descriptionLimit)\r\n        }}\r\n      </span>\r\n      <span\r\n        *ngIf=\"\r\n          config.hintText &&\r\n          config.hintText.length > descriptionLimit &&\r\n          !hintTextShown[i]\r\n        \"\r\n      >\r\n        &nbsp;\r\n        <span>...</span>\r\n        <span class=\"ap-more-text\" (click)=\"hintTextShown[i] = true\"\r\n          >more\r\n        </span>\r\n      </span>\r\n    </div>\r\n\r\n    <div [id]=\"'form-input' + i\">\r\n      <input\r\n        *ngSwitchCase=\"configType.SHORT_TEXT\"\r\n        class=\"form-control\"\r\n        type=\"text\"\r\n        [formControlName]=\"config.key\"\r\n        [placeholder]=\"config.placeholder ? config.placeholder : ''\"\r\n      />\r\n\r\n      <textarea\r\n      *ngSwitchCase=\"configType.LONG_TEXT\"\r\n      [formControlName]=\"config.key\"\r\n      [placeholder]=\"config.placeholder ? config.placeholder : ''\"\r\n      rows=\"4\"\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n>\r\n      </textarea>\r\n      <input\r\n        *ngSwitchCase=\"configType.EMAIL\"\r\n        class=\"form-control\"\r\n        type=\"email\"\r\n        [formControlName]=\"config.key\"\r\n        [placeholder]=\"config.placeholder ? config.placeholder : ''\"\r\n      />\r\n      <input\r\n        *ngSwitchCase=\"configType.INTEGER\"\r\n        class=\"form-control\"\r\n        type=\"number\"\r\n        [formControlName]=\"config.key\"\r\n        [placeholder]=\"config.placeholder ? config.placeholder : ''\"\r\n      />\r\n      <app-o-auth2-connect-control\r\n        *ngSwitchCase=\"configType.OAUTH2\"\r\n        [formControlName]=\"config.key\"\r\n        [configSettings]=\"getAuthConfigSettings(config)\"\r\n      ></app-o-auth2-connect-control>\r\n\r\n      <app-dictonary-form-control\r\n        *ngSwitchCase=\"configType.DICTIONARY\"\r\n        [formControlName]=\"config.key\"\r\n      >\r\n      </app-dictonary-form-control>\r\n\r\n      <ng-container *ngSwitchCase=\"configType.DROPDOWN\">\r\n        <ng-container\r\n          *ngIf=\"\r\n            getDropdownSettings(config).dropdownType === dropdownType.DYNAMIC;\r\n            else staticDropdown\r\n          \"\r\n        >\r\n          <ng-select\r\n            [formControlName]=\"config.key\"\r\n            [items]=\"\r\n              (getDynamicDropdownObservable(config.key) | async)?.options || []\r\n            \"\r\n            [loading]=\"\r\n              !(getDynamicDropdownObservable(config.key) | async)?.loaded ||\r\n              false\r\n            \"\r\n            [placeholder]=\"\r\n              !(getDynamicDropdownObservable(config.key) | async)?.loaded\r\n                ? 'Loading...'\r\n                : (getDynamicDropdownObservable(config.key) | async)\r\n                    ?.placeholder!\r\n            \"\r\n            bindLabel=\"label\"\r\n            bindValue=\"value\"\r\n            [clearable]=\"!getDropdownSettings(config).required\"\r\n            [searchable]=\"false\"\r\n          >\r\n            <ng-template ng-option-tmp let-item=\"item\">\r\n              <app-ng-select-item-template\r\n                [item]=\"item\"\r\n                [isSelected]=\"item.value === getControl(config.key)?.value\"\r\n              ></app-ng-select-item-template>\r\n            </ng-template>\r\n\r\n            <ng-template ng-loadingspinner-tmp>\r\n              <app-ng-select-loading-spinner-template></app-ng-select-loading-spinner-template>\r\n            </ng-template>\r\n          </ng-select>\r\n        </ng-container>\r\n        <ng-template #staticDropdown>\r\n          <ng-select\r\n            [formControlName]=\"config.key\"\r\n            [items]=\"getStaticDropdownSettings(config).options\"\r\n            bindLabel=\"label\"\r\n            bindValue=\"value\"\r\n            [clearable]=\"!getDropdownSettings(config).required\"\r\n            [searchable]=\"false\"\r\n          >\r\n            <ng-template ng-option-tmp let-item=\"item\">\r\n              <app-ng-select-item-template\r\n                [item]=\"item\"\r\n                [isSelected]=\"item.value === getControl(config.key)?.value\"\r\n              ></app-ng-select-item-template>\r\n            </ng-template>\r\n          </ng-select>\r\n        </ng-template>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"submitted && getControl(config.key)?.invalid\">\r\n        <p @fadeInUp class=\"invalid-input\">{{ config.label }} is required.</p>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</form>\r\n<ng-container *ngIf=\"updateValueOnChange$ | async\"></ng-container>\r\n<ng-container *ngFor=\"let refreshRefernceValueChanged$ of refreshReferencesList$\">\r\n<ng-container *ngIf=\"refreshRefernceValueChanged$|async\"></ng-container>\r\n</ng-container>\r\n"
        },
        {
            "name": "ConfirmDeleteModalComponent",
            "id": "component-ConfirmDeleteModalComponent-2ff5375e1b46ecc0e5906ba31a35f3fa07f7dfce1cb7f4ac34796039ba59131697a68db3c7598dfcab097cda4f23d888c3739daef83eb43b3b8947a553ffdf1e",
            "file": "src/app/layout/common-layout/components/confirm-delete-modal/confirm-delete-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-confirm-delete-modal",
            "styleUrls": [
                "./confirm-delete-modal.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./confirm-delete-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "archive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "entityName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "instantClose",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showText",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "confirmState",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "confirmationText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "deleteForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "confirmDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n\tselector: 'app-confirm-delete-modal',\n\ttemplateUrl: './confirm-delete-modal.component.html',\n\tstyleUrls: ['./confirm-delete-modal.component.css'],\n})\nexport class ConfirmDeleteModalComponent implements OnInit {\n\t@Output() confirmState = new EventEmitter<boolean>();\n\t@Input() entityName: string;\n\t@Input() archive = false;\n\t@Input() showText = true;\n\t@Input() loading = false;\n\t@Input() instantClose = true;\n\tconfirmationText;\n\tdeleteForm: FormGroup;\n\n\tconstructor(public bsModalRef: BsModalRef, private formBuilder: FormBuilder) {}\n\n\tngOnInit(): void {\n\t\tif (this.archive) {\n\t\t\tthis.confirmationText = 'ARCHIVE';\n\t\t} else {\n\t\t\tthis.confirmationText = 'DELETE';\n\t\t}\n\t\tthis.deleteForm = this.formBuilder.group({\n\t\t\tconfirmationTextControl: [, [Validators.required, Validators.pattern(this.confirmationText)]],\n\t\t});\n\t}\n\n\tconfirmDelete(): void {\n\t\tif (this.deleteForm.invalid && this.showText) {\n\t\t\treturn;\n\t\t}\n\t\tthis.confirmState.emit(true);\n\t\tthis.deleteForm.reset();\n\t\tif (this.instantClose) {\n\t\t\tthis.bsModalRef?.hide();\n\t\t\tthis.deleteForm.reset();\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".with-icon {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n",
                    "styleUrl": "./confirm-delete-modal.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"modal-header\">\r\n  <h5 class=\"modal-title pull-left\">\r\n    {{ archive ? \"Archive\" : \"Delete\" }} Confirmation\r\n  </h5>\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn-close close pull-right\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef?.hide()\"\r\n  >\r\n    <span aria-hidden=\"true\" class=\"visually-hidden close-custom\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form [formGroup]=\"deleteForm\" *ngIf=\"showText\">\r\n    <div class=\"form-group\">\r\n      <label for=\"confirmationTextControl\"\r\n        >If you are sure that you want to\r\n        {{ archive ? \"archive\" : \"delete\" }} \"{{ entityName }}\", type\r\n        {{ confirmationText }} in the following field.</label\r\n      >\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"confirmationTextControl\"\r\n        formControlName=\"confirmationTextControl\"\r\n        placeholder=\"{{ confirmationText }}\"\r\n      />\r\n    </div>\r\n  </form>\r\n  <div class=\"form-group\" *ngIf=\"!showText\">\r\n    <label\r\n      >If you are sure that you want to {{ archive ? \"archive\" : \"delete\" }} \"{{\r\n        entityName\r\n      }}\", please press confirm.</label\r\n    >\r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\" >\r\n  <div class=\"w-100\">\r\n    <app-button\r\n    [disabled]=\"\r\n      this.deleteForm.controls['confirmationTextControl'].invalid && showText\r\n    \"\r\n    [loading]=\"loading\"\r\n    btnColor=\"warn\"\r\n    [fullWidthOfContainer]=\"true\"\r\n    (buttonClicked)=\"confirmDelete()\"\r\n  >\r\n  Confirm</app-button>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "ConnectOauth2Component",
            "id": "component-ConnectOauth2Component-653f73d2f8c134b89367fda1054e9ad832295529f025f10d5de5dd2ce2318a9e7f05ea8225d0668f6bd95dbe5652a4f52cf840586b9854bb0563ef6720539582",
            "file": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/connect-oauth2/connect-oauth2.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-connect-oauth2",
            "styleUrls": [
                "./connect-oauth2.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./connect-oauth2.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dynamicControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Oauth2LoginFormControl",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "popUpError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "isDisabled",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Oauth2Service } from '../../../../service/oauth2.service';\nimport { Oauth2LoginFormControl } from '../../../../model/dynamic-controls/oauth2-login-form-control';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\n\n@Component({\n\tselector: 'app-connect-oauth2',\n\ttemplateUrl: './connect-oauth2.component.html',\n\tstyleUrls: ['./connect-oauth2.component.css'],\n\tanimations: [fadeInUp400ms],\n})\nexport class ConnectOauth2Component {\n\t@Input() dynamicControl: Oauth2LoginFormControl;\n\n\tconstructor(private oauth2Service: Oauth2Service) {}\n\tpopUpError = false;\n\n\topenPopup(): void {\n\t\tthis.oauth2Service.openPopup(this.dynamicControl.getSettings()).subscribe({\n\t\t\tnext: value => {\n\t\t\t\tif (value) this.dynamicControl.formControl().setValue(value);\n\t\t\t},\n\t\t\terror: error => {\n\t\t\t\tthis.popUpError = true;\n\t\t\t},\n\t\t});\n\t}\n\n\tisDisabled() {\n\t\tlet settings = this.dynamicControl.getSettings();\n\t\t// console.log(settings);\n\t\treturn !(settings.clientSecret && settings.clientId && settings.authUrl && settings.responseType && settings.scope);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./connect-oauth2.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "oauth2Service",
                        "type": "Oauth2Service",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "oauth2Service",
                        "type": "Oauth2Service",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<app-button\r\n  *ngIf=\"\r\n    dynamicControl.formControl().value === undefined ||\r\n    dynamicControl.formControl().value === null\r\n  \"\r\n  btnColor=\"primary\"\r\n  (buttonClicked)=\"openPopup()\"\r\n  [disabled]=\"isDisabled()\"\r\n>Connect</app-button>\r\n<app-button\r\n  *ngIf=\"\r\n    dynamicControl.formControl().value !== undefined &&\r\n    dynamicControl.formControl().value !== null\r\n  \"\r\n  btnColor=\"warn\"\r\n  (buttonClicked)=\"dynamicControl.formControl().setValue(undefined)\"\r\n>Disconnect</app-button>\r\n<p *ngIf=\"popUpError\" class=\"invalid-input\" @fadeInUp>\r\n  Please make sure this config's credentials are correct.\r\n</p>\r\n"
        },
        {
            "name": "CreateAccountModalComponent",
            "id": "component-CreateAccountModalComponent-2eea797241e1458e653a847ac6402acd0cd515d3b5bd3db7c2a253fe1ca23120d50ac94b8496033cd77127420ea75a2bfdfd95abbeebcafb144ca3ce592a5471",
            "file": "src/app/layout/common-layout/components/create-account-modal/create-account-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-account-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./create-account-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "created",
                    "defaultValue": "new EventEmitter<Account>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<Account>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "accountExists",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "accountForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "createAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HttpErrorResponse, HttpStatusCode } from '@angular/common/http';\nimport { AccountService } from '../../service/account.service';\nimport { Account } from '../../model/account.interface';\nimport { EnvironmentService } from '../../service/environment.service';\nimport { fadeInUp400ms } from '../../animation/fade-in-up.animation';\nimport { switchMap, throwError } from 'rxjs';\n\n@Component({\n\tselector: 'app-create-account-modal',\n\ttemplateUrl: './create-account-modal.component.html',\n\tstyleUrls: [],\n\tanimations: [fadeInUp400ms],\n})\nexport class CreateAccountModalComponent implements OnInit {\n\tsubmitted = false;\n\tloading = false;\n\taccountForm: FormGroup;\n\taccountExists: boolean = false;\n\n\t@Output() created: EventEmitter<Account> = new EventEmitter<Account>();\n\n\tconstructor(\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate environmentService: EnvironmentService,\n\t\tprivate accountService: AccountService\n\t) {}\n\n\tngOnInit() {\n\t\tthis.accountForm = this.formBuilder.group({\n\t\t\tname: ['', [Validators.required]],\n\t\t});\n\t}\n\n\tcreateAccount() {\n\t\tthis.submitted = true;\n\t\tif (!this.accountForm.valid || this.loading) {\n\t\t\treturn;\n\t\t}\n\t\tthis.accountExists = false;\n\t\tthis.loading = true;\n\n\t\tthis.environmentService\n\t\t\t.cachedSelectedEnvironment()\n\t\t\t.pipe(\n\t\t\t\tswitchMap(environment => {\n\t\t\t\t\tif (!environment) {\n\t\t\t\t\t\treturn throwError(() => new Error('selected environment is null'));\n\t\t\t\t\t}\n\t\t\t\t\tconst request = this.accountForm.value;\n\t\t\t\t\treturn this.accountService.create(environment.id, request);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe({\n\t\t\t\tnext: (response: Account) => {\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t\tthis.created.emit(response);\n\t\t\t\t\tthis.accountForm.reset();\n\t\t\t\t\tthis.bsModalRef?.hide();\n\t\t\t\t},\n\t\t\t\terror: (error: HttpErrorResponse) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tif (error.status === HttpStatusCode.Conflict) {\n\t\t\t\t\t\tthis.accountExists = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t},\n\t\t\t});\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form\r\n  [formGroup]=\"accountForm\"\r\n  [class.ng-submitted]=\"submitted\"\r\n  (ngSubmit)=\"createAccount()\"\r\n>\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title pull-left\">Create Account</h5>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn-close close pull-right\"\r\n      aria-label=\"Close\"\r\n      (click)=\"bsModalRef?.hide()\"\r\n    >\r\n      <span aria-hidden=\"true\" class=\"visually-hidden close-custom\"\r\n        >&times;</span\r\n      >\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Name</label>\r\n      <p class=\"text-description\">\r\n        Name will be used to identify the account when sending app events.\r\n      </p>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        placeholder=\"account_id\"\r\n        formControlName=\"name\"\r\n        (ngModelChange)=\"accountExists = false\"\r\n      />\r\n      <div\r\n        @fadeInUp\r\n        *ngIf=\"\r\n          submitted &&\r\n          (this.accountForm.controls['name'].invalid || accountExists)\r\n        \"\r\n      >\r\n        <p\r\n          class=\"invalid-input\"\r\n          *ngIf=\"\r\n            submitted && this.accountForm.controls['name'].hasError('required')\r\n          \"\r\n        >\r\n          Name is required\r\n        </p>\r\n        <p class=\"invalid-input\" *ngIf=\"submitted && accountExists\">\r\n          Name already exists\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <app-button\r\n    btnColor=\"basic\"\r\n    btnStyle=\"basic\"\r\n    [loading]=\"loading\"\r\n    [fullWidthOfContainer]=\"true\"\r\n    (buttonClicked)=\"bsModalRef?.hide()\"\r\n  >  Cancel\r\n  </app-button>\r\n    <app-button\r\n      type=\"submit\"\r\n      [loading]=\"loading\"\r\n      btnColor=\"primary\"\r\n    >Create</app-button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "CreateApiKeyModalComponent",
            "id": "component-CreateApiKeyModalComponent-f2c384fd4f6e53385cedfdafe2d269c37a9fa21fc7ed8f6b557996692c1f80ee02c829e3ab9aa3bcbf1bcc8f128b45b4d0918ec2347255e6c6dc00e561667ef7",
            "file": "src/app/layout/dashboard-layout/components/create-api-key-modal/create-api-key-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-api-key-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./create-api-key-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "apiKeyForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "createApiKeyFailed$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "createApiKeySuccessful$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "modalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "createApiKey",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { map, Observable, tap } from 'rxjs';\nimport { fadeInUp400ms } from '../../../common-layout/animation/fade-in-up.animation';\nimport { ApiKeysActions } from '../../store/action/api-keys.action';\nimport { Store } from '@ngrx/store';\nimport { Actions, ofType } from '@ngrx/effects';\n\n@Component({\n\tselector: 'app-create-api-key-modal',\n\ttemplateUrl: './create-api-key-modal.component.html',\n\tstyleUrls: [],\n\tanimations: [fadeInUp400ms],\n})\n//WTF\nexport class CreateApiKeyModalComponent implements OnInit {\n\tsubmitted = false;\n\tloading = false;\n\tapiKeyForm: FormGroup;\n\tmodalRef?: BsModalRef;\n\n\tcreateApiKeySuccessful$: Observable<void> = new Observable<void>();\n\tcreateApiKeyFailed$: Observable<void> = new Observable<void>();\n\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate store: Store,\n\t\tprivate actions$: Actions,\n\t\tprivate modalService: BsModalService\n\t) {}\n\n\topenModal(template: TemplateRef<any>) {\n\t\tthis.modalRef = this.modalService.show(template);\n\t}\n\n\tngOnInit() {\n\t\tthis.apiKeyForm = this.formBuilder.group({\n\t\t\tname: ['', [Validators.required]],\n\t\t});\n\t\tthis.createApiKeySuccessful$ = this.actions$.pipe(\n\t\t\tofType(ApiKeysActions.createApiKeySuccess),\n\t\t\ttap(() => {\n\t\t\t\tthis.apiKeyForm.reset();\n\t\t\t\tthis.modalRef?.hide();\n\t\t\t\tthis.loading = false;\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\t\tthis.createApiKeyFailed$ = this.actions$.pipe(\n\t\t\tofType(ApiKeysActions.createApiKeyFailed),\n\t\t\ttap(() => {\n\t\t\t\tthis.loading = false;\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\t}\n\n\tcreateApiKey() {\n\t\tthis.submitted = true;\n\t\tif (!this.apiKeyForm.value || this.loading) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loading = true;\n\t\tthis.store.dispatch(ApiKeysActions.createApiKey(this.apiKeyForm.value));\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-template #template>\r\n  <form\r\n    [formGroup]=\"apiKeyForm\"\r\n    [class.ng-submitted]=\"submitted\"\r\n    (ngSubmit)=\"createApiKey()\"\r\n  >\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title pull-left\">Create API key</h5>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn-close close pull-right\"\r\n        aria-label=\"Close\"\r\n        (click)=\"modalRef?.hide()\"\r\n      >\r\n        <span aria-hidden=\"true\" class=\"visually-hidden close-custom\"\r\n          >&times;</span\r\n        >\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"name\"\r\n          placeholder=\"backend key\"\r\n          formControlName=\"name\"\r\n        />\r\n        <div\r\n          @fadeInUp\r\n          *ngIf=\"submitted && this.apiKeyForm.controls['name'].invalid\"\r\n        >\r\n          <p\r\n            class=\"invalid-input\"\r\n            *ngIf=\"\r\n              submitted && this.apiKeyForm.controls['name'].hasError('required')\r\n            \"\r\n          >\r\n            Name is required\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <app-button\r\n      btnColor=\"basic\"\r\n      btnStyle=\"basic\"\r\n      (buttonClicked)=\"modalRef?.hide()\"\r\n    > Cancel\r\n    </app-button>\r\n      <app-button\r\n        type=\"submit\"\r\n        [loading]=\"loading\"\r\n        btnColor=\"primary\"\r\n      >Create</app-button>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<app-button\r\nbtnColor=\"primary\"\r\nbtnSize=\"small\"\r\n(buttonClicked)=\"openModal(template)\"\r\n>  Create API Key\r\n</app-button>\r\n\r\n<ng-container *ngIf=\"createApiKeySuccessful$ | async\"></ng-container>\r\n<ng-container *ngIf=\"createApiKeyFailed$ | async\"></ng-container>\r\n"
        },
        {
            "name": "CreateEditConfigModalComponent",
            "id": "component-CreateEditConfigModalComponent-5c80d3cdad7396029f34615c7fcd95178c9f785019504f0c4220c917b4c6bf575925d269b05dd195fcc4c6143cebeedf2fabdb1556e4828d7ae06aaba2d987dd",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/create-or-edit-config-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-or-edit-config-modal",
            "styleUrls": [
                "./create-or-edit-config-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-or-edit-config-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "configIndexInConfigsList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "number | undefined",
                    "decorators": []
                },
                {
                    "name": "configParent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "Config",
                    "decorators": []
                },
                {
                    "name": "configScopeUserSelectedInList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "ConfigScope",
                    "decorators": []
                },
                {
                    "name": "configToUpdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Config | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "configForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "configSourceChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ConfigSource>",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "configTypeChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ConfigType>",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "hasViewModeListenerBeenSet",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "newConfigLabel$",
                    "defaultValue": "of(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "savingLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "scopeDropdownOptions",
                    "defaultValue": "[\n\t\t{ label: 'Collection', value: ConfigScope.COLLECTION },\n\t\t{ label: 'Flow', value: ConfigScope.FLOW },\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownItemOption[]",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "staticDropdownOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<DropdownItemOption[]>",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "viewMode$",
                    "defaultValue": "of(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methodsClass": [
                {
                    "name": "buildConfigForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "checkIfWeAreCreatingChildConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "closeModal",
                    "args": [
                        {
                            "name": "type",
                            "type": "ConfigScope | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 273,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "ConfigScope | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createConfigFromFormValue",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 339,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getControlValue",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 311,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDefaultValueForConfigType",
                    "args": [
                        {
                            "name": "configType",
                            "type": "ConfigType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 234,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "configType",
                            "type": "ConfigType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getStaticDropdownOptionsInitialObservableValue",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isConfigOfTypeText",
                    "args": [
                        {
                            "name": "configType",
                            "type": "ConfigType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 336,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "configType",
                            "type": "ConfigType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewChecked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveConfigToCollection",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 259,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveConfigToFlow",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setConfigLabelListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setConfigScope",
                    "args": [
                        {
                            "name": "scope",
                            "type": "ConfigScope",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 303,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "scope",
                            "type": "ConfigScope",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setConfigSource",
                    "args": [
                        {
                            "name": "source",
                            "type": "ConfigSource",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 298,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "source",
                            "type": "ConfigSource",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setupConfigSourceListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setupConfigTypeListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "setupStaticDropdownOptionsListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "shouldShowSettingsSection",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 353,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 321,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewChecked, Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { BuilderSelectors } from '../../../../store/selector/flow-builder.selector';\nimport { map, Observable, of, skipWhile, startWith, take, tap } from 'rxjs';\nimport { LeftSideBarType } from '../../../../../common-layout/model/enum/left-side-bar-type.enum';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { Config } from '../../../../../common-layout/model/fields/variable/config';\nimport { ConfigType, configTypesDropdownOptions } from '../../../../../common-layout/model/enum/config-type';\n\nimport { ConfigSource } from '../../../../../common-layout/model/enum/config-source';\n\nimport { FlowsActions } from '../../../../store/action/flows.action';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { fadeInUp400ms } from '../../../../../common-layout/animation/fade-in-up.animation';\n\nimport { ConfigScope } from '../../../../../common-layout/model/enum/config-scope-type.enum';\nimport { DropdownItemOption } from 'src/app/layout/common-layout/model/fields/variable/subfields/dropdown-item-option';\nimport { DropdownType } from 'src/app/layout/common-layout/model/enum/config.enum';\nimport {\n\tOAuth2ConfigSettings,\n\tStaticDropdownSettings,\n} from 'src/app/layout/common-layout/model/fields/variable/config-settings';\nimport { PieceAction } from 'src/app/layout/flow-builder/store/action/piece.action';\nimport { ConfigLabelValidator } from '../../validators/configLabelValidator';\nimport { ConfigKeyValidator } from '../../validators/configKeyValidator';\n\n@Component({\n\tselector: 'app-create-or-edit-config-modal',\n\ttemplateUrl: './create-or-edit-config-modal.component.html',\n\tstyleUrls: ['./create-or-edit-config-modal.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class CreateEditConfigModalComponent implements OnInit, AfterViewChecked {\n\t@Input()\n\tconfigIndexInConfigsList: number | undefined;\n\t@Input()\n\tconfigToUpdate: Config | undefined;\n\t@Input()\n\tconfigScopeUserSelectedInList: ConfigScope;\n\t//used in case of creating a config for a connector.\n\t@Input()\n\tconfigParent: Config;\n\n\tviewMode$: Observable<boolean> = of(false);\n\tconfigForm: FormGroup;\n\tsubmitted = false;\n\tsavingLoading = false;\n\tstaticDropdownOptions$: Observable<DropdownItemOption[]>;\n\tnewConfigLabel$: Observable<string | undefined> = of(undefined);\n\tconfigTypeChanged$: Observable<ConfigType>;\n\tconfigSourceChanged$: Observable<ConfigSource>;\n\thasViewModeListenerBeenSet = false;\n\tscopeDropdownOptions: DropdownItemOption[] = [\n\t\t{ label: 'Collection', value: ConfigScope.COLLECTION },\n\t\t{ label: 'Flow', value: ConfigScope.FLOW },\n\t];\n\n\tconstructor(private bsModalRef: BsModalRef, private store: Store, private formBuilder: FormBuilder) {}\n\n\tngOnInit(): void {\n\t\tthis.viewMode$ = this.store.select(BuilderSelectors.selectReadOnly).pipe(\n\t\t\ttap(readOnly => {\n\t\t\t\tif (readOnly) {\n\t\t\t\t\tthis.configForm.disable();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.buildConfigForm();\n\t\tthis.setConfigLabelListener();\n\t\tthis.checkIfWeAreCreatingChildConfig();\n\t\tthis.setupStaticDropdownOptionsListener();\n\t\tthis.setupConfigTypeListener();\n\t\tthis.setupConfigSourceListener();\n\t}\n\tngAfterViewChecked(): void {\n\t\tif (!this.hasViewModeListenerBeenSet) {\n\t\t\tthis.hasViewModeListenerBeenSet = true;\n\t\t}\n\t}\n\tprivate checkIfWeAreCreatingChildConfig() {\n\t\tif (this.configParent) {\n\t\t\tthis.configForm.get('type')!.setValue(ConfigType.OAUTH2);\n\t\t\tthis.configForm.get('type')!.disable();\n\t\t\tthis.configForm.get('settings')!.setValue(this.configParent.settings);\n\t\t}\n\t}\n\n\tprivate setConfigLabelListener() {\n\t\tif (this.configToUpdate) {\n\t\t\tthis.newConfigLabel$ = of(this.configToUpdate.label);\n\t\t} else {\n\t\t\tthis.newConfigLabel$ = this.configForm.get('label')!.valueChanges;\n\t\t}\n\t}\n\n\tprivate buildConfigForm() {\n\t\tif (!this.configToUpdate) {\n\t\t\tthis.configForm = this.formBuilder.group({\n\t\t\t\tsource: new FormControl(ConfigSource.USER),\n\t\t\t\tscope: this.configScopeUserSelectedInList,\n\t\t\t\tlabel: new FormControl(\n\t\t\t\t\t'',\n\t\t\t\t\t[Validators.required],\n\t\t\t\t\t[\n\t\t\t\t\t\tConfigLabelValidator.createValidator(\n\t\t\t\t\t\t\tthis.store.select(BuilderSelectors.selectAllConfigs).pipe(take(1)),\n\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t\tkey: new FormControl(\n\t\t\t\t\t'',\n\t\t\t\t\t[Validators.required, Validators.pattern('[A-Za-z0-9_]*')],\n\t\t\t\t\t[\n\t\t\t\t\t\tConfigKeyValidator.createValidator(\n\t\t\t\t\t\t\tthis.store.select(BuilderSelectors.selectAllConfigs).pipe(take(1)),\n\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t\thintText: new FormControl(),\n\t\t\t\ttype: new FormControl(ConfigType.SHORT_TEXT, [Validators.required]),\n\t\t\t\tsettings: new FormControl({ optional: false }),\n\t\t\t\tvalue: new FormControl(),\n\t\t\t});\n\t\t} else {\n\t\t\tthis.configForm = this.formBuilder.group({\n\t\t\t\tsource: new FormControl(this.configToUpdate.source),\n\t\t\t\tscope: new FormControl({\n\t\t\t\t\tvalue: this.configScopeUserSelectedInList,\n\t\t\t\t\tdisabled: true,\n\t\t\t\t}),\n\t\t\t\tlabel: new FormControl(\n\t\t\t\t\tthis.configToUpdate.label,\n\t\t\t\t\t[Validators.required],\n\t\t\t\t\t[\n\t\t\t\t\t\tConfigLabelValidator.createValidator(\n\t\t\t\t\t\t\tthis.store.select(BuilderSelectors.selectAllConfigs).pipe(take(1)),\n\t\t\t\t\t\t\tthis.configToUpdate.label\n\t\t\t\t\t\t),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t\tkey: new FormControl(\n\t\t\t\t\t{ value: this.configToUpdate.key, disabled: true },\n\t\t\t\t\t[],\n\t\t\t\t\t[\n\t\t\t\t\t\tConfigKeyValidator.createValidator(\n\t\t\t\t\t\t\tthis.store.select(BuilderSelectors.selectAllConfigs).pipe(take(1)),\n\t\t\t\t\t\t\tthis.configToUpdate.key\n\t\t\t\t\t\t),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t\t\thintText: new FormControl(this.configToUpdate.hintText),\n\t\t\t\ttype: new FormControl(this.configToUpdate.type, [Validators.required]),\n\t\t\t\tsettings: new FormControl(this.configToUpdate.settings),\n\t\t\t\tvalue: new FormControl(this.configToUpdate.value),\n\t\t\t});\n\t\t}\n\t}\n\tprivate setupConfigTypeListener() {\n\t\tthis.configTypeChanged$ = this.configForm.get('type')!.valueChanges.pipe(\n\t\t\tskipWhile(() => this.configForm.disabled),\n\t\t\ttap(newType => {\n\t\t\t\tconst currentType = this.configForm.get('type')!.value;\n\t\t\t\tif (!this.isConfigOfTypeText(currentType) || !this.isConfigOfTypeText(newType)) {\n\t\t\t\t\tconst defaultValue = this.getDefaultValueForConfigType(newType);\n\t\t\t\t\tconst valueControl = this.configForm.get('value')!;\n\t\t\t\t\tvalueControl.setValue(defaultValue);\n\t\t\t\t\tconst settingsControl = this.configForm.get('settings')!;\n\t\t\t\t\tif (settingsControl.value?.optional && newType !== ConfigType.OAUTH2) {\n\t\t\t\t\t\tsettingsControl.setValue({ optional: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (newType === ConfigType.OAUTH2) {\n\t\t\t\t\t\t\tsettingsControl.setValue({ ...new OAuth2ConfigSettings(), optional: false });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsettingsControl.setValue({ optional: false });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate setupConfigSourceListener() {\n\t\tthis.configSourceChanged$ = this.configForm.get('source')!.valueChanges.pipe(\n\t\t\tskipWhile(() => this.configForm.disabled),\n\t\t\ttap(source => {\n\t\t\t\tconst valueControl = this.configForm.get('value')!;\n\t\t\t\tif (source === ConfigSource.PREDEFINED) {\n\t\t\t\t\tvalueControl.setValidators(Validators.required);\n\t\t\t\t\tconst settingsValue = this.getControlValue('settings');\n\t\t\t\t\tthis.configForm.get('settings')!.patchValue({ ...settingsValue, required: true });\n\t\t\t\t} else if (source === ConfigSource.USER) {\n\t\t\t\t\tvalueControl.clearValidators();\n\t\t\t\t}\n\t\t\t\tvalueControl.updateValueAndValidity();\n\t\t\t})\n\t\t);\n\t}\n\tprivate setupStaticDropdownOptionsListener() {\n\t\tthis.staticDropdownOptions$ = this.configForm.get('settings')!.valueChanges.pipe(\n\t\t\tskipWhile(() => this.configForm.disabled),\n\t\t\ttap((settings: StaticDropdownSettings) => {\n\t\t\t\tif (settings && settings.options) {\n\t\t\t\t\tconst doesValueControlValueExistInAvailableOptions = settings.options.find(\n\t\t\t\t\t\to => o.value === this.getControlValue('value')\n\t\t\t\t\t);\n\t\t\t\t\tif (!doesValueControlValueExistInAvailableOptions) {\n\t\t\t\t\t\tthis.configForm.get('value')!.setValue(null);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.configForm.get('value')!.setValue(null);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmap((settings: StaticDropdownSettings) => {\n\t\t\t\tif (settings?.options) {\n\t\t\t\t\treturn settings.options;\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}),\n\t\t\tstartWith(this.getStaticDropdownOptionsInitialObservableValue())\n\t\t);\n\t}\n\n\tgetStaticDropdownOptionsInitialObservableValue() {\n\t\tconst settingsValue = this.getControlValue('settings');\n\t\tif (settingsValue?.options) {\n\t\t\treturn settingsValue.options;\n\t\t}\n\t\treturn [];\n\t}\n\tprivate getDefaultValueForConfigType(configType: ConfigType) {\n\t\tif (configType === ConfigType.DICTIONARY) {\n\t\t\treturn {};\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tsaveConfigToFlow(config: Config): void {\n\t\tif (this.configIndexInConfigsList == undefined) {\n\t\t\tthis.store.dispatch(\n\t\t\t\tFlowsActions.addConfig({\n\t\t\t\t\tconfig: config,\n\t\t\t\t})\n\t\t\t);\n\t\t} else {\n\t\t\tthis.store.dispatch(\n\t\t\t\tFlowsActions.updateConfig({\n\t\t\t\t\tconfigIndex: this.configIndexInConfigsList,\n\t\t\t\t\tconfig: config,\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\tthis.closeModal(ConfigScope.FLOW);\n\t}\n\n\tsaveConfigToCollection(config: Config): void {\n\t\tif (this.configIndexInConfigsList == undefined) {\n\t\t\tthis.store.dispatch(PieceAction.addConfig({ config: config }));\n\t\t} else {\n\t\t\tthis.store.dispatch(\n\t\t\t\tPieceAction.updateConfig({\n\t\t\t\t\tconfigIndex: this.configIndexInConfigsList,\n\t\t\t\t\tconfig: config,\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\tthis.closeModal(ConfigScope.COLLECTION);\n\t}\n\n\tcloseModal(type: ConfigScope | undefined) {\n\t\tif (type != undefined) {\n\t\t\tthis.store.dispatch(\n\t\t\t\tFlowsActions.setLeftSidebar({\n\t\t\t\t\tsidebarType: LeftSideBarType.CONFIGS,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tselectedTab: type,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tthis.bsModalRef.hide();\n\t}\n\n\tget ConfigType() {\n\t\treturn ConfigType;\n\t}\n\n\tget ConfigSource() {\n\t\treturn ConfigSource;\n\t}\n\tget ConfigScope() {\n\t\treturn ConfigScope;\n\t}\n\tsetConfigSource(source: ConfigSource) {\n\t\tif (this.configForm.enabled) {\n\t\t\tthis.configForm.get('source')!.setValue(source);\n\t\t}\n\t}\n\tsetConfigScope(scope: ConfigScope) {\n\t\tif (this.configForm.enabled) {\n\t\t\tthis.configForm.get('scope')!.setValue(scope);\n\t\t}\n\t}\n\tget configTypesDropdownOptions() {\n\t\treturn configTypesDropdownOptions;\n\t}\n\tgetControlValue(name: string) {\n\t\treturn this.configForm.get(name)!.value!;\n\t}\n\tget shouldShowValueFormControl() {\n\t\tconst whenNotToShowValueFormControl =\n\t\t\t(this.getControlValue('type') === ConfigType.OAUTH2 && this.getControlValue('source') === ConfigSource.USER) ||\n\t\t\t(this.getControlValue('type') === ConfigType.DROPDOWN &&\n\t\t\t\tthis.getControlValue('settings')?.dropdownType === DropdownType.DYNAMIC);\n\t\treturn !whenNotToShowValueFormControl;\n\t}\n\tsubmit() {\n\t\tif (!this.savingLoading && this.configForm.valid) {\n\t\t\tconst config: Config = this.createConfigFromFormValue();\n\t\t\tconst scopeControlValue = this.getControlValue('scope');\n\t\t\tif (scopeControlValue === ConfigScope.FLOW) {\n\t\t\t\tthis.saveConfigToFlow(config);\n\t\t\t} else if (scopeControlValue === ConfigScope.COLLECTION) {\n\t\t\t\tthis.saveConfigToCollection(config);\n\t\t\t}\n\t\t}\n\t\tthis.submitted = true;\n\t}\n\tget DropdownType() {\n\t\treturn DropdownType;\n\t}\n\tisConfigOfTypeText(configType: ConfigType) {\n\t\treturn configType === ConfigType.SHORT_TEXT || configType === ConfigType.LONG_TEXT;\n\t}\n\tcreateConfigFromFormValue() {\n\t\tconst config = this.configForm.getRawValue();\n\t\tlet required = true;\n\t\tif (config && config.settings) {\n\t\t\trequired = !config.settings.optional;\n\t\t\tdelete config.settings.optional;\n\t\t\tdelete config.scope;\n\t\t\tconfig.settings.required = required;\n\t\t\tif (this.configParent) {\n\t\t\t\tconfig.settings.configParent = { configKey: this.configParent.key };\n\t\t\t}\n\t\t}\n\t\treturn config;\n\t}\n\tshouldShowSettingsSection() {\n\t\tconst type = this.getControlValue('type');\n\t\tconst source = this.getControlValue('source');\n\t\tconst isDropdownOrAuth = type === ConfigType.DROPDOWN || type == ConfigType.OAUTH2;\n\t\treturn type !== ConfigType.DICTIONARY && (isDropdownOrAuth || (!isDropdownOrAuth && source === ConfigSource.USER));\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.modal-body {\r\n  min-height: 31.25rem;\r\n  max-height: 70vh;\r\n  min-width:30rem;\r\n}\r\n\r\n.modal-header {\r\n  border: 1px solid #f0f0f0;\r\n}\r\n.check-icon {\r\n  height: 12px;\r\n  width: 12px;\r\n  fill: $primary;\r\n}\r\n.option-container {\r\n  gap: 0.625rem;\r\n}\r\n\r\n",
                    "styleUrl": "./create-or-edit-config-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 58,
                "jsdoctags": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewChecked"
            ],
            "accessors": {
                "ConfigType": {
                    "name": "ConfigType",
                    "getSignature": {
                        "name": "ConfigType",
                        "type": "",
                        "returnType": "",
                        "line": 288
                    }
                },
                "ConfigSource": {
                    "name": "ConfigSource",
                    "getSignature": {
                        "name": "ConfigSource",
                        "type": "",
                        "returnType": "",
                        "line": 292
                    }
                },
                "ConfigScope": {
                    "name": "ConfigScope",
                    "getSignature": {
                        "name": "ConfigScope",
                        "type": "",
                        "returnType": "",
                        "line": 295
                    }
                },
                "configTypesDropdownOptions": {
                    "name": "configTypesDropdownOptions",
                    "getSignature": {
                        "name": "configTypesDropdownOptions",
                        "type": "",
                        "returnType": "",
                        "line": 308
                    }
                },
                "shouldShowValueFormControl": {
                    "name": "shouldShowValueFormControl",
                    "getSignature": {
                        "name": "shouldShowValueFormControl",
                        "type": "",
                        "returnType": "",
                        "line": 314
                    }
                },
                "DropdownType": {
                    "name": "DropdownType",
                    "getSignature": {
                        "name": "DropdownType",
                        "type": "",
                        "returnType": "",
                        "line": 333
                    }
                }
            },
            "templateData": "<div class=\"modal-header\">\r\n  <h5 class=\"modal-title pull-left\">\r\n    <ng-container *ngIf=\"!configToUpdate; else editVariableTitle\">\r\n      New Variable: {{ this.newConfigLabel$ | async }}\r\n    </ng-container>\r\n\r\n    <ng-template #editVariableTitle>\r\n      Edit Variable: {{ configToUpdate?.label }}\r\n    </ng-template>\r\n  </h5>\r\n  <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\" class=\"close-custom visually-hidden\" (click)=\"closeModal(undefined)\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form [formGroup]=\"configForm\" class=\"d-flex flex-column config-modal-form-controls-container\"\r\n    [class.ng-submitted]=\"submitted\">\r\n    <div>\r\n      <label>Source</label> <br>\r\n      <div class=\"custom-control custom-radio custom-control-inline\" (click)=\"setConfigSource(ConfigSource.USER)\">\r\n        <input formControlName=\"source\" [disabled]=\"viewMode$ | async | defaultFalse\" type=\"radio\"\r\n          [value]=\"ConfigSource.USER\" class=\"custom-control-input\"/>\r\n        <label class=\"custom-control-label\">User Input</label>\r\n      </div>\r\n      <div class=\"custom-control custom-radio custom-control-inline\" (click)=\"setConfigSource(ConfigSource.PREDEFINED)\">\r\n        <input formControlName=\"source\" [disabled]=\"viewMode$ | async | defaultFalse\" type=\"radio\"\r\n          [value]=\"ConfigSource.PREDEFINED\" class=\"custom-control-input\" />\r\n        <label class=\"custom-control-label\">Predefined</label>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <label>Scope</label><br>\r\n      <ng-select\r\n      [items]=\"scopeDropdownOptions\"\r\n      bindLabel=\"label\"\r\n      bindValue=\"value\"\r\n      id=\"role\"\r\n      formControlName=\"scope\"\r\n      [searchable]=\"false\"\r\n      [clearable]=\"false\"\r\n      placeholder=\"Please select\"\r\n    >\r\n      <ng-template ng-option-tmp let-item=\"item\">\r\n      <app-ng-select-item-template [item]=\"item\" [isSelected]=\"item.value === getControlValue('scope')\"></app-ng-select-item-template>\r\n      </ng-template>\r\n    </ng-select>\r\n    </div>\r\n\r\n\r\n    <div>\r\n      <label required>Display Name</label>\r\n      <input class=\"form-control\" formControlName=\"label\" type=\"text\">\r\n      <p @fadeInUp class=\"invalid-input\" *ngIf=\"submitted && configForm.get('label')!.invalid \">\r\n       <ng-container *ngIf=\"configForm.get('label')!.getError('required')\">\r\n        Display name is required\r\n       </ng-container>\r\n       <ng-container *ngIf=\"configForm.get('label')!.getError('labelUsed')\">\r\n        Display name is already used\r\n       </ng-container>\r\n      </p>\r\n    </div>\r\n\r\n    <div>\r\n      <label [attr.required]=\"configForm.get('key')!.enabled\">Key</label>\r\n      <input class=\"form-control\" formControlName=\"key\" type=\"text\">\r\n      <p @fadeInUp class=\"invalid-input\" *ngIf=\"submitted && configForm.get('key')!.invalid\">\r\n        <ng-container *ngIf=\"submitted &&  configForm.get('key')!.getError('required'); else patternErrorOrAlreadyUsed\">\r\n          Key is required\r\n        </ng-container>\r\n        <ng-template  #patternErrorOrAlreadyUsed>\r\n          <ng-container *ngIf=\"configForm.get('key')!.getError('requiredPattern');\">\r\n            Keys can only contain letters, numbers and underscores\r\n          </ng-container>\r\n          <ng-container *ngIf=\"configForm.get('key')!.getError('keyUsed');\">\r\n            Keys is already used\r\n          </ng-container>\r\n        </ng-template>\r\n      </p>\r\n\r\n    </div>\r\n    <div>\r\n      <label>Hint Text</label>\r\n      <input class=\"form-control\" formControlName=\"hintText\" type=\"text\">\r\n    </div>\r\n    <div>\r\n      <label>Type</label>\r\n      <ng-select [items]=\"configTypesDropdownOptions\" groupBy=\"group\" bindLabel=\"label\" bindValue=\"value\"\r\n        formControlName=\"type\" [searchable]=\"false\"\r\n        placeholder=\"Please select\" [clearable]=\"false\" appendTo=\"body\">\r\n        <ng-template ng-option-tmp let-item=\"item\">\r\n          <div class=\"d-flex option-container\">\r\n            <svg-icon [svgStyle]=\"{ width: 14, height: 14 }\" [src]=\"'../assets/img/custom/' + item.icon\"></svg-icon>\r\n            <div class=\"flex-grow-1\">{{ item.label }}</div>\r\n            <svg-icon *ngIf=\"item.value === configForm.get('type')!.value\" src=\"assets/img/custom/check.svg\" class=\"check-icon\"\r\n              [applyClass]=\"true\">\r\n            </svg-icon>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <ng-template ng-label-tmp let-item=\"item\">\r\n          <div class=\"d-flex option-container\">\r\n            <svg-icon [svgStyle]=\"{ width: 14, height: 14 }\" [src]=\"'../assets/img/custom/' + item.icon\"></svg-icon>\r\n            <div class=\"flex-grow-1\">{{ item.label }}</div>\r\n          </div>\r\n        </ng-template>\r\n      </ng-select>\r\n\r\n    </div>\r\n    <div *ngIf=\"shouldShowSettingsSection()\">\r\n      <label>Settings</label>\r\n      <ng-container [ngSwitch]=\"getControlValue('type')\">\r\n        <app-o-auth2-config-settings [submitted]=\"submitted\" *ngSwitchCase=\"ConfigType.OAUTH2\"  formControlName=\"settings\"></app-o-auth2-config-settings>\r\n        <app-dropdown-config-settings  [currentConfigScope]=\"getControlValue('scope')\" [submitted]=\"submitted\"  [currentConfigSource]=\"getControlValue('source')\"  [configToUpdate]=\"configToUpdate\" *ngSwitchCase=\"ConfigType.DROPDOWN\" formControlName=\"settings\"></app-dropdown-config-settings>\r\n        <app-default-config-type-settings *ngSwitchDefault formControlName=\"settings\"></app-default-config-type-settings>\r\n      </ng-container>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"shouldShowValueFormControl; else predefinedDynamicDropdownError\">\r\n      <label [attr.required]=\"getControlValue('source') === ConfigSource.PREDEFINED?true:null\">{{getControlValue('source') === ConfigSource.PREDEFINED? 'Value': 'Default Value'}}</label>\r\n      <ng-container [ngSwitch]=\"getControlValue('type')\">\r\n        <input *ngSwitchCase=\"ConfigType.SHORT_TEXT\" type=\"text\" class=\"form-control\" formControlName=\"value\">\r\n        <textarea\r\n        *ngSwitchCase=\"ConfigType.LONG_TEXT\"\r\n        rows=\"4\"\r\n        class=\"form-control\" formControlName=\"value\"\r\n        type=\"text\">\r\n        </textarea>\r\n        <input type=\"number\"   *ngSwitchCase=\"ConfigType.INTEGER\"  class=\"form-control\" formControlName=\"value\">\r\n        <app-dictonary-form-control   *ngSwitchCase=\"ConfigType.DICTIONARY\"  formControlName=\"value\"></app-dictonary-form-control>\r\n        <ng-select [items]=\"staticDropdownOptions$|async\" formControlName= \"value\" [searchable]=\"false\" [clearable]=\"getControlValue('source') === ConfigSource.USER\" appendTo=\"body\" *ngSwitchCase=\"ConfigType.DROPDOWN\"  bindLabel=\"label\" bindValue=\"value\" ></ng-select>\r\n        <app-o-auth2-connect-control [configSettings]=\"getControlValue('settings')\"  formControlName= \"value\"   *ngSwitchCase=\"ConfigType.OAUTH2\" ></app-o-auth2-connect-control>\r\n\r\n      </ng-container>\r\n      <p @fadeInUp class=\"invalid-input\" *ngIf=\"submitted && configForm.get('value')!.invalid \">\r\n        Value is required\r\n      </p>\r\n    </div>\r\n    <ng-template #predefinedDynamicDropdownError>\r\n      <p @fadeInUp class=\"invalid-input\" *ngIf=\"getControlValue('source')===ConfigSource.PREDEFINED && getControlValue('settings').dropdownType === DropdownType.DYNAMIC\">\r\n        Dynamic dropdowns can't be predefined.\r\n      </p>\r\n    </ng-template>\r\n  </form>\r\n</div>\r\n\r\n<div *ngIf=\"configForm.enabled\" top-border class=\"modal-footer\">\r\n  <app-button\r\n  btnColor=\"basic\"\r\n  btnStyle=\"basic\"\r\n  (buttonClicked)=\"closeModal(undefined)\"\r\n> Cancel\r\n</app-button>\r\n  <app-button [load]=\"savingLoading\" (buttonClicked)=\"submit()\"     btnColor=\"primary\"   >Save</app-button>\r\n</div>\r\n\r\n<ng-container *ngIf=\"configTypeChanged$ | async\"></ng-container>\r\n<ng-container *ngIf=\"configSourceChanged$ | async\"></ng-container>\r\n<ng-container *ngIf=\"viewMode$ | async\"></ng-container>\r\n"
        },
        {
            "name": "CreateNewEnvironmentModalComponent",
            "id": "component-CreateNewEnvironmentModalComponent-1eb02fd8626d3a15ae77928c9d8bc6042032b0769819aaf6a4b9d9ba1eecd58ecec45edb8fdb3838dc6b071de199a35aa0e66fc28127412eeeb16bd8ad584c3d",
            "file": "src/app/layout/common-layout/components/create-new-environment-modal/create-new-environment-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-new-environment-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./create-new-environment-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "environmentForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "modalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "nameExists",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "createEnvironment",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { fadeInUp400ms } from '../../animation/fade-in-up.animation';\nimport { Component, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ProjectEnvironment } from '../../model/project-environment.interface';\nimport { ProjectService } from '../../service/project.service';\nimport { EnvironmentService } from '../../service/environment.service';\nimport { switchMap } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Store } from '@ngrx/store';\nimport { EnvironmentActions } from '../../store/action/environment.action';\n\n@Component({\n\tselector: 'app-create-new-environment-modal',\n\ttemplateUrl: './create-new-environment-modal.component.html',\n\tstyleUrls: [],\n\tanimations: [fadeInUp400ms],\n})\nexport class CreateNewEnvironmentModalComponent {\n\tsubmitted = false;\n\tloading = false;\n\tnameExists: boolean;\n\tenvironmentForm: FormGroup;\n\tmodalRef?: BsModalRef;\n\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate projectService: ProjectService,\n\t\tprivate environmentService: EnvironmentService,\n\t\tprivate modalService: BsModalService,\n\t\tprivate store: Store\n\t) {\n\t\tthis.environmentForm = this.formBuilder.group({\n\t\t\tname: [, [Validators.pattern('[a-z0-9_]*'), Validators.required]],\n\t\t\tdeployedPieces: [[], []],\n\t\t});\n\t}\n\n\topenModal(template: TemplateRef<any>) {\n\t\tthis.modalRef = this.modalService.show(template);\n\t}\n\n\tcreateEnvironment() {\n\t\tthis.submitted = true;\n\t\tif (!this.environmentForm.valid || this.loading) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loading = true;\n\t\tthis.nameExists = false;\n\n\t\tthis.projectService\n\t\t\t.selectedProjectAndTakeOne()\n\t\t\t.pipe(\n\t\t\t\tswitchMap(project => {\n\t\t\t\t\tconst request = this.environmentForm.value;\n\t\t\t\t\treturn this.environmentService.create(project.id, request);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe({\n\t\t\t\tnext: (response: ProjectEnvironment) => {\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t\tthis.store.dispatch(EnvironmentActions.addEnvironment({ environment: response }));\n\t\t\t\t\tthis.environmentForm.reset();\n\t\t\t\t\tthis.modalRef?.hide();\n\t\t\t\t},\n\t\t\t\terror: (error: HttpErrorResponse) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t// if (error.status === StatusCodes.CONFLICT) {\n\t\t\t\t\t//WTF\n\t\t\t\t\tthis.nameExists = true;\n\t\t\t\t\t// }\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t},\n\t\t\t});\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<ng-template #template>\r\n  <form\r\n    [formGroup]=\"environmentForm\"\r\n    (ngSubmit)=\"createEnvironment()\"\r\n    [class.ng-submitted]=\"submitted\"\r\n  >\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title pull-left\">Create an environment</h5>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn-close close pull-right\"\r\n        aria-label=\"Close\"\r\n        (click)=\"modalRef?.hide()\"\r\n      >\r\n        <span aria-hidden=\"true\" class=\"visually-hidden close-custom\"\r\n          >&times;</span\r\n        >\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Name (can NOT be changed later)</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          id=\"name\"\r\n          placeholder=\"staging\"\r\n          formControlName=\"name\"\r\n        />\r\n        <div\r\n          @fadeInUp\r\n          *ngIf=\"\r\n            submitted &&\r\n            (this.environmentForm.controls['name'].invalid || nameExists)\r\n          \"\r\n        >\r\n          <p\r\n            class=\"invalid-input\"\r\n            *ngIf=\"\r\n              submitted &&\r\n              this.environmentForm.controls['name'].hasError('required')\r\n            \"\r\n          >\r\n            Name is required\r\n          </p>\r\n          <p\r\n            class=\"invalid-input\"\r\n            *ngIf=\"\r\n              submitted &&\r\n              this.environmentForm.controls['name'].hasError('pattern')\r\n            \"\r\n          >\r\n            Name must only consists of a-z, 0-9, underscore.\r\n          </p>\r\n          <p class=\"invalid-input\" *ngIf=\"submitted && nameExists\">\r\n            Name is already exists\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <app-button\r\n      btnColor=\"basic\"\r\n      btnStyle=\"basic\"\r\n\r\n      [fullWidthOfContainer]=\"true\"\r\n      (buttonClicked)=\"modalRef?.hide()\"\r\n    > Cancel\r\n    </app-button>\r\n      <app-button\r\n        type=\"submit\"\r\n        [loading]=\"loading\"\r\n        btnColor=\"primary\"\r\n      >Create</app-button>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<app-button\r\nbtnColor=\"primary\"\r\n(buttonClicked)=\"openModal(template)\"\r\nclass=\"float-right\"\r\nbtnSize=\"small\"\r\n>  Create Environment\r\n</app-button>\r\n\r\n\r\n\r\n"
        },
        {
            "name": "CreateNewEventModalComponent",
            "id": "component-CreateNewEventModalComponent-f78f442e4a16a25251afc16a1540d2c36125d2082ca2bc0f8f6867e101867f7e930e4772f8ac0f80eb4e0fa7257c58dbb471fe82b33396f081ad319ba339d64b",
            "file": "src/app/layout/common-layout/components/create-new-event-modal/create-new-event-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-new-event-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./create-new-event-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "eventForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "createEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nameChanged",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { fadeInUp400ms } from '../../animation/fade-in-up.animation';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Store } from '@ngrx/store';\nimport { ProjectService } from '../../service/project.service';\nimport { EventDefinitionService } from '../../service/events-definitions.service';\nimport { switchMap } from 'rxjs';\nimport { EventDefinition } from '../../model/event.-definition.interface';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { StatusCodes } from 'http-status-codes';\nimport { EventActions } from '../../store/action/events.action';\n\n@Component({\n\tselector: 'app-create-new-event-modal',\n\ttemplateUrl: './create-new-event-modal.component.html',\n\tstyleUrls: [],\n\tanimations: [fadeInUp400ms],\n})\nexport class CreateNewEventModalComponent implements OnInit {\n\tsubmitted = false;\n\tloading = false;\n\teventForm: FormGroup;\n\n\tconstructor(\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate store: Store,\n\t\tprivate projectService: ProjectService,\n\t\tprivate eventDefinitionService: EventDefinitionService\n\t) {}\n\n\tngOnInit() {\n\t\tthis.eventForm = this.formBuilder.group({\n\t\t\tdisplayName: [, [Validators.required]],\n\t\t\tname: [, [Validators.pattern('[a-z0-9_]*'), Validators.required]],\n\t\t\tdescription: ['', []],\n\t\t\thidden: [false, []],\n\t\t});\n\t}\n\n\tcreateEvent() {\n\t\tthis.submitted = true;\n\t\tif (this.eventForm.invalid || this.loading) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loading = true;\n\t\tthis.projectService\n\t\t\t.selectedProjectAndTakeOne()\n\t\t\t.pipe(\n\t\t\t\tswitchMap(project => {\n\t\t\t\t\tconst request = this.eventForm.value;\n\t\t\t\t\treturn this.eventDefinitionService.create(project.id, request);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe({\n\t\t\t\tnext: (response: EventDefinition) => {\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t\tthis.store.dispatch(EventActions.addEvent({ eventDefinition: response }));\n\t\t\t\t\tthis.bsModalRef.hide();\n\t\t\t\t\tthis.eventForm.reset();\n\t\t\t\t},\n\t\t\t\terror: (error: HttpErrorResponse) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tif (error.status === StatusCodes.CONFLICT) {\n\t\t\t\t\t\tthis.eventForm.get('name')?.setErrors({ nameExists: true });\n\t\t\t\t\t}\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t},\n\t\t\t});\n\t}\n\n\tnameChanged() {\n\t\tconst nameControl = this.eventForm.get('name');\n\t\tconsole.log(nameControl?.hasError('nameExists'));\n\t\tif (nameControl && nameControl.errors && nameControl.hasError('nameExists')) {\n\t\t\tdelete nameControl.errors['nameExists'];\n\t\t\tnameControl.updateValueAndValidity();\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "eventDefinitionService",
                        "type": "EventDefinitionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "eventDefinitionService",
                        "type": "EventDefinitionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form\r\n  [formGroup]=\"eventForm\"\r\n  [class.ng-submitted]=\"submitted\"\r\n  (ngSubmit)=\"createEvent()\"\r\n>\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title pull-left\">Create app event</h5>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn-close close pull-right\"\r\n      aria-label=\"Close\"\r\n      (click)=\"bsModalRef.hide()\"\r\n    >\r\n      <span aria-hidden=\"true\" class=\"visually-hidden close-custom\"\r\n        >&times;</span\r\n      >\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"form-group\">\r\n      <label for=\"displayName\">Display name (can be changed later)</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"displayName\"\r\n        placeholder=\"Event name\"\r\n        formControlName=\"displayName\"\r\n      />\r\n      <p\r\n        @fadeInUp\r\n        *ngIf=\"submitted && this.eventForm.controls['displayName'].invalid\"\r\n        class=\"invalid-input\"\r\n      >\r\n        Display name is required\r\n      </p>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Name (can NOT be changed later)</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        placeholder=\"event_name\"\r\n        formControlName=\"name\"\r\n        (keydown)=\"nameChanged()\"\r\n      />\r\n      <div\r\n        @fadeInUp\r\n        *ngIf=\"submitted && this.eventForm.controls['name'].invalid\"\r\n      >\r\n        <p\r\n          class=\"invalid-input\"\r\n          *ngIf=\"\r\n            submitted && this.eventForm.controls['name'].hasError('required')\r\n          \"\r\n        >\r\n          Code name is required\r\n        </p>\r\n        <p\r\n          class=\"invalid-input\"\r\n          *ngIf=\"\r\n            submitted && this.eventForm.controls['name'].hasError('pattern')\r\n          \"\r\n        >\r\n          Code name must only consists of a-z, 0-9, underscores\r\n        </p>\r\n        <p\r\n          class=\"invalid-input\"\r\n          *ngIf=\"\r\n            submitted && this.eventForm.controls['name'].hasError('nameExists')\r\n          \"\r\n        >\r\n          Code name is already exists\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"expectedOutput\">Description (Optional)</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"expectedOutput\"\r\n        rows=\"2\"\r\n        formControlName=\"description\"\r\n      ></textarea>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n\r\n    <app-button\r\n    btnColor=\"basic\"\r\n    btnStyle=\"basic\"\r\n    (buttonClicked)=\"bsModalRef.hide()\"\r\n  > Cancel\r\n  </app-button>\r\n\r\n\r\n    <app-button\r\n      type=\"submit\"\r\n      [loading]=\"loading\"\r\n      btnColor=\"primary\"\r\n    > Create</app-button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "CreateNewFlowModalComponent",
            "id": "component-CreateNewFlowModalComponent-68ceabafa5c61e7b344d00d3c8ed2fb142d24387d5e7a9918144ffe3e05535d2e23aaa08489b3009f33489245f41923141cb426df5d24224b9657ec66c6cbae3",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/create-new-flow-modal/create-new-flow-modal.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-new-flow-modal",
            "styleUrls": [
                "./create-new-flow-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./create-new-flow-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "selectedTemplate",
                    "defaultValue": "new EventEmitter<FlowTemplateInterface | undefined>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "flowTemplateService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowTemplateService",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "onHideModal$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "emitTemplate",
                    "args": [
                        {
                            "name": "template",
                            "type": "FlowTemplateInterface",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "template",
                            "type": "FlowTemplateInterface",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { map, Observable, tap } from 'rxjs';\nimport { FlowTemplateInterface } from '../../../../model/flow-template.interface';\nimport { FlowTemplateService } from '../../../../service/flow-template.service';\n\n@Component({\n\tselector: 'app-create-new-flow-modal',\n\ttemplateUrl: './create-new-flow-modal.component.html',\n\tstyleUrls: ['./create-new-flow-modal.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CreateNewFlowModalComponent implements OnInit {\n\t@Output() selectedTemplate = new EventEmitter<FlowTemplateInterface | undefined>();\n\n\tonHideModal$: Observable<void> = new Observable<void>();\n\n\tconstructor(public bsModalRef: BsModalRef, public flowTemplateService: FlowTemplateService) {}\n\n\tngOnInit(): void {\n\t\tthis.bsModalRef.onHide.pipe(\n\t\t\ttap(value => {\n\t\t\t\tthis.selectedTemplate.emit(undefined);\n\t\t\t}),\n\t\t\tmap(hide => {\n\t\t\t\treturn void 0;\n\t\t\t})\n\t\t);\n\t}\n\n\temitTemplate(template: FlowTemplateInterface) {\n\t\tthis.selectedTemplate.emit(template);\n\t\tthis.bsModalRef.hide();\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.template-row{\r\n  padding: 1rem;\r\n  margin-bottom: 1rem;\r\n  height: 80px;\r\n  border-radius: 5px;\r\n  border: 1px solid $border;\r\n  cursor: pointer;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.template-row:hover{\r\n  border: 1px solid $primary;\r\n  /* Depth 4 */\r\n  box-shadow: 0px 3px 8px rgba(210, 211, 217, 0.5);\r\n  border-radius: 5px;\r\n}\r\n\r\n.template-row:hover .template-content-header{\r\n  color: #5835B0;\r\n}\r\n\r\n.template-row:hover .template-content-description{\r\n  color: $primary;\r\n}\r\n\r\n.template-content{\r\n  margin-left: 1rem;\r\n  border-radius: 5px;\r\n}\r\n\r\n.template-icon{\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.template-content-header{\r\n  display: block;\r\n  font-weight: 600;\r\n  color: $title;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n}\r\n\r\n.template-content-description{\r\n  margin-top: 0.25rem;\r\n  color: $description;\r\n  font-size: 14px;\r\n}\r\n\r\n.use-template-text {\r\n  color: $body;\r\n}\r\n\r\n",
                    "styleUrl": "./create-new-flow-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowTemplateService",
                        "type": "FlowTemplateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowTemplateService",
                        "type": "FlowTemplateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"modal-header\">\r\n  <h5 class=\"modal-title pull-left\">How do you want to start?</h5>\r\n  <button type=\"button\" class=\"btn-close close  pull-right\" aria-label=\"Close\" (click)=\"emitTemplate(this.flowTemplateService.FLOW_EMPTY_TEMPLATE)\">\r\n    <span aria-hidden=\"true\" class=\"close-custom visually-hidden\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ng-container *ngFor=\"let template of this.flowTemplateService.FLOW_TEMPLATE_INTERFACE let i = index;\">\r\n    <div *ngIf=\"i === 1\" class=\"mb-2\">\r\n      <span class=\"use-template-text\">Or use one of the templates</span>\r\n    </div>\r\n    <div class=\"template-row\" (click)=\"emitTemplate(template)\">\r\n      <div class=\"template-icon\">\r\n        <app-img class=\"ap-icon-wrapper\" [width]=\"30\" [height]=\"30\"\r\n                [src]=\"template.icon\"></app-img>\r\n      </div>\r\n      <div class=\"template-content\">\r\n        <span class=\"template-content-header\">{{template.title}}</span>\r\n        <span class=\"template-content-description\">{{template.description}}</span>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-container *ngIf=\"onHideModal$ | async\"></ng-container>\r\n"
        },
        {
            "name": "CreateNewPieceModalComponent",
            "id": "component-CreateNewPieceModalComponent-de377cdb3a66ab67b886da1b9a6a85866420fbeda29a910b3b3715d2dd872fa0e96307f12fe1f2ab9113ba63007a67d7550a5d53530bda737d5ab67d9e4d65d7",
            "file": "src/app/layout/common-layout/components/create-new-piece-modal/create-new-piece-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-create-new-piece-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./create-new-piece-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "modalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "nameExists",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "pieceForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "createPiece",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { fadeInUp400ms } from '../../animation/fade-in-up.animation';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { CollectionService } from '../../service/collection.service';\nimport { Router } from '@angular/router';\nimport { switchMap, take } from 'rxjs';\nimport { PieceAccess } from '../../model/enum/piece-access';\nimport { Collection } from '../../model/piece.interface';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { StatusCodes } from 'http-status-codes';\nimport { Store } from '@ngrx/store';\nimport { ProjectSelectors } from '../../store/selector/project.selector';\n\n@Component({\n\tselector: 'app-create-new-piece-modal',\n\ttemplateUrl: './create-new-piece-modal.component.html',\n\tstyleUrls: [],\n\tanimations: [fadeInUp400ms],\n})\nexport class CreateNewPieceModalComponent {\n\tsubmitted = false;\n\tloading = false;\n\tnameExists: boolean;\n\tpieceForm: FormGroup;\n\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate store: Store,\n\t\tpublic modalRef: BsModalRef,\n\t\tprivate pieceService: CollectionService,\n\t\tprivate router: Router\n\t) {\n\t\tthis.pieceForm = this.formBuilder.group({\n\t\t\tname: [, [Validators.pattern('[a-z_0-9]*'), Validators.required]],\n\t\t});\n\t}\n\n\tcreatePiece() {\n\t\tthis.submitted = true;\n\t\tif (this.pieceForm.invalid) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loading = true;\n\t\tthis.nameExists = false;\n\t\t// TODO REFACTOR\n\t\tthis.store\n\t\t\t.select(ProjectSelectors.selectProject)\n\t\t\t.pipe(take(1))\n\t\t\t.pipe(\n\t\t\t\tswitchMap(project => {\n\t\t\t\t\tconst request = this.pieceForm.value;\n\t\t\t\t\treturn this.pieceService.create(project!.id, {\n\t\t\t\t\t\tname: request.name,\n\t\t\t\t\t\tversion: {\n\t\t\t\t\t\t\tdisplayName: request.name,\n\t\t\t\t\t\t\tdescription: 'Piece Description',\n\t\t\t\t\t\t\tconfigs: [],\n\t\t\t\t\t\t\taccess: PieceAccess.PRIVATE,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe({\n\t\t\t\tnext: (response: Collection) => {\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t\tthis.router.navigate(['/flows/' + response.id]).then(() => {\n\t\t\t\t\t\tthis.modalRef.hide();\n\t\t\t\t\t\tthis.pieceForm.reset();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terror: (error: HttpErrorResponse) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tif (error.status === StatusCodes.CONFLICT) {\n\t\t\t\t\t\tthis.nameExists = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t},\n\t\t\t});\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<form\r\n  [formGroup]=\"pieceForm\"\r\n  [class.ng-submitted]=\"submitted\"\r\n  (ngSubmit)=\"createPiece()\"\r\n>\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title pull-left\">New Piece</h5>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn-close close pull-right\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modalRef?.hide()\"\r\n    >\r\n      <span aria-hidden=\"true\" class=\"visually-hidden close-custom\"\r\n        >&times;</span\r\n      >\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Name (can NOT be changed later)</label>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        id=\"name\"\r\n        placeholder=\"piece name\"\r\n        formControlName=\"name\"\r\n      />\r\n      <div\r\n        @fadeInUp\r\n        *ngIf=\"\r\n          submitted && (this.pieceForm.controls['name'].invalid || nameExists)\r\n        \"\r\n      >\r\n        <p\r\n          class=\"invalid-input\"\r\n          *ngIf=\"\r\n            submitted && this.pieceForm.controls['name'].hasError('required')\r\n          \"\r\n        >\r\n          Name is required\r\n        </p>\r\n        <p\r\n          class=\"invalid-input\"\r\n          *ngIf=\"\r\n            submitted && this.pieceForm.controls['name'].hasError('pattern')\r\n          \"\r\n        >\r\n          Name must only consists of a-z, 0-9, underscores\r\n        </p>\r\n        <p class=\"invalid-input\" *ngIf=\"submitted && nameExists\">\r\n          Name is already exists\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <app-button\r\n    btnColor=\"basic\"\r\n    btnStyle=\"basic\"\r\n    (buttonClicked)=\"modalRef?.hide()\"\r\n  > Cancel\r\n  </app-button>\r\n\r\n    <app-button\r\n      type=\"submit\"\r\n      [loading]=\"loading\"\r\n      btnColor=\"primary\"\r\n    >Create</app-button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "DashboardLayoutComponent",
            "id": "component-DashboardLayoutComponent-baa43741c57aa6c6f3b74905110c6c55b11e2c651379f9435636acdfd5f8456d25ca2802d74be61c53bd6a116ef71d64706233ce6d5d84c40e44a8cc653ad861",
            "file": "src/app/layout/dashboard-layout/dashboard-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hasSubmenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "loading$",
                    "defaultValue": "of(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "updateSelectedRoute$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateRoute",
                    "args": [
                        {
                            "name": "route",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../common-layout/service/authentication.service';\nimport { NavigationService } from './service/navigation.service';\nimport { map, Observable, of, tap } from 'rxjs';\n\n@Component({\n\tselector: 'app-dashboard',\n\ttemplateUrl: './dashboard-layout.component.html',\n\tstyleUrls: ['./dashboard-layout.component.scss'],\n})\nexport class DashboardLayoutComponent implements OnInit {\n\troute: any;\n\tloading$: Observable<boolean> = of(false);\n\tupdateSelectedRoute$: Observable<void> = new Observable<void>();\n\thasSubmenu = false;\n\tconstructor(\n\t\tprivate navigationService: NavigationService,\n\t\tprivate authenticationService: AuthenticationService,\n\t\tprivate router: Router,\n\t\tprivate cd: ChangeDetectorRef\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.updateSelectedRoute$ = this.navigationService.getSelectedRoute().pipe(\n\t\t\ttap(value => {\n\t\t\t\tthis.updateRoute(value);\n\t\t\t}),\n\t\t\tmap(value => void 0)\n\t\t);\n\t\tthis.loading$ = this.navigationService.loading;\n\t}\n\n\tupdateRoute(route: { menu; submenu }): void {\n\t\tif (route === undefined) return;\n\t\tif (route.submenu) {\n\t\t\tthis.route = this.navigationService.sidebarRoutes[route.menu].submenuItems[route.submenu];\n\t\t} else {\n\t\t\tthis.route = this.navigationService.sidebarRoutes[route.menu];\n\t\t}\n\t\tthis.hasSubmenu = this.navigationService.sidebarRoutes[route.menu].submenu;\n\t\tthis.cd.detectChanges();\n\t}\n\n\ttoggle() {\n\t\tlet state = this.navigationService.getSubmenuState().value;\n\t\tthis.navigationService.setSubmenuState(!state);\n\t}\n\n\tget epochExpirationTime() {\n\t\treturn this.authenticationService.currentUser.epochExpirationTime;\n\t}\n\n\tget isOnTrialStatusComponent() {\n\t\treturn this.router.url === '/trial-status';\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.dashboard-container {\r\n  height: 100%;\r\n}\r\n\r\n.submenu-close {\r\n  cursor: pointer;\r\n}\r\n\r\n.route-header {\r\n  padding: 1.25rem;\r\n  gap: 20px;\r\n  display: flex;\r\n  vertical-align: middle;\r\n}\r\n\r\n.route {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.route-body {\r\n  flex-grow: 1;\r\n  padding: 0px 1.25rem;\r\n}\r\n.right-bar-separator {\r\n  border-right: 1px solid $line;\r\n  height: 20px;\r\n}\r\n",
                    "styleUrl": "./dashboard-layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "epochExpirationTime": {
                    "name": "epochExpirationTime",
                    "getSignature": {
                        "name": "epochExpirationTime",
                        "type": "",
                        "returnType": "",
                        "line": 50
                    }
                },
                "isOnTrialStatusComponent": {
                    "name": "isOnTrialStatusComponent",
                    "getSignature": {
                        "name": "isOnTrialStatusComponent",
                        "type": "",
                        "returnType": "",
                        "line": 54
                    }
                }
            },
            "templateData": "<div class=\"d-flex\">\r\n  <app-sidebar></app-sidebar>\r\n  <div class=\"flex-grow-1\">\r\n    <div class=\"route h-100\">\r\n      <div class=\"d-flex route-header align-items-center\">\r\n        <svg-icon\r\n          *ngIf=\"hasSubmenu\"\r\n          class=\"submenu-close\"\r\n          (click)=\"toggle()\"\r\n          src=\"/assets/img/custom/sidebar/submenu-close.svg\"\r\n        ></svg-icon>\r\n\r\n        <h5 class=\"m-0\" *ngIf=\"!isOnTrialStatusComponent\">\r\n          {{ route.text === \"Flows\" ? \"Flow Collections\" : route.text }}\r\n        </h5>\r\n        <div class=\"flex-grow-1\"></div>\r\n        <app-trial-countdown *ngIf=\"epochExpirationTime\"></app-trial-countdown>\r\n        <div *ngIf=\"epochExpirationTime\" class=\"right-bar-separator\"></div>\r\n        <app-user-avatar></app-user-avatar>\r\n      </div>\r\n      <div class=\"route-body\">\r\n        <div *ngIf=\"loading$ | async as loading; else loading;\">\r\n          <app-loading-skeleton></app-loading-skeleton>\r\n        </div>\r\n        <ng-template #loading>\r\n          <router-outlet></router-outlet>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-container *ngIf=\"updateSelectedRoute$ | async\"></ng-container>\r\n"
        },
        {
            "name": "DefaultConfigTypeSettingsComponent",
            "id": "component-DefaultConfigTypeSettingsComponent-a24d6d782fe7c7d451ef341f3e5f7337902c9363c6f9f4d6704abc101ead9241714d2e6dc46c5c31eb53847f1713e69367b58050a721eb9b0f93dc6e6ec8bef1",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/default-config-type-settings/default-config-type-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: DefaultConfigTypeSettingsComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-default-config-type-settings",
            "styleUrls": [
                "./default-config-type-settings.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./default-config-type-settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultConfigSettingsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "formValueChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, FormControl, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, tap } from 'rxjs';\n\n@Component({\n\tselector: 'app-default-config-type-settings',\n\ttemplateUrl: './default-config-type-settings.component.html',\n\tstyleUrls: ['./default-config-type-settings.component.css'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: DefaultConfigTypeSettingsComponent,\n\t\t},\n\t],\n})\nexport class DefaultConfigTypeSettingsComponent implements ControlValueAccessor {\n\tdefaultConfigSettingsForm: FormGroup;\n\tonTouch = () => {};\n\tonChange = val => {};\n\tformValueChanged$: Observable<void>;\n\tconstructor(private formBuilder: FormBuilder) {\n\t\tthis.defaultConfigSettingsForm = this.formBuilder.group({ optional: new FormControl() });\n\t\tthis.formValueChanged$ = this.defaultConfigSettingsForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.onChange(this.defaultConfigSettingsForm.value);\n\t\t\t})\n\t\t);\n\t}\n\twriteValue(obj: any): void {\n\t\tif (obj && obj.required) this.defaultConfigSettingsForm.patchValue({ optional: !obj.required });\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t}\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouch = fn;\n\t}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.defaultConfigSettingsForm.disable();\n\t\t} else {\n\t\t\tthis.defaultConfigSettingsForm.enable();\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./default-config-type-settings.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<form [formGroup]=\"defaultConfigSettingsForm\">\r\n  <div class=\"custom-control custom-checkbox\">\r\n    <input class=\"custom-control-input\" id=\"dropdown\" formControlName=\"optional\" type=\"checkbox\">\r\n<label class=\"custom-control-label\" for=\"dropdown\">Optional</label>\r\n  </div>\r\n\r\n</form>\r\n<ng-container *ngIf=\"formValueChanged$|async\"></ng-container>\r\n"
        },
        {
            "name": "DeployModalComponent",
            "id": "component-DeployModalComponent-0af70d2db52953f096e97e04420ab666b9173073ed96d1a4197a585ab47be46f9584c55464a8a4a64cfa86249dec50230460520ce20840c6ad983253462cac43",
            "file": "src/app/layout/common-layout/components/deploy-modal/deploy-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-deploy-modal",
            "styleUrls": [
                "./deploy-modal.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./deploy-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "collection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Collection",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "createInstance$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Instance>",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "deploymentDetailsByStep",
                    "defaultValue": "new Map<DeployModalStep, DeployStepSelectTargetEmittedValue | CollectionConfigsFormOutput>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<DeployModalStep | DeployStepSelectTargetEmittedValue | CollectionConfigsFormOutput>",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "deployTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'template'"
                        }
                    ]
                },
                {
                    "name": "modalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "nameExists",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "onHidden$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "step",
                    "defaultValue": "DeployModalStep.SELECT_ENVIRONMENT",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DeployModalStep",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createInstance",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isLastStep",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nextStep",
                    "args": [
                        {
                            "name": "stepResults",
                            "type": "DeployStepSelectTargetEmittedValue | CollectionConfigsFormOutput",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "stepResults",
                            "type": "DeployStepSelectTargetEmittedValue | CollectionConfigsFormOutput",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "skipEmptyStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Collection } from '../../model/piece.interface';\nimport { DeployStepSelectTargetEmittedValue } from './select-targeted-environment-step/select-deployment-environment-step.component';\nimport { DeployModalStep } from '../../model/enum/deploy-modal-step.enum';\nimport { InstanceService } from '../../service/instance.service';\nimport { InstanceStatus } from '../../model/enum/instance-status';\nimport { Router } from '@angular/router';\nimport { Observable, tap } from 'rxjs';\nimport { Instance } from '../../model/instance.interface';\nimport { ConfigSource } from '../../model/enum/config-source';\n\ntype CollectionConfigsFormOutput = {\n\t[key: string]: any;\n};\n\n@Component({\n\tselector: 'app-deploy-modal',\n\ttemplateUrl: './deploy-modal.component.html',\n\tstyleUrls: ['./deploy-modal.component.css'],\n})\nexport class DeployModalComponent implements OnInit {\n\t@ViewChild('template') deployTemplate;\n\n\t@Input() collection: Collection;\n\n\tstep: DeployModalStep = DeployModalStep.SELECT_ENVIRONMENT;\n\tsubmitted = false;\n\tnameExists: boolean;\n\tmodalRef?: BsModalRef;\n\tonHidden$: Observable<void>;\n\tcreateInstance$: Observable<Instance>;\n\tdeploymentDetailsByStep: Map<DeployModalStep, DeployStepSelectTargetEmittedValue | CollectionConfigsFormOutput> =\n\t\tnew Map<DeployModalStep, DeployStepSelectTargetEmittedValue | CollectionConfigsFormOutput>();\n\n\tconstructor(private modalService: BsModalService, private instanceService: InstanceService, private router: Router) {}\n\n\topenModal(template: TemplateRef<any>) {\n\t\tthis.modalRef = this.modalService.show(template, { backdrop: 'static' });\n\t\tthis.onHidden$ = this.modalRef.onHidden.pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.reset();\n\t\t\t})\n\t\t);\n\t}\n\n\tngOnInit() {\n\t\tthis.reset();\n\t}\n\n\tnextStep(stepResults: DeployStepSelectTargetEmittedValue | CollectionConfigsFormOutput) {\n\t\tthis.deploymentDetailsByStep.set(this.step, stepResults);\n\t\tif (this.isLastStep()) {\n\t\t\tthis.createInstance();\n\t\t} else {\n\t\t\tthis.step++;\n\t\t\tthis.skipEmptyStep();\n\t\t}\n\t}\n\n\treset() {\n\t\tthis.deploymentDetailsByStep = new Map<\n\t\t\tDeployModalStep,\n\t\t\tDeployStepSelectTargetEmittedValue | CollectionConfigsFormOutput\n\t\t>();\n\t\tthis.step = DeployModalStep.SELECT_ENVIRONMENT;\n\t\tthis.nameExists = false;\n\t}\n\n\tcloseModal() {\n\t\tthis.modalRef?.hide();\n\t}\n\n\tcreateInstance() {\n\t\tconst environmentStepDetails = this.deploymentDetailsByStep.get(\n\t\t\tDeployModalStep.SELECT_ENVIRONMENT\n\t\t) as DeployStepSelectTargetEmittedValue;\n\t\tconst collectionConfigs = this.deploymentDetailsByStep.get(DeployModalStep.COLLECTION_CONFIGS) || {};\n\t\tthis.createInstance$ = this.instanceService\n\t\t\t.create({\n\t\t\t\tstatus: InstanceStatus.RUNNING,\n\t\t\t\tcollectionVersionId: environmentStepDetails.collectionVersion.id,\n\t\t\t\taccountId: environmentStepDetails.accountId,\n\t\t\t\tconfigs: collectionConfigs,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\ttap(() => {\n\t\t\t\t\tthis.modalRef?.hide();\n\t\t\t\t\tthis.router.navigate(['/instances'], {\n\t\t\t\t\t\tqueryParams: {\n\t\t\t\t\t\t\tenvironment: environmentStepDetails.environmentName,\n\t\t\t\t\t\t\taccountName: environmentStepDetails.accountName,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t}\n\tisLastStep() {\n\t\tconst environmentStepDetails = this.deploymentDetailsByStep.get(\n\t\t\tDeployModalStep.SELECT_ENVIRONMENT\n\t\t)! as DeployStepSelectTargetEmittedValue;\n\t\tconst collectionConfigs = environmentStepDetails.collectionVersion.configs;\n\t\tconst flowsConfigs = environmentStepDetails.flowsVersions\n\t\t\t.map(fv => fv.configs.filter(c => c.source !== ConfigSource.PREDEFINED))\n\t\t\t.flat(1);\n\t\tif (this.step === DeployModalStep.SELECT_ENVIRONMENT) {\n\t\t\tif (collectionConfigs.length === 0 && flowsConfigs.length === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tskipEmptyStep() {\n\t\tconst environmentStepDetails = this.deploymentDetailsByStep.get(\n\t\t\tDeployModalStep.SELECT_ENVIRONMENT\n\t\t)! as DeployStepSelectTargetEmittedValue;\n\t\tif (\n\t\t\tthis.step === DeployModalStep.COLLECTION_CONFIGS &&\n\t\t\tenvironmentStepDetails.collectionVersion.configs.length === 0\n\t\t)\n\t\t\tthis.step++;\n\t}\n\tget DeployModalStep() {\n\t\treturn DeployModalStep;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./deploy-modal.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "instanceService",
                        "type": "InstanceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "instanceService",
                        "type": "InstanceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "DeployModalStep": {
                    "name": "DeployModalStep",
                    "getSignature": {
                        "name": "DeployModalStep",
                        "type": "",
                        "returnType": "",
                        "line": 125
                    }
                }
            },
            "templateData": "<ng-template #template>\r\n  <div class=\"deploy-container\">\r\n    <div [ngSwitch]=\"step\">\r\n      <app-select-deployment-environment\r\n        *ngSwitchCase=\"DeployModalStep.SELECT_ENVIRONMENT\"\r\n        (nextClicked)=\"nextStep($event)\"\r\n        [collection]=\"collection\"\r\n        (cancelClicked)=\"closeModal()\"\r\n      ></app-select-deployment-environment>\r\n      <app-deploy-step-global-config\r\n        *ngSwitchCase=\"DeployModalStep.COLLECTION_CONFIGS\"\r\n        [collectionVersion]=\"\r\n          deploymentDetailsByStep.get(DeployModalStep.SELECT_ENVIRONMENT)!\r\n            .collectionVersion\r\n        \"\r\n        (nextClicked)=\"nextStep($event)\"\r\n        (cancelClicked)=\"closeModal()\"\r\n      ></app-deploy-step-global-config>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n<ng-container *ngIf=\"onHidden$|async\"></ng-container>\r\n<ng-container *ngIf=\"createInstance$ |async\"></ng-container>\r\n\r\n<app-button\r\nbtnColor=\"primary\"\r\nbtnStyle=\"basic\"\r\nbtnSize=\"medium\"\r\n(click)=\"openModal(template); $event.stopPropagation()\"\r\n>   Deploy\r\n</app-button>\r\n"
        },
        {
            "name": "DeployStepGlobalConfigComponent",
            "id": "component-DeployStepGlobalConfigComponent-5269609637681d4d2713552c00e3adaa3c5c57663dcd6549ee1a2d002f9a43e99a3f806014f532f6cbdf8c3a5057a721108b0af671b0514ea86f4fd6293d2846",
            "file": "src/app/layout/common-layout/components/deploy-modal/deploy-step-collection-configs/deploy-step-collection-configs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-deploy-step-global-config",
            "styleUrls": [
                "./deploy-step-collection-configs.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./deploy-step-collection-configs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accountId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "UUID",
                    "decorators": []
                },
                {
                    "name": "collectionVersion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "CollectionVersion",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cancelClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "nextClicked",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "collectionConfigsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "nextStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { UUID } from 'angular2-uuid';\nimport { CollectionVersion } from '../../../model/piece.interface';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ConfigSource } from '../../../model/enum/config-source';\n\n@Component({\n\tselector: 'app-deploy-step-global-config',\n\ttemplateUrl: './deploy-step-collection-configs.component.html',\n\tstyleUrls: ['./deploy-step-collection-configs.component.css'],\n})\nexport class DeployStepGlobalConfigComponent implements OnInit {\n\t@Output() cancelClicked: EventEmitter<void> = new EventEmitter<void>();\n\t@Output() nextClicked: EventEmitter<any> = new EventEmitter<any>();\n\t@Input() accountId: UUID;\n\t@Input() collectionVersion: CollectionVersion;\n\tcollectionConfigsForm: FormGroup;\n\tsubmitted = false;\n\tloading = false;\n\n\tconstructor(private formBuilder: FormBuilder) {\n\t\tthis.collectionConfigsForm = this.formBuilder.group({\n\t\t\tcollectionConfigs: new FormControl(),\n\t\t});\n\t}\n\tngOnInit(): void {\n\t\tthis.collectionVersion = JSON.parse(JSON.stringify(this.collectionVersion));\n\t\tthis.collectionVersion.configs = this.collectionVersion.configs.filter(c => c.source !== ConfigSource.PREDEFINED);\n\t\tthis.collectionVersion.configs = this.collectionVersion.configs.map(c => {\n\t\t\treturn {\n\t\t\t\t...c,\n\t\t\t\tcollectionVersionId: this.collectionVersion.id,\n\t\t\t};\n\t\t});\n\t}\n\n\tnextStep() {\n\t\tthis.submitted = true;\n\t\tif (this.collectionConfigsForm.invalid) return;\n\t\tthis.nextClicked.emit(this.collectionConfigsForm.get('collectionConfigs')!.value);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".modal-body {\r\n  max-height: 70vh;\r\n}\r\n",
                    "styleUrl": "./deploy-step-collection-configs.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"modal-header\">\r\n  <h5 class=\"modal-title pull-left\">Collection Configs</h5>\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn-close close pull-right\"\r\n    aria-label=\"Close\"\r\n    (click)=\"this.cancelClicked.emit()\"\r\n  >\r\n    <span aria-hidden=\"true\" class=\"visually-hidden close-custom\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form [formGroup]=\"collectionConfigsForm\">\r\n    <app-configs-form\r\n      formControlName=\"collectionConfigs\"\r\n      [configs]=\"collectionVersion.configs\"\r\n      [submitted]=\"submitted\"\r\n    >\r\n    </app-configs-form>\r\n  </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <app-button\r\n  btnColor=\"basic\"\r\n  btnStyle=\"basic\"\r\n  (buttonClicked)=\"this.cancelClicked.emit()\"\r\n> Cancel\r\n</app-button>\r\n\r\n  <app-button\r\n    type=\"button\"\r\n    btnColor=\"primary\"\r\n    [loading]=\"loading\"\r\n    (click)=\"nextStep()\"\r\n  >Next</app-button>\r\n</div>\r\n"
        },
        {
            "name": "DescribeFormComponent",
            "id": "component-DescribeFormComponent-0285d5c1c5fb0739a3d44d7e1a18d9bf99bc6cca873d4f644a4f4240bd56c3af8fc6f1f262c76af01f5f818ec55d02e9ef6d1c701be05ad6567b1e21b0516692",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/describe-form/describe-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: DescribeFormComponent,\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, multi: true, useExisting: DescribeFormComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-describe-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./describe-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "describeForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "OnChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "updateComponentValue$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "getControl",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "changed",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changed",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "tocuhed",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tocuhed",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "{ invalid: boolean; }",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n\tValidators,\n} from '@angular/forms';\nimport { tap } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\n\n@Component({\n\tselector: 'app-describe-form',\n\ttemplateUrl: './describe-form.component.html',\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: DescribeFormComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: DescribeFormComponent,\n\t\t},\n\t],\n\tanimations: [fadeInUp400ms],\n})\nexport class DescribeFormComponent implements ControlValueAccessor {\n\tdescribeForm: FormGroup;\n\tOnChange = value => {};\n\tonTouched = () => {};\n\tupdateComponentValue$: Observable<any>;\n\tconstructor(private formBuilder: FormBuilder) {\n\t\tthis.describeForm = this.formBuilder.group({\n\t\t\tdisplayName: new FormControl('', Validators.required),\n\t\t\tname: new FormControl({ value: '', disabled: true }),\n\t\t});\n\t\tthis.updateComponentValue$ = this.describeForm.valueChanges.pipe(\n\t\t\ttap(value => {\n\t\t\t\tthis.OnChange(this.describeForm.getRawValue());\n\t\t\t})\n\t\t);\n\t}\n\twriteValue(value: { name: string; displayName: string }): void {\n\t\tthis.describeForm.patchValue(value);\n\t}\n\tregisterOnChange(changed: any): void {\n\t\tthis.OnChange = changed;\n\t}\n\tregisterOnTouched(tocuhed: any): void {\n\t\tthis.onTouched = tocuhed;\n\t}\n\tvalidate() {\n\t\tif (this.describeForm.invalid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.describeForm.disable();\n\t\t} else if (this.describeForm.disabled) {\n\t\t\tthis.describeForm.enable();\n\t\t}\n\t}\n\tgetControl(name: string) {\n\t\treturn this.describeForm.get(name)!;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<form [formGroup]=\"describeForm\" class=\"ng-submitted\">\r\n  <div class=\"d-flex flex-column accordion-form-controls-container\">\r\n    <div>\r\n      <label required>Display Name</label>\r\n      <input class=\"form-control\" type=\"text\" formControlName=\"displayName\" />\r\n      <p\r\n        @fadeInUp\r\n        *ngIf=\"getControl('displayName').invalid\"\r\n        class=\"invalid-input\"\r\n      >\r\n        Display name is required.\r\n      </p>\r\n    </div>\r\n    <div>\r\n      <label>Name</label>\r\n      <input class=\"form-control\" type=\"text\" formControlName=\"name\" />\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<ng-container *ngIf=\"updateComponentValue$ | async\"></ng-container>\r\n"
        },
        {
            "name": "DictionaryFormComponent",
            "id": "component-DictionaryFormComponent-502e5933816638f6f51e77544f8d8d92009b36c667fb9c23180a66cc1b64cb3340ab4b727af70fbd75b9fc11260afed4a0a4ade4d8eaa8fb27688bcfc0012074",
            "file": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/dictionary-form/dictionary-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dictionary-form",
            "styleUrls": [
                "./dictionary-form.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dictionary-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dynamicControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "KeyValueFormControl",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_dynamicControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KeyValueFormControl",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "entrySet",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DictonaryItem[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addEmptyPair",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addPair",
                    "args": [
                        {
                            "name": "pairPosition",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pairPosition",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getValue",
                    "args": [
                        {
                            "name": "target",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "target",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removePair",
                    "args": [
                        {
                            "name": "pairIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pairIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setPairKey",
                    "args": [
                        {
                            "name": "pairIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pairIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setPairValue",
                    "args": [
                        {
                            "name": "pairIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pairIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ThemeService } from '../../../../service/theme.service';\nimport { DictonaryItem } from './dictonary-item';\nimport { KeyValueFormControl } from '../../../../model/dynamic-controls/key-value-form-control';\n\n@Component({\n\tselector: 'app-dictionary-form',\n\ttemplateUrl: './dictionary-form.component.html',\n\tstyleUrls: ['./dictionary-form.component.css'],\n})\nexport class DictionaryFormComponent implements OnInit {\n\tentrySet: DictonaryItem[] = [];\n\n\t_dynamicControl: KeyValueFormControl;\n\tget dynamicControl(): KeyValueFormControl {\n\t\treturn this._dynamicControl;\n\t}\n\n\t@Input() set dynamicControl(value: KeyValueFormControl) {\n\t\tthis._dynamicControl = value;\n\t\tthis.entrySet = [];\n\t\tif (\n\t\t\tthis._dynamicControl.formControl().value &&\n\t\t\tObject.entries(this._dynamicControl.formControl().value).length > 0\n\t\t) {\n\t\t\tfor (let [key, value] of Object.entries(this._dynamicControl.formControl().value)) {\n\t\t\t\tthis.entrySet.push({ key: key, value: value });\n\t\t\t}\n\t\t} else {\n\t\t\tthis.addEmptyPair();\n\t\t}\n\t}\n\n\tconstructor(public themeService: ThemeService) {}\n\n\taddEmptyPair() {\n\t\tthis.entrySet.push({ key: '', value: '' });\n\t\tthis.emitValue();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.emitValue();\n\t}\n\n\temitValue() {\n\t\tlet map = {};\n\t\tfor (let i = 0; i < this.entrySet.length; ++i) {\n\t\t\tif (this.entrySet[i].key.length > 0) {\n\t\t\t\tmap[this.entrySet[i].key] = this.entrySet[i].value;\n\t\t\t}\n\t\t}\n\t\tthis._dynamicControl.formControl().setValue(map);\n\t}\n\n\tgetValue(target: any) {\n\t\treturn target.value;\n\t}\n\n\tremovePair(pairIndex: number) {\n\t\tif (this.entrySet.length > 1) {\n\t\t\tthis.entrySet.splice(pairIndex, 1);\n\t\t\tthis.emitValue();\n\t\t} else {\n\t\t\tthis.setPairKey(0, '');\n\t\t\tthis.setPairValue(0, '');\n\t\t}\n\t}\n\taddPair(pairPosition: number) {\n\t\tthis.entrySet.splice(pairPosition + 1, 0, { key: '', value: '' });\n\t\tthis.emitValue();\n\t}\n\n\tsetPairValue(pairIndex: number, value: any) {\n\t\tthis.entrySet[pairIndex].value = value;\n\t\tthis.emitValue();\n\t}\n\tsetPairKey(pairIndex: number, key: any) {\n\t\tthis.entrySet[pairIndex].key = key;\n\t\tthis.emitValue();\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dictionary-form.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "dynamicControl": {
                    "name": "dynamicControl",
                    "setSignature": {
                        "name": "dynamicControl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "KeyValueFormControl",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 19,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "KeyValueFormControl",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "dynamicControl",
                        "type": "",
                        "returnType": "KeyValueFormControl",
                        "line": 15
                    }
                }
            },
            "templateData": "<div *ngIf=\"entrySet.length === 0\">\r\n  <span *ngIf=\"dynamicControl.formControl().disabled\" class=\"text-xm\">Empty map</span>\r\n  <app-button\r\n    *ngIf=\"!dynamicControl.formControl().disabled\"\r\n    btnColor=\"primary\"\r\n    (buttonClicked)=\"addEmptyPair()\"\r\n  >Add Value</app-button>\r\n</div>\r\n<div *ngIf=\"entrySet.length > 0\">\r\n  <div class=\"row mt-1\">\r\n    <div class=\"col\" style=\"padding-right: 0\">Key</div>\r\n    <div class=\"col\" style=\"padding-right: 0\">Value</div>\r\n    <app-icon-button\r\n      *ngIf=\"!dynamicControl.formControl().disabled\"\r\n      [color]=\"themeService.BODY_COLOR\"\r\n      [ngStyle]=\"{ visibility: 'hidden' }\"\r\n      [hoverColor]=\"themeService.PRIMARY_COLOR\"\r\n      [iconFilename]=\"'plus.svg'\"\r\n    ></app-icon-button>\r\n    <app-icon-button\r\n      *ngIf=\"!dynamicControl.formControl().disabled\"\r\n      [color]=\"themeService.BODY_COLOR\"\r\n      [ngStyle]=\"{ visibility: 'hidden' }\"\r\n      [hoverColor]=\"themeService.DANGER_COLOR\"\r\n      [iconFilename]=\"'trash.svg'\"\r\n    ></app-icon-button>\r\n  </div>\r\n\r\n  <div class=\"row mt-3\" *ngFor=\"let entry of entrySet; let indexOfPair = index\">\r\n    <div class=\"col\" style=\"padding-right: 0\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control mr-3\"\r\n        #keyInput\r\n        (input)=\"setPairKey(indexOfPair, keyInput.value)\"\r\n        [value]=\"entrySet[indexOfPair].key\"\r\n        [disabled]=\"dynamicControl.formControl().disabled\"\r\n      />\r\n    </div>\r\n    <div class=\"col\" style=\"padding-right: 0\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control mr-3\"\r\n        #valueInput\r\n        (input)=\"setPairValue(indexOfPair, valueInput.value)\"\r\n        [value]=\"entrySet[indexOfPair].value\"\r\n        [disabled]=\"dynamicControl.formControl().disabled\"\r\n      />\r\n    </div>\r\n    <app-icon-button\r\n      *ngIf=\"!dynamicControl.formControl().disabled\"\r\n      [color]=\"themeService.BODY_COLOR\"\r\n      style=\"margin-right: 0\"\r\n      (click)=\"addPair(indexOfPair)\"\r\n      [hoverColor]=\"themeService.PRIMARY_COLOR\"\r\n      [iconFilename]=\"'plus.svg'\"\r\n    ></app-icon-button>\r\n\r\n    <app-icon-button\r\n      *ngIf=\"!dynamicControl.formControl().disabled\"\r\n      [color]=\"themeService.BODY_COLOR\"\r\n      (click)=\"removePair(indexOfPair)\"\r\n      [hoverColor]=\"themeService.DANGER_COLOR\"\r\n      [iconFilename]=\"'trash.svg'\"\r\n    ></app-icon-button>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "DictionaryFormControlComponent",
            "id": "component-DictionaryFormControlComponent-d7764b867f4e1bf2672cebf1238b59177a5f685ad7ffb255e08b74bd1556c6d7ea8193bf4720959c553dec5505726c03af6bdf97d6bd8cf822942bb151240b8b",
            "file": "src/app/layout/common-layout/components/form-controls/dictionary-form-control/dictionary-form-control.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: DictionaryFormControlComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-dictonary-form-control",
            "styleUrls": [
                "./dictionary-form-control.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dictionary-form-control.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "addNewPair",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addPair",
                    "args": [
                        {
                            "name": "pair",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pair",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dictionaryControlValueChanged",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "formatControlValue",
                    "args": [],
                    "optional": false,
                    "returnType": "{ [key: string]: any; }",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPair",
                    "args": [
                        {
                            "name": "indexOfPair",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "indexOfPair",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "change",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "change",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "touched",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "touched",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removePair",
                    "args": [
                        {
                            "name": "indexOfPair",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "indexOfPair",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "dictionaryValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dictionaryValue",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormArray,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\n@Component({\n\tselector: 'app-dictonary-form-control',\n\ttemplateUrl: './dictionary-form-control.component.html',\n\tstyleUrls: ['./dictionary-form-control.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: DictionaryFormControlComponent,\n\t\t},\n\t],\n})\nexport class DictionaryFormControlComponent implements ControlValueAccessor, OnInit {\n\tform!: FormGroup;\n\tdisabled = false;\n\tonChange = val => {};\n\tonTouched = () => {};\n\tconstructor(private fb: FormBuilder) {\n\t\tthis.form = this.fb.group({ pairs: this.fb.array([]) });\n\t}\n\tngOnInit(): void {\n\t\tthis.addNewPair();\n\t}\n\n\twriteValue(dictionaryValue: any): void {\n\t\tthis.pairs.clear();\n\t\tif (dictionaryValue) {\n\t\t\tconst pairsKeys = Object.keys(dictionaryValue);\n\t\t\tconst pairsToInsert = pairsKeys.map(key => {\n\t\t\t\treturn { key: key, value: dictionaryValue[key] };\n\t\t\t});\n\t\t\tpairsToInsert.forEach(p => {\n\t\t\t\tthis.addPair(p);\n\t\t\t});\n\t\t}\n\t\tthis.addNewPair();\n\t}\n\tregisterOnChange(change: any): void {\n\t\tthis.onChange = change;\n\t}\n\tregisterOnTouched(touched: any): void {\n\t\tthis.onTouched = touched;\n\t}\n\n\tget pairs() {\n\t\treturn this.form.get('pairs') as FormArray;\n\t}\n\taddNewPair() {\n\t\tthis.addPair({ key: '', value: '' });\n\t}\n\n\taddPair(pair: { key: string; value: string }) {\n\t\tconst pairGroup = this.fb.group({\n\t\t\tkey: new FormControl(pair.key),\n\t\t\tvalue: new FormControl(pair.value),\n\t\t});\n\t\tthis.pairs.push(pairGroup);\n\t}\n\n\tremovePair(indexOfPair: number) {\n\t\tif (this.pairs.length > 1) {\n\t\t\tthis.pairs.removeAt(indexOfPair);\n\t\t\tthis.onChange(this.formatControlValue());\n\t\t}\n\t}\n\tgetPair(indexOfPair: number) {\n\t\treturn this.pairs.at(indexOfPair) as FormGroup;\n\t}\n\n\tdictionaryControlValueChanged() {\n\t\tthis.onChange(this.formatControlValue());\n\t}\n\tsetDisabledState(disabled: boolean) {\n\t\tthis.disabled = disabled;\n\t\tif (this.disabled) {\n\t\t\tthis.pairs.disable();\n\t\t} else {\n\t\t\tthis.pairs.enable();\n\t\t}\n\t}\n\tformatControlValue() {\n\t\tconst dictonaryControlValue: { [key: string]: any } = {};\n\t\tthis.pairs.controls.forEach(pairGroup => {\n\t\t\tif (pairGroup.get('key')?.value && pairGroup.get('value')?.value) {\n\t\t\t\tconst key = pairGroup.get('key')?.value;\n\t\t\t\tconst value = pairGroup.get('value')?.value;\n\t\t\t\tdictonaryControlValue[key] = value;\n\t\t\t}\n\t\t});\n\t\treturn dictonaryControlValue;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/scss/custom/variables\";\r\n.add-btn {\r\n  .add-icon {\r\n    fill: $description;\r\n    width: 0.9375rem;\r\n    height: 0.9375rem;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    .add-icon {\r\n      fill: $primary;\r\n    }\r\n  }\r\n  padding: 0;\r\n}\r\n\r\n.remove-btn {\r\n  .remove-icon {\r\n    width: 0.9375rem;\r\n    height: 0.9375rem;\r\n    fill: $description;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    .remove-icon {\r\n      fill: $danger;\r\n    }\r\n  }\r\n  padding: 0;\r\n}\r\n.pair-container,\r\n.pairs-form-container {\r\n  gap: 0.9375rem;\r\n}\r\n\r\n.empty-button-space {\r\n  min-width: 17px;\r\n}\r\n",
                    "styleUrl": "./dictionary-form-control.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit"
            ],
            "accessors": {
                "pairs": {
                    "name": "pairs",
                    "getSignature": {
                        "name": "pairs",
                        "type": "",
                        "returnType": "",
                        "line": 55
                    }
                }
            },
            "templateData": "<div [formGroup]=\"form\" class=\"d-flex flex-column pairs-form-container\">\r\n  <ng-container\r\n    *ngFor=\"let pair of pairs.controls; let idx = index; let isLast = last\"\r\n  >\r\n    <div class=\"d-flex pair-container\" *ngIf=\"!(isLast && disabled)\" [formGroup]=\"getPair(idx)\">\r\n      <input\r\n        name=\"key\"\r\n        class=\"form-control\"\r\n        formControlName=\"key\"\r\n        type=\"text\"\r\n        (keyup)=\"dictionaryControlValueChanged()\"\r\n        placeholder=\"Key\"\r\n      />\r\n      <input\r\n        name=\"value\"\r\n        class=\"form-control\"\r\n        formControlName=\"value\"\r\n        (keyup)=\"dictionaryControlValueChanged()\"\r\n        type=\"text\"\r\n        placeholder=\"Value\"\r\n      />\r\n      <ng-container *ngIf=\"!disabled\">\r\n        <button\r\n        *ngIf=\"isLast\"\r\n        class=\"btn add-btn\"\r\n        (click)=\"addNewPair()\"\r\n        [disabled]=\"disabled\"\r\n        type=\"button\"\r\n      >\r\n        <svg-icon\r\n          src=\"assets/img/custom/plus.svg\"\r\n          class=\"add-icon\"\r\n          [applyClass]=\"true\"\r\n        ></svg-icon>\r\n      </button>\r\n\r\n      <button\r\n        class=\"btn remove-btn\"\r\n        (click)=\"removePair(idx)\"\r\n        [disabled]=\"disabled\"\r\n        type=\"button\"\r\n      >\r\n        <svg-icon\r\n          src=\"assets/img/custom/trash.svg\"\r\n          class=\"remove-icon\"\r\n          [applyClass]=\"true\"\r\n        ></svg-icon>\r\n      </button>\r\n      <ng-container *ngIf=\"!isLast\">\r\n        <div class=\"empty-button-space \"></div>\r\n      </ng-container>\r\n      </ng-container>\r\n\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n"
        },
        {
            "name": "DocumentationLinkComponent",
            "id": "component-DocumentationLinkComponent-7bab70f590a9f79777ec2af1a51fbf55e8a024ff1eeec8b3a96d172d743abe2c5d0a1c67d77869b891a08a339127c920f5cdef6f6498765178cc127e5a092191",
            "file": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/documentation-link/documentation-link.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-documentation-link",
            "styleUrls": [
                "./documentation-link.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./documentation-link.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dynamicControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "DocumentationInfoControl",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { DocumentationInfoControl } from '../../../../model/dynamic-controls/documentation-info-control';\n\n@Component({\n\tselector: 'app-documentation-link',\n\ttemplateUrl: './documentation-link.component.html',\n\tstyleUrls: ['./documentation-link.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DocumentationLinkComponent {\n\t@Input() dynamicControl: DocumentationInfoControl;\n\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/assets/scss/custom/variables';\r\n\r\n.logo-icon{\r\n  width: 18px;\r\n  height: 18px;\r\n  object-fit: contain;\r\n  margin-right: 0.325rem;\r\n}\r\n\r\n.doc-text:hover{\r\n  color: black;\r\n}\r\n.doc-text{\r\n  color: $body;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n}\r\n\r\n.external-link{\r\n  width: 12px;\r\n  height: 12px;\r\n  margin-left: 0.25rem;\r\n}\r\n\r\n.doc-container {\r\n  display: flex;\r\n  padding: 0.5rem;\r\n  background-color: $sidebar;\r\n  align-items: center;\r\n}\r\n",
                    "styleUrl": "./documentation-link.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "templateData": "<a [href]=\"dynamicControl.getDocumentationLink()\" [target]=\"'_window'\">\r\n  <div class=\"mt-2 doc-container\">\r\n    <img class=\"logo-icon\" [src]=\"dynamicControl.getLogoUrl()\"/>\r\n    <span class=\"doc-text\">Go to {{dynamicControl.getPieceTitle()}} Docs</span>\r\n    <img class='external-link' src=\"assets/img/custom/external-website.png\"/>\r\n  </div>\r\n\r\n</a>\r\n"
        },
        {
            "name": "DropdownConfigSettingsComponent",
            "id": "component-DropdownConfigSettingsComponent-04a034bd73c53018e2dc33f50ad2faba7890d137098724ecfdbed244503dcb3b2bd0c8e886cce2b3ab176ae334eb05a9dbf1aad68748859f295a53740ec777ad",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/dropdown-config-settings/dropdown-config-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: DropdownConfigSettingsComponent,\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, multi: true, useExisting: DropdownConfigSettingsComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-dropdown-config-settings",
            "styleUrls": [
                "./dropdown-config-settings.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown-config-settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "configToUpdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "Config | undefined",
                    "decorators": []
                },
                {
                    "name": "currentConfigScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "currentConfigSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "ConfigSource",
                    "decorators": []
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_currentConfigScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigScope",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "artifact$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Artifact>",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "ConfigSource",
                    "defaultValue": "ConfigSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "dropdownTypeChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<DropdownType>",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "dropdownTypeControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "dynamicDropdownSettingsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "dynamicSettingsFormValueChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "refreshReferences$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<DropdownOption[]>",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "staticDropdownSettingsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "staticSettingsFormValueChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [
                {
                    "name": "getRefreshReferences",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isReferenceSelected",
                    "args": [
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prepareDynamicDropdownSettingsValue",
                    "args": [],
                    "optional": false,
                    "returnType": "{ dropdownType: any; refreshReferences: {}; optional?: boolean; artifactContent: Artifact; }",
                    "typeParameters": [],
                    "line": 147,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prepareStaticDropdownSettingsValue",
                    "args": [],
                    "optional": false,
                    "returnType": "{ dropdownType: any; options: {}; optional?: boolean; }",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 197,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDropdownTypeFormControlValue",
                    "args": [
                        {
                            "name": "type",
                            "type": "DropdownType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "DropdownType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUpDynamicDropdownSettingsListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 139,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUpStaticDropdownSettingsListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUpTypeChangedListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 155,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "{ invalid: boolean; }",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { combineLatest, map, Observable, of, take, tap } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\nimport { DropdownOption } from 'src/app/layout/common-layout/model/dynamic-controls/dropdown-options';\nimport { ConfigScope } from 'src/app/layout/common-layout/model/enum/config-scope-type.enum';\nimport { ConfigSource } from 'src/app/layout/common-layout/model/enum/config-source';\nimport { ConfigType } from 'src/app/layout/common-layout/model/enum/config-type';\nimport { DropdownType } from 'src/app/layout/common-layout/model/enum/config.enum';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\nimport { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\nimport { CodeService } from 'src/app/layout/flow-builder/service/code.service';\nimport { BuilderSelectors } from 'src/app/layout/flow-builder/store/selector/flow-builder.selector';\nimport { RefreshReferencesValidator } from '../../../validators/refreshReferencesValidator';\n\ninterface DynamicDropdownSettingsFromValue {\n\trefreshReferences: string[];\n\toptional?: boolean;\n\tartifactContent: Artifact;\n}\n\ninterface StaticDropdownSettingsFromValue {\n\toptions: any[];\n\toptional?: boolean;\n}\n@Component({\n\tselector: 'app-dropdown-config-settings',\n\ttemplateUrl: './dropdown-config-settings.component.html',\n\tstyleUrls: ['./dropdown-config-settings.component.css'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: DropdownConfigSettingsComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: DropdownConfigSettingsComponent,\n\t\t},\n\t],\n\tanimations: [fadeInUp400ms],\n})\nexport class DropdownConfigSettingsComponent implements ControlValueAccessor, OnInit {\n\t@Input() currentConfigSource: ConfigSource;\n\t@Input() configToUpdate: Config | undefined;\n\t@Input() submitted = false;\n\t_currentConfigScope: ConfigScope;\n\t@Input() set currentConfigScope(scope) {\n\t\tthis._currentConfigScope = scope;\n\t\tthis.getRefreshReferences();\n\t}\n\tstaticDropdownSettingsForm: FormGroup;\n\tstaticSettingsFormValueChanged$: Observable<void>;\n\tdynamicSettingsFormValueChanged$: Observable<void>;\n\tdropdownTypeControl: FormControl;\n\tdynamicDropdownSettingsForm: FormGroup;\n\tdropdownTypeChanged$: Observable<DropdownType>;\n\tartifact$: Observable<Artifact>;\n\tConfigSource = ConfigSource;\n\trefreshReferences$: Observable<DropdownOption[]>;\n\tonChange = val => {};\n\tconstructor(private formBuilder: FormBuilder, private codeService: CodeService, private store: Store) {}\n\tngOnInit(): void {\n\t\tthis.dropdownTypeControl = new FormControl(DropdownType.STATIC);\n\t\tthis.staticDropdownSettingsForm = this.formBuilder.group({\n\t\t\toptions: new FormControl([]),\n\t\t\toptional: new FormControl(false),\n\t\t});\n\t\tconst refreshReferencesValidator = RefreshReferencesValidator.createValidator(\n\t\t\tthis.store.select(BuilderSelectors.selectAllConfigs).pipe(take(1)),\n\t\t\tthis.configToUpdate\n\t\t);\n\t\tthis.dynamicDropdownSettingsForm = this.formBuilder.group({\n\t\t\trefreshReferences: new FormControl([], [], refreshReferencesValidator),\n\t\t\toptional: new FormControl(false),\n\t\t\tartifactContent: new FormControl(this.codeService.dynamicDropdownDefaultArtifact()),\n\t\t});\n\t\tthis.artifact$ = of(this.codeService.dynamicDropdownDefaultArtifact());\n\t\tthis.setUpStaticDropdownSettingsListener();\n\t\tthis.setUpDynamicDropdownSettingsListener();\n\t\tthis.setUpTypeChangedListener();\n\t\tthis.getRefreshReferences();\n\t}\n\tgetRefreshReferences() {\n\t\tthis.refreshReferences$ = combineLatest({\n\t\t\tflowConfigs: this.store.select(BuilderSelectors.selectCurrentFlowConfigs),\n\t\t\tcollectionConfigs: this.store.select(BuilderSelectors.selectCurrentCollectionConfigs),\n\t\t}).pipe(\n\t\t\tmap(res => {\n\t\t\t\tconst allConfigs = [...res.collectionConfigs];\n\t\t\t\tif (this._currentConfigScope === ConfigScope.FLOW) {\n\t\t\t\t\tallConfigs.push(...res.flowConfigs);\n\t\t\t\t}\n\t\t\t\treturn allConfigs\n\t\t\t\t\t.filter(\n\t\t\t\t\t\tc => c.type === ConfigType.OAUTH2 || (c.type === ConfigType.DROPDOWN && c.key !== this.configToUpdate?.key)\n\t\t\t\t\t)\n\t\t\t\t\t.map(c => {\n\t\t\t\t\t\treturn { label: c.label, value: c.key };\n\t\t\t\t\t});\n\t\t\t}),\n\t\t\ttap(rfs => {\n\t\t\t\tif (this.dynamicDropdownSettingsForm) {\n\t\t\t\t\tconst refreshReferencesControl = this.dynamicDropdownSettingsForm.get('refreshReferences')!;\n\t\t\t\t\tconst currentRefreshReferencesValue: string[] = refreshReferencesControl.value;\n\t\t\t\t\tconst refreshReferencesValueCorrected = currentRefreshReferencesValue.filter(\n\t\t\t\t\t\tcr => !!rfs.find(r => r.value === cr)\n\t\t\t\t\t);\n\t\t\t\t\trefreshReferencesControl.setValue(refreshReferencesValueCorrected);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\tsetUpStaticDropdownSettingsListener() {\n\t\tthis.staticSettingsFormValueChanged$ = this.staticDropdownSettingsForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tconst valueToEmit = this.prepareStaticDropdownSettingsValue();\n\t\t\t\tthis.onChange(valueToEmit);\n\t\t\t})\n\t\t);\n\t}\n\tprepareStaticDropdownSettingsValue() {\n\t\tconst settingsControlValue: StaticDropdownSettingsFromValue = this.staticDropdownSettingsForm.value;\n\t\tconst valueToEmit = {\n\t\t\t...settingsControlValue,\n\t\t\tdropdownType: this.dropdownTypeControl.value,\n\t\t};\n\t\treturn valueToEmit;\n\t}\n\tsetUpDynamicDropdownSettingsListener() {\n\t\tthis.dynamicSettingsFormValueChanged$ = this.dynamicDropdownSettingsForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tconst valueToEmit = this.prepareDynamicDropdownSettingsValue();\n\t\t\t\tthis.onChange(valueToEmit);\n\t\t\t})\n\t\t);\n\t}\n\tprepareDynamicDropdownSettingsValue() {\n\t\tconst settingsControlValue: DynamicDropdownSettingsFromValue = this.dynamicDropdownSettingsForm.value;\n\t\tconst valueToEmit = {\n\t\t\t...settingsControlValue,\n\t\t\tdropdownType: this.dropdownTypeControl.value,\n\t\t};\n\t\treturn valueToEmit;\n\t}\n\tsetUpTypeChangedListener() {\n\t\tthis.dropdownTypeChanged$ = this.dropdownTypeControl.valueChanges.pipe(\n\t\t\ttap((type: DropdownType) => {\n\t\t\t\tif (type === DropdownType.DYNAMIC) {\n\t\t\t\t\tthis.onChange(this.prepareDynamicDropdownSettingsValue());\n\t\t\t\t} else if (type === DropdownType.STATIC) {\n\t\t\t\t\tthis.onChange(this.prepareStaticDropdownSettingsValue());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\twriteValue(obj: any): void {\n\t\tif (obj && obj.dropdownType) {\n\t\t\tthis.dropdownTypeControl.setValue(obj.dropdownType);\n\t\t\tif (obj.dropdownType === DropdownType.STATIC) {\n\t\t\t\tthis.staticDropdownSettingsForm.patchValue({ ...obj, optional: !obj.required });\n\t\t\t} else if (obj.dropdownType === DropdownType.DYNAMIC) {\n\t\t\t\tif (obj.artifactUrl) {\n\t\t\t\t\tthis.artifact$ = this.codeService.readFile(obj.artifactUrl).pipe(\n\t\t\t\t\t\ttap(artifact => {\n\t\t\t\t\t\t\tthis.dynamicDropdownSettingsForm.patchValue({ artifactContent: artifact });\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.artifact$ = of(obj.artifactContent);\n\t\t\t\t\tthis.dynamicDropdownSettingsForm.patchValue({ artifactContent: obj.artifactContent });\n\t\t\t\t}\n\n\t\t\t\tthis.dynamicDropdownSettingsForm.patchValue({ ...obj, optional: !obj.required });\n\t\t\t}\n\t\t}\n\t}\n\tvalidate() {\n\t\tconst currentDropdownForm =\n\t\t\tthis.dropdownTypeControl.value === DropdownType.DYNAMIC\n\t\t\t\t? this.dynamicDropdownSettingsForm\n\t\t\t\t: this.staticDropdownSettingsForm;\n\t\tif (!currentDropdownForm.valid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\n\t\tthis.onChange({ ...this.staticDropdownSettingsForm.value, dropdownType: this.dropdownTypeControl.value });\n\t}\n\tregisterOnTouched(fn: any): void {}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.staticDropdownSettingsForm.disable();\n\t\t\tthis.dropdownTypeControl.disable();\n\t\t\tthis.dynamicDropdownSettingsForm.disable();\n\t\t}\n\t}\n\n\tget DropDownType() {\n\t\treturn DropdownType;\n\t}\n\n\tsetDropdownTypeFormControlValue(type: DropdownType) {\n\t\tif (this.dropdownTypeControl.enabled) {\n\t\t\tthis.dropdownTypeControl.setValue(type);\n\t\t}\n\t}\n\tisReferenceSelected(configKey: string) {\n\t\tconst refreshReferencesValue: string[] = this.dynamicDropdownSettingsForm.get('refreshReferences')!.value;\n\t\treturn !!refreshReferencesValue.find(r => r === configKey);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".artifact-loading-container {\r\n  min-height: 337px;\r\n  background-color: #263238;\r\n}\r\n",
                    "styleUrl": "./dropdown-config-settings.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 70,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnInit"
            ],
            "accessors": {
                "currentConfigScope": {
                    "name": "currentConfigScope",
                    "setSignature": {
                        "name": "currentConfigScope",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "scope",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 57,
                        "jsdoctags": [
                            {
                                "name": "scope",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "DropDownType": {
                    "name": "DropDownType",
                    "getSignature": {
                        "name": "DropDownType",
                        "type": "",
                        "returnType": "",
                        "line": 211
                    }
                }
            },
            "templateData": "<div class=\"d-flex flex-column config-modal-form-controls-container\">\r\n  <div>\r\n    <div class=\"custom-control custom-radio custom-control-inline\"\r\n      (click)=\"setDropdownTypeFormControlValue(DropDownType.STATIC)\">\r\n      <input [formControl]=\"dropdownTypeControl\" type=\"radio\" [value]=\"DropDownType.STATIC\"\r\n        class=\"custom-control-input\" />\r\n      <label class=\"custom-control-label dashed-underline-label\" matTooltipClass=\"labels-tooltip\"\r\n      matTooltip=\"Set pre-defined options to the dropdown\">Static</label>\r\n    </div>\r\n    <div class=\"custom-control custom-radio custom-control-inline\"\r\n      (click)=\"setDropdownTypeFormControlValue(DropDownType.DYNAMIC)\">\r\n      <input [formControl]=\"dropdownTypeControl\" type=\"radio\" [value]=\"DropDownType.DYNAMIC\"\r\n        class=\"custom-control-input\" />\r\n      <label class=\"custom-control-label dashed-underline-label\"\r\n      matTooltip=\"Write code to be used to load the dropdown options\">Dynamic</label>\r\n    </div>\r\n  </div>\r\n  <form [formGroup]=\"staticDropdownSettingsForm\" class=\"d-flex flex-column config-modal-form-controls-container\"\r\n    *ngIf=\"dropdownTypeControl.value===DropDownType.STATIC\">\r\n\r\n    <div>\r\n      <label>Dropdown Options</label>\r\n      <app-static-drop-down-options formControlName=\"options\"></app-static-drop-down-options>\r\n    </div>\r\n\r\n    <div  *ngIf=\"currentConfigSource === ConfigSource.USER\" class=\"custom-control custom-checkbox\">\r\n      <input class=\"custom-control-input\" id=\"dropdown\" formControlName=\"optional\" type=\"checkbox\">\r\n      <label class=\"custom-control-label\" for=\"dropdown\">Optional</label>\r\n    </div>\r\n\r\n\r\n\r\n  </form>\r\n  <form [formGroup]=\"dynamicDropdownSettingsForm\" class=\"d-flex flex-column config-modal-form-controls-container\"\r\n    *ngIf=\"dropdownTypeControl.value===DropDownType.DYNAMIC\">\r\n    <div>\r\n      <label class=\"dashed-underline-label\" matTooltipClass=\"labels-tooltip\"\r\n        matTooltip=\"The code that will generate the dynamic options\">Dropdown Options Code</label>\r\n      <app-code-artifact-form-control [autosave]=\"false\" *ngIf=\"artifact$|async;else loading\"\r\n        formControlName=\"artifactContent\"></app-code-artifact-form-control>\r\n    </div>\r\n    <div>\r\n      <label class=\"dashed-underline-label\" matTooltipClass=\"labels-tooltip\"\r\n      matTooltip=\"Config variables that will trigger the above code once their values change\">Refresh Refrences</label>\r\n      <ng-select formControlName=\"refreshReferences\" [multiple]=\"true\" bindLabel=\"label\" bindValue=\"value\"\r\n        [items]=\"refreshReferences$ |async\"  placeholder=\"Please select\"\r\n        appendTo=\"body\">\r\n        <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\r\n          <app-ng-select-tag-value-template [item]=\"item\" [clear]=\"clear\"></app-ng-select-tag-value-template>\r\n        </ng-template>\r\n        <ng-template ng-option-tmp let-item=\"item\">\r\n          <app-ng-select-item-template [item]=\"item\" [isSelected]=\"isReferenceSelected(item.value)\">\r\n          </app-ng-select-item-template>\r\n        </ng-template>\r\n      </ng-select>\r\n      <p @fadeInUp  class=\"invalid-input\" *ngIf=\"submitted && dynamicDropdownSettingsForm.get('refreshReferences')!.invalid\">\r\n        {{dynamicDropdownSettingsForm.get('refreshReferences')!.getError('cycle')}}\r\n      </p>\r\n\r\n    </div>\r\n    <div  *ngIf=\"currentConfigSource === ConfigSource.USER\" class=\"custom-control custom-checkbox\">\r\n      <input class=\"custom-control-input\" id=\"dropdown\" formControlName=\"optional\" type=\"checkbox\">\r\n      <label class=\"custom-control-label\" for=\"dropdown\">Optional</label>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n\r\n\r\n<ng-container *ngIf=\"dynamicSettingsFormValueChanged$ |async\"></ng-container>\r\n<ng-container *ngIf=\"staticSettingsFormValueChanged$ |async\"></ng-container>\r\n<ng-container *ngIf=\"dropdownTypeChanged$ |async\"></ng-container>\r\n<ng-template #loading>\r\n  <div class=\"d-flex align-items-center justify-content-center artifact-loading-container\">\r\n    <app-loading-icon [whiteLoader]=\"true\"></app-loading-icon>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n\r\n"
        },
        {
            "name": "DynamicFieldInputOnlyComponent",
            "id": "component-DynamicFieldInputOnlyComponent-37b8e812433189590f3edc6f16a36dcea2d4214d8c607748d2dcf4dd8e21ea54e94fc84c6e552991cafd5238ec7e896877dd889ddf8258fb9dd2e5b47b4f462b",
            "file": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/dynamic-field-input-only.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-input-only",
            "styleUrls": [
                "./dynamic-field-input-only.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-field-input-only.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dynamicControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "DynamicFormControl | null",
                    "decorators": []
                },
                {
                    "name": "showErrors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "allowNumbers",
                    "args": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "codeControl",
                    "args": [],
                    "optional": false,
                    "returnType": "CodeEmbeddedControl",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "convertCronExpression",
                    "args": [
                        {
                            "name": "cron",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cron",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cronExpression",
                    "args": [],
                    "optional": false,
                    "returnType": "CronExpressionFormControl",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "documentationLink",
                    "args": [],
                    "optional": false,
                    "returnType": "DocumentationInfoControl",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dropdownControl",
                    "args": [],
                    "optional": false,
                    "returnType": "DropdownFormControl",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getErrors",
                    "args": [
                        {
                            "name": "errors",
                            "type": "ValidationErrors | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "ValidationErrors | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "integerControl",
                    "args": [],
                    "optional": false,
                    "returnType": "IntegerFormControl",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "keyValueFormControl",
                    "args": [],
                    "optional": false,
                    "returnType": "KeyValueFormControl",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "longTextControl",
                    "args": [],
                    "optional": false,
                    "returnType": "LongTextFormControl",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "multiDropdownControl",
                    "args": [],
                    "optional": false,
                    "returnType": "MultiDropdownFormControl",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "oauth2Control",
                    "args": [],
                    "optional": false,
                    "returnType": "Oauth2LoginFormControl",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectOauth2Control",
                    "args": [],
                    "optional": false,
                    "returnType": "Oauth2SelectFormControl",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shortTextControl",
                    "args": [],
                    "optional": false,
                    "returnType": "ShortTextFormControl",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ThemeService } from '../../../service/theme.service';\nimport { fadeInUp400ms } from '../../../animation/fade-in-up.animation';\nimport { DynamicFormControl } from '../../../model/dynamic-controls/dynamic-form-control';\nimport { ControlType } from '../../../model/dynamic-controls/control-type.enum';\nimport { DropdownFormControl } from '../../../model/dynamic-controls/dropdown-form-control';\nimport { MultiDropdownFormControl } from '../../../model/dynamic-controls/multi-dropdown-form-control';\nimport { CodeEmbeddedControl } from '../../../model/dynamic-controls/code-embedded-control-form';\nimport { Oauth2LoginFormControl } from '../../../model/dynamic-controls/oauth2-login-form-control';\nimport { ValidationErrors } from '@angular/forms';\nimport { Oauth2SelectFormControl } from '../../../model/dynamic-controls/oauth2-select-form-control';\nimport { CronExpressionFormControl } from '../../../model/dynamic-controls/cron-expression-form-control';\nimport cronstrue from 'cronstrue';\nimport { LongTextFormControl } from '../../../model/dynamic-controls/long-text-form-control';\nimport { DocumentationInfoControl } from '../../../model/dynamic-controls/documentation-info-control';\nimport { IntegerFormControl } from '../../../model/dynamic-controls/integer-form-control';\nimport { KeyValueFormControl } from '../../../model/dynamic-controls/key-value-form-control';\nimport { ShortTextFormControl } from '../../../model/dynamic-controls/short-text-form-control';\n\n@Component({\n\tselector: 'app-dynamic-input-only',\n\ttemplateUrl: './dynamic-field-input-only.component.html',\n\tstyleUrls: ['./dynamic-field-input-only.component.css'],\n\tanimations: [fadeInUp400ms],\n})\nexport class DynamicFieldInputOnlyComponent {\n\t@Input() showErrors: boolean;\n\t@Input() dynamicControl: DynamicFormControl | null;\n\n\tconstructor(public themeService: ThemeService) {}\n\n\tget controlType() {\n\t\treturn ControlType;\n\t}\n\n\tdropdownControl() {\n\t\treturn this.dynamicControl as DropdownFormControl;\n\t}\n\n\tmultiDropdownControl() {\n\t\treturn this.dynamicControl as MultiDropdownFormControl;\n\t}\n\n\tgetErrors(errors: ValidationErrors | null) {\n\t\tif (errors === null) return [];\n\t\treturn Object.keys(errors);\n\t}\n\n\tcodeControl() {\n\t\treturn this.dynamicControl as CodeEmbeddedControl;\n\t}\n\n\toauth2Control() {\n\t\treturn this.dynamicControl as Oauth2LoginFormControl;\n\t}\n\n\tselectOauth2Control() {\n\t\treturn this.dynamicControl as Oauth2SelectFormControl;\n\t}\n\n\tconvertCronExpression(cron: string) {\n\t\treturn cronstrue.toString(cron);\n\t}\n\n\tintegerControl() {\n\t\treturn this.dynamicControl as IntegerFormControl;\n\t}\n\n\tlongTextControl() {\n\t\treturn this.dynamicControl as LongTextFormControl;\n\t}\n\n\tdocumentationLink() {\n\t\treturn this.dynamicControl as DocumentationInfoControl;\n\t}\n\n\tkeyValueFormControl() {\n\t\treturn this.dynamicControl as KeyValueFormControl;\n\t}\n\n\tcronExpression() {\n\t\treturn this.dynamicControl as CronExpressionFormControl;\n\t}\n\n\tshortTextControl() {\n\t\treturn this.dynamicControl as ShortTextFormControl;\n\t}\n\n\tallowNumbers($event: any) {\n\t\t// don't allow letter e\n\t\treturn $event.keyCode != 69;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dynamic-field-input-only.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "controlType": {
                    "name": "controlType",
                    "getSignature": {
                        "name": "controlType",
                        "type": "",
                        "returnType": "",
                        "line": 32
                    }
                }
            },
            "templateData": "<div class=\"mb-3\" *ngIf=\"dynamicControl\">\r\n  <div\r\n    *ngIf=\"\r\n      dynamicControl.getHelpText() !== undefined &&\r\n      dynamicControl.getHelpText()!.length > 0\r\n    \"\r\n    class=\"text-sm text-muted mb-2\"\r\n  >\r\n    {{ dynamicControl.getHelpText() }}\r\n  </div>\r\n  <div [ngSwitch]=\"dynamicControl.getType()\">\r\n    <input\r\n      *ngSwitchCase=\"controlType.SHORT_TEXT\"\r\n      [formControl]=\"shortTextControl().formControl()\"\r\n      [type]=\"'text'\"\r\n      class=\"form-control mr-3\"\r\n    />\r\n    <textarea\r\n      *ngSwitchCase=\"controlType.LONG_TEXT\"\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      [formControl]=\"longTextControl().formControl()\"\r\n      rows=\"5\"\r\n      [placeholder]=\"dynamicControl.getPlaceholder() ?? ''\"\r\n    ></textarea>\r\n    <app-documentation-link\r\n      *ngSwitchCase=\"controlType.DOCUMENTATION_LINK\"\r\n      [dynamicControl]=\"documentationLink()\"\r\n    ></app-documentation-link>\r\n    <app-basic-select\r\n      *ngSwitchCase=\"controlType.DROPDOWN\"\r\n      [dynamicControl]=\"dropdownControl()\"\r\n      [clearable]=\"!dropdownControl().isRequired\"\r\n    ></app-basic-select>\r\n    <app-dictionary-form\r\n      *ngSwitchCase=\"controlType.KEY_VALUE\"\r\n      [dynamicControl]=\"keyValueFormControl()\"\r\n    ></app-dictionary-form>\r\n    <app-multi-dropdown\r\n      *ngSwitchCase=\"controlType.MULTI_DROPDOWN\"\r\n      [dynamicControl]=\"multiDropdownControl()\"\r\n    ></app-multi-dropdown>\r\n    <app-select-event\r\n      *ngSwitchCase=\"controlType.SELECT_EVENT\"\r\n      [dynamicControl]=\"multiDropdownControl()\"\r\n    ></app-select-event>\r\n    <input\r\n      *ngSwitchCase=\"controlType.INTEGER\"\r\n      [formControl]=\"integerControl().formControl()\"\r\n      [type]=\"'number'\"\r\n      [placeholder]=\"dynamicControl.getPlaceholder()\"\r\n      (keydown)=\"allowNumbers($event)\"\r\n      class=\"form-control mr-3\"\r\n    />\r\n    <app-embedded-code-editor\r\n      *ngSwitchCase=\"controlType.EMBEDDED_CODE_EDITOR\"\r\n      [dynamicControl]=\"codeControl()\"\r\n    ></app-embedded-code-editor>\r\n    <app-connect-oauth2\r\n      *ngSwitchCase=\"controlType.OAUTH2_LOGIN\"\r\n      [dynamicControl]=\"oauth2Control()\"\r\n    ></app-connect-oauth2>\r\n    <app-select-oauth2\r\n      *ngSwitchCase=\"controlType.OAUTH2_SELECT\"\r\n      [dynamicControl]=\"selectOauth2Control()\"\r\n    ></app-select-oauth2>\r\n    <div *ngSwitchCase=\"controlType.CRON_EXPRESSION\">\r\n      <input\r\n        [formControl]=\"cronExpression().formControl()\"\r\n        [type]=\"'text'\"\r\n        class=\"form-control mr-3\"\r\n      />\r\n      <div *ngIf=\"dynamicControl.formControl().valid\">\r\n        <p class=\"mt-3\">\r\n          {{ convertCronExpression(dynamicControl.formControl().value) }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"showErrors && dynamicControl.formControl().invalid\" @fadeInUp>\r\n    <div *ngFor=\"let error of getErrors(dynamicControl.formControl().errors)\">\r\n      <div [ngSwitch]=\"error\">\r\n        <p *ngSwitchCase=\"'required'\" class=\"invalid-input\">\r\n          {{ dynamicControl.getLabel() ?? \"\" }} is required.\r\n        </p>\r\n        <p *ngSwitchDefault class=\"invalid-input\">\r\n          {{ dynamicControl.getErrorMessages()[error] ?? \"\" }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DynamicFormComponent",
            "id": "component-DynamicFormComponent-21bbe6939f83c5036779681653c77579eb56f1fe9ecc9f8542a13018c404c719edae89774727f5be3c22856c6e0a635ded70ca03c61a3cbc2b992a8eb4b197fa",
            "file": "src/app/layout/common-layout/components/dynamic-form/dynamic-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dynamic-form",
            "styleUrls": [
                "./dynamic-form.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dynamic-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "formContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "FormContainer",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_formContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormContainer",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getErrors",
                    "args": [
                        {
                            "name": "errors",
                            "type": "ValidationErrors | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "errors",
                            "type": "ValidationErrors | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "$event",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "$event",
                            "type": "literal type[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\n\nimport { fadeInUp400ms } from '../../animation/fade-in-up.animation';\nimport { FormContainer } from '../../model/form-container';\nimport { ThemeService } from '../../service/theme.service';\n\nimport { ConfigType } from '../../model/enum/config-type';\n\n@Component({\n\tselector: 'app-dynamic-form',\n\ttemplateUrl: './dynamic-form.component.html',\n\tstyleUrls: ['./dynamic-form.component.css'],\n\tanimations: [fadeInUp400ms],\n})\nexport class DynamicFormComponent {\n\t_formContainer: FormContainer;\n\n\tget formContainer(): FormContainer {\n\t\treturn this._formContainer;\n\t}\n\n\t@Input() set formContainer(value: FormContainer) {\n\t\tthis._formContainer = value;\n\t}\n\n\tconstructor(public themeService: ThemeService) {}\n\n\tget inputType() {\n\t\treturn ConfigType;\n\t}\n\n\tgetErrors(errors: ValidationErrors | null) {\n\t\tif (errors === null) return [];\n\t\treturn Object.keys(errors);\n\t}\n\n\tsetValue(key: string, $event: { key: string; value: string }[]) {\n\t\tthis._formContainer.form.controls[key].setValue($event);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dynamic-form.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "formContainer": {
                    "name": "formContainer",
                    "setSignature": {
                        "name": "formContainer",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "FormContainer",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "FormContainer",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "formContainer",
                        "type": "",
                        "returnType": "FormContainer",
                        "line": 19
                    }
                },
                "inputType": {
                    "name": "inputType",
                    "getSignature": {
                        "name": "inputType",
                        "type": "",
                        "returnType": "",
                        "line": 29
                    }
                }
            },
            "templateData": "<form\r\n  [formGroup]=\"formContainer.form\"\r\n  [class.ng-submitted]=\"formContainer.submitted\"\r\n>\r\n  <div\r\n    class=\"form-group\"\r\n    *ngFor=\"let input of formContainer.fields; let i = index\"\r\n  >\r\n    <label [for]=\"'form' + i\"> {{ input.getLabel() }}</label>\r\n    <div [id]=\"'form' + i\">\r\n      <app-dynamic-input-only\r\n        [showErrors]=\"formContainer.submitted\"\r\n        [dynamicControl]=\"input\"\r\n      ></app-dynamic-input-only>\r\n    </div>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "EditableTextComponent",
            "id": "component-EditableTextComponent-364e5c5173b091c6153c7055f7cd6acecf6cf94613d14e52c0e1f9ec1eb9025d8349759c153af62b37f08da6b86e6cae86c147f75d31d75f28bcc6e5f77f0e49",
            "file": "src/app/layout/common-layout/components/editable-text/editable-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-editable-text",
            "styleUrls": [
                "./editable-text.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./editable-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "allowClick",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "allowDoubleClick",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "cssClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disableEditing",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "editing",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "viewedTextMaxWidth",
                    "defaultValue": "'200px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "editingChanges",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<boolean>"
                },
                {
                    "name": "valueChanges",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<string>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_editing",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "editableText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'editableText'"
                        }
                    ]
                },
                {
                    "name": "valueOnEditingStarted",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "clickHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doubleClickHandler",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "emitChangedValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "saveTextOnEnter",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveTextOnFocusOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setEditableOff",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setEditableOn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setSelectionToMiddleOfValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\n\n@Component({\n\tselector: 'app-editable-text',\n\ttemplateUrl: './editable-text.component.html',\n\tstyleUrls: ['./editable-text.component.css'],\n})\nexport class EditableTextComponent {\n\t@Input() value: string | undefined;\n\t@Input() cssClasses: string;\n\t@Input() allowClick: boolean = false;\n\t@Input() allowDoubleClick: boolean = false;\n\t@Input() disableEditing: boolean = false;\n\t@Input() viewedTextMaxWidth = '200px';\n\t@Output() valueChanges: EventEmitter<string> = new EventEmitter<string>();\n\t@Output() editingChanges: EventEmitter<boolean> = new EventEmitter<boolean>();\n\t@ViewChild('editableText') editableText: ElementRef;\n\tvalueOnEditingStarted = '';\n\t_editing: boolean = false;\n\tget editing(): boolean {\n\t\treturn this._editing;\n\t}\n\n\t@Input() set editing(value: boolean) {\n\t\tif (value) {\n\t\t\tthis.setEditableOn();\n\t\t} else {\n\t\t\tthis.setEditableOff();\n\t\t}\n\t}\n\n\tconstructor() {}\n\n\tsetEditableOff() {\n\t\tthis._editing = false;\n\t\tthis.editingChanges.emit(false);\n\t}\n\n\tsetEditableOn() {\n\t\tif (!this._editing) {\n\t\t\tthis._editing = true;\n\t\t\tif (this.value) this.valueOnEditingStarted = this.value.trim();\n\t\t\tthis.setSelectionToMiddleOfValue();\n\t\t}\n\t\tthis.editingChanges.emit(true);\n\t}\n\n\tsaveTextOnEnter(event: any) {\n\t\tif (event.key === 'Enter') {\n\t\t\t//do not allow new line to be put\n\t\t\tevent.stopImmediatePropagation();\n\t\t\tthis.emitChangedValue();\n\t\t\tthis.setEditableOff();\n\t\t}\n\t}\n\n\tdoubleClickHandler() {\n\t\tif (this.disableEditing) return;\n\t\tif (this.allowDoubleClick) {\n\t\t\tthis.setEditableOn();\n\t\t}\n\t}\n\n\tclickHandler() {\n\t\tif (this.disableEditing) return;\n\t\tif (this.allowClick) {\n\t\t\tthis.setEditableOn();\n\t\t}\n\t}\n\tsaveTextOnFocusOut() {\n\t\tthis.emitChangedValue();\n\t\tthis.setEditableOff();\n\t}\n\n\tprivate emitChangedValue() {\n\t\tconst isValueEmptyOrSameAsBeforeEditingBegun =\n\t\t\tthis.editableText.nativeElement.childNodes.length === 0 ||\n\t\t\tthis.editableText.nativeElement.childNodes[0].nodeValue.trim().length === 0 ||\n\t\t\tthis.editableText.nativeElement.childNodes[0].nodeValue.trim() === this.valueOnEditingStarted;\n\n\t\tif (!isValueEmptyOrSameAsBeforeEditingBegun) {\n\t\t\tthis.value = this.editableText.nativeElement.childNodes[0].nodeValue.trim();\n\t\t\tthis.valueChanges.emit(this.value);\n\t\t}\n\t}\n\n\tsetSelectionToMiddleOfValue() {\n\t\tsetTimeout(() => {\n\t\t\tif (this.editableText && this.value) {\n\t\t\t\tvar range = document.createRange();\n\t\t\t\tvar sel = window.getSelection();\n\t\t\t\trange.setStart(this.editableText.nativeElement.childNodes[0], this.value.length + 1);\n\t\t\t\trange.collapse(true);\n\t\t\t\tsel?.removeAllRanges();\n\t\t\t\tsel?.addRange(range);\n\t\t\t}\n\t\t}, 1);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input {\r\n  background: transparent !important;\r\n  border: 0 !important;\r\n  display: inline;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\n[contentEditable] {\r\n  outline: 0px solid transparent;\r\n  white-space: nowrap;\r\n}\r\n\r\n\r\n.viewed-text-container {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n",
                    "styleUrl": "./editable-text.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 30
            },
            "accessors": {
                "editing": {
                    "name": "editing",
                    "setSignature": {
                        "name": "editing",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 24,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "editing",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 20
                    }
                }
            },
            "templateData": "<div (click)=\"clickHandler()\" (dblclick)=\"doubleClickHandler()\">\r\n  <div\r\n    *ngIf=\"!this._editing\"\r\n    class=\" {{ cssClasses }} viewed-text-container\"\r\n    [style.max-width]=\"viewedTextMaxWidth\"\r\n  >\r\n    {{ value }}\r\n  </div>\r\n\r\n  <div\r\n    *ngIf=\"this._editing\"\r\n    [contentEditable]=\"this._editing\"\r\n    class=\"{{ cssClasses }}\"\r\n    #editableText\r\n    (focusout)=\"saveTextOnFocusOut()\"\r\n    (keypress)=\"saveTextOnEnter($event)\"\r\n  >\r\n    {{ value }}\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "EditStepAccordionComponent",
            "id": "component-EditStepAccordionComponent-3d4ef3a45517828f77fff3df12280df40699e85c0a0370b4c37be242b55a3bf03022a39ab292967d914c8c99ada6aeb7dc79c86f3c1dd217f69aef9c510f2079",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/edit-step-accodion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-edit-step-accodion",
            "styleUrls": [
                "./edit-step-accodion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./edit-step-accodion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "displayNameChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "Subject<string>",
                    "decorators": []
                },
                {
                    "name": "selectedStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "FlowItem",
                    "decorators": []
                },
                {
                    "name": "stepArtifactCacheKeyAndUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "literal type | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_selectedStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItem",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "autoSaveListener$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "cancelAutoSaveListener$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "codeArtifact$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Artifact> | null",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "delayExpansionPanelRendering$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "displayNameChangedListener$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "faChevornDown",
                    "defaultValue": "faChevronDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "faInfoCircle",
                    "defaultValue": "faInfoCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "openedIndex",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "readOnly$",
                    "defaultValue": "of(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "stepCacheKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepCacheKey | null",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "stepForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "closed",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "prepareStepDataToSave",
                    "args": [],
                    "optional": false,
                    "returnType": "FlowItem",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setAutoSaveListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDiplayNameListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setOpenedIndex",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateFormValue",
                    "args": [
                        {
                            "name": "stepSelected",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "stepSelected",
                            "type": "FlowItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, ChangeDetectorRef, Component, Input } from '@angular/core';\n\nimport { delay, map, Observable, of, skipWhile, Subject, takeUntil, tap } from 'rxjs';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons/faChevronDown';\nimport { Store } from '@ngrx/store';\nimport { FlowsActions } from 'src/app/layout/flow-builder/store/action/flows.action';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { StepCacheKey } from 'src/app/layout/flow-builder/service/artifact-cache-key';\nimport { FlowItem } from 'src/app/layout/common-layout/model/flow-builder/flow-item';\nimport { Artifact } from 'src/app/layout/flow-builder/model/artifact.interface';\nimport { CodeService } from 'src/app/layout/flow-builder/service/code.service';\nimport { TriggerType } from 'src/app/layout/common-layout/model/enum/trigger-type.enum';\nimport { BuilderSelectors } from 'src/app/layout/flow-builder/store/selector/flow-builder.selector';\n\n@Component({\n\tselector: 'app-edit-step-accodion',\n\ttemplateUrl: './edit-step-accodion.component.html',\n\tstyleUrls: ['./edit-step-accodion.component.scss'],\n})\nexport class EditStepAccordionComponent implements AfterViewInit {\n\tcodeArtifact$: Observable<Artifact> | null;\n\tstepCacheKey: StepCacheKey | null;\n\tautoSaveListener$: Observable<{\n\t\tdescribe: { displayName: string; name: string };\n\t\tinput: any;\n\t}>;\n\treadOnly$: Observable<boolean> = of(false);\n\tcancelAutoSaveListener$: Subject<boolean> = new Subject();\n\t_selectedStep: FlowItem;\n\tstepForm: FormGroup;\n\topenedIndex = 1;\n\tfaChevornDown = faChevronDown;\n\tfaInfoCircle = faInfoCircle;\n\t//delayExpansionPanelRendering$ is an observable that fixes an issue with angular material's accordions rendering content even though they are closed\n\tdelayExpansionPanelRendering$: Observable<boolean>;\n\tdisplayNameChangedListener$: Observable<string>;\n\t@Input() displayNameChanged$: Subject<string>;\n\n\t@Input() set stepArtifactCacheKeyAndUrl(urlAndCacheKey: { cacheKey: StepCacheKey; url: string } | null) {\n\t\tif (urlAndCacheKey) {\n\t\t\tthis.codeArtifact$ = this.codeService.getOrCreateStepArtifact(urlAndCacheKey.cacheKey, urlAndCacheKey.url);\n\t\t\tthis.stepCacheKey = urlAndCacheKey.cacheKey;\n\t\t} else {\n\t\t\tthis.codeArtifact$ = null;\n\t\t\tthis.stepCacheKey = null;\n\t\t}\n\t}\n\t@Input() set selectedStep(step: FlowItem) {\n\t\tthis._selectedStep = step;\n\t\tthis.cancelAutoSaveListener$.next(true);\n\t\tthis.updateFormValue(step);\n\t\tthis.setAutoSaveListener();\n\t\tthis.setDiplayNameListener();\n\t}\n\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate cd: ChangeDetectorRef,\n\t\tprivate store: Store,\n\t\tprivate codeService: CodeService\n\t) {\n\t\tthis.readOnly$ = this.store.select(BuilderSelectors.selectReadOnly).pipe(\n\t\t\ttap(readOnly => {\n\t\t\t\tif (readOnly) {\n\t\t\t\t\tthis.stepForm.disable();\n\t\t\t\t} else if (!this.stepForm.enabled) {\n\t\t\t\t\tthis.stepForm.enable();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.stepForm = this.formBuilder.group({\n\t\t\tdescribe: new FormControl({ value: { name: '', displayName: '' } }),\n\t\t\tinput: new FormControl({}),\n\t\t});\n\t}\n\tngAfterViewInit(): void {\n\t\tconst expansionAnimationDuration = 500;\n\t\tthis.delayExpansionPanelRendering$ = of(true).pipe(delay(expansionAnimationDuration));\n\t}\n\n\tsetOpenedIndex(index: number) {\n\t\tthis.openedIndex = index;\n\t\tthis.cd.detectChanges();\n\t}\n\n\tclosed(index: number) {\n\t\tif (this.openedIndex == index) {\n\t\t\tthis.openedIndex = -1;\n\t\t}\n\t}\n\tupdateFormValue(stepSelected: FlowItem) {\n\t\tconst describeControl = this.stepForm.get('describe')!;\n\t\tdescribeControl.setValue({\n\t\t\tdisplayName: stepSelected.displayName,\n\t\t\tname: stepSelected.name,\n\t\t});\n\t\tconst inputControl = this.stepForm.get('input')!;\n\t\tlet settings = stepSelected.settings;\n\t\tinputControl.setValue({ ...settings, type: stepSelected.type });\n\t}\n\n\tsetAutoSaveListener() {\n\t\tthis.autoSaveListener$ = this.stepForm.valueChanges.pipe(\n\t\t\ttakeUntil(this.cancelAutoSaveListener$),\n\t\t\tskipWhile(() => this.stepForm.disabled),\n\t\t\ttap(() => {\n\t\t\t\tthis.prepareStepDataToSave();\n\t\t\t\tthis.store.dispatch(\n\t\t\t\t\tFlowsActions.updateStep({\n\t\t\t\t\t\tstepName: this._selectedStep.name,\n\t\t\t\t\t\tnewStep: this.prepareStepDataToSave(),\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}\n\tsetDiplayNameListener() {\n\t\tthis.displayNameChangedListener$ = this.stepForm.get('describe')!.valueChanges.pipe(\n\t\t\ttakeUntil(this.cancelAutoSaveListener$),\n\t\t\tmap(describeFormValue => {\n\t\t\t\treturn describeFormValue.displayName;\n\t\t\t}),\n\t\t\ttap(displayName => {\n\t\t\t\tthis.displayNameChanged$.next(displayName);\n\t\t\t})\n\t\t);\n\t}\n\n\tprepareStepDataToSave() {\n\t\tconst describeControlValue: { displayName: string; name: string } = this.stepForm.get('describe')!.value;\n\t\tconst inputControlValue = this.stepForm.get('input')!.value;\n\t\tconst stepToSave: FlowItem = JSON.parse(JSON.stringify(this._selectedStep));\n\t\tstepToSave.displayName = describeControlValue.displayName;\n\t\tstepToSave.name = this._selectedStep.name;\n\t\tstepToSave.settings = inputControlValue;\n\t\tstepToSave.valid = this.stepForm.valid;\n\t\tdelete stepToSave.settings.artifact;\n\t\treturn stepToSave;\n\t}\n\tget StepTypes() {\n\t\treturn ActionType;\n\t}\n\tget TriggerTypes() {\n\t\treturn TriggerType;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.edit-step-accordion-container {\r\n  margin-bottom: 4.375rem;\r\n  margin-left: 0.3125rem;\r\n  margin-right: 0.3125rem;\r\n  border-radius: 4px;\r\n\r\n  .inside-panel-item-title {\r\n    padding-top: 1.5625rem;\r\n    font-weight: 400;\r\n    font-size: 0.875rem;\r\n    line-height: 1.375rem;\r\n    color: $formLabel;\r\n    -webkit-touch-callout: none;\r\n    /* iOS Safari */\r\n    -webkit-user-select: none;\r\n    /* Safari */\r\n    -khtml-user-select: none;\r\n    /* Konqueror HTML */\r\n    -moz-user-select: none;\r\n    /* Old versions of Firefox */\r\n    -ms-user-select: none;\r\n    /* Internet Explorer/Edge */\r\n    user-select: none;\r\n    /* Non-prefixed version, currently\r\n                                    supported by Chrome, Edge, Opera and Firefox */\r\n  }\r\n\r\n  .learn-variable-text {\r\n    color: $body;\r\n  }\r\n\r\n  .expansion-panel-label {\r\n    margin-bottom: 0px !important;\r\n    font-family: \"Open Sans\", sans-serif;\r\n  }\r\n\r\n  .flip-chevorn-up {\r\n    transform: rotate(180deg);\r\n  }\r\n\r\n  // Learn how to variable\r\n\r\n  .doc-text:hover {\r\n    color: black;\r\n  }\r\n\r\n  .doc-text {\r\n    color: $body;\r\n    font-size: 14px;\r\n    line-height: 22px;\r\n  }\r\n\r\n  .doc-container {\r\n    display: flex;\r\n    padding: 0.5rem;\r\n    background-color: $sidebar;\r\n    align-items: center;\r\n  }\r\n\r\n  .flip-transition {\r\n    transition: transform 0.5s ease;\r\n    display: inline-block;\r\n  }\r\n\r\n  .expansion-panel-transition {\r\n    transition: background-color 1s ease;\r\n  }\r\n\r\n  .expansion-panel-opened {\r\n    background-color: #fafafa;\r\n  }\r\n\r\n  .chevorn-margin-left {\r\n    margin-left: auto;\r\n    margin-right: -6px;\r\n  }\r\n\r\n  mat-expansion-panel-header {\r\n    padding-top: 15px;\r\n  }\r\n\r\n  .expansion-panel-body {\r\n    padding-bottom: 25px;\r\n    margin-top: -5px;\r\n  }\r\n\r\n  .mat-expansion-panel-spacing {\r\n    margin: 0px;\r\n  }\r\n\r\n  .panel-padding {\r\n    padding: 0.9375rem;\r\n  }\r\n}\r\n\r\n.take-remaining-height-in-flex-column {\r\n  flex: 1;\r\n}\r\n\r\n@keyframes spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.spin-animation {\r\n  animation-name: spin;\r\n  animation-duration: 1s;\r\n  animation-iteration-count: infinite;\r\n  animation-timing-function: linear;\r\n}\r\n\r\n.mat-expansion-panel {\r\n  border-radius: 0px;\r\n  box-shadow: unset;\r\n}\r\n\r\n::ng-deep .tooltip-300 ~ .tooltip .tooltip-inner {\r\n  max-width: 300px;\r\n  min-width: 300px;\r\n}\r\n",
                    "styleUrl": "./edit-step-accodion.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 57,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "accessors": {
                "stepArtifactCacheKeyAndUrl": {
                    "name": "stepArtifactCacheKeyAndUrl",
                    "setSignature": {
                        "name": "stepArtifactCacheKeyAndUrl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "urlAndCacheKey",
                                "type": "literal type | null",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 42,
                        "jsdoctags": [
                            {
                                "name": "urlAndCacheKey",
                                "type": "literal type | null",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "selectedStep": {
                    "name": "selectedStep",
                    "setSignature": {
                        "name": "selectedStep",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "step",
                                "type": "FlowItem",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 51,
                        "jsdoctags": [
                            {
                                "name": "step",
                                "type": "FlowItem",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "StepTypes": {
                    "name": "StepTypes",
                    "getSignature": {
                        "name": "StepTypes",
                        "type": "",
                        "returnType": "",
                        "line": 143
                    }
                },
                "TriggerTypes": {
                    "name": "TriggerTypes",
                    "getSignature": {
                        "name": "TriggerTypes",
                        "type": "",
                        "returnType": "",
                        "line": 146
                    }
                }
            },
            "templateData": "<div class=\"edit-step-accordion-container d-column\">\r\n  <form class=\"w-100\" [formGroup]=\"stepForm\">\r\n    <mat-accordion [hideToggle]=\"true\">\r\n      <mat-expansion-panel #descriptionPanel (closed)=\"closed(0)\" (opened)=\"setOpenedIndex(0)\"\r\n        class=\"expansion-panel-transition\" [expanded]=\"_selectedStep.type === TriggerTypes.MANUAL\"\r\n        [class.expansion-panel-opened]=\"openedIndex === 0\">\r\n        <mat-expansion-panel-header class=\"panel-padding\">\r\n          <mat-panel-title>\r\n            <label class=\"expansion-panel-label\">Description </label>\r\n            <div class=\"ml-auto\">\r\n              <fa-icon [icon]=\"faChevornDown\" class=\"flip-transition chevorn-margin-left\"\r\n                [class.flip-chevorn-up]=\"openedIndex === 0\"></fa-icon>\r\n            </div>\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n\r\n\r\n        <ng-container *ngIf=\"_selectedStep.type !== TriggerTypes.MANUAL; else noDelayInExpansion\">\r\n          <div class=\"panel-padding\" *ngIf=\"delayExpansionPanelRendering$ | async\">\r\n            <app-describe-form formControlName=\"describe\"></app-describe-form>\r\n          </div>\r\n        </ng-container>\r\n        <ng-template #noDelayInExpansion>\r\n          <div class=\"panel-padding\" >\r\n            <app-describe-form formControlName=\"describe\"></app-describe-form>\r\n          </div>\r\n        </ng-template>\r\n\r\n      </mat-expansion-panel>\r\n      <mat-expansion-panel #InputPanel (closed)=\"closed(1)\" (opened)=\"setOpenedIndex(1)\"\r\n        class=\"expansion-panel-transition\" [class.expansion-panel-opened]=\"openedIndex === 1\" [expanded]=\"true\"\r\n        *ngIf=\"_selectedStep.type !== TriggerTypes.MANUAL\">\r\n        <mat-expansion-panel-header class=\"panel-padding\">\r\n          <mat-panel-title>\r\n            <label class=\"expansion-panel-label\">Input </label>\r\n            <div class=\"ml-auto\">\r\n              <span class=\"text-danger mr-3\" hidden> 1 Invalid </span>\r\n              <fa-icon [icon]=\"faChevornDown\" class=\"flip-transition chevorn-margin-left\"\r\n                [class.flip-chevorn-up]=\"openedIndex === 1\"></fa-icon>\r\n            </div>\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <div class=\"panel-padding expansion-panel-body\">\r\n          <p class=\"my-2 doc-container\" placement=\"bottom\" matTooltip=\"\r\n          If you want to use a config variable, just write ${configs.your_config_key} in any step fields and to refer to an output from a previous step, write: ${step_name.variable_name}.\r\n        \" >\r\n            <fa-icon class=\"mr-2 info-icon\" [icon]=\"faInfoCircle\" ></fa-icon>\r\n            <span >Learn how to use variables</span>\r\n          </p>\r\n          <ng-container *ngTemplateOutlet=\"inputFormSelection\"></ng-container>\r\n        </div>\r\n      </mat-expansion-panel>\r\n    </mat-accordion>\r\n  </form>\r\n</div>\r\n\r\n<ng-container *ngIf=\"autoSaveListener$ | async\"></ng-container>\r\n\r\n<ng-container *ngIf=\"displayNameChangedListener$ | async\"></ng-container>\r\n<ng-container *ngIf=\"readOnly$ | async\"></ng-container>\r\n<ng-template #inputFormSelection>\r\n  <div [formGroup]=\"stepForm\">\r\n    <ng-container [ngSwitch]=\"_selectedStep.type\">\r\n      <app-schedule-trigger-input-form *ngSwitchCase=\"TriggerTypes.SCHEDULE\" formControlName=\"input\">\r\n      </app-schedule-trigger-input-form>\r\n      <app-event-trigger-input-form *ngSwitchCase=\"TriggerTypes.EVENT\" formControlName=\"input\">\r\n      </app-event-trigger-input-form>\r\n      <app-storage-step-input-form *ngSwitchCase=\"StepTypes.STORAGE\" formControlName=\"input\">\r\n      </app-storage-step-input-form>\r\n      <app-response-step-input-form *ngSwitchCase=\"StepTypes.RESPONSE\" formControlName=\"input\">\r\n      </app-response-step-input-form>\r\n      <app-loop-step-input-form *ngSwitchCase=\"StepTypes.LOOP_ON_ITEMS\" formControlName=\"input\">\r\n      </app-loop-step-input-form>\r\n      <app-code-step-input-form *ngSwitchCase=\"StepTypes.CODE\" formControlName=\"input\" [stepCacheKey]=\"stepCacheKey!\"\r\n        [stepArtifact$]=\"codeArtifact$!\">\r\n      </app-code-step-input-form >\r\n      <app-remote-flow-input-form *ngSwitchCase=\"StepTypes.REMOTE_FLOW\" formControlName=\"input\" >\r\n      </app-remote-flow-input-form>\r\n    </ng-container>\r\n\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "EmailRegistrationComponent",
            "id": "component-EmailRegistrationComponent-ea205b54102ccd302de0b0e6cc872d57745675cfa872ea6750a4ecf42fbaf61886d87d7af88b9aca3042acd15b87297f85af9cf66ef2b745cdd5f28fc7f94472",
            "file": "src/app/layout/auth-layout/pages/email-registration/email-registration.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-email-registration",
            "styleUrls": [
                "./email-registration.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./email-registration.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeStep",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "animationDone",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "authenticationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationService",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "companySizeOptions",
                    "defaultValue": "[\n\t\t{ label: 'Personal Use', value: OrganizationSize.PERSONAL_USE },\n\t\t{ label: '1-5 employees', value: OrganizationSize.SIZE_1_TO_5 },\n\t\t{ label: '5-10 employees', value: OrganizationSize.SIZE_5_TO_10 },\n\t\t{ label: '10-50 employees', value: OrganizationSize.SIZE_10_TO_50 },\n\t\t{ label: '50-100 employees', value: OrganizationSize.SIZE_50_TO_100 },\n\t\t{ label: 'More', value: OrganizationSize.MORE_THAN_100 },\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "emailExists",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "jwtHelperService",
                    "defaultValue": "new JwtHelperService()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "JwtHelperService",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "registrationForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "tokenError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [
                {
                    "name": "createOrReturnFirstOrganization",
                    "args": [
                        {
                            "name": "orgs",
                            "type": "Organization[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "companyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "companySize",
                            "type": "OrganizationSize",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "orgs",
                            "type": "Organization[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "companyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "companySize",
                            "type": "OrganizationSize",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPasswordError",
                    "args": [
                        {
                            "name": "errorName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "errorName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isPasswordInputIsFocused",
                    "args": [
                        {
                            "name": "passwordInputElement",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "passwordInputElement",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "passwordFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "signUp",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../../../common-layout/service/authentication.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { StatusCodes } from 'http-status-codes';\nimport { fadeInUp400ms } from '../../../common-layout/animation/fade-in-up.animation';\nimport { NavigationService } from '../../../dashboard-layout/service/navigation.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { freeMailProviders } from '../consts';\nimport {\n\tcontainsLowercaseCharacter,\n\tcontainsNumber,\n\tcontainsSpecialCharacter,\n\tcontainsUppercaseCharacter,\n\tphoneNumberValidation,\n} from 'src/app/layout/common-layout/validators';\nimport { OrganizationService } from '../../../common-layout/service/organization.service';\nimport { of, switchMap, tap } from 'rxjs';\nimport { Organization } from '../../../common-layout/model/organisation.interface';\nimport { OrganizationSize } from '../../../common-layout/model/enum/organization-size';\n\n@Component({\n\tselector: 'app-email-registration',\n\ttemplateUrl: './email-registration.component.html',\n\tstyleUrls: ['./email-registration.component.scss'],\n\tanimations: [fadeInUp400ms],\n\tencapsulation: ViewEncapsulation.None,\n})\nexport class EmailRegistrationComponent implements OnInit {\n\tregistrationForm: FormGroup;\n\tsubmitted = false;\n\tloading = false;\n\ttokenError = false;\n\temailExists = false;\n\tactiveStep = 0;\n\tanimationDone = false;\n\tcompanySizeOptions = [\n\t\t{ label: 'Personal Use', value: OrganizationSize.PERSONAL_USE },\n\t\t{ label: '1-5 employees', value: OrganizationSize.SIZE_1_TO_5 },\n\t\t{ label: '5-10 employees', value: OrganizationSize.SIZE_5_TO_10 },\n\t\t{ label: '10-50 employees', value: OrganizationSize.SIZE_10_TO_50 },\n\t\t{ label: '50-100 employees', value: OrganizationSize.SIZE_50_TO_100 },\n\t\t{ label: 'More', value: OrganizationSize.MORE_THAN_100 },\n\t];\n\tprivate jwtHelperService: JwtHelperService = new JwtHelperService();\n\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate navigationService: NavigationService,\n\t\tprivate organizationService: OrganizationService,\n\t\tpublic authenticationService: AuthenticationService\n\t) {\n\t\tthis.registrationForm = this.formBuilder.group({\n\t\t\tfirstName: ['', [Validators.required]],\n\t\t\tlastName: ['', [Validators.required]],\n\t\t\ttoken: ['', [Validators.required]],\n\t\t\tcompany: ['', [Validators.required]],\n\t\t\tpassword: [\n\t\t\t\t'',\n\t\t\t\t[\n\t\t\t\t\tValidators.required,\n\t\t\t\t\tValidators.minLength(8),\n\t\t\t\t\tValidators.maxLength(64),\n\t\t\t\t\tcontainsSpecialCharacter(),\n\t\t\t\t\tcontainsUppercaseCharacter(),\n\t\t\t\t\tcontainsLowercaseCharacter(),\n\t\t\t\t\tcontainsNumber(),\n\t\t\t\t],\n\t\t\t],\n\t\t\tcompanySize: [, [Validators.required]],\n\t\t\tphoneNumber: ['', [phoneNumberValidation()]],\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.navigationService.setTitle('Email Registration');\n\t\tthis.route.params.subscribe(value => {\n\t\t\tthis.registrationForm.controls['token'].setValue(value['token']);\n\t\t\tconst email: string = this.jwtHelperService.decodeToken(value['token'])['sub'];\n\t\t\tconst emailDomain = email.split('@')[1];\n\t\t\tif (!freeMailProviders.includes(emailDomain)) {\n\t\t\t\tthis.registrationForm.controls['company'].setValue(emailDomain.split('.')[0]);\n\t\t\t}\n\t\t});\n\t}\n\n\tpasswordFocus(event) {\n\t\tconsole.log(event);\n\t}\n\n\tsignUp() {\n\t\t//WTF\n\t\tthis.submitted = true;\n\t\tif (this.registrationForm.valid && !this.loading) {\n\t\t\tthis.loading = true;\n\t\t\tconst request = this.registrationForm.value;\n\t\t\tthis.authenticationService\n\t\t\t\t.signUp(request)\n\t\t\t\t.pipe(\n\t\t\t\t\ttap(response => {\n\t\t\t\t\t\tthis.authenticationService.saveToken(response);\n\t\t\t\t\t\tthis.authenticationService.saveUser(response);\n\t\t\t\t\t}),\n\t\t\t\t\tswitchMap(() => {\n\t\t\t\t\t\treturn this.organizationService.list().pipe(\n\t\t\t\t\t\t\tswitchMap(orgs => {\n\t\t\t\t\t\t\t\treturn this.createOrReturnFirstOrganization(orgs, request.company, request.companySize);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.subscribe({\n\t\t\t\t\tnext: () => {\n\t\t\t\t\t\tthis.activeStep = 1;\n\t\t\t\t\t},\n\t\t\t\t\terror: (error: HttpErrorResponse) => {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\tthis.loading = false;\n\t\t\t\t\t\tif (error.status === StatusCodes.UNAUTHORIZED) {\n\t\t\t\t\t\t\tthis.tokenError = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (error.status === StatusCodes.CONFLICT) {\n\t\t\t\t\t\t\tthis.emailExists = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t}\n\t}\n\tcreateOrReturnFirstOrganization(orgs: Organization[], companyName: string, companySize: OrganizationSize) {\n\t\tif (orgs.length > 0) {\n\t\t\treturn of(orgs[0]);\n\t\t} else {\n\t\t\treturn this.organizationService.create({\n\t\t\t\tname: companyName,\n\t\t\t\tsize: companySize,\n\t\t\t});\n\t\t}\n\t}\n\n\tgetPasswordError(errorName: string) {\n\t\treturn this.registrationForm.get('password')?.hasError(errorName);\n\t}\n\n\tisPasswordInputIsFocused(passwordInputElement: HTMLInputElement) {\n\t\treturn passwordInputElement == document.activeElement;\n\t}\n\tget companySizeControl() {\n\t\treturn this.registrationForm.get('companySize');\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n$multiplier-height: 1.2;\r\n\r\n.auth-form-title {\r\n  font-weight: 600;\r\n  color: $title;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 1.563rem;\r\n}\r\n\r\n\r\n.auth-button {\r\n  padding: 0.5rem 0rem;\r\n  border-radius: 4px;\r\n  transition: all 0.3s ease;\r\n  font-weight: 600;\r\n  border: 0px;\r\n  &:focus {\r\n    outline: 1px;\r\n  }\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.auth-links-container {\r\n  margin-top: 1.875rem;\r\n  color: $description;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.auth-single-row-controls-gap {\r\n  gap: 0.938rem;\r\n}\r\n\r\n.require-astrisk {\r\n  color: $danger;\r\n}\r\n\r\n.password-control-group {\r\n  position: relative;\r\n}\r\n\r\n.password-validation-dropdown-menu {\r\n  min-width: 133px;\r\n  padding: 10px;\r\n  left: -166px !important;\r\n  top: 6px !important;\r\n}\r\n\r\n.password-validation-list {\r\n  gap: 5px;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n  .grey-check {\r\n    display: none;\r\n  }\r\n  color: $body;\r\n\r\n  .invalid-password-condition {\r\n    .grey-check {\r\n      display: unset;\r\n    }\r\n    .green-check {\r\n      display: none;\r\n    }\r\n    color: $description;\r\n  }\r\n}\r\n\r\n.card {\r\n  border: 1px solid $dividers;\r\n}\r\n.form-margin {\r\n  margin: 0px 5px;\r\n}\r\n.email-registration {\r\n  .mat-tab-body-wrapper {\r\n    overflow: visible !important;\r\n  }\r\n  .mat-tab-body {\r\n    overflow: visible !important;\r\n  }\r\n\r\n  .mat-tab-body-content {\r\n    overflow: visible !important;\r\n  }\r\n}\r\n\r\n\r\n.check-icon{\r\n  margin-right: 0.25rem;\r\n}\r\n",
                    "styleUrl": "./email-registration.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "organizationService",
                        "type": "OrganizationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "companySizeControl": {
                    "name": "companySizeControl",
                    "getSignature": {
                        "name": "companySizeControl",
                        "type": "",
                        "returnType": "",
                        "line": 149
                    }
                }
            },
            "templateData": "<div class=\"form-margin\" [hidden]=\"activeStep !== 0\">\r\n  <div class=\"auth-form-title\">Get Started!</div>\r\n  <form [formGroup]=\"registrationForm\" (ngSubmit)=\"signUp()\">\r\n    <div class=\"d-flex auth-single-row-controls-gap\">\r\n      <div class=\"form-group\">\r\n        <label class=\"form-text\" for=\"firstName\"\r\n          >First Name <span class=\"require-astrisk\">*</span></label\r\n        >\r\n        <input\r\n          autofocus=\"true\"\r\n          id=\"firstName\"\r\n          class=\"form-control\"\r\n          formControlName=\"firstName\"\r\n          placeholder=\"John\"\r\n          type=\"text\"\r\n        />\r\n        <p\r\n          @fadeInUp\r\n          *ngIf=\"\r\n            submitted && registrationForm.get('firstName')?.hasError('required')\r\n          \"\r\n          class=\"invalid-input\"\r\n        >\r\n          First name is required\r\n        </p>\r\n      </div>\r\n      <div class=\"form-group flex-grow-1\">\r\n        <label class=\"form-text\" for=\"lastName\"\r\n          >Last Name <span class=\"require-astrisk\">*</span></label\r\n        >\r\n        <input\r\n          id=\"lastName\"\r\n          class=\"form-control\"\r\n          formControlName=\"lastName\"\r\n          placeholder=\"Doe\"\r\n          type=\"text\"\r\n        />\r\n        <p\r\n          @fadeInUp\r\n          *ngIf=\"\r\n            submitted && registrationForm.get('lastName')?.hasError('required')\r\n          \"\r\n          class=\"invalid-input\"\r\n        >\r\n          Last name is required\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"d-flex auth-single-row-controls-gap\">\r\n      <div class=\"form-group\">\r\n        <label class=\"form-text\" for=\"company\"\r\n          >Company Name <span class=\"require-astrisk\">*</span></label\r\n        >\r\n        <input\r\n          id=\"company\"\r\n          class=\"form-control\"\r\n          formControlName=\"company\"\r\n          placeholder=\"Awesome Company\"\r\n          type=\"text\"\r\n        />\r\n        <p\r\n          @fadeInUp\r\n          *ngIf=\"\r\n            submitted && registrationForm.get('company')?.hasError('required')\r\n          \"\r\n          class=\"invalid-input\"\r\n        >\r\n          Company name is required\r\n        </p>\r\n      </div>\r\n      <div class=\"form-group flex-grow-1\">\r\n        <label class=\"form-text\" for=\"companySize\"\r\n          >Company Size <span class=\"require-astrisk\">*</span></label\r\n        >\r\n        <ng-select\r\n          [items]=\"companySizeOptions\"\r\n          bindLabel=\"label\"\r\n          bindValue=\"value\"\r\n          id=\"companySize\"\r\n          formControlName=\"companySize\"\r\n          [searchable]=\"false\"\r\n          [clearable]=\"false\"\r\n          placeholder=\"Please select...\"\r\n        >\r\n          <ng-template ng-option-tmp let-item=\"item\">\r\n            <div class=\"d-flex option-container\">\r\n              <div class=\"flex-grow-1\">{{ item.label }}</div>\r\n              <svg-icon\r\n                *ngIf=\"item.value === companySizeControl?.value\"\r\n                src=\"assets/img/custom/check.svg\"\r\n                class=\"check-icon\"\r\n                [applyClass]=\"true\"\r\n              >\r\n              </svg-icon>\r\n            </div>\r\n          </ng-template>\r\n        </ng-select>\r\n        <p\r\n          @fadeInUp\r\n          *ngIf=\"\r\n            submitted &&\r\n            registrationForm.get('companySize')?.hasError('required')\r\n          \"\r\n          class=\"invalid-input\"\r\n        >\r\n          Company size is required\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label class=\"form-text\" for=\"phoneNumber\">Phone Number </label>\r\n      <input\r\n        id=\"phoneNumber\"\r\n        class=\"form-control\"\r\n        formControlName=\"phoneNumber\"\r\n        placeholder=\"Enter your phone number\"\r\n        type=\"tel\"\r\n      />\r\n      <p\r\n        @fadeInUp\r\n        *ngIf=\"\r\n          submitted &&\r\n          registrationForm.get('phoneNumber')?.hasError('invalidNumber')\r\n        \"\r\n        class=\"invalid-input\"\r\n      >\r\n        Phone number is invalid\r\n      </p>\r\n    </div>\r\n    <div\r\n      class=\"form-group password-control-group\"\r\n      dropdown\r\n      #dropdown=\"bs-dropdown\"\r\n      triggers=\"mouseover\"\r\n      (mouseout)=\"\r\n        isPasswordInputIsFocused(passwordInput)\r\n          ? (dropdown.isOpen = true)\r\n          : (dropdown.isOpen = false)\r\n      \"\r\n    >\r\n      <label class=\"form-text\" for=\"password\"\r\n        >Password <span class=\"require-astrisk\">*</span></label\r\n      >\r\n      <input\r\n        #passwordInput\r\n        id=\"password\"\r\n        class=\"form-control\"\r\n        formControlName=\"password\"\r\n        placeholder=\"Enter your password\"\r\n        type=\"password\"\r\n        (focus)=\"dropdown.isOpen = true\"\r\n        (focusout)=\"dropdown.isOpen = false\"\r\n      />\r\n      <div\r\n        *dropdownMenu\r\n        class=\"dropdown-menu dropdown-menu-left password-validation-dropdown-menu\"\r\n        role=\"menu\"\r\n      >\r\n        <div class=\"d-column password-validation-list\">\r\n          <div\r\n            class=\"d-flex\"\r\n            [class.invalid-password-condition]=\"getPasswordError('lowercase')\"\r\n          >\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 18, height: 18 }\"\r\n              src=\"assets/img/custom/check-invalid.svg\"\r\n              class=\"check-icon grey-check\"\r\n            >\r\n            </svg-icon>\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 18, height: 18 }\"\r\n              src=\"assets/img/custom/check-correct.svg\"\r\n              class=\"check-icon green-check\"\r\n            >\r\n            </svg-icon>\r\n\r\n            Lowercase\r\n          </div>\r\n          <div\r\n            class=\"d-flex\"\r\n            [class.invalid-password-condition]=\"getPasswordError('uppercase')\"\r\n          >\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 18, height: 18 }\"\r\n              src=\"assets/img/custom/check-invalid.svg\"\r\n              class=\"check-icon grey-check\"\r\n            >\r\n            </svg-icon>\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 18, height: 18 }\"\r\n              src=\"assets/img/custom/check-correct.svg\"\r\n              class=\"check-icon green-check\"\r\n            >\r\n            </svg-icon>\r\n\r\n            Uppercase\r\n          </div>\r\n          <div\r\n            class=\"d-flex\"\r\n            [class.invalid-password-condition]=\"\r\n              getPasswordError('specialCharacter')\r\n            \"\r\n          >\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 18, height: 18 }\"\r\n              src=\"assets/img/custom/check-invalid.svg\"\r\n              class=\"check-icon grey-check\"\r\n            >\r\n            </svg-icon>\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 18, height: 18 }\"\r\n              src=\"assets/img/custom/check-correct.svg\"\r\n              class=\"check-icon green-check\"\r\n            >\r\n            </svg-icon>\r\n            Special Character\r\n          </div>\r\n          <div\r\n            class=\"d-flex\"\r\n            [class.invalid-password-condition]=\"getPasswordError('number')\"\r\n          >\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 18, height: 18 }\"\r\n              src=\"assets/img/custom/check-invalid.svg\"\r\n              class=\"check-icon grey-check\"\r\n            >\r\n            </svg-icon>\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 18, height: 18 }\"\r\n              src=\"assets/img/custom/check-correct.svg\"\r\n              class=\"check-icon green-check\"\r\n            >\r\n            </svg-icon>\r\n            Number\r\n          </div>\r\n          <div\r\n            class=\"d-flex\"\r\n            [class.invalid-password-condition]=\"\r\n              getPasswordError('maxlength') ||\r\n              getPasswordError('minlength') ||\r\n              getPasswordError('required')\r\n            \"\r\n          >\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 18, height: 18 }\"\r\n              src=\"assets/img/custom/check-invalid.svg\"\r\n              class=\"check-icon grey-check\"\r\n            >\r\n            </svg-icon>\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 18, height: 18 }\"\r\n              src=\"assets/img/custom/check-correct.svg\"\r\n              class=\"check-icon green-check\"\r\n            >\r\n            </svg-icon>\r\n            8-64 Characters\r\n          </div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n      <p @fadeInUp *ngIf=\"submitted\" class=\"invalid-input\">\r\n        <ng-container\r\n          *ngIf=\"\r\n            registrationForm.get('password')?.getError('required');\r\n            else weakPasswordError\r\n          \"\r\n        >\r\n          Password is required\r\n        </ng-container>\r\n        <ng-template #weakPasswordError>\r\n          <ng-container *ngIf=\"registrationForm.get('password')?.invalid\">\r\n            Password is weak\r\n          </ng-container>\r\n        </ng-template>\r\n      </p>\r\n      <p @fadeInUp class=\"invalid-input text-center\" *ngIf=\"emailExists\">\r\n        You have already registered with this email.\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"text-center\">\r\n      <app-button\r\n        [loading]=\"loading\"\r\n        (buttonClicked)=\"signUp()\"\r\n        btnColor=\"primary\"\r\n        [fullWidthOfContainer]=\"true\"\r\n      >\r\n      Sign up\r\n      </app-button>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<app-on-boarding-form *ngIf=\"activeStep === 1\"></app-on-boarding-form>\r\n"
        },
        {
            "name": "EmbedModalComponent",
            "id": "component-EmbedModalComponent-ca1e608a6f4ebe44427f3355a8d31a0da81710545eccdcad83f1de89969ef0ecdc593a474ed8a83cdc6e6e8d07a14082e9038a726d96d5803cd88a3a16839f0d",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-builder-header/embed-modal/embed-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-embed-modal",
            "styleUrls": [
                "./embed-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./embed-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "codeEditorOptions",
                    "defaultValue": "{\n\t\tlineWrapping: true,\n\t\tlineNumbers: true,\n\t\ttheme: 'lucario',\n\t\treadOnly: 'nocursor',\n\t\tmode: 'javascript',\n\t\tautoRefresh: true,\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "disableIntegrationModalCode",
                    "defaultValue": "`activepieces.init({\n    projectId: \"PROJECT_ID\",\n    environment: \"ENVIRONMENT_NAME\",\n    token: \"AUTH_TOKEN\",\n})\n.then(() => {\n    activepieces.disableIntegration({\n        collectionId: \"COLLECTION_ID\",\n    });\n});`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "embeddedPopover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PopoverDirective",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "PopoverDirective"
                        }
                    ]
                },
                {
                    "name": "embedMarketplaceCode",
                    "defaultValue": "`activepieces.init({\n    projectId: \"PROJECT_ID\",\n    environment: \"ENVIRONMENT_NAME\",\n    token: \"AUTH_TOKEN\",\n})\n.then(() => {\n    activepieces.insertMarketplaceWidget({\n        containerId: \"CONTAINER_ID\"\n    });\n});`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "flows$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Flow[]>",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "htmlEditorOptions",
                    "defaultValue": "{\n\t\tlineWrapping: false,\n\t\tlineNumbers: true,\n\t\ttheme: 'lucario',\n\t\treadOnly: 'nocursor',\n\t\tmode: 'htmlmixed',\n\t\tautoRefresh: true,\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "installationSnippet",
                    "defaultValue": "`<script type=\"text/javascript\">\nloadActualActivepiecesSdk();var loadSdkPromise;function loadActualActivepiecesSdk(){loadSdkPromise=new Promise((resolve,reject)=>{const scriptTag=document.createElement(\"script\");scriptTag.src=\"https://cdn.activepieces.com/embedded/v1/activepieces-sdk.js\";scriptTag.onload=()=>{setActivepiecesInWindow();resolve()};scriptTag.onerror=(err)=>{reject(err)};scriptTag.async=true;document.head.append(scriptTag)})}function setActivepiecesInWindow(){const apSdk=document.createElement(\"activepieces-sdk\");document.body.append(apSdk);window.activepieces=apSdk}activepieces={};const methodNames=[\"init\",\"configureIntegration\",\"listIntegrations\",\"disableIntegration\",\"getProject\",\"isIntegrationEnabled\",\"insertCollectionWidget\",\"insertMarketplaceWidget\",\"sendEvent\",\"runFlow\",\"on\",];for(const method of methodNames){activepieces[method]=(...args)=>{return new Promise((resolve,reject)=>{loadSdkPromise.then(()=>{window.activepieces[method](...args).then((val)=>resolve(val),(err)=>reject(err))},(err)=>reject(err))})}}\n</script>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "mainIds$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "modalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": true,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "openIntegrationModalCode",
                    "defaultValue": "`activepieces.init({\n    projectId: \"PROJECT_ID\",\n    environment: \"ENVIRONMENT_NAME\",\n    token: \"AUTH_TOKEN\",\n})\n.then(() => {\n    activepieces.configureIntegration({\n        collectionId: \"COLLECTION_ID\",\n    });\n});`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "published$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "copyCode",
                    "args": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "copyId",
                    "args": [
                        {
                            "name": "id",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hideEmbedPopover",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "modalRef",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "modalRef",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Actions, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { UUID } from 'angular2-uuid';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { PopoverDirective } from 'ngx-bootstrap/popover';\nimport { forkJoin, map, Observable, take, tap } from 'rxjs';\nimport { Flow } from 'src/app/layout/common-layout/model/flow.class';\nimport { Collection } from 'src/app/layout/common-layout/model/piece.interface';\nimport { ProjectService } from 'src/app/layout/common-layout/service/project.service';\nimport { PieceAction } from 'src/app/layout/flow-builder/store/action/piece.action';\nimport { BuilderSelectors } from 'src/app/layout/flow-builder/store/selector/flow-builder.selector';\n\n@Component({\n\tselector: 'app-embed-modal',\n\ttemplateUrl: './embed-modal.component.html',\n\tstyleUrls: ['./embed-modal.component.scss'],\n})\nexport class EmbedModalComponent implements OnInit {\n\t@ViewChild(PopoverDirective) embeddedPopover: PopoverDirective;\n\tpublished$: Observable<{\n\t\tenvironmentIds: UUID[];\n\t\tcollection: Collection;\n\t}>;\n\thtmlEditorOptions = {\n\t\tlineWrapping: false,\n\t\tlineNumbers: true,\n\t\ttheme: 'lucario',\n\t\treadOnly: 'nocursor',\n\t\tmode: 'htmlmixed',\n\t\tautoRefresh: true,\n\t};\n\n\tcodeEditorOptions = {\n\t\tlineWrapping: true,\n\t\tlineNumbers: true,\n\t\ttheme: 'lucario',\n\t\treadOnly: 'nocursor',\n\t\tmode: 'javascript',\n\t\tautoRefresh: true,\n\t};\n\tdisableIntegrationModalCode = `activepieces.init({\n    projectId: \"PROJECT_ID\",\n    environment: \"ENVIRONMENT_NAME\",\n    token: \"AUTH_TOKEN\",\n})\n.then(() => {\n    activepieces.disableIntegration({\n        collectionId: \"COLLECTION_ID\",\n    });\n});`;\n\n\topenIntegrationModalCode = `activepieces.init({\n    projectId: \"PROJECT_ID\",\n    environment: \"ENVIRONMENT_NAME\",\n    token: \"AUTH_TOKEN\",\n})\n.then(() => {\n    activepieces.configureIntegration({\n        collectionId: \"COLLECTION_ID\",\n    });\n});`;\n\tembedMarketplaceCode = `activepieces.init({\n    projectId: \"PROJECT_ID\",\n    environment: \"ENVIRONMENT_NAME\",\n    token: \"AUTH_TOKEN\",\n})\n.then(() => {\n    activepieces.insertMarketplaceWidget({\n        containerId: \"CONTAINER_ID\"\n    });\n});`;\n\n\tinstallationSnippet = `<script type=\"text/javascript\">\nloadActualActivepiecesSdk();var loadSdkPromise;function loadActualActivepiecesSdk(){loadSdkPromise=new Promise((resolve,reject)=>{const scriptTag=document.createElement(\"script\");scriptTag.src=\"https://cdn.activepieces.com/embedded/v1/activepieces-sdk.js\";scriptTag.onload=()=>{setActivepiecesInWindow();resolve()};scriptTag.onerror=(err)=>{reject(err)};scriptTag.async=true;document.head.append(scriptTag)})}function setActivepiecesInWindow(){const apSdk=document.createElement(\"activepieces-sdk\");document.body.append(apSdk);window.activepieces=apSdk}activepieces={};const methodNames=[\"init\",\"configureIntegration\",\"listIntegrations\",\"disableIntegration\",\"getProject\",\"isIntegrationEnabled\",\"insertCollectionWidget\",\"insertMarketplaceWidget\",\"sendEvent\",\"runFlow\",\"on\",];for(const method of methodNames){activepieces[method]=(...args)=>{return new Promise((resolve,reject)=>{loadSdkPromise.then(()=>{window.activepieces[method](...args).then((val)=>resolve(val),(err)=>reject(err))},(err)=>reject(err))})}}\n</script>`;\n\tflows$: Observable<Flow[]>;\n\tmodalRef?: BsModalRef;\n\tmainIds$: Observable<{ projectId: UUID; collectionId: UUID }>;\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate modalService: BsModalService,\n\t\tprivate projectService: ProjectService,\n\t\tprivate store: Store,\n\t\tprivate snackbar: MatSnackBar\n\t) {}\n\tngOnInit(): void {\n\t\tthis.published$ = this.actions$.pipe(\n\t\t\tofType(PieceAction.publishCollectionSuccess),\n\t\t\ttap(({ collection }) => {\n\t\t\t\tif (collection.versionsList.length == 1) {\n\t\t\t\t\tthis.embeddedPopover.show();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.mainIds$ = forkJoin({\n\t\t\tproject: this.projectService.selectedProjectAndTakeOne(),\n\t\t\tcollectionId: this.store.select(BuilderSelectors.selectCurrentCollectionId).pipe(take(1)),\n\t\t}).pipe(\n\t\t\tmap(res => {\n\t\t\t\treturn { projectId: res.project.id, collectionId: res.collectionId };\n\t\t\t})\n\t\t);\n\t\tthis.flows$ = this.store.select(BuilderSelectors.selectFlows);\n\t}\n\topenModal(modalRef: TemplateRef<any>) {\n\t\tthis.modalRef = this.modalService.show(modalRef, { class: 'modal-dialog-centered' });\n\t}\n\thideEmbedPopover() {\n\t\tthis.embeddedPopover.hide();\n\t}\n\tclose() {\n\t\tthis.modalRef?.hide();\n\t}\n\tcopyId(id: UUID) {\n\t\tnavigator.clipboard.writeText(id.toString());\n\t\tthis.snackbar.open('ID copied to clipboard');\n\t}\n\tcopyCode(code: string) {\n\t\tnavigator.clipboard.writeText(code);\n\t\tthis.snackbar.open('Code copied to clipboard');\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.embed-btn\r\n{\r\n  gap:8px;\r\n\r\n}\r\n\r\n.embedded-popover-text-container\r\n{\r\n  width: 170px;\r\n  height: 66px;\r\n}\r\n.embedded-popover-btn\r\n{\r\n color: #C6ADFF !important;\r\n}\r\n.embed-modal-body\r\n{\r\n  min-width: 800px;\r\n  max-width: 800px;\r\n  min-height: 665px;\r\n  max-height: 665px;\r\n  padding:0px !important;\r\n  margin:0px !important;\r\n  gap:7px;\r\n  .code-snippets\r\n  {\r\n    min-width: 516px;\r\n    min-height: 665px;\r\n    max-height: 665px;\r\n    overflow-y:scroll;\r\n    gap:40px;\r\n    padding: 1.5625rem 1.25rem 0 1.25rem;\r\n    h6{\r\n      font-weight: 500;\r\n      font-size: 1.25rem;\r\n      line-height: 1.5rem;\r\n      color:$title;\r\n      margin-bottom: .625rem;\r\n    }\r\n    &::-webkit-scrollbar{\r\n      width: 4px;\r\n    }\r\n  }\r\n  .ids-list\r\n  {\r\n    padding:1.5625rem 0 0rem 1.25rem;\r\n    margin-right:10px;\r\n    &::-webkit-scrollbar{\r\n      width: 4px;\r\n    }\r\n    min-width: 221px;\r\n    min-height: 665px;\r\n    max-height:  665px;\r\n    overflow-y:scroll;\r\n    border-left:1px solid $dividers;\r\n    gap:20px;\r\n    label{\r\n      margin:0px !important;\r\n    }\r\n    .ids{\r\n      .form-control\r\n      {\r\n        height: 40px;\r\n        width: 133px;\r\n      }\r\n      gap:10px;\r\n      .id-card\r\n      {\r\n        background-color:#FCFCFC ;\r\n        padding:10px;\r\n        gap:5px;\r\n        width: 180px;\r\n        .id-owner\r\n        {\r\n          max-width: 131px;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n        }\r\n        .id-text\r\n        {\r\n\r\n          color:$description;\r\n          max-width: 156px;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          white-space: nowrap;\r\n        }\r\n        .copy-icon\r\n        {\r\n          svg{\r\n            width:12px;\r\n            height: 12px;;\r\n            cursor: pointer;\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.modal-footer\r\n{\r\n  border-top:1px solid $dividers !important;\r\n}\r\n\r\n.code-container\r\n{\r\n  position:relative;\r\n  .copy-icon\r\n  {\r\n    svg{\r\n      width:16px;\r\n      height: 16px;;\r\n      cursor: pointer;\r\n      path{\r\n        fill:$white;\r\n      }\r\n\r\n    }\r\n    position:absolute;\r\n    left:95%;\r\n    top:12px;\r\n    z-index:$appended-to-body-z-index ;\r\n  }\r\n}\r\n\r\n.code-description\r\n{\r\n  color:$description;\r\n  margin:.625rem 0rem 1.25rem 0rem;\r\n}\r\n\r\n#firstStep div\r\n{\r\n  margin-bottom:10px\r\n}\r\n",
                    "styleUrl": "./embed-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 81,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-button\r\nbtnColor=\"basic\"\r\nbtnStyle=\"stroked\"\r\nbtnSize=\"medium\"\r\n[outsideClick]=\"true\" (buttonClicked)=\"openModal(modalTemplate)\" #popover=\"bs-popover\" [popover]=\"embedPopover\" triggers=\"none\" containerClass=\"dark-popover\"  container=\"body\"\r\n>\r\n<div class=\"d-flex embed-btn\">\r\n  <svg-icon [svgStyle]=\"{width:15, height:16}\"   src=\"assets/img/custom/embed.svg\"  ></svg-icon> Embed\r\n</div>\r\n\r\n</app-button>\r\n\r\n<ng-template #embedPopover >\r\n  <div class=\"embedded-popover-text-container\">\r\n    Great job! Use this if you'd like to embed the integration in your app.\r\n  </div>\r\n  <app-button btnStyle=\"basic\" (buttonClicked)=\"hideEmbedPopover()\" btnColor=\"primary\" class=\"float-right \"> <div class=\"embedded-popover-btn\"> I'll do it later</div> </app-button>\r\n</ng-template>\r\n<ng-container *ngIf=\"published$ | async\"></ng-container>\r\n<ng-template #modalTemplate>\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title pull-left\">Embed Collection</h5>\r\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\" class=\"close-custom visually-hidden\" (click)=\"close()\">&times;</span>\r\n    </button>\r\n\r\n  </div>\r\n  <div class=\"modal-body embed-modal-body d-flex\">\r\n    <section class=\"code-snippets d-flex flex-column\">\r\n      <div #firstStep id=\"firstStep\">\r\n        <h6>1. Install our Javascript SDK</h6>\r\n        <div >\r\n          Make sure that you have installed Activepieces' Javascript SDK, read <a  href=\"https://docs.activepieces.com/guides/installing-sdk\" target=\"_blank\">our docs</a> to learn how to do it.\r\n        </div>\r\n        <div class=\"code-font-sm code-size-200 code-block code-container\">\r\n          <svg-icon src=\"assets/img/custom/copy.svg\" matTooltip=\"Copy\" placement=\"bottom\"  class=\"copy-icon\"  (click)=\"copyCode(installationSnippet)\" ></svg-icon>\r\n        <ngx-codemirror\r\n        class=\"size-to-content \"\r\n        [options]=\"htmlEditorOptions\"\r\n        [(ngModel)]=\"installationSnippet\"\r\n      ></ngx-codemirror>\r\n      </div>\r\n      </div>\r\n      <div #secondStep class=\"second-step\">\r\n        <h6>2. Embed this collection</h6>\r\n        <div>\r\n          <mat-tab-group\r\n          #tabGroup\r\n        >\r\n          <mat-tab>\r\n            <ng-template mat-tab-label>\r\n              <div\r\n                class=\"category-label\"\r\n                [class.category-label-active]=\"tabGroup.selectedIndex === 0\"\r\n              >\r\n               Embed Marketplace\r\n              </div>\r\n            </ng-template>\r\n            <div class=\"code-description\">\r\n              Use this code to display all published integrations on a specific environment. Integrations will show as a grid of cards.\r\n            </div>\r\n            <div class=\"code-font-sm code-size-200 code-block code-container\">\r\n              <svg-icon src=\"assets/img/custom/copy.svg\" matTooltip=\"Copy\" placement=\"bottom\"  class=\"copy-icon\" (click)=\"copyCode(embedMarketplaceCode)\"></svg-icon>\r\n              <ngx-codemirror\r\n              class=\"size-to-content\"\r\n              [options]=\"codeEditorOptions\"\r\n              [(ngModel)]=\"embedMarketplaceCode\"\r\n            ></ngx-codemirror>\r\n            </div>\r\n\r\n          </mat-tab>\r\n          <mat-tab>\r\n            <ng-template mat-tab-label>\r\n              <div\r\n                class=\"category-label\"\r\n                [class.category-label-active]=\"tabGroup.selectedIndex === 1\"\r\n              >\r\n                Show Integration Modal\r\n              </div>\r\n            </ng-template>\r\n            <div class=\"code-description\">\r\n              Use this code to manually trigger the integration modal for this integration. Best for in-flow integrations and custom UIs.\r\n             </div>\r\n             <div class=\"code-font-sm code-size-200 code-block code-container\">\r\n               <svg-icon src=\"assets/img/custom/copy.svg\" matTooltip=\"Copy\" placement=\"bottom\"  class=\"copy-icon\" (click)=\"copyCode(openIntegrationModalCode)\" ></svg-icon>\r\n               <ngx-codemirror\r\n               class=\"size-to-content\"\r\n               [options]=\"codeEditorOptions\"\r\n               [(ngModel)]=\"openIntegrationModalCode\"\r\n             ></ngx-codemirror>\r\n\r\n             </div>\r\n          </mat-tab>\r\n          <mat-tab>\r\n            <ng-template mat-tab-label>\r\n              <div\r\n                class=\"category-label\"\r\n                [class.category-label-active]=\"tabGroup.selectedIndex === 2\"\r\n              >\r\n                Disable Integration\r\n              </div>\r\n            </ng-template>\r\n            <div class=\"code-description\">\r\n              Use this code to manually disable this integration. If you are using the Marketplace element, users can disable integrations inside it.\r\n             </div>\r\n             <div class=\"code-font-sm code-size-200 code-block code-container\">\r\n               <svg-icon src=\"assets/img/custom/copy.svg\" matTooltip=\"Copy\" placement=\"bottom\"  class=\"copy-icon\"  (click)=\"copyCode(disableIntegrationModalCode)\" ></svg-icon>\r\n               <ngx-codemirror\r\n               class=\"size-to-content\"\r\n               [options]=\"codeEditorOptions\"\r\n               [(ngModel)]=\"disableIntegrationModalCode\"\r\n             ></ngx-codemirror>\r\n             </div>\r\n          </mat-tab>\r\n        </mat-tab-group>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <section  class=\"ids-list d-flex flex-column\">\r\n      <div class=\"ids d-flex flex-column\">\r\n        <label> Main IDs</label>\r\n        <ng-container *ngIf=\"mainIds$|async as mainIds\">\r\n          <div class=\"id-card d-flex flex-column\">\r\n            <div class=\"id-owner\">Project ID</div>\r\n            <div class=\"d-flex copy-btn-and-id-gap\">\r\n              <input readonly class=\" form-control\" [value]=\"mainIds.projectId\">\r\n              <div class=\"flex-grow-1\"></div>\r\n              <div class=\"d-flex align-items-center\">\r\n              <svg-icon src=\"assets/img/custom/copy.svg\" matTooltip=\"Copy\" placement=\"bottom\" (click)=\"copyId(mainIds.projectId)\" class=\"copy-icon\" ></svg-icon>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"id-card d-flex flex-column\">\r\n            <div class=\"id-owner\">Collection ID</div>\r\n            <div class=\"d-flex copy-btn-and-id-gap\">\r\n              <input readonly class=\" form-control\" [value]=\"mainIds.collectionId\">\r\n              <div class=\"flex-grow-1\"></div>\r\n              <div class=\"d-flex align-items-center\">\r\n              <svg-icon src=\"assets/img/custom/copy.svg\" matTooltip=\"Copy\" placement=\"bottom\" (click)=\"copyId(mainIds.collectionId)\"class=\"copy-icon\"></svg-icon>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n      <div class=\"ids d-flex flex-column\">\r\n        <label> Flows IDs</label>\r\n        <ng-container *ngIf=\"flows$|async as flows\">\r\n          <ng-container *ngFor=\"let flow of flows\">\r\n            <div class=\"id-card d-flex flex-column\">\r\n              <div class=\"id-owner\">{{flow.lastVersion?.displayName}}</div>\r\n              <div class=\"d-flex copy-btn-and-id-gap\">\r\n                <input readonly class=\" form-control\" [value]=\"flow.id\">\r\n                <div class=\"flex-grow-1\"></div>\r\n                <div class=\"d-flex align-items-center\">\r\n                  <svg-icon src=\"assets/img/custom/copy.svg\" matTooltip=\"Copy\" placement=\"bottom\" (click)=\"copyId(flow.id)\" class=\"copy-icon\"></svg-icon>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </ng-container>\r\n\r\n        </ng-container>\r\n      </div>\r\n    </section>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <app-button\r\n        btnColor=\"primary\"\r\n        (buttonClicked)=\"close()\"\r\n      >Close\r\n      </app-button>\r\n    </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "EmptyCollectionsTableComponent",
            "id": "component-EmptyCollectionsTableComponent-45a9bc093f2a763c6c63c3226ec954091765510e8bdce5a1c9f43b14a6f8f081e4541b3178a3804bcc9a169f5dca2f7a8ce516408a7bc551821c9a2049671dc5",
            "file": "src/app/layout/dashboard-layout/pages/collections/empty-collections-table/empty-collections-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-empty-collections-table",
            "styleUrls": [
                "./empty-collections-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./empty-collections-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "creatingCollection",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "piecesPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "createCollection",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UUID } from 'angular2-uuid';\nimport { PieceAccess } from 'src/app/layout/common-layout/model/enum/piece-access';\nimport { FlowService } from 'src/app/layout/common-layout/service/flow.service';\nimport { CollectionService } from 'src/app/layout/common-layout/service/collection.service';\nimport { ProjectService } from 'src/app/layout/common-layout/service/project.service';\nimport { switchMap } from 'rxjs';\n\n@Component({\n\tselector: 'app-empty-collections-table',\n\ttemplateUrl: './empty-collections-table.component.html',\n\tstyleUrls: ['./empty-collections-table.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EmptyCollectionsTableComponent {\n\tcreatingCollection = false;\n\tpiecesPage: any;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate pieceService: CollectionService,\n\t\tprivate projectService: ProjectService,\n\t\tprivate flowService: FlowService\n\t) {}\n\n\tcreateCollection() {\n\t\tif (!this.creatingCollection) {\n\t\t\tthis.creatingCollection = true;\n\t\t\tthis.projectService\n\t\t\t\t.selectedProjectAndTakeOne()\n\t\t\t\t.pipe(\n\t\t\t\t\tswitchMap(project => {\n\t\t\t\t\t\tconst collectionNameDisplay = 'Untitled';\n\t\t\t\t\t\tconst collectionName = UUID.UUID().replaceAll('-', '_');\n\t\t\t\t\t\treturn this.pieceService.create(project.id, {\n\t\t\t\t\t\t\tname: collectionName,\n\t\t\t\t\t\t\tversion: {\n\t\t\t\t\t\t\t\tdisplayName: collectionNameDisplay,\n\t\t\t\t\t\t\t\tdescription: 'Piece Description',\n\t\t\t\t\t\t\t\tconfigs: [],\n\t\t\t\t\t\t\t\taccess: PieceAccess.PRIVATE,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.subscribe(collection => {\n\t\t\t\t\tthis.creatingCollection = false;\n\t\t\t\t\tthis.router.navigate(['/flows/', collection.id, {}]).then(() => {\n\t\t\t\t\t\tthis.flowService.showModalFlow();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.text-container {\r\n  width: 360px;\r\n}\r\n.heading {\r\n  font-weight: 600;\r\n  font-size: 1.125rem;\r\n  line-height: 1.5rem;\r\n  margin-bottom: 0.625rem;\r\n  margin-top: 1.875rem;\r\n  color: $body;\r\n}\r\n\r\n.sub-heading {\r\n  font-weight: 400;\r\n  font-size: 0.875rem;\r\n  line-height: 1.375rem;\r\n  margin-bottom: 1.875rem;\r\n  color: $description;\r\n}\r\n",
                    "styleUrl": "./empty-collections-table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "projectService",
                        "type": "ProjectService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<svg-icon src=\"/assets/img/custom/empty-collections.svg\"></svg-icon>\r\n<div class=\"text-container\">\r\n  <div class=\"heading text-center\">Create your first flow</div>\r\n  <div class=\"sub-heading text-center\">\r\n    Put Activepieces into work by creating your first flow. It’s easy to build!\r\n  </div>\r\n</div>\r\n<app-button\r\n  class=\"text-center\"\r\n  btnCSS=\"btn btn-primary\"\r\n  [loading]=\"creatingCollection\"\r\n  (buttonClicked)=\"createCollection()\"\r\n>Start building</app-button>\r\n"
        },
        {
            "name": "EnvironmentFilterComponent",
            "id": "component-EnvironmentFilterComponent-0cf44e354dd45ab0cd914a2d3bda5d1fea8165fb11741e511033b44ee1920cdc36f580f3580b1c646266fcbfdaf34427f1153b262e9542a3387647d71a6e5a04",
            "file": "src/app/layout/dashboard-layout/components/environment-filter/environment-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-environment-filter",
            "styleUrls": [
                "./environment-filter.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./environment-filter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cachedEnvironment",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "environments$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "environmentsControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "faChevronDown",
                    "defaultValue": "faChevronDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "opened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "selectedValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "wasInside",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "checkForCachedEnvironment",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "clickInside",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                },
                {
                    "name": "clickOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click'"
                        }
                    ]
                },
                {
                    "name": "getEnvironments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "itemSelected",
                    "args": [
                        {
                            "name": "item",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "refreshQueryParams",
                    "args": [
                        {
                            "name": "environmentDropdownOption",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentDropdownOption",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 79
                },
                {
                    "name": "document:click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EnvironmentService } from '../../../common-layout/service/environment.service';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { map, Observable, take } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { EnvironmentSelectors } from '../../../common-layout/store/selector/environment.selector';\nimport { Store } from '@ngrx/store';\n\n@Component({\n\tselector: 'app-environment-filter',\n\ttemplateUrl: './environment-filter.component.html',\n\tstyleUrls: ['./environment-filter.component.css'],\n})\nexport class EnvironmentFilterComponent implements OnInit {\n\tfaChevronDown = faChevronDown;\n\n\tselectedValue: any;\n\tcachedEnvironment: { value: any; label: string }[] = [];\n\tenvironments$: Observable<{\n\t\titems: { value: any; label: string }[];\n\t}>;\n\twasInside = false;\n\topened = false;\n\t//unused yet\n\tenvironmentsControl = new FormControl();\n\n\tconstructor(\n\t\tprivate environmentService: EnvironmentService,\n\t\tprivate actRoute: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate store: Store\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.getEnvironments();\n\t\tthis.checkForCachedEnvironment();\n\t}\n\n\tcheckForCachedEnvironment() {\n\t\tthis.environmentService\n\t\t\t.cachedSelectedEnvironment()\n\t\t\t.pipe(take(1))\n\t\t\t.subscribe(value => {\n\t\t\t\tif (value) {\n\t\t\t\t\tthis.selectedValue = value.name;\n\t\t\t\t\tthis.environmentsControl.setValue(value.name);\n\t\t\t\t\tthis.cachedEnvironment = [{ value: value.name, label: value.name }];\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tgetEnvironments() {\n\t\tthis.environments$ = this.store.select(EnvironmentSelectors.selectEnvironments).pipe(\n\t\t\tmap(environments => {\n\t\t\t\treturn {\n\t\t\t\t\titems: environments.map(env => {\n\t\t\t\t\t\treturn { label: env.name, value: env.name };\n\t\t\t\t\t}),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t}\n\n\trefreshQueryParams(environmentDropdownOption: { label: string; value: string }) {\n\t\tthis.selectedValue = environmentDropdownOption.value;\n\t\tthis.actRoute.queryParams.pipe(take(1)).subscribe(queryParams => {\n\t\t\tlet newQ = JSON.parse(JSON.stringify(queryParams));\n\t\t\tnewQ.environment = environmentDropdownOption.value;\n\t\t\tthis.router.navigate([], { queryParams: newQ });\n\t\t});\n\t}\n\n\titemSelected(item: { label: string; value: any }) {\n\t\treturn this.environmentsControl.value === item.value;\n\t}\n\n\t@HostListener('click')\n\tclickInside() {\n\t\tthis.wasInside = true;\n\t}\n\n\t@HostListener('document:click')\n\tclickOut() {\n\t\tif (!this.wasInside) {\n\t\t\tthis.opened = false;\n\t\t}\n\t\tthis.wasInside = false;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* .environments-dropdown {\r\n  width: 10.75rem;\r\n  max-height: 32px;\r\n} */\r\n.form-control {\r\n  padding: 0.22rem 0.625rem !important;\r\n  height: 32px;\r\n}",
                    "styleUrl": "./environment-filter.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "environmentService",
                        "type": "EnvironmentService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  [ngStyle]=\"{\r\n    width: '175px',\r\n    position: 'relative'\r\n  }\"\r\n  class=\"form-group\"\r\n>\r\n  <div\r\n    class=\"form-control\"\r\n    (click)=\"opened = !opened\"\r\n    style=\"padding: 0.625rem 0.75rem; border: 1px solid #ced4da\"\r\n  >\r\n    <span class=\"ml-1 text-default no-select\">{{\r\n      selectedValue === undefined ? \"Select Option\" : selectedValue\r\n    }}</span>\r\n    <span style=\"float: right\">\r\n      <fa-icon [icon]=\"faChevronDown\"></fa-icon>\r\n    </span>\r\n  </div>\r\n  <div\r\n    *ngIf=\"environments$ | async as optionsResult\"\r\n    class=\"dropdown-menu {{ opened ? 'show' : '' }}\"\r\n    style=\"min-width: 100%\"\r\n  >\r\n    <div *ngFor=\"let p of optionsResult.items\">\r\n      <a\r\n        *ngIf=\"!!p.label\"\r\n        class=\"dropdown-item\"\r\n        (click)=\"refreshQueryParams(p)\"\r\n      >\r\n        <span class=\"ml-1 text-default no-select\">{{ p.label }}</span>\r\n        <img\r\n          *ngIf=\"selectedValue === p.label\"\r\n          class=\"no-select float-right text-primary\"\r\n          height=\"16\"\r\n          width=\"16\"\r\n          src=\"../assets/img/custom/check.svg\"\r\n        />\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "EnvironmentsComponent",
            "id": "component-EnvironmentsComponent-cddf41529b14294786211aa848cdc011a83b305fadb34c5d025e8409cc9993a27c1f7122e1abb8fec9b2494bb8092c0d83206cb83eabc2f889009abd8f215c17",
            "file": "src/app/layout/dashboard-layout/pages/environments/environments.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-environments",
            "styleUrls": [
                "./environments.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./environments.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "environments$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ProjectEnvironment[]>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "faUsers",
                    "defaultValue": "faUsers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "loadState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeHelperService",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "titleService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Title",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { TimeHelperService } from '../../../common-layout/service/time-helper.service';\nimport { ProjectEnvironment } from '../../../common-layout/model/project-environment.interface';\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\nimport { ThemeService } from '../../../common-layout/service/theme.service';\nimport { Title } from '@angular/platform-browser';\nimport { NavigationService } from '../../service/navigation.service';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { EnvironmentSelectors } from '../../../common-layout/store/selector/environment.selector';\n\n@Component({\n\tselector: 'app-environments',\n\ttemplateUrl: './environments.component.html',\n\tstyleUrls: ['./environments.component.css'],\n})\nexport class EnvironmentsComponent implements OnInit {\n\tfaUsers = faUsers;\n\tenvironments$: Observable<ProjectEnvironment[]>;\n\tloadState$: Observable<boolean>;\n\n\tconstructor(\n\t\tpublic themeService: ThemeService,\n\t\tpublic titleService: Title,\n\t\tprivate store: Store,\n\t\tprivate navigationService: NavigationService,\n\t\tpublic timeHelperService: TimeHelperService\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.navigationService.setTitle('Environments');\n\t\tthis.environments$ = this.store.select(EnvironmentSelectors.selectEnvironments);\n\t\tthis.loadState$ = this.store.select(EnvironmentSelectors.selectEnvironmentsLoadState);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./environments.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\" table-responsive\" *ngIf=\"loadState$ | async else loading\">\r\n  <table class=\" table align-items-center table-flush\">\r\n    <thead class=\" thead-light\">\r\n    <tr>\r\n      <th scope=\"col\">Environment Name</th>\r\n      <th scope=\"col\" style=\"width: 15%;\">\r\n        Created At\r\n      </th>\r\n      <th scope=\"col\" style=\"width: 10%;\">\r\n        <app-create-new-environment-modal></app-create-new-environment-modal>\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody class=\" list\" *ngIf=\"environments$ | async as environments\">\r\n    <tr *ngFor=\"let environment of environments\">\r\n      <th scope=\"row\">\r\n        <div style=\"display: flex; flex-direction: row;\">\r\n          <div>\r\n            <div style=\"  height:100%; display: flex; justify-content: center; align-items: center;\">\r\n              <fa-icon [size]=\"'1x'\" [icon]=\"faUsers\" [styles]=\"{'color': themeService.PRIMARY_COLOR}\" class=\"mr-2\"></fa-icon>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <span>{{environment.name}}</span>\r\n          </div>\r\n        </div>\r\n      </th>\r\n      <td>\r\n        {{timeHelperService.formatDateTime(environment.epochCreationTime)}}\r\n      </td>\r\n      <td>\r\n\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<ng-template #loading>\r\n  <app-loading-skeleton></app-loading-skeleton>\r\n</ng-template>\r\n"
        },
        {
            "name": "EventsComponent",
            "id": "component-EventsComponent-ba6be44ef581ccb072544bf81afb7e04ff0eca9856e2822cf0a2add23b7c2a5344e6bb7ac9e956e3e944fdec990d84b7b32eb0c7dc4b0d731dd7b7a56417b03a",
            "file": "src/app/layout/dashboard-layout/pages/events/events.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-events",
            "styleUrls": [
                "./events.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./events.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "events$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<EventDefinition[]>",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "timeHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeHelperService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openCreateEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { EventDefinition } from '../../../common-layout/model/event.-definition.interface';\nimport { TimeHelperService } from '../../../common-layout/service/time-helper.service';\nimport { NavigationService } from '../../service/navigation.service';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { CommonSelectors } from '../../../common-layout/store/selector/common.selector';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { CreateNewEventModalComponent } from '../../../common-layout/components/create-new-event-modal/create-new-event-modal.component';\n\n@Component({\n\tselector: 'app-events',\n\ttemplateUrl: './events.component.html',\n\tstyleUrls: ['./events.component.css'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EventsComponent implements OnInit {\n\tevents$: Observable<EventDefinition[]>;\n\tbsModalRef: BsModalRef;\n\n\tconstructor(\n\t\tprivate modalService: BsModalService,\n\t\tpublic timeHelperService: TimeHelperService,\n\t\tprivate navigationService: NavigationService,\n\t\tprivate store: Store\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.navigationService.setTitle('Events');\n\t\tthis.events$ = this.store.select(CommonSelectors.selectEvents);\n\t}\n\n\topenCreateEvent() {\n\t\tthis.bsModalRef = this.modalService.show(CreateNewEventModalComponent);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".badge{\r\n  font-size: 88%;\r\n}\r\n",
                    "styleUrl": "./events.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\" table-responsive\">\r\n  <table class=\" table align-items-center table-flush\">\r\n    <thead class=\" thead-light\">\r\n    <tr>\r\n      <th scope=\"col\">Event definition</th>\r\n      <th scope=\"col\" style=\"width: 15%;\">\r\n        Created At\r\n      </th>\r\n      <th scope=\"col\" style=\"width: 10%;\">\r\n        <app-button\r\n        btnColor=\"primary\"\r\n        [fullWidthOfContainer]=\"true\"\r\n        class=\"float-right\"\r\n        (buttonClicked)=\"openCreateEvent()\"\r\n        btnSize=\"small\"\r\n      >  Create Event\r\n      </app-button>\r\n\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody class=\" list\">\r\n    <tr *ngFor=\"let event of (events$ | async)\">\r\n      <th scope=\"row\">\r\n        <div style=\"display: flex; flex-direction: row;\">\r\n          <div>\r\n            <div style=\"  height:100%; display: flex; justify-content: center; align-items: center;\">\r\n              <svg-icon src=\"assets/img/custom/lightning.svg\"\r\n                        [svgStyle]=\"{width: 24, height: 24}\" class=\"mr-2\"></svg-icon>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <span>{{event.displayName}}</span>   <span class=\"ml-3 badge badge-default text-lowercase\">{{event.name}}</span>\r\n            <span class=\"td-description mt-1\">{{event.description}}</span>\r\n          </div>\r\n        </div>\r\n      </th>\r\n      <td>\r\n        {{timeHelperService.formatDateTime(event.epochCreationTime)}}\r\n      </td>\r\n      <td>\r\n\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n"
        },
        {
            "name": "EventTriggerInputFormComponent",
            "id": "component-EventTriggerInputFormComponent-5ab36d8b9bb2a18995248f45145687ab763a712e102b37f03d5a65c6c17b98797faacb2b51c79484d8916256af164bf241bcbbba949ad381c556a8393a2b3fcd",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/event-trigger-input-form/event-trigger-input-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: EventTriggerInputFormComponent,\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, multi: true, useExisting: EventTriggerInputFormComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-event-trigger-input-form",
            "styleUrls": [
                "./event-trigger-input-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./event-trigger-input-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "events$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<DropdownOption[]>",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "eventTriggerInputForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Please select'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "updateComponentValue$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "methodsClass": [
                {
                    "name": "isEventSelected",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openNewEventModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "{ invalid: boolean; }",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "InputFormsSchema",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "InputFormsSchema",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n\tValidators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { map, Observable, tap } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\nimport { CreateNewEventModalComponent } from 'src/app/layout/common-layout/components/create-new-event-modal/create-new-event-modal.component';\nimport { TriggerType } from 'src/app/layout/common-layout/model/enum/trigger-type.enum';\nimport { DropdownOption } from 'src/app/layout/common-layout/model/fields/variable/config-settings';\nimport { selectEvents } from 'src/app/layout/common-layout/store/selector/common.selector';\nimport { InputFormsSchema } from '../input-forms-schema';\n\n@Component({\n\tselector: 'app-event-trigger-input-form',\n\ttemplateUrl: './event-trigger-input-form.component.html',\n\tstyleUrls: ['./event-trigger-input-form.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: EventTriggerInputFormComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: EventTriggerInputFormComponent,\n\t\t},\n\t],\n\tanimations: [fadeInUp400ms],\n})\nexport class EventTriggerInputFormComponent implements ControlValueAccessor {\n\teventTriggerInputForm: FormGroup;\n\tevents$: Observable<DropdownOption[]>;\n\tplaceholder = 'Please select';\n\tonChange = (value: InputFormsSchema) => {};\n\tonTouch = () => {};\n\tupdateComponentValue$: Observable<any>;\n\tconstructor(private modalService: BsModalService, private formBuilder: FormBuilder, private store: Store) {\n\t\tthis.eventTriggerInputForm = this.formBuilder.group({ eventsName: new FormControl([], Validators.required) });\n\t\tthis.updateComponentValue$ = this.eventTriggerInputForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.onChange(this.eventTriggerInputForm.value);\n\t\t\t})\n\t\t);\n\t\tthis.events$ = this.store.select(selectEvents).pipe(\n\t\t\ttap(events => {\n\t\t\t\tif (events.length === 0) {\n\t\t\t\t\tthis.placeholder = 'No events';\n\t\t\t\t} else {\n\t\t\t\t\tthis.placeholder = 'Please select';\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmap(events => {\n\t\t\t\treturn events.map(ev => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tlabel: ev.displayName,\n\t\t\t\t\t\tvalue: ev.name,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n\twriteValue(obj: InputFormsSchema): void {\n\t\tif (obj.type === TriggerType.EVENT) {\n\t\t\tthis.eventTriggerInputForm.patchValue(obj);\n\t\t}\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t}\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouch = fn;\n\t}\n\n\tvalidate() {\n\t\tif (this.eventTriggerInputForm.invalid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\n\topenNewEventModal() {\n\t\tthis.modalService.show(CreateNewEventModalComponent);\n\t}\n\tisEventSelected(eventName: string) {\n\t\tconst eventsNames: string[] = this.eventTriggerInputForm.get('eventsName')!.value;\n\t\treturn !!eventsNames.find(selectedEventName => selectedEventName === eventName);\n\t}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.eventTriggerInputForm.disable();\n\t\t} else if (this.eventTriggerInputForm.disabled) {\n\t\t\tthis.eventTriggerInputForm.enable();\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".new-event-btn\r\n{\r\n  margin-top: 0.25rem;\r\n  display: block;\r\n}\r\n",
                    "styleUrl": "./event-trigger-input-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<form [formGroup]=\"eventTriggerInputForm\" class=\"ng-submitted\">\r\n  <label for=\"events\" required>Events</label>\r\n  <ng-select id=\"events\" formControlName=\"eventsName\" [multiple]=\"true\" bindLabel=\"label\" bindValue=\"value\"\r\n    [items]=\"events$ |async\"\r\n    [placeholder]=\"placeholder\" appendTo=\"body\">\r\n    <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\r\n      <app-ng-select-tag-value-template [item]=\"item\" [clear]=\"clear\"></app-ng-select-tag-value-template>\r\n    </ng-template>\r\n    <ng-template ng-option-tmp let-item=\"item\">\r\n      <app-ng-select-item-template\r\n        [item]=\"item\"\r\n        [isSelected]=\"isEventSelected(item.value)\"\r\n      ></app-ng-select-item-template>\r\n    </ng-template>\r\n  </ng-select>\r\n  <app-button\r\n  btnColor=\"primary\"\r\n  btnStyle=\"basic\"\r\n  btnSize=\"medium\"\r\n  type=\"button\"\r\n  class=\"new-event-btn\"\r\n  (buttonClicked)=\"openNewEventModal()\"\r\n>  + New Event\r\n</app-button>\r\n  <p @fadeInUp  class=\"invalid-input\" *ngIf=\"eventTriggerInputForm.get('eventsName')!.invalid\">\r\n    Please select at least one event.\r\n  </p>\r\n\r\n</form>\r\n\r\n<ng-container *ngIf=\"updateComponentValue$|async\">\r\n\r\n</ng-container>\r\n"
        },
        {
            "name": "FilterBarComponent",
            "id": "component-FilterBarComponent-4d4e485327a6f0abeb94d872184341dddb7a0596f47fd1fec16173d777bb2e839570284297ac7233f3b8c6c41e297078d7d579230502673977fa612a2f73828f",
            "file": "src/app/layout/dashboard-layout/components/filter-bar/filter-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter-bar",
            "styleUrls": [
                "./filter-bar.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./filter-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "account",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "environment",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "instance",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'app-filter-bar',\n\ttemplateUrl: './filter-bar.component.html',\n\tstyleUrls: ['./filter-bar.component.css'],\n})\nexport class FilterBarComponent {\n\t@Input() environment = true;\n\t@Input() account = false;\n\t@Input() instance = false;\n\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".filter-bar{\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.filter-dropdown{\r\n  margin-right: 1rem; display:inline-block;\r\n}\r\n",
                    "styleUrl": "./filter-bar.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "templateData": "<div class=\"filter-bar\">\r\n  <app-environment-filter  class=\"filter-dropdown\"></app-environment-filter>\r\n  <app-accounts-filter *ngIf=\"account\" class=\"filter-dropdown\"></app-accounts-filter>\r\n  <app-instances-filter *ngIf=\"instance\" class=\"filter-dropdown\"></app-instances-filter>\r\n</div>\r\n"
        },
        {
            "name": "FirebaseProjectIdModalComponent",
            "id": "component-FirebaseProjectIdModalComponent-cc7ea71a1731aede714e86950001db109f8855b7911b550d5474d9411226f1a3ac090ab98d3be06726b9476a92f39072426cd9921eece6cbef60cd33df7185e7",
            "file": "src/app/layout/dashboard-layout/pages/authentication/firebase-project-id-modal/firebase-project-id-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-firebase-project-id-modal",
            "styleUrls": [
                "./firebase-project-id-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./firebase-project-id-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentProjectId",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "environmentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "environmentName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "firebaseProjectForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "updateSnackbarFailed$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "updateSnackbarSuccess$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ofType } from '@ngrx/effects';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { map, Observable, tap } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\nimport {\n\tupdateFirebaseProjectId,\n\tupdateFirebaseProjectIdFailed,\n\tupdateFirebaseProjectIdSuccessful,\n} from '../../../store/action/authentication.action';\n\n@Component({\n\tselector: 'app-firebase-project-id-modal',\n\ttemplateUrl: './firebase-project-id-modal.component.html',\n\tstyleUrls: ['./firebase-project-id-modal.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class FirebaseProjectIdModalComponent implements OnInit {\n\t@Input()\n\tenvironmentId: string;\n\t@Input()\n\tenvironmentName: string;\n\t@Input()\n\tcurrentProjectId: string = '';\n\tfirebaseProjectForm: FormGroup;\n\tsubmitted = false;\n\tloading = false;\n\n\tconstructor(\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate fb: FormBuilder,\n\t\tprivate modalService: BsModalService,\n\t\tprivate snackbar: MatSnackBar,\n\t\tprivate store: Store,\n\t\tprivate actionsListener$: ActionsSubject\n\t) {}\n\n\tupdateSnackbarSuccess$: Observable<void>;\n\tupdateSnackbarFailed$: Observable<void>;\n\n\tngOnInit(): void {\n\t\tthis.firebaseProjectForm = this.fb.group({\n\t\t\tprojectId: new FormControl(this.currentProjectId, Validators.required),\n\t\t});\n\n\t\t// TODO MOVE THIS TO EFFECTS\n\t\tthis.updateSnackbarFailed$ = this.actionsListener$.pipe(\n\t\t\tofType(updateFirebaseProjectIdFailed),\n\t\t\ttap(() => {\n\t\t\t\tthis.snackbar.open(`${this.environmentName} Project ID update failed`, '', {\n\t\t\t\t\tduration: undefined,\n\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t});\n\t\t\t\tthis.loading = false;\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\n\t\tthis.updateSnackbarSuccess$ = this.actionsListener$.pipe(\n\t\t\tofType(updateFirebaseProjectIdSuccessful),\n\t\t\ttap(() => {\n\t\t\t\tthis.snackbar.open(`${this.environmentName} Project ID updated successfully`);\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.modalService.hide();\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\t}\n\n\tget projectId() {\n\t\treturn this.firebaseProjectForm.get('projectId');\n\t}\n\n\tsubmit() {\n\t\tthis.submitted = true;\n\n\t\tif (this.firebaseProjectForm.valid) {\n\t\t\tthis.loading = true;\n\t\t\tthis.store.dispatch(\n\t\t\t\tupdateFirebaseProjectId({\n\t\t\t\t\tenvironmentId: this.environmentId,\n\t\t\t\t\tprojectId: this.projectId?.value,\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.description {\r\n  font-weight: 400;\r\n  font-size: 0.8125rem;\r\n  line-height: 1.375rem;\r\n  color: #8c8c8c;\r\n  margin-top: 1.25rem;\r\n}\r\n",
                    "styleUrl": "./firebase-project-id-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actionsListener$",
                        "type": "ActionsSubject",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actionsListener$",
                        "type": "ActionsSubject",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "projectId": {
                    "name": "projectId",
                    "getSignature": {
                        "name": "projectId",
                        "type": "",
                        "returnType": "",
                        "line": 73
                    }
                }
            },
            "templateData": "<div class=\"modal-header\">\r\n  <div class=\"modal-title pull-left\">{{ environmentName }} Project ID</div>\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn-close close pull-right\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form\r\n    [formGroup]=\"firebaseProjectForm\"\r\n    #projectForm=\"ngForm\"\r\n    (ngSubmit)=\"submit()\"\r\n  >\r\n    <label> Firebase Project ID </label>\r\n    <input type=\"text\" class=\"form-control\" formControlName=\"projectId\" />\r\n    <p @fadeInUp *ngIf=\"submitted && projectId?.invalid\" class=\"invalid-input\">\r\n      The Project ID is required.\r\n    </p>\r\n    <div class=\"description\">\r\n      Copy your Project ID from Firebase Console and paste it here.\r\n    </div>\r\n  </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n\r\n  <app-button\r\n  btnColor=\"basic\"\r\n  btnStyle=\"basic\"\r\n  (buttonClicked)=\"bsModalRef.hide()\"\r\n> Cancel\r\n</app-button>\r\n\r\n  <app-button\r\n    type=\"button\"\r\n    btnColor=\"primary\"\r\n    [loading]=\"loading\"\r\n    (buttonClicked)=\"projectForm.onSubmit($event)\"\r\n  >Save</app-button>\r\n</div>\r\n<ng-container *ngIf=\"updateSnackbarSuccess$ | async\"></ng-container>\r\n<ng-container *ngIf=\"updateSnackbarFailed$ | async\"></ng-container>\r\n"
        },
        {
            "name": "FlowBuilderHeaderComponent",
            "id": "component-FlowBuilderHeaderComponent-423032d55cd13a2a8b00edbc33728f2c4b3da338ba59fed1c2d7861f05f5d11b64775f86b8017a1ce2f89e09d5e2d81a66de4c16bd9357f4bfe569e4be7dff43",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-builder-header/flow-builder-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flow-builder-header",
            "styleUrls": [
                "./flow-builder-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./flow-builder-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "disablePublishButton$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "editing",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "embeddedPopover",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PopoverDirective",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "PopoverDirective"
                        }
                    ]
                },
                {
                    "name": "flowsCount$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "piece$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Collection>",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "pieceActions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ChevronDropdownOption[]>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "pieceBuilderService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PieceBuilderService",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "publishButtonDisabledTooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "saveState$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<SaveState>",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "viewMode$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [
                {
                    "name": "actionHandler",
                    "args": [
                        {
                            "name": "actionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "actionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculateCollectionNameEditorPosition",
                    "args": [
                        {
                            "name": "collectionNameEditorDiv",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ left: string; top: string; }",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "collectionNameEditorDiv",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeEditValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openSettingsSideBar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "redirectHome",
                    "args": [
                        {
                            "name": "newWindow",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newWindow",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "savePieceName",
                    "args": [
                        {
                            "name": "newPieceName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newPieceName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ConfirmDeleteModalComponent } from '../../../../common-layout/components/confirm-delete-modal/confirm-delete-modal.component';\nimport { Collection } from '../../../../common-layout/model/piece.interface';\nimport { PieceBuilderService } from '../../../service/piece-builder.service';\nimport { RightSideBarType } from '../../../../common-layout/model/enum/right-side-bar-type.enum';\nimport { ThemeService } from 'src/app/layout/common-layout/service/theme.service';\nimport { LeftSideBarType } from 'src/app/layout/common-layout/model/enum/left-side-bar-type.enum';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { PieceAction } from '../../../store/action/piece.action';\nimport { combineLatest, map, Observable, tap } from 'rxjs';\nimport { BuilderSelectors } from '../../../store/selector/flow-builder.selector';\nimport { SaveState } from '../../../store/model/enums/save-state.enum';\nimport { fadeIn400ms } from 'src/app/layout/common-layout/animation/fade-in.animations';\nimport { FlowsActions } from '../../../store/action/flows.action';\nimport {\n\tChevronDropdownOption,\n\tChevronDropdownOptionType,\n} from '../../../components/chevron-dropdown-menu/chevron-dropdown-option';\nimport { PopoverDirective } from 'ngx-bootstrap/popover';\n\n@Component({\n\tselector: 'app-flow-builder-header',\n\ttemplateUrl: './flow-builder-header.component.html',\n\tstyleUrls: ['./flow-builder-header.component.scss'],\n\tanimations: [fadeIn400ms],\n})\nexport class FlowBuilderHeaderComponent implements OnInit {\n\t@ViewChild(PopoverDirective) embeddedPopover: PopoverDirective;\n\tediting: boolean = false;\n\tbsModalRef: BsModalRef;\n\tpiece$: Observable<Collection>;\n\tflowsCount$: Observable<number>;\n\tviewMode$: Observable<boolean>;\n\tdisablePublishButton$: Observable<boolean>;\n\tsaveState$: Observable<SaveState>;\n\tpieceActions$: Observable<ChevronDropdownOption[]>;\n\tpublishButtonDisabledTooltip = '';\n\n\tconstructor(\n\t\tprivate store: Store,\n\t\tpublic themeService: ThemeService,\n\t\tprivate router: Router,\n\t\tprivate modalService: BsModalService,\n\t\tpublic pieceBuilderService: PieceBuilderService\n\t) {}\n\n\tget saveState() {\n\t\treturn SaveState;\n\t}\n\n\tngOnInit(): void {\n\t\tthis.saveState$ = this.store.select(BuilderSelectors.selectBuilderSaveState);\n\t\tthis.piece$ = this.store.select(BuilderSelectors.selectCurrentCollection);\n\t\tthis.flowsCount$ = this.store.select(BuilderSelectors.selectFlowsCount);\n\t\tthis.viewMode$ = this.store.select(BuilderSelectors.selectReadOnly);\n\t\tthis.disablePublishButton$ = combineLatest({\n\t\t\tsaving: this.store.select(BuilderSelectors.selectSavingChangeState),\n\t\t\tvalid: this.store.select(BuilderSelectors.selectCurrentFlowValidity),\n\t\t}).pipe(\n\t\t\ttap(res => {\n\t\t\t\tif (res.saving) {\n\t\t\t\t\tthis.publishButtonDisabledTooltip = 'Please wait until saving is complete';\n\t\t\t\t} else if (!res.valid) {\n\t\t\t\t\tthis.publishButtonDisabledTooltip = 'Please make sure all flows are valid';\n\t\t\t\t} else {\n\t\t\t\t\tthis.publishButtonDisabledTooltip = '';\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmap(res => {\n\t\t\t\treturn res.saving || !res.valid;\n\t\t\t})\n\t\t);\n\t\tthis.pieceActions$ = this.piece$.pipe(\n\t\t\tmap(piece => [\n\t\t\t\t{\n\t\t\t\t\tid: 'RENAME',\n\t\t\t\t\tname: 'Rename',\n\t\t\t\t\tcssClasses: '',\n\t\t\t\t\ttype: ChevronDropdownOptionType.NORMAL,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'VERSIONS',\n\t\t\t\t\tname: 'Versions',\n\t\t\t\t\tcssClasses: '',\n\t\t\t\t\ttype: ChevronDropdownOptionType.NORMAL,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'SEP_1',\n\t\t\t\t\ttype: ChevronDropdownOptionType.SEPARATOR,\n\t\t\t\t\tcssClasses: '',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'COPY_ID',\n\t\t\t\t\tname: piece.id.toString(),\n\t\t\t\t\tcssClasses: '',\n\t\t\t\t\ttype: ChevronDropdownOptionType.COPY_ID,\n\t\t\t\t},\n\t\t\t])\n\t\t);\n\t}\n\n\tactionHandler(actionId: string) {\n\t\tif (actionId === 'VERSIONS') {\n\t\t\tthis.store.dispatch(\n\t\t\t\tFlowsActions.setRightSidebar({\n\t\t\t\t\tsidebarType: RightSideBarType.COLLECTION_VERSIONS,\n\t\t\t\t\tprops: {},\n\t\t\t\t})\n\t\t\t);\n\t\t} else if (actionId === 'RENAME') {\n\t\t\tthis.editing = true;\n\t\t} else if (actionId === 'DELETE') {\n\t\t\tthis.bsModalRef = this.modalService.show(ConfirmDeleteModalComponent);\n\t\t}\n\t}\n\n\tchangeEditValue(event: boolean) {\n\t\tthis.editing = event;\n\t}\n\n\topenSettingsSideBar() {\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.setLeftSidebar({\n\t\t\t\tsidebarType: LeftSideBarType.PIECE_SETTINGS,\n\t\t\t\tprops: {},\n\t\t\t})\n\t\t);\n\t}\n\n\tsavePieceName(newPieceName: string) {\n\t\tthis.store.dispatch(PieceAction.changeName({ displayName: newPieceName }));\n\t}\n\n\tredirectHome(newWindow: boolean) {\n\t\tif (newWindow) {\n\t\t\tconst url = this.router.serializeUrl(this.router.createUrlTree([``]));\n\t\t\twindow.open(url, '_blank');\n\t\t} else {\n\t\t\tlet urlArrays = this.router.url.split('/');\n\t\t\turlArrays.splice(urlArrays.length - 1, 1);\n\t\t\tlet fixedUrl = urlArrays.join('/');\n\t\t\tthis.router.navigate([fixedUrl]);\n\t\t}\n\t}\n\n\tcalculateCollectionNameEditorPosition(collectionNameEditorDiv: HTMLElement) {\n\t\tconst rect = collectionNameEditorDiv.getBoundingClientRect();\n\t\treturn {\n\t\t\tleft: `calc(50% - ${rect.width / 2}px)`,\n\t\t\ttop: `calc(50% - ${rect.height / 2}px)`,\n\t\t};\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.navbar-container {\r\n  padding: 0.75rem 0.875rem 0.75rem 0rem !important;\r\n  position: relative;\r\n  background-color: $header;\r\n  box-shadow: 0px 1px 0px $line;\r\n}\r\n\r\n.navbar-nav {\r\n  margin-left: auto;\r\n}\r\n\r\n.dropdown-menu {\r\n  width: 100%;\r\n  margin-left: 0;\r\n}\r\n\r\n.settings-btn-margin {\r\n  margin-right: 0.875rem;\r\n}\r\n\r\n.chevron-caret-container {\r\n  margin-left: 0.938rem;\r\n}\r\n\r\n.piece-name-color {\r\n  color: $title;\r\n}\r\n\r\n.save-state-container {\r\n  margin-top: 0.3rem;\r\n  gap: 0.3125rem;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n  right: 9.8375rem;\r\n  position: absolute;\r\n  font-size: 0.8125rem;\r\n}\r\n.save-state-icon {\r\n  margin-bottom: 0.1875rem;\r\n  height: 14px;\r\n  width: 14px;\r\n}\r\n@keyframes saving-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.saving-spin-animation {\r\n  svg {\r\n    transform-origin: 7px 7px 0;\r\n    animation-name: saving-spin;\r\n    animation-duration: 1s;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n    fill: $description;\r\n  }\r\n}\r\n\r\n.hidden-save-state {\r\n  opacity: 0 !important;\r\n}\r\n\r\n.collection-name-editor {\r\n  position: absolute;\r\n  transition: left 100ms cubic-bezier(0.35, 0, 0.25, 1),\r\n    top 100ms cubic-bezier(0.35, 0, 0.25, 1);\r\n}\r\n\r\n.publish-embed-section\r\n{\r\n  gap:0.5rem;\r\n}\r\n",
                    "styleUrl": "./flow-builder-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pieceBuilderService",
                        "type": "PieceBuilderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pieceBuilderService",
                        "type": "PieceBuilderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "saveState": {
                    "name": "saveState",
                    "getSignature": {
                        "name": "saveState",
                        "type": "",
                        "returnType": "",
                        "line": 49
                    }
                }
            },
            "templateData": "<nav class=\"navbar-container navbar-expand\" *ngIf=\"piece$ | async as piece\">\r\n  <div\r\n    #collectionNameEditor\r\n    *ngIf=\"pieceActions$ | async as pipeActions\"\r\n    class=\"text-center d-flex align-items-center justify-content-center collection-name-editor\"\r\n    [ngStyle]=\"calculateCollectionNameEditorPosition(collectionNameEditor)\"\r\n  >\r\n    <app-editable-text\r\n      [editing]=\"editing\"\r\n      (editingChanges)=\"changeEditValue($event)\"\r\n      [value]=\"piece.lastVersion?.displayName\"\r\n      (valueChanges)=\"savePieceName($event)\"\r\n      [disableEditing]=\"viewMode$ | async | defaultTrue\"\r\n      [allowClick]=\"false\"\r\n      [allowDoubleClick]=\"true\"\r\n      [cssClasses]=\"'heading-h5 font-weight-bold'\"\r\n      class=\"piece-name-color\"\r\n    ></app-editable-text>\r\n    <app-chevron-dropdown-menu\r\n      [hidden]=\"\r\n        (viewMode$ | async | defaultFalse) || (flowsCount$ | async) === 0\r\n      \"\r\n      [data]=\"pipeActions\"\r\n      (selectValueChange)=\"actionHandler($event)\"\r\n      *ngIf=\"!editing\"\r\n      [useChevron]=\"true\"\r\n      class=\"chevron-caret-container\"\r\n    ></app-chevron-dropdown-menu>\r\n  </div>\r\n\r\n  <div class=\"d-flex align-items-center\">\r\n\r\n    <app-icon-button\r\n      [color]=\"themeService.BODY_COLOR\"\r\n      [hoverColor]=\"themeService.PRIMARY_COLOR\"\r\n      [width]=\"32\"\r\n      [height]=\"32\"\r\n      [iconFilename]=\"'sidebar/activepieces-small.svg'\"\r\n      class=\"settings-btn-margin\"\r\n      [tooltipText]=\"'Home'\"\r\n      (click)=\"redirectHome(false)\"\r\n      (auxclick)=\"redirectHome(true)\"\r\n    ></app-icon-button>\r\n    <div class=\"flex-grow-1\" #spacer></div>\r\n\r\n    <app-icon-button\r\n      [ngStyle]=\"{ visibility: (viewMode$ | async) ? 'hidden' : 'visible' }\"\r\n      [color]=\"themeService.BODY_COLOR\"\r\n      [hoverColor]=\"themeService.PRIMARY_COLOR\"\r\n      [iconFilename]=\"'settings.svg'\"\r\n      class=\"settings-btn-margin\"\r\n      (click)=\"openSettingsSideBar()\"\r\n    ></app-icon-button>\r\n\r\n    <div class=\"d-flex publish-embed-section\">\r\n      <app-embed-modal></app-embed-modal>\r\n      <app-publish-popover></app-publish-popover>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n\r\n"
        },
        {
            "name": "FlowBuilderTabComponent",
            "id": "component-FlowBuilderTabComponent-ec20241e25f2e6c6bfb2402c142cef00891a2634434eb2c7faea1e9af6ef75d8052c1cb7aee4fb625b7208888bfed10b02542e59b8996669f16a6c7eaf424926",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-builder-tabs/flow-builder-tab/flow-builder-tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flow-builder-tab",
            "styleUrls": [
                "./flow-builder-tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./flow-builder-tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "flow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Flow",
                    "decorators": []
                },
                {
                    "name": "parentToflowPopUp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "HTMLElement",
                    "decorators": []
                },
                {
                    "name": "readonlyMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tabSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "switchToFlow",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_flow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Flow",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "dropDownOpened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "editing",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "flowActions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ChevronDropdownOption[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "hovered",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "actionHandler",
                    "args": [
                        {
                            "name": "actionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "actionId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "containerClicked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dispatchNewName",
                    "args": [
                        {
                            "name": "newName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "newName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleHovering",
                    "args": [
                        {
                            "name": "isOnContainer",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isOnContainer",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "revertNewName",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "saveNewName",
                    "args": [
                        {
                            "name": "newName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ConfirmDeleteModalComponent } from '../../../../../common-layout/components/confirm-delete-modal/confirm-delete-modal.component';\nimport { Flow } from '../../../../../common-layout/model/flow.class';\nimport { Store } from '@ngrx/store';\nimport { FlowsActions } from '../../../../store/action/flows.action';\nimport { take } from 'rxjs';\nimport { UUID } from 'angular2-uuid';\nimport {\n\tChevronDropdownOption,\n\tChevronDropdownOptionType,\n} from '../../../../components/chevron-dropdown-menu/chevron-dropdown-option';\n\n@Component({\n\tselector: 'app-flow-builder-tab',\n\ttemplateUrl: './flow-builder-tab.component.html',\n\tstyleUrls: ['./flow-builder-tab.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FlowBuilderTabComponent {\n\tflowActions: ChevronDropdownOption[];\n\t_flow: Flow;\n\n\t@Input() set flow(_flow: Flow) {\n\t\tthis._flow = _flow;\n\t\tthis.flowActions = [\n\t\t\t{\n\t\t\t\tid: 'RENAME',\n\t\t\t\tname: 'Rename',\n\t\t\t\ttype: ChevronDropdownOptionType.NORMAL,\n\t\t\t\tcssClasses: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'DELETE',\n\t\t\t\tname: 'Delete',\n\t\t\t\ttype: ChevronDropdownOptionType.NORMAL,\n\t\t\t\tcssClasses: 'text-danger',\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'SEP_1',\n\t\t\t\ttype: ChevronDropdownOptionType.SEPARATOR,\n\t\t\t\tcssClasses: '',\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'ID',\n\t\t\t\tname: _flow.id.toString(),\n\t\t\t\ttype: ChevronDropdownOptionType.COPY_ID,\n\t\t\t\tcssClasses: '',\n\t\t\t},\n\t\t];\n\t}\n\n\tget flow(): Flow {\n\t\treturn this._flow;\n\t}\n\n\t@Input() tabSelected: boolean;\n\t@Input() parentToflowPopUp: HTMLElement;\n\t@Input() readonlyMode: boolean;\n\t@Output() switchToFlow: EventEmitter<boolean> = new EventEmitter();\n\tdropDownOpened = false;\n\n\tediting = false;\n\thovered = false;\n\tbsModalRef: BsModalRef;\n\n\tconstructor(private store: Store, private modalService: BsModalService) {}\n\n\tactionHandler(actionId: string) {\n\t\tif (actionId === 'RENAME') {\n\t\t\tthis.editing = true;\n\t\t} else if (actionId === 'DELETE') {\n\t\t\tthis.bsModalRef = this.modalService.show(ConfirmDeleteModalComponent, {\n\t\t\t\tinitialState: {\n\t\t\t\t\tentityName: this.flow.lastVersion.displayName,\n\t\t\t\t},\n\t\t\t});\n\t\t\tthis.bsModalRef.content.confirmState.pipe(take(1)).subscribe((confirm: boolean) => {\n\t\t\t\tif (confirm) {\n\t\t\t\t\tlet flowId: UUID = this.flow.id;\n\t\t\t\t\tthis.store.dispatch(FlowsActions.deleteFlow({ flowId: flowId }));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsaveNewName(newName: string) {\n\t\tif (this.flow.lastVersion.displayName == newName) {\n\t\t\tthis.revertNewName();\n\t\t} else {\n\t\t\tthis.dispatchNewName(newName);\n\t\t}\n\t}\n\n\tprivate dispatchNewName(newName: string) {\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.changeName({\n\t\t\t\tflowId: this.flow.id,\n\t\t\t\tdisplayName: newName,\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate revertNewName() {\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.changeName({\n\t\t\t\tflowId: this.flow.id,\n\t\t\t\tdisplayName: this.flow.lastVersion.displayName,\n\t\t\t})\n\t\t);\n\t}\n\n\thandleHovering(isOnContainer: boolean) {\n\t\tthis.hovered = isOnContainer;\n\t}\n\n\tcontainerClicked() {\n\t\tsetTimeout(() => {\n\t\t\tif (!this.dropDownOpened && !this.tabSelected) {\n\t\t\t\tthis.switchToFlow.emit(true);\n\t\t\t}\n\t\t}, 10);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.chevron-dropdown {\r\n  opacity: 0;\r\n  transition: all 0.3s ease;\r\n  margin-left: 0.5rem;\r\n}\r\n\r\n.show-chevron {\r\n  opacity: 1;\r\n}\r\n\r\n.tab-container {\r\n  padding: 0.438rem 1rem;\r\n}\r\n\r\n.flow-name-color {\r\n  color: $body;\r\n}\r\n",
                    "styleUrl": "./flow-builder-tab.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 65,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "flow": {
                    "name": "flow",
                    "setSignature": {
                        "name": "flow",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "_flow",
                                "type": "Flow",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 24,
                        "jsdoctags": [
                            {
                                "name": "_flow",
                                "type": "Flow",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "flow",
                        "type": "",
                        "returnType": "Flow",
                        "line": 53
                    }
                }
            },
            "templateData": "<div\r\n  class=\"d-flex tab-container positioned-relative\"\r\n  (mouseenter)=\"handleHovering(true)\"\r\n  (mouseleave)=\"handleHovering(false)\"\r\n  (click)=\"containerClicked()\"\r\n>\r\n  <app-editable-text\r\n    [allowClick]=\"false\"\r\n    [allowDoubleClick]=\"true\"\r\n    [disableEditing]=\"readonlyMode\"\r\n    [value]=\"flow?.lastVersion?.displayName\"\r\n    class=\"no-select flow-name-color\"\r\n    [editing]=\"editing\"\r\n    (valueChanges)=\"saveNewName($event)\"\r\n    (editingChanges)=\"this.editing = $event\"\r\n    [viewedTextMaxWidth]=\"'150px'\"\r\n    [style.color]=\"'#4F4F4F'\"\r\n  >\r\n  </app-editable-text>\r\n\r\n  <app-chevron-dropdown-menu\r\n    [hidden]=\"readonlyMode\"\r\n    class=\"chevron-dropdown\"\r\n    [class.show-chevron]=\"hovered || dropDownOpened || tabSelected\"\r\n    [data]=\"flowActions\"\r\n    (selectValueChange)=\"actionHandler($event)\"\r\n    *ngIf=\"!this.editing\"\r\n    [appendToBody]=\"true\"\r\n    (dropDownOpenedChanged)=\"dropDownOpened = $event\"\r\n  ></app-chevron-dropdown-menu>\r\n</div>\r\n"
        },
        {
            "name": "FlowBuilderTabsComponent",
            "id": "component-FlowBuilderTabsComponent-d8b6ce79aaf3a8874efd8805aa8131045a2d80cf3376b4c7249bd6e80a962b2baedae8ab5abf875496b41d672746de0abf88efa031e94655af97475d1aa6e12e",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-builder-tabs/flow-builder-tabs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flow-builder-tabs",
            "styleUrls": [
                "./flow-builder-tabs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./flow-builder-tabs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addFlowButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'addFlowBtn'"
                        }
                    ]
                },
                {
                    "name": "addFlowButton$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "flows$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Flow[]>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "flowSpans",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<ElementRef>",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "'flowSpan'"
                        }
                    ]
                },
                {
                    "name": "isFlowSelected$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "readOnlyMode$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "selectedFlowId$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<UUID | null>",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "viewMode$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ViewModeEnum>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "viewSingleMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "changeSelectedFlow",
                    "args": [
                        {
                            "name": "flow",
                            "type": "Flow",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flow",
                            "type": "Flow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "configsClicked",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openVersion",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "scrollFlowTabsLeft",
                    "args": [
                        {
                            "name": "tabsContainer",
                            "type": "HTMLDivElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tabsContainer",
                            "type": "HTMLDivElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollFlowTabsRight",
                    "args": [
                        {
                            "name": "tabsContainer",
                            "type": "HTMLDivElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tabsContainer",
                            "type": "HTMLDivElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToFlowTab",
                    "args": [
                        {
                            "name": "flowSpanIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowSpanIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "scrollToLastTab",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setupAddFlowButtonListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "shouldShowLeftArrow",
                    "args": [
                        {
                            "name": "tabsContainer",
                            "type": "HTMLDivElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tabsContainer",
                            "type": "HTMLDivElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shouldShowRightArrow",
                    "args": [
                        {
                            "name": "tabsContainer",
                            "type": "HTMLDivElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tabsContainer",
                            "type": "HTMLDivElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, ElementRef, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { Flow } from '../../../../common-layout/model/flow.class';\nimport { ThemeService } from '../../../../common-layout/service/theme.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { RightSideBarType } from '../../../../common-layout/model/enum/right-side-bar-type.enum';\nimport { LeftSideBarType } from 'src/app/layout/common-layout/model/enum/left-side-bar-type.enum';\nimport { exhaustMap, fromEvent, map, Observable, tap } from 'rxjs';\nimport { Store } from '@ngrx/store';\n\nimport { FlowsActions } from '../../../store/action/flows.action';\nimport { UUID } from 'angular2-uuid';\nimport { FlowService } from 'src/app/layout/common-layout/service/flow.service';\nimport { ViewModeEnum } from '../../../store/model/enums/view-mode.enum';\nimport { BuilderSelectors } from '../../../store/selector/flow-builder.selector';\nimport { FlowTemplateService } from '../../../service/flow-template.service';\n\n@Component({\n\tselector: 'app-flow-builder-tabs',\n\ttemplateUrl: './flow-builder-tabs.component.html',\n\tstyleUrls: ['./flow-builder-tabs.component.scss'],\n})\nexport class FlowBuilderTabsComponent implements OnInit, AfterViewInit {\n\tflows$: Observable<Flow[]>;\n\tbsModalRef: BsModalRef;\n\tviewMode$: Observable<ViewModeEnum>;\n\tisFlowSelected$: Observable<boolean>;\n\tviewSingleMode: boolean;\n\n\treadOnlyMode$: Observable<boolean>;\n\tselectedFlowId$: Observable<UUID | null>;\n\t@ViewChild('addFlowBtn') addFlowButton: ElementRef;\n\t@ViewChildren('flowSpan') flowSpans: QueryList<ElementRef>;\n\n\taddFlowButton$: Observable<void> = new Observable<void>();\n\n\tconstructor(\n\t\tpublic themeService: ThemeService,\n\t\tprivate flowTemplateService: FlowTemplateService,\n\t\tprivate flowService: FlowService,\n\t\tprivate store: Store\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.selectedFlowId$ = this.store.select(BuilderSelectors.selectCurrentFlowId);\n\t\tthis.isFlowSelected$ = this.store.select(BuilderSelectors.selectFlowSelectedId);\n\t\tthis.viewMode$ = this.store.select(BuilderSelectors.selectViewMode);\n\t\tthis.readOnlyMode$ = this.store.select(BuilderSelectors.selectReadOnly);\n\t\tthis.flows$ = this.store.select(BuilderSelectors.selectFlows);\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.setupAddFlowButtonListener();\n\t}\n\n\tsetupAddFlowButtonListener() {\n\t\tthis.addFlowButton$ = fromEvent(this.addFlowButton.nativeElement, 'click')\n\t\t\t.pipe(exhaustMap(() => this.flowService.createFlowTemplate(this.flowTemplateService.FLOW_EMPTY_TEMPLATE)))\n\t\t\t.pipe(\n\t\t\t\ttap(response => {\n\t\t\t\t\tif (response) {\n\t\t\t\t\t\tthis.scrollToLastTab();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tmap(value => void 0)\n\t\t\t);\n\t}\n\n\tchangeSelectedFlow(flow: Flow) {\n\t\tthis.store.dispatch(FlowsActions.selectFlow({ flowId: flow.id }));\n\t}\n\n\tconfigsClicked() {\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.setLeftSidebar({\n\t\t\t\tsidebarType: LeftSideBarType.CONFIGS,\n\t\t\t\tprops: {},\n\t\t\t})\n\t\t);\n\t}\n\n\topenVersion() {\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.setRightSidebar({\n\t\t\t\tsidebarType: RightSideBarType.FLOW_VERSIONS,\n\t\t\t\tprops: {},\n\t\t\t})\n\t\t);\n\t}\n\n\tget viewMode() {\n\t\treturn ViewModeEnum;\n\t}\n\n\tscrollFlowTabsLeft(tabsContainer: HTMLDivElement) {\n\t\ttabsContainer.scrollTo({\n\t\t\tleft: tabsContainer.scrollLeft - tabsContainer.clientWidth,\n\t\t\tbehavior: 'smooth',\n\t\t});\n\t}\n\n\tscrollFlowTabsRight(tabsContainer: HTMLDivElement) {\n\t\ttabsContainer.scrollTo({\n\t\t\tleft: tabsContainer.scrollLeft + tabsContainer.clientWidth,\n\t\t\tbehavior: 'smooth',\n\t\t});\n\t}\n\n\tshouldShowRightArrow(tabsContainer: HTMLDivElement) {\n\t\treturn !(tabsContainer.scrollLeft + tabsContainer.clientWidth == tabsContainer.scrollWidth);\n\t}\n\n\tshouldShowLeftArrow(tabsContainer: HTMLDivElement) {\n\t\treturn tabsContainer.scrollLeft > 0;\n\t}\n\n\tscrollToFlowTab(flowSpanIndex: number) {\n\t\t(this.flowSpans.toArray()[flowSpanIndex].nativeElement as HTMLSpanElement).scrollIntoView({\n\t\t\tbehavior: 'smooth',\n\t\t\tblock: 'end',\n\t\t\tinline: 'end',\n\t\t});\n\t\tsetTimeout(() => {\n\t\t\t(this.flowSpans.toArray()[flowSpanIndex].nativeElement as HTMLSpanElement).scrollIntoView({\n\t\t\t\tbehavior: 'smooth',\n\t\t\t\tblock: 'end',\n\t\t\t\tinline: 'end',\n\t\t\t});\n\t\t}, 100);\n\t}\n\n\tscrollToLastTab() {\n\t\tsetTimeout(() => {\n\t\t\t(this.flowSpans.last.nativeElement as HTMLSpanElement).scrollIntoView({\n\t\t\t\tbehavior: 'smooth',\n\t\t\t\tblock: 'end',\n\t\t\t\tinline: 'end',\n\t\t\t});\n\t\t}, 400);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.display-none {\r\n  display: none !important;\r\n}\r\n\r\n.tabs {\r\n  height: 44px;\r\n  background-color: $white;\r\n  position: relative;\r\n}\r\n\r\n.tab-add img {\r\n  color: $body;\r\n  font-size: 1rem;\r\n}\r\n\r\n.tab-add:hover img {\r\n  color: $primary;\r\n}\r\n\r\n.tab-link {\r\n  cursor: pointer;\r\n  margin-top: auto;\r\n  height: 36px;\r\n  background-color: $white;\r\n  transition: box-shadow 0.3s ease;\r\n}\r\n\r\n.tab-link:hover {\r\n  background-color: $grayCard;\r\n}\r\n\r\n.tab-link.active {\r\n  box-shadow: inset 1px 0px 0px $line, inset 0px 1px 0px $line,\r\n    inset -1px 0px 0px $line;\r\n  border-radius: 5px 5px 0px 0px;\r\n}\r\n\r\n.overflow-x-auto {\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n}\r\n\r\n::-webkit-scrollbar:horizontal {\r\n  height: 0px;\r\n}\r\n::-webkit-scrollbar-thumb:horizontal {\r\n  border-radius: 10px;\r\n}\r\n\r\n.white-gradient-right {\r\n  min-width: 45px;\r\n  height: 27px;\r\n  margin-left: -45px;\r\n  pointer-events: none;\r\n  background: linear-gradient(90deg, #ffffff 0%, rgba(255, 255, 255, 0) 76.47%);\r\n  transform: matrix(-1, 0, 0, 1, 0, 0);\r\n}\r\n\r\n.bottom-border {\r\n  border-bottom: 1px solid $line;\r\n}\r\n\r\n.save-status-container {\r\n  padding: 0rem 0.875rem;\r\n  padding-left: 0px;\r\n}\r\n\r\n.versions-button-margin {\r\n  margin-right: 0.75rem;\r\n}\r\n\r\n.save-status {\r\n  width: 95px;\r\n}\r\n.spacer {\r\n  height: 36px;\r\n}\r\n\r\n.margin-zero {\r\n  margin: 0px;\r\n}\r\n\r\n.scroll-arrow {\r\n  background-color: $white;\r\n  min-width: 36px;\r\n  height: 36px;\r\n  transition: all 0.5s ease;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: $hover;\r\n  }\r\n  border-radius: 3px;\r\n}\r\n\r\n.rotate-180 {\r\n  transform: rotate(180deg);\r\n}\r\n\r\n.white-gradient-left {\r\n  min-width: 45px;\r\n  height: 27px;\r\n  pointer-events: none;\r\n  margin-right: -45px;\r\n  background: linear-gradient(90deg, #ffffff 0%, rgba(255, 255, 255, 0) 76.47%);\r\n  transform: matrix(1, 0, 0, 1, 0, 0);\r\n}\r\n\r\n.add-flow-btn {\r\n  min-width: 36px;\r\n  height: 36px;\r\n  cursor: pointer;\r\n  background-color: $white;\r\n  &:hover {\r\n    background-color: $grayCard;\r\n  }\r\n}\r\n",
                    "styleUrl": "./flow-builder-tabs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowTemplateService",
                        "type": "FlowTemplateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowTemplateService",
                        "type": "FlowTemplateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "accessors": {
                "viewMode": {
                    "name": "viewMode",
                    "getSignature": {
                        "name": "viewMode",
                        "type": "",
                        "returnType": "",
                        "line": 90
                    }
                }
            },
            "templateData": "<div class=\"tabs d-flex justify-content-center align-items-center\">\r\n  <div [class.display-none]=\"readOnlyMode$ | async | defaultTrue\"\r\n    class=\"bottom-border add-flow-btn d-flex justify-content-center align-items-center\" #addFlowBtn>\r\n    <svg-icon [svgStyle]=\"themeService.BODY_COLOR_SVG_STYLE()\" src=\"assets/img/custom/plus.svg\">\r\n    </svg-icon>\r\n  </div>\r\n\r\n  <div class=\"scroll-arrow bottom-border d-flex justify-content-center align-items-center\"\r\n    *ngIf=\"shouldShowLeftArrow(tabsContainer)\" (click)=\"scrollFlowTabsLeft(tabsContainer)\">\r\n    <svg-icon src=\"assets/img/custom/right-chevron.svg\" class=\"rotate-180\"></svg-icon>\r\n  </div>\r\n  <div class=\"white-gradient-left\" *ngIf=\"shouldShowLeftArrow(tabsContainer)\"></div>\r\n  <div class=\"d-flex overflow-x-auto tabs-container\" #tabsContainer>\r\n    <span *ngFor=\"let flow of flows$ | async; let last = last; let index = index\" class=\"tab-link\"\r\n      [class.active]=\"(selectedFlowId$ | async) === flow.id\"\r\n      [class.bottom-border]=\"!((selectedFlowId$ | async) === flow.id)\" #flowSpan>\r\n      <app-flow-builder-tab [flow]=\"flow\" [readonlyMode]=\"readOnlyMode$ | async | defaultTrue\"\r\n        (switchToFlow)=\"changeSelectedFlow(flow); scrollToFlowTab(index)\"\r\n        [tabSelected]=\"!!(selectedFlowId$ | async) === flow.id\"></app-flow-builder-tab>\r\n    </span>\r\n  </div>\r\n  <div class=\"white-gradient-right\" *ngIf=\"shouldShowRightArrow(tabsContainer)\"></div>\r\n  <div class=\"scroll-arrow bottom-border d-flex justify-content-center align-items-center\"\r\n    *ngIf=\"shouldShowRightArrow(tabsContainer)\" (click)=\"scrollFlowTabsRight(tabsContainer)\">\r\n    <svg-icon src=\"assets/img/custom/right-chevron.svg\"></svg-icon>\r\n  </div>\r\n  <div class=\"flex-grow-1 bottom-border spacer\"></div>\r\n  <div class=\"d-flex justify-content-center align-items-center bottom-border\" style=\"margin-top:2px\">\r\n\r\n    <app-button [hidden]=\"!(isFlowSelected$ | async | defaultFalse)\" (buttonClicked)=\"configsClicked()\" btnStyle=\"basic\"\r\n      btnColor=\"basic\" btnSize=\"medium\">\r\n      Configs\r\n    </app-button>\r\n\r\n    <div>\r\n\r\n    </div>\r\n    <app-test-flow-modal [hidden]=\"\r\n        !(isFlowSelected$ | async | defaultFalse) ||\r\n        (viewMode$ | async) === viewMode.VIEW_INSTANCE_RUN\r\n      \"></app-test-flow-modal>\r\n\r\n    <app-icon-button [hidden]=\"!(isFlowSelected$ | async | defaultFalse)\" [color]=\"themeService.BODY_COLOR\"\r\n      (click)=\"openVersion()\" [hoverColor]=\"themeService.PRIMARY_COLOR\" [iconFilename]=\"'revert.svg'\"\r\n      class=\"versions-button-margin\"></app-icon-button>\r\n  </div>\r\n</div>\r\n\r\n<ng-container *ngIf=\"addFlowButton$ | async\"></ng-container>\r\n"
        },
        {
            "name": "FlowItemComponent",
            "id": "component-FlowItemComponent-49b8d2445e5e6ddabbf9a51c503acb52ac088c8c2a6b37778d8f0265d74eb2853db3bfc37a750b614b70015cbe0c62fa6d753b940395a982120a38e7d1a66851",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flow-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./flow-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "flowItemData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "FlowItem",
                    "decorators": []
                },
                {
                    "name": "hoverState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "trigger",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_flowItemData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItem",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "dragDelta",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Point | undefined",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "dragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "flowItemElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'flowItem'"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "FlowItemTypeEnum",
                    "defaultValue": "FlowItemTypeEnum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selected$",
                    "defaultValue": "of(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "viewMode$",
                    "defaultValue": "of(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragEnd",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragEnd",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "flowContentContainer",
                    "args": [],
                    "optional": false,
                    "returnType": "{ left: string; position: string; width: string; }",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "flowGraphContainer",
                    "args": [],
                    "optional": false,
                    "returnType": "{ top: string; width: string; height: string; left: string; position: string; }",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPosition",
                    "args": [],
                    "optional": false,
                    "returnType": "Point",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "move",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nextActionItem",
                    "args": [],
                    "optional": false,
                    "returnType": "{ width: string; height: string; top: string; left: string; position: string; }",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectPiece",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "startDrag",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragStart",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragStart",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FlowRendererService } from '../../../../service/flow-renderer.service';\r\nimport { FlowItemTypeEnum } from '../../../../../common-layout/model/enum/flow-item-type.enum';\r\nimport { CdkDragEnd, CdkDragMove, CdkDragStart } from '@angular/cdk/drag-drop';\r\nimport { Point } from '../../../../../common-layout/model/helper/point';\r\nimport { FlowItem } from '../../../../../common-layout/model/flow-builder/flow-item';\r\nimport { map, Observable, of } from 'rxjs';\r\nimport { BuilderSelectors } from '../../../../store/selector/flow-builder.selector';\r\nimport { FlowsActions } from '../../../../store/action/flows.action';\r\nimport { Store } from '@ngrx/store';\r\nimport { FlowStructureUtil } from '../../../../service/flowStructureUtil';\r\nimport {\r\n\tFLOW_ITEM_HEIGHT,\r\n\tFLOW_ITEM_WIDTH,\r\n\tSPACE_BETWEEN_ITEM_CONTENT_AND_LINE,\r\n\tVERTICAL_LINE_LENGTH,\r\n} from './flow-item-connection/draw-utils';\r\n\r\n@Component({\r\n\tselector: 'app-flow-item',\r\n\ttemplateUrl: './flow-item.component.html',\r\n\tstyleUrls: [],\r\n})\r\nexport class FlowItemComponent implements OnInit {\r\n\tpublic FlowItemTypeEnum = FlowItemTypeEnum;\r\n\r\n\t@Input() hoverState: boolean = false;\r\n\t@Input() trigger = false;\r\n\t_flowItemData: FlowItem;\r\n\t@Input() set flowItemData(value: FlowItem) {\r\n\t\tthis._flowItemData = value;\r\n\t\tthis.selected$ = this.store.select(BuilderSelectors.selectCurrentStepName).pipe(\r\n\t\t\tmap(stepName => {\r\n\t\t\t\tif (this._flowItemData == undefined) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn this._flowItemData.name == stepName;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tdragging: boolean = false;\r\n\tselected$: Observable<boolean> = of(false);\r\n\tviewMode$: Observable<boolean> = of(false);\r\n\tdragDelta: Point | undefined;\r\n\r\n\t@ViewChild('flowItem') private flowItemElement: ElementRef;\r\n\r\n\tconstructor(private flowRendererService: FlowRendererService, private store: Store) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.viewMode$ = this.store.select(BuilderSelectors.selectReadOnly);\r\n\t}\r\n\r\n\tflowContentContainer() {\r\n\t\treturn {\r\n\t\t\tleft: `calc(50% - ${FLOW_ITEM_WIDTH / 2}px )`,\r\n\t\t\tposition: 'relative',\r\n\t\t\twidth: FLOW_ITEM_WIDTH + 'px',\r\n\t\t};\r\n\t}\r\n\r\n\tflowGraphContainer() {\r\n\t\treturn {\r\n\t\t\ttop: FlowStructureUtil.isTrigger(this._flowItemData) ? '50px' : '0px',\r\n\t\t\twidth: this._flowItemData.boundingBox!.width + 'px',\r\n\t\t\theight: this._flowItemData.boundingBox!.height + 'px',\r\n\t\t\tleft: `calc(50% - ${this._flowItemData.boundingBox!.width / 2}px )`,\r\n\t\t\tposition: 'relative',\r\n\t\t};\r\n\t}\r\n\r\n\tselectPiece() {\r\n\t\tif (this.dragging) {\r\n\t\t\tthis.dragging = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.store.dispatch(\r\n\t\t\tFlowsActions.selectStep({\r\n\t\t\t\tstep: this._flowItemData,\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tstartDrag(event: CdkDragStart) {\r\n\t\tthis.dragging = true;\r\n\t\tthis.flowRendererService.setDragPiece(this._flowItemData);\r\n\t\tthis.flowRendererService.draggingSubject.next(true);\r\n\t}\r\n\r\n\tdrop(event: CdkDragEnd) {\r\n\t\tconst rect = event.source.element.nativeElement.getBoundingClientRect();\r\n\t\tconst centerOfDraggedObject = {\r\n\t\t\tx: rect.x + rect.width / 2,\r\n\t\t\ty: rect.y + rect.height / 2,\r\n\t\t};\r\n\t\tthis.flowRendererService.setDropPoint(\r\n\t\t\t{\r\n\t\t\t\tx: centerOfDraggedObject.x,\r\n\t\t\t\ty: centerOfDraggedObject.y,\r\n\t\t\t},\r\n\t\t\tthis._flowItemData\r\n\t\t);\r\n\r\n\t\tthis.flowRendererService.draggingSubject.next(false);\r\n\t\tlet droppedInformation = this.flowRendererService.getDraggedInformation();\r\n\t\tif (droppedInformation.draggedPiece && droppedInformation.candidateAddButton) {\r\n\t\t\tthis.store.dispatch(\r\n\t\t\t\tFlowsActions.dropPiece({\r\n\t\t\t\t\tdraggedPieceName: droppedInformation.draggedPiece.name,\r\n\t\t\t\t\tnewParentName: droppedInformation.candidateAddButton.stepName,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\tthis.dragDelta = undefined;\r\n\t\tevent.source.reset();\r\n\t}\r\n\r\n\tmove(event: CdkDragMove) {\r\n\t\tif (!this.dragDelta) {\r\n\t\t\tlet pnt = this.getPosition();\r\n\t\t\tthis.dragDelta = new Point(\r\n\t\t\t\tevent.pointerPosition.x - (pnt.x + this._flowItemData.width! / 2.0),\r\n\t\t\t\tevent.pointerPosition.y - pnt.y\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tgetPosition(): Point {\r\n\t\tlet x =\r\n\t\t\tthis.flowItemElement.nativeElement.getBoundingClientRect().left +\r\n\t\t\t(window.scrollX || document.documentElement.scrollLeft);\r\n\t\tlet y =\r\n\t\t\tthis.flowItemElement.nativeElement.getBoundingClientRect().top +\r\n\t\t\t(window.scrollY || document.documentElement.scrollTop);\r\n\t\treturn { x, y };\r\n\t}\r\n\r\n\tnextActionItem() {\r\n\t\treturn {\r\n\t\t\twidth: FLOW_ITEM_WIDTH + 'px',\r\n\t\t\theight: FLOW_ITEM_HEIGHT + 'px',\r\n\t\t\ttop: SPACE_BETWEEN_ITEM_CONTENT_AND_LINE + VERTICAL_LINE_LENGTH + SPACE_BETWEEN_ITEM_CONTENT_AND_LINE + 'px',\r\n\t\t\tleft: '0px',\r\n\t\t\tposition: 'absolute',\r\n\t\t};\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "flowRendererService",
                        "type": "FlowRendererService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 47,
                "jsdoctags": [
                    {
                        "name": "flowRendererService",
                        "type": "FlowRendererService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "flowItemData": {
                    "name": "flowItemData",
                    "setSignature": {
                        "name": "flowItemData",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "FlowItem",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 30,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "FlowItem",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div [ngStyle]=\"flowGraphContainer()\">\r\n  <div [ngStyle]=\"flowContentContainer()\" #flowItem>\r\n    <app-flow-item-content\r\n      (contentClick)=\"selectPiece()\"\r\n      [trigger]=\"trigger\"\r\n      [flowItem]=\"_flowItemData\"\r\n      [viewMode]=\"viewMode$ | async | defaultTrue\"\r\n      [selected]=\"selected$ | async | defaultFalse\"\r\n      [style.opacity]=\"1\"\r\n    ></app-flow-item-content>\r\n  </div>\r\n  <div\r\n    class=\"positioned-relative\"\r\n    [ngStyle]=\"{ height: _flowItemData.connectionsBox!.height + 'px' }\"\r\n  >\r\n    <app-flow-item-connection\r\n      [colorLine]=\"hoverState\"\r\n      [flowItem]=\"_flowItemData\"\r\n      [viewMode]=\"viewMode$ | async | defaultTrue\"\r\n    ></app-flow-item-connection>\r\n  </div>\r\n  <app-flow-item\r\n    *ngIf=\"_flowItemData.nextAction\"\r\n    [hoverState]=\"hoverState\"\r\n    [flowItemData]=\"_flowItemData.nextAction\"\r\n  ></app-flow-item>\r\n</div>\r\n"
        },
        {
            "name": "FlowItemConnectionComponent",
            "id": "component-FlowItemConnectionComponent-fae975d21ed7c4ee95a5a415a687260143803c3d44529f504431b59b947c95870aed12592ec68e41c0006f055864cfbe4ca8f1ec3e16648bdb330fbc60201107",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/flow-item-connection.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flow-item-connection",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./flow-item-connection.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "colorLine",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "flowItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "FlowItem",
                    "decorators": []
                },
                {
                    "name": "viewMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "FlowItemTypeEnum",
                    "defaultValue": "FlowItemTypeEnum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "castToLoopItem",
                    "args": [],
                    "optional": false,
                    "returnType": "LoopOnItemActionInterface",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FlowItemTypeEnum } from '../../../../../../common-layout/model/enum/flow-item-type.enum';\r\nimport { ThemeService } from '../../../../../../common-layout/service/theme.service';\r\nimport { FlowItem } from '../../../../../../common-layout/model/flow-builder/flow-item';\r\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\r\nimport { LoopOnItemActionInterface } from '../../../../../../common-layout/model/flow-builder/actions/loop-action.interface';\r\n\r\n@Component({\r\n\tselector: 'app-flow-item-connection',\r\n\ttemplateUrl: './flow-item-connection.component.html',\r\n\tstyleUrls: [],\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FlowItemConnectionComponent {\r\n\tpublic FlowItemTypeEnum = FlowItemTypeEnum;\r\n\t@Input() flowItem: FlowItem;\r\n\t@Input() colorLine = false;\r\n\t@Input() viewMode: boolean;\r\n\r\n\tconstructor(public themeService: ThemeService) {}\r\n\r\n\tget ActionType() {\r\n\t\treturn ActionType;\r\n\t}\r\n\r\n\tcastToLoopItem() {\r\n\t\treturn this.flowItem as LoopOnItemActionInterface;\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "ActionType": {
                    "name": "ActionType",
                    "getSignature": {
                        "name": "ActionType",
                        "type": "",
                        "returnType": "",
                        "line": 22
                    }
                }
            },
            "templateData": "<div class=\"positioned-relative\" *ngIf=\"flowItem\">\r\n  <app-loop-line-connection\r\n    *ngIf=\"flowItem.type === ActionType.LOOP_ON_ITEMS\"\r\n    [viewMode]=\"viewMode\"\r\n    [flowItem]=\"castToLoopItem()\"\r\n  >\r\n  </app-loop-line-connection>\r\n  <app-simple-line-connection\r\n    *ngIf=\"flowItem.type !== ActionType.LOOP_ON_ITEMS\"\r\n    [flowItem]=\"flowItem\"\r\n    [viewMode]=\"viewMode\"\r\n  ></app-simple-line-connection>\r\n</div>\r\n"
        },
        {
            "name": "FlowItemContentComponent",
            "id": "component-FlowItemContentComponent-310d1e37f153161ee8c9c2a6ee86fd5439229e3d68d1b60f1cf2e9df2bb5b5d4f76cea4546171573e87dffd8dd9abd8e72c002928b1106816094f64c59e13e9b",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-content/flow-item-content.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flow-item-content",
            "styleUrls": [
                "./flow-item-content.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./flow-item-content.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "flowItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "FlowItem",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "trigger",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "viewMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "contentClick",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_flowItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItem",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "actionStatus$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ActionStatus | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "flowItemChanged$",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "flowItemDetails$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<FlowItemDetails | null | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "hover",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "stepIconUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeTrigger",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "fetchFlowItemDetailsAndLoadIcon",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "trashIconSvgStyle",
                    "args": [],
                    "optional": false,
                    "returnType": "{ 'width.px': number; height: number; fill: any; }",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateIconStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<ActionStatus | undefined>",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n\tChangeDetectionStrategy,\r\n\tChangeDetectorRef,\r\n\tComponent,\r\n\tEventEmitter,\r\n\tInput,\r\n\tOnInit,\r\n\tOutput,\r\n} from '@angular/core';\r\nimport { ThemeService } from '../../../../../../common-layout/service/theme.service';\r\nimport { TriggerType } from '../../../../../../common-layout/model/enum/trigger-type.enum';\r\nimport { ActionStatus } from '../../../../../../common-layout/model/enum/action-status';\r\nimport { InstanceRunStatus } from '../../../../../../common-layout/model/enum/instance-run-status';\r\nimport { map, Observable, of, Subject, switchMap, take, takeUntil, tap } from 'rxjs';\r\n\r\nimport { ConfirmDeleteModalComponent } from '../../../../../../common-layout/components/confirm-delete-modal/confirm-delete-modal.component';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { FlowItem } from '../../../../../../common-layout/model/flow-builder/flow-item';\r\nimport { RightSideBarType } from '../../../../../../common-layout/model/enum/right-side-bar-type.enum';\r\nimport { Store } from '@ngrx/store';\r\nimport { BuilderSelectors } from '../../../../../store/selector/flow-builder.selector';\r\nimport { FlowsActions } from '../../../../../store/action/flows.action';\r\nimport { FlowItemDetails } from '../../../flow-right-sidebar/step-type-sidebar/step-type-item/flow-item-details';\r\nimport { FlowItemDetailsActions } from 'src/app/layout/flow-builder/store/action/flow-items-details.action';\r\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\r\nimport { RemoteFlowAction } from 'src/app/layout/common-layout/model/flow-builder/actions/remote-flow-action.interface';\r\nimport { fadeIn400ms } from 'src/app/layout/common-layout/animation/fade-in.animations';\r\n\r\n@Component({\r\n\tselector: 'app-flow-item-content',\r\n\ttemplateUrl: './flow-item-content.component.html',\r\n\tstyleUrls: ['./flow-item-content.component.scss'],\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n\tanimations: [fadeIn400ms],\r\n})\r\nexport class FlowItemContentComponent implements OnInit {\r\n\tbsModalRef: BsModalRef;\r\n\tactionStatus$: Observable<ActionStatus | undefined>;\r\n\thover = false;\r\n\tflowItemChanged$: Subject<boolean> = new Subject();\r\n\t@Input() selected: boolean;\r\n\t@Input() trigger = false;\r\n\t@Input() viewMode: boolean;\r\n\tstepIconUrl: string;\r\n\t_flowItem: FlowItem;\r\n\t@Input() set flowItem(newFlowItem: FlowItem) {\r\n\t\tthis._flowItem = newFlowItem;\r\n\t\tthis.flowItemChanged$.next(true);\r\n\t\tthis.fetchFlowItemDetailsAndLoadIcon();\r\n\t\tthis.cd.detectChanges();\r\n\t}\r\n\t@Output() contentClick: EventEmitter<void> = new EventEmitter<void>();\r\n\tflowItemDetails$: Observable<FlowItemDetails | null | undefined>;\r\n\tconstructor(\r\n\t\tpublic themeService: ThemeService,\r\n\t\tprivate store: Store,\r\n\t\tprivate bsModalService: BsModalService,\r\n\t\tprivate cd: ChangeDetectorRef\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.actionStatus$ = this.updateIconStatus();\r\n\t\tthis.fetchFlowItemDetailsAndLoadIcon();\r\n\t}\r\n\r\n\tprivate fetchFlowItemDetailsAndLoadIcon() {\r\n\t\tthis.flowItemDetails$ = this.store.select(BuilderSelectors.selectAllFlowItemsDetailsLoadedState).pipe(\r\n\t\t\ttakeUntil(this.flowItemChanged$),\r\n\t\t\tswitchMap(loaded => {\r\n\t\t\t\tif (loaded) {\r\n\t\t\t\t\treturn this.store.select(BuilderSelectors.selectFlowItemDetails(this._flowItem)).pipe(\r\n\t\t\t\t\t\ttap(flowItemDetails => {\r\n\t\t\t\t\t\t\tif (flowItemDetails) {\r\n\t\t\t\t\t\t\t\tconst itemIcon = new Image();\r\n\t\t\t\t\t\t\t\titemIcon.src = flowItemDetails.logoUrl!;\r\n\t\t\t\t\t\t\t\titemIcon.onload = () => {\r\n\t\t\t\t\t\t\t\t\tthis.stepIconUrl = flowItemDetails.logoUrl!;\r\n\t\t\t\t\t\t\t\t\tthis.cd.detectChanges();\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t} else if (this._flowItem.type === ActionType.REMOTE_FLOW) {\r\n\t\t\t\t\t\t\t\tconst remoteFlowItem: RemoteFlowAction = this._flowItem as RemoteFlowAction;\r\n\t\t\t\t\t\t\t\tthis.store.dispatch(\r\n\t\t\t\t\t\t\t\t\tFlowItemDetailsActions.loadOldRemoteFlowItemDetails({\r\n\t\t\t\t\t\t\t\t\t\tcollectionVersionId: remoteFlowItem.settings.pieceVersionId,\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.error(`Flow item has no details:${this._flowItem.name}`);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\treturn of(null);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tupdateIconStatus(): Observable<ActionStatus | undefined> {\r\n\t\treturn this.store.select(BuilderSelectors.selectCurrentFlowRun).pipe(\r\n\t\t\tmap(selectedRun => {\r\n\t\t\t\tif (selectedRun) {\r\n\t\t\t\t\tif (selectedRun.status !== InstanceRunStatus.RUNNING) {\r\n\t\t\t\t\t\tlet stepName = this._flowItem.name;\r\n\t\t\t\t\t\tlet result = selectedRun.state.steps[stepName.toString()];\r\n\t\t\t\t\t\treturn result === undefined ? undefined : result.status;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn ActionStatus.RUNNING;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\ttrashIconSvgStyle() {\r\n\t\treturn {\r\n\t\t\t'width.px': 14,\r\n\t\t\theight: 14,\r\n\t\t\tfill: this.hover ? this.themeService.DANGER_COLOR : this.themeService.BODY_COLOR,\r\n\t\t};\r\n\t}\r\n\r\n\tdeleteStep() {\r\n\t\tlet stepName = this._flowItem.name;\r\n\t\tif (stepName == undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.bsModalRef = this.bsModalService.show(ConfirmDeleteModalComponent, {\r\n\t\t\tinitialState: {\r\n\t\t\t\tarchive: false,\r\n\t\t\t\tentityName: stepName,\r\n\t\t\t\tshowText: false,\r\n\t\t\t\tinstantClose: false,\r\n\t\t\t},\r\n\t\t});\r\n\t\tthis.bsModalRef.content.confirmState.pipe(take(1)).subscribe(confirm => {\r\n\t\t\tif (confirm && stepName) {\r\n\t\t\t\tthis.store.dispatch(\r\n\t\t\t\t\tFlowsActions.deleteStep({\r\n\t\t\t\t\t\tstepName: stepName,\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t\tthis.bsModalRef.hide();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tget actionStatusEnum() {\r\n\t\treturn ActionStatus;\r\n\t}\r\n\r\n\tget triggerType() {\r\n\t\treturn TriggerType;\r\n\t}\r\n\r\n\tchangeTrigger() {\r\n\t\tthis.store.dispatch(\r\n\t\t\tFlowsActions.setRightSidebar({\r\n\t\t\t\tsidebarType: RightSideBarType.TRIGGER_TYPE,\r\n\t\t\t\tprops: {},\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.flow-item {\r\n  /* Auto Layout */\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  cursor: pointer;\r\n\r\n  position: relative;\r\n  width: 300px;\r\n  height: 92px;\r\n\r\n  background: $white;\r\n  mix-blend-mode: normal;\r\n  /* Border */\r\n\r\n  border: 1px solid $border;\r\n  /* Depth 4 */\r\n\r\n  box-shadow: unset;\r\n  border-radius: 8px;\r\n}\r\n\r\n.logo-icon {\r\n  object-fit: contain;\r\n  width: 60px;\r\n  height: 60px;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 2;\r\n}\r\n.flow-item {\r\n  gap: 0.9375rem;\r\n  padding: 0.9375rem;\r\n}\r\n.flow-content {\r\n  flex-grow: 1;\r\n  gap: 0.25rem;\r\n}\r\n\r\n.flow-container {\r\n  .flow-item {\r\n    transition: all 400ms cubic-bezier(0.35, 0, 0.25, 1);\r\n  }\r\n\r\n  &:hover {\r\n    .flow-item {\r\n      box-shadow: 0px 0px 22px rgba(186, 186, 191, 0.3),\r\n        inset 0px 3px 0px $primary;\r\n      border: 1px solid $primary;\r\n      border-radius: 8px;\r\n    }\r\n  }\r\n}\r\n\r\n.flow-item-wrapper {\r\n  padding-top: 0.25rem;\r\n  padding-bottom: 0.25rem;\r\n}\r\n\r\n.selected {\r\n  box-shadow: 0px 0px 22px rgba(186, 186, 191, 0.3), inset 0px 3px 0px $primary;\r\n  border: 1px solid $primary;\r\n  transition: all 400ms cubic-bezier(0.35, 0, 0.25, 1);\r\n  border-radius: 8px;\r\n}\r\n\r\n.options-container {\r\n  position: absolute;\r\n  left: -50px;\r\n  width: 50px;\r\n  height: 92px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n}\r\n\r\n.btn {\r\n  margin-right: 0.625rem;\r\n}\r\n\r\n.flow-icon-container {\r\n  position: relative;\r\n  width: 60px;\r\n  height: 60px;\r\n}\r\n\r\n.empty-trigger {\r\n  border: 1.5px dashed $primary !important;\r\n  box-shadow: 0px 0px 22px rgba(186, 186, 191, 0.4) !important;\r\n  border-radius: 8px !important;\r\n}\r\n\r\n.flow-container:hover .empty-trigger {\r\n  box-shadow: 0px 0px 0px 5px rgba(227, 218, 249, 0.6),\r\n    0px 0px 22px rgba(186, 186, 191, 0.3) !important;\r\n}\r\n\r\n.flow-title {\r\n  font-weight: 600;\r\n  line-height: 1.375rem;\r\n}\r\n\r\n.code-name {\r\n  font-weight: 400;\r\n  line-height: 22px;\r\n}\r\n\r\n.step-icon-loading-spinner-container {\r\n  width: 60px;\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n}\r\n.step-run-result-icon {\r\n  width: 16px;\r\n  height: 16px;\r\n}\r\n",
                    "styleUrl": "./flow-item-content.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "bsModalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 53,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "bsModalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "flowItem": {
                    "name": "flowItem",
                    "setSignature": {
                        "name": "flowItem",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "newFlowItem",
                                "type": "FlowItem",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 46,
                        "jsdoctags": [
                            {
                                "name": "newFlowItem",
                                "type": "FlowItem",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "actionStatusEnum": {
                    "name": "actionStatusEnum",
                    "getSignature": {
                        "name": "actionStatusEnum",
                        "type": "",
                        "returnType": "",
                        "line": 148
                    }
                },
                "triggerType": {
                    "name": "triggerType",
                    "getSignature": {
                        "name": "triggerType",
                        "type": "",
                        "returnType": "",
                        "line": 152
                    }
                }
            },
            "templateData": "<div\r\n  class=\"flow-container\"\r\n  (mouseenter)=\"this.hover = true\"\r\n  (mouseleave)=\"this.hover = false\"\r\n>\r\n  <div class=\"options-container\" [hidden]=\"viewMode\">\r\n    <button\r\n      *ngIf=\"!trigger\"\r\n      class=\"btn btn-secondary btn-fab btn-icon btn-round\"\r\n      [hidden]=\"!hover\"\r\n      (click)=\"deleteStep()\"\r\n    >\r\n      <svg-icon\r\n        src=\"assets/img/custom/trash.svg\"\r\n        [svgStyle]=\"trashIconSvgStyle()\"\r\n      ></svg-icon>\r\n    </button>\r\n    <button\r\n      *ngIf=\"trigger\"\r\n      class=\"btn btn-secondary btn-fab btn-icon btn-round\"\r\n      [hidden]=\"!hover\"\r\n      (click)=\"changeTrigger()\"\r\n    >\r\n      <svg-icon\r\n        src=\"assets/img/custom/replace.svg\"\r\n        [svgStyle]=\"trashIconSvgStyle()\"\r\n      ></svg-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div\r\n    class=\"flow-item d-flex align-items-center\"\r\n    [class.selected]=\"selected\"\r\n    [class.empty-trigger]=\"_flowItem.type === triggerType.EMPTY\"\r\n    (click)=\"contentClick.emit()\"\r\n  >\r\n    <div\r\n      class=\"flow-icon-container d-flex justify-content-center align-items-center\"\r\n    >\r\n      <ng-container *ngIf=\"flowItemDetails$ | async\">\r\n        <img *ngIf=\"stepIconUrl\" class=\"logo-icon\" @fadeIn [src]=\"stepIconUrl\" />\r\n      </ng-container>\r\n\r\n      <div *ngIf=\"!stepIconUrl\" class=\"step-icon-loading-spinner-container\">\r\n        <div class=\"spinner-grow text-primary\">\r\n          <span class=\"sr-only\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"flow-content d-flex flex-column\">\r\n      <div>\r\n        <div class=\"flow-title font-weight-bold d-inline-block\">\r\n          {{ _flowItem.displayName }}\r\n        </div>\r\n        <div class=\"float-right\" *ngIf=\"actionStatus$ | async as actionStatus\">\r\n          <div\r\n            class=\"spinner-border text-primary step-run-result-icon\"\r\n            *ngIf=\"actionStatus === actionStatusEnum.RUNNING\"\r\n            role=\"status\"\r\n          >\r\n            <span class=\"sr-only\">Loading...</span>\r\n          </div>\r\n          <app-state-icon\r\n            *ngIf=\"actionStatus !== actionStatusEnum.RUNNING\"\r\n            [succeeded]=\"actionStatus === actionStatusEnum.SUCCEEDED\"\r\n          ></app-state-icon>\r\n        </div>\r\n      </div>\r\n      <div class=\"text-description\">\r\n        <span class=\"badge badge-danger float-right\"  *ngIf=\"!_flowItem.valid\"  @fadeIn\r\n          >Invalid Settings</span\r\n        >\r\n        <div class=\"code-name\">{{ _flowItem.name }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FlowItemTreeComponent",
            "id": "component-FlowItemTreeComponent-803434d102af81a76950f8ed8e5d91c9a7e674fe8d08d98c80df26d1563e8154651485fc6cd76db9eaf83dd3cf5604b000a98af83172db40cc21ceba4ffb79dc",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item-tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flow-item-tree",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./flow-item-tree.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activePiece$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<FlowItem | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "navbarOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FlowRendererService } from '../../../service/flow-renderer.service';\nimport { FlowItem } from '../../../../common-layout/model/flow-builder/flow-item';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'app-flow-item-tree',\n\ttemplateUrl: './flow-item-tree.component.html',\n\tstyleUrls: [],\n})\nexport class FlowItemTreeComponent implements OnInit {\n\tactivePiece$: Observable<FlowItem | undefined>;\n\tnavbarOpen: boolean = false;\n\n\tconstructor(private flowService: FlowRendererService) {}\n\n\tngOnInit(): void {\n\t\tthis.activePiece$ = this.flowService.structureChanged;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "flowService",
                        "type": "FlowRendererService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "flowService",
                        "type": "FlowRendererService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-flow-item\r\n  *ngIf=\"activePiece$ | async as activePiece\"\r\n  [trigger]=\"true\"\r\n  [flowItemData]=\"activePiece\"\r\n></app-flow-item>\r\n"
        },
        {
            "name": "FlowLeftSidebarComponent",
            "id": "component-FlowLeftSidebarComponent-01c9b4a515725171bb22c5c404f83d24fa8abfde42004d5e16977d2db2952469abe8c53ddf9fa5d4c88595b61786de5db2da20c3674e90a11666bd8f20ca143f",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/flow-left-sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flow-left-sidebar",
            "styleUrls": [
                "./flow-left-sidebar.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./flow-left-sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "leftSideBar$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<LeftSideBarType>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { LeftSideBarType } from 'src/app/layout/common-layout/model/enum/left-side-bar-type.enum';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { BuilderSelectors } from '../../../store/selector/flow-builder.selector';\n\n@Component({\n\tselector: 'app-flow-left-sidebar',\n\ttemplateUrl: './flow-left-sidebar.component.html',\n\tstyleUrls: ['./flow-left-sidebar.component.css'],\n})\nexport class FlowLeftSidebarComponent implements OnInit {\n\tleftSideBar$: Observable<LeftSideBarType>;\n\n\tconstructor(private store: Store) {}\n\n\tngOnInit(): void {\n\t\tthis.leftSideBar$ = this.store.select(BuilderSelectors.selectCurrentLeftSidebarType);\n\t}\n\n\tget leftSideBarType() {\n\t\treturn LeftSideBarType;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./flow-left-sidebar.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "leftSideBarType": {
                    "name": "leftSideBarType",
                    "getSignature": {
                        "name": "leftSideBarType",
                        "type": "",
                        "returnType": "",
                        "line": 21
                    }
                }
            },
            "templateData": "<ng-container [ngSwitch]=\"leftSideBar$ | async\">\r\n  <app-configs-sidebar\r\n    *ngSwitchCase=\"leftSideBarType.CONFIGS\"\r\n  ></app-configs-sidebar>\r\n  <app-run-details *ngSwitchCase=\"leftSideBarType.SHOW_RUN\"></app-run-details>\r\n  <app-piece-settings\r\n    *ngSwitchCase=\"leftSideBarType.PIECE_SETTINGS\"\r\n  ></app-piece-settings>\r\n</ng-container>\r\n"
        },
        {
            "name": "FlowRightSidebarComponent",
            "id": "component-FlowRightSidebarComponent-98f71bac1fa9fa135dd17e4225eca4a5a5183a530de0c2e7fa449c3b8b7c67bc10885a717cd06635c7e65709b412d7ec54eaf08f563592ea0bab0752d60055cc",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/flow-right-sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flow-right-sidebar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./flow-right-sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "rightSidebarType$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<RightSideBarType>",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { RightSideBarType } from '../../../../common-layout/model/enum/right-side-bar-type.enum';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { BuilderSelectors } from '../../../store/selector/flow-builder.selector';\n\n@Component({\n\tselector: 'app-flow-right-sidebar',\n\ttemplateUrl: './flow-right-sidebar.component.html',\n\tstyleUrls: [],\n})\nexport class FlowRightSidebarComponent implements OnInit {\n\trightSidebarType$: Observable<RightSideBarType>;\n\tconstructor(private store: Store) {}\n\n\tngOnInit(): void {\n\t\tthis.rightSidebarType$ = this.store.select(BuilderSelectors.selectCurrentRightSideBarType);\n\t}\n\n\tget sidebarType() {\n\t\treturn RightSideBarType;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "sidebarType": {
                    "name": "sidebarType",
                    "getSignature": {
                        "name": "sidebarType",
                        "type": "",
                        "returnType": "",
                        "line": 20
                    }
                }
            },
            "templateData": "<ng-container *ngIf=\"rightSidebarType$ | async as rightSidebarType\">\r\n\r\n  <app-flow-version-sidebar\r\n    *ngIf=\"rightSidebarType === sidebarType.FLOW_VERSIONS\"\r\n  ></app-flow-version-sidebar>\r\n  <app-piece-version-sidebar\r\n    *ngIf=\"rightSidebarType === sidebarType.COLLECTION_VERSIONS\"\r\n  ></app-piece-version-sidebar>\r\n  <app-step-type-sidebar\r\n    [showTriggers]=\"rightSidebarType === sidebarType.TRIGGER_TYPE\"\r\n    *ngIf=\"\r\n    rightSidebarType === sidebarType.STEP_TYPE ||\r\n    rightSidebarType === sidebarType.TRIGGER_TYPE\r\n  \"\r\n  ></app-step-type-sidebar>\r\n  <app-new-edit-piece-sidebar\r\n    *ngIf=\"rightSidebarType === sidebarType.EDIT_STEP\r\n  \"\r\n  >\r\n  </app-new-edit-piece-sidebar>\r\n\r\n</ng-container>\r\n"
        },
        {
            "name": "FlowVersionSidebarComponent",
            "id": "component-FlowVersionSidebarComponent-b9421f34f5d562a6dc8c682d1288803ab7d71969a35b84c09bcce81d71eed55aa09e753d630ae285d8a45f1b75d446736334aa93e49411e7194e255972669471",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/flow-version-sidebar/flow-version-sidebar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-flow-version-sidebar",
            "styleUrls": [
                "./flow-version-sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./flow-version-sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "timeHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeHelperService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "versions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<FlowVersion[]>",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "closeVersionSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FlowService } from '../../../../../common-layout/service/flow.service';\nimport { FlowVersion } from '../../../../../common-layout/model/flow-version.class';\nimport { VersionEditState } from '../../../../../common-layout/model/enum/version-edit-state.enum';\nimport { TimeHelperService } from '../../../../../common-layout/service/time-helper.service';\nimport { RightSideBarType } from '../../../../../common-layout/model/enum/right-side-bar-type.enum';\nimport { map, Observable, switchMap } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { BuilderSelectors } from '../../../../store/selector/flow-builder.selector';\nimport { FlowsActions } from '../../../../store/action/flows.action';\n\n@Component({\n\tselector: 'app-flow-version-sidebar',\n\ttemplateUrl: './flow-version-sidebar.component.html',\n\tstyleUrls: ['./flow-version-sidebar.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FlowVersionSidebarComponent implements OnInit {\n\tversions$: Observable<FlowVersion[]>;\n\n\tconstructor(public timeHelperService: TimeHelperService, private flowService: FlowService, private store: Store) {}\n\n\tngOnInit(): void {\n\t\tthis.versions$ = this.store.select(BuilderSelectors.selectCurrentFlowId).pipe(\n\t\t\tswitchMap(flowId => {\n\t\t\t\treturn this.flowService.listVersionsByFlowId(flowId!).pipe(\n\t\t\t\t\tmap(value => {\n\t\t\t\t\t\tlet newValues = value.reverse();\n\t\t\t\t\t\tfor (let i = 0; i < newValues.length; ++i) {\n\t\t\t\t\t\t\tnewValues[i].versionNumber = newValues.length - i;\n\t\t\t\t\t\t\tnewValues[i].epochCreationTimeFormatted = this.timeHelperService.formatDateTimeMills(\n\t\t\t\t\t\t\t\tnewValues[i].epochCreationTime\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn newValues;\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}\n\n\tcloseVersionSidebar() {\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.setRightSidebar({\n\t\t\t\tsidebarType: RightSideBarType.NONE,\n\t\t\t\tprops: {},\n\t\t\t})\n\t\t);\n\t}\n\n\tget versionEditState() {\n\t\treturn VersionEditState;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/assets/scss/custom/variables';\r\n\r\n.column {\r\n  height: 100%;  /* allows both columns to span the full height of the browser window */\r\n  display: flex;\r\n  flex-direction: column;  /* places the left and right headers above the bottom content */\r\n}\r\n\r\n.top {\r\n  flex-shink: 0;\r\n}\r\n\r\n.bottom {\r\n  flex-grow: 1;  /* ensures that the container will take up the full height of the parent container */\r\n  overflow-y: auto;  /* adds scroll to this container */\r\n}\r\n\r\n.piece-container{\r\n  white-space:nowrap;\r\n  text-overflow:ellipsis;\r\n  border-radius: 5px;\r\n}\r\n\r\n.piece-container{\r\n  background-color: $grayCard;\r\n}\r\n\r\n.center-button{\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.dropdown-menu{\r\n  margin-top: -40px !important;\r\n  left: -150px !important;\r\n}\r\n.dropdown .dropdown-menu:before{\r\n  background-color: unset;\r\n}\r\n",
                    "styleUrl": "./flow-version-sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "versionEditState": {
                    "name": "versionEditState",
                    "getSignature": {
                        "name": "versionEditState",
                        "type": "",
                        "returnType": "",
                        "line": 51
                    }
                }
            },
            "templateData": "<div class=\"column\">\r\n  <div class=\"p-3 top\">\r\n    <app-sidebar-header\r\n      (closeClicked)=\"closeVersionSidebar()\"\r\n      [title]=\"'Flow Versions'\"></app-sidebar-header>\r\n  </div>\r\n  <div class=\"px-4 bottom\">\r\n    <div class=\"version-container p-4 mb-4\" *ngFor=\"let version of versions$ | async; let i = index;\" >\r\n      <div class=\"d-flex\">\r\n        <div style=\"flex-grow: 1\">\r\n          <span>Version #{{version.versionNumber}}</span>\r\n        </div>\r\n        <div>\r\n          <span class=\"badge badge-warning\" *ngIf=\"version.state === versionEditState.DRAFT\">DRAFT</span>\r\n          <span class=\"badge badge-success\" *ngIf=\"version.state === versionEditState.LOCKED\">LOCKED</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex mt-2\">\r\n        <div>\r\n          <div class=\"text-description\">{{version.epochCreationTimeFormatted}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ForgetPasswordComponent",
            "id": "component-ForgetPasswordComponent-99446fb4da00f7cdee2e39048d8aa8fd936826bf7e1460a8e9158f8c571ad9699552880598b6baf744d9bbf0061830912e922c3017bf1b47a56b78372a528c9a",
            "file": "src/app/layout/auth-layout/pages/forget-password/forget-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-forget-password",
            "styleUrls": [
                "./forget-password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./forget-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "forgotPasswordForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "showErrorMessage",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "delayLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendPasswordReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../../common-layout/service/authentication.service';\nimport { fadeInUp400ms } from '../../../common-layout/animation/fade-in-up.animation';\nimport { ThemeService } from '../../../common-layout/service/theme.service';\nimport { NavigationService } from '../../../dashboard-layout/service/navigation.service';\n\n@Component({\n\tselector: 'app-forget-password',\n\ttemplateUrl: './forget-password.component.html',\n\tstyleUrls: ['./forget-password.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class ForgetPasswordComponent implements OnInit {\n\tforgotPasswordForm: FormGroup;\n\tshowErrorMessage = false;\n\tsubmitted = false;\n\tloading = false;\n\temail: string;\n\n\tconstructor(\n\t\tprivate themeService: ThemeService,\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate navigationService: NavigationService,\n\t\tprivate authenticationService: AuthenticationService\n\t) {\n\t\tthis.forgotPasswordForm = this.formBuilder.group({\n\t\t\temail: [, [Validators.email, Validators.required]],\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.navigationService.setTitle('Forget Password');\n\t}\n\n\tdelayLoading() {\n\t\tsetTimeout(() => {\n\t\t\tthis.loading = false;\n\t\t}, this.themeService.DELAY_LOADING_DURATION);\n\t}\n\n\tsendPasswordReset() {\n\t\tthis.submitted = true;\n\t\tif (this.forgotPasswordForm.invalid) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loading = true;\n\t\tthis.authenticationService.sendResetPasswordEmail(this.forgotPasswordForm.value).subscribe({\n\t\t\tnext: () => {\n\t\t\t\tif (!this.email) {\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t}\n\t\t\t\tthis.email = this.forgotPasswordForm.value.email;\n\t\t\t\tthis.delayLoading();\n\t\t\t},\n\t\t\terror: err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tthis.delayLoading();\n\t\t\t},\n\t\t});\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.auth-form-title {\r\n  font-weight: 600;\r\n  color: $title;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 1.563rem;\r\n}\r\n\r\n.form-text {\r\n  display: inline-block;\r\n  margin-bottom: 9px;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n}\r\n.card-footer {\r\n  text-align: center;\r\n}\r\n\r\n.auth-links-container {\r\n  margin-top: 1.875rem;\r\n  color: $description;\r\n  font-size: 0.875rem;\r\n}\r\n",
                    "styleUrl": "./forget-password.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div  [hidden]=\"!!email\">\r\n  <div class=\"auth-form-title\">Forgot Password</div>\r\n  <form [formGroup]=\"forgotPasswordForm\">\r\n    <div class=\"form-group\">\r\n      If the user exists we'll send you an email with a link to reset your password.\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label  class=\"form-text\" for=\"email\">Email Address</label>\r\n      <input id=\"email\" (change)=\"showErrorMessage=false\" class=\"form-control\"\r\n             formControlName=\"email\"\r\n             placeholder=\"Enter your email\" type=\"email\">\r\n      <p @fadeInUp *ngIf=\"submitted && this.forgotPasswordForm.controls['email'].invalid\"\r\n         class=\"invalid-input\">Email is required\r\n      </p>\r\n    </div>\r\n    <div class=\"text-center\">\r\n      <app-button [loading]=\"loading\" btnColor=\"primary\"\r\n      [fullWidthOfContainer]=\"true\"\r\n                 (buttonClicked)=\"sendPasswordReset()\"> Send email</app-button>\r\n    </div>\r\n  </form>\r\n  <div class=\"text-center auth-links-container\">\r\n    <a routerLink=\"/sign-in\">Back to Sign In</a>\r\n  </div>\r\n</div>\r\n\r\n<app-auth-checkbox [hidden]=\"!email\" [email]=\"email\"\r\n              [linkName]=\"'reset your password'\"\r\n              (emailResetPressed)=\"sendPasswordReset()\"\r\n              [loading]=\"loading\"></app-auth-checkbox>\r\n"
        },
        {
            "name": "IconButtonComponent",
            "id": "component-IconButtonComponent-397bdebb58f8487ddaadd66437825599755e5354169868cd7895b07fa4442e44a6fa4d4bb83764e155f7b975049abb1214787c50c9140faf26cdf3b4fcbcbc7d",
            "file": "src/app/layout/common-layout/components/trash-icon-button/icon-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-icon-button",
            "styleUrls": [
                "./icon-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "height",
                    "defaultValue": "15",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "hoverColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconFilename",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "15",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hover",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "iconSvgStyle",
                    "args": [
                        {
                            "name": "hover",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ fill: string; 'width.px': number; 'height.px': number; }",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "hover",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'app-icon-button',\n\ttemplateUrl: './icon-button.component.html',\n\tstyleUrls: ['./icon-button.component.scss'],\n})\nexport class IconButtonComponent {\n\thover = false;\n\t@Input() hoverColor: string;\n\t@Input() color: string;\n\t@Input() width = 15;\n\t@Input() iconFilename: string;\n\t@Input() height = 15;\n\t@Input() tooltipText = '';\n\tconstructor() {}\n\n\ticonSvgStyle(hover: boolean) {\n\t\treturn {\n\t\t\tfill: hover ? this.hoverColor : this.color,\n\t\t\t// stroke: hover ? this.hoverColor : this.color,\n\t\t\t'width.px': this.width,\n\t\t\t'height.px': this.height,\n\t\t};\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.btn {\r\n  &:hover {\r\n    background: $graySelect;\r\n  }\r\n}\r\n\r\n.icon-btn {\r\n  padding: 5px 8px !important;\r\n}\r\n",
                    "styleUrl": "./icon-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "templateData": "<div class=\"h-100 d-flex align-items-center\">\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn h-100 icon-btn\"\r\n    (mouseenter)=\"hover = true\"\r\n    (mouseleave)=\"hover = false\"\r\n  >\r\n    <svg-icon\r\n      [svgStyle]=\"iconSvgStyle(hover)\"\r\n      src=\"assets/img/custom/{{ iconFilename }}\"\r\n      [matTooltip]=\"tooltipText\"\r\n      matTooltipPosition=\"right\"\r\n    ></svg-icon>\r\n  </button>\r\n</div>\r\n"
        },
        {
            "name": "InstancesComponent",
            "id": "component-InstancesComponent-ca49c32436e640d92321880f5ab38c7d282ca5f857241cb10e4af884260244f0788f35c5230b1c8ac058d1b72b1641a125c0df25af16a1ac9ba99447a24dfeac",
            "file": "src/app/layout/dashboard-layout/pages/instances/instances.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-instances",
            "styleUrls": [
                "./instances.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./instances.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "accountId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "faTrash",
                    "defaultValue": "faTrash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "hoverIndex",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "instancesPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SeekPage<Instance>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeHelperService",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "instance",
                            "type": "Instance",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "instance",
                            "type": "Instance",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "viewRuns",
                    "args": [
                        {
                            "name": "instance",
                            "type": "Instance",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "instance",
                            "type": "Instance",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SeekPage } from '../../../common-layout/service/seek-page';\nimport { Instance } from '../../../common-layout/model/instance.interface';\nimport { TimeHelperService } from '../../../common-layout/service/time-helper.service';\nimport { ThemeService } from '../../../common-layout/service/theme.service';\nimport { NavigationService } from '../../service/navigation.service';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { ConfirmDeleteModalComponent } from '../../../common-layout/components/confirm-delete-modal/confirm-delete-modal.component';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { InstanceService } from '../../../common-layout/service/instance.service';\nimport { InstanceStatus } from '../../../common-layout/model/enum/instance-status';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n\tselector: 'app-instances',\n\ttemplateUrl: './instances.component.html',\n\tstyleUrls: ['./instances.component.scss'],\n})\nexport class InstancesComponent implements OnInit {\n\tinstancesPage: SeekPage<Instance>;\n\taccountId: string;\n\thoverIndex: number = -1;\n\tfaTrash = faTrash;\n\tbsModalRef: BsModalRef;\n\n\tconstructor(\n\t\tprivate actRoute: ActivatedRoute,\n\t\tprivate instanceService: InstanceService,\n\t\tprivate navigationService: NavigationService,\n\t\tprivate modalService: BsModalService,\n\t\tpublic themeService: ThemeService,\n\t\tprivate router: Router,\n\t\tpublic timeHelperService: TimeHelperService,\n\t\tprivate snackbar: MatSnackBar\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.navigationService.setTitle('Instances');\n\t\tthis.actRoute.data.subscribe(value => {\n\t\t\tthis.instancesPage = value['instances'];\n\t\t});\n\t}\n\n\tviewRuns(instance: Instance, i: number) {\n\t\tthis.actRoute.queryParams.subscribe(queryParams => {\n\t\t\tlet newQ = JSON.parse(JSON.stringify(queryParams));\n\t\t\tnewQ.instanceId = instance.id;\n\t\t\tthis.router.navigate(['/runs'], { queryParams: newQ });\n\t\t});\n\t}\n\n\tdelete(instance: Instance, i: number) {\n\t\tthis.bsModalRef = this.modalService.show(ConfirmDeleteModalComponent);\n\t\tthis.bsModalRef.content.entityName = instance.pieceDisplayName;\n\t\tlet row = this.instancesPage.data[i];\n\t\tthis.bsModalRef.content.confirmState.subscribe(value => {\n\t\t\tif (value) {\n\t\t\t\tthis.instancesPage.data.splice(\n\t\t\t\t\tthis.instancesPage.data.findIndex(f => f.id === row.id),\n\t\t\t\t\t1\n\t\t\t\t);\n\t\t\t\tthis.instanceService.delete(instance.id).subscribe({\n\t\t\t\t\tnext: () => {},\n\t\t\t\t\terror: (error: HttpErrorResponse) => {\n\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\tthis.snackbar.open('Error occured during deleting instance, please check your console.', '', {\n\t\t\t\t\t\t\tduration: undefined,\n\t\t\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tget instanceStatus() {\n\t\treturn InstanceStatus;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/assets/scss/custom/variables';\r\n\r\n.account-name{\r\n  color: $formLabel;\r\n}\r\n",
                    "styleUrl": "./instances.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "instanceService",
                        "type": "InstanceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "instanceService",
                        "type": "InstanceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "instanceStatus": {
                    "name": "instanceStatus",
                    "getSignature": {
                        "name": "instanceStatus",
                        "type": "",
                        "returnType": "",
                        "line": 78
                    }
                }
            },
            "templateData": "<app-filter-bar [account]=\"true\"></app-filter-bar>\r\n<div class=\" table-responsive\">\r\n  <table class=\" table align-items-center table-flush\">\r\n    <thead class=\" thead-light\">\r\n    <tr>\r\n      <th scope=\"col\">Instance name</th>\r\n      <th scope=\"col\">Status</th>\r\n      <th scope=\"col\">\r\n        Runs\r\n      </th>\r\n      <th scope=\"col\" style=\"width: 15%\">\r\n        Created On\r\n      </th>\r\n      <th scope=\"col\" style=\"width: 10%;\">\r\n\r\n      </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody class=\" list\">\r\n    <tr *ngFor=\"let instance of instancesPage.data; let i=index\" (mouseenter)=\"hoverIndex = i\" (mouseleave)=\"hoverIndex = -1\">\r\n      <th scope=\"row\">\r\n        <span>{{instance.pieceDisplayName}}</span>\r\n        <span class=\"mr-2\"></span>\r\n        <span class=\"account-name text-xm\">/</span>\r\n        <span class=\"ml-2 account-name text-xm\">{{instance.accountDisplayName}}</span>\r\n        <span class=\"td-description\">{{instance.id}}</span>\r\n      </th>\r\n      <td>\r\n          <span *ngIf=\"instance.status === instanceStatus.RUNNING\"><svg-icon src=\"assets/img/custom/play.svg\" [svgStyle]=\"{'fill': themeService.SUCCESS_COLOR,'width.px': 14}\"></svg-icon><span class=\"ml-1 text-success\">Running</span></span>\r\n          <span *ngIf=\"instance.status === instanceStatus.PAUSED\"><svg-icon src=\"assets/img/custom/pause.svg\" [svgStyle]=\"{'fill': themeService.WARNING_COLOR,'width.px': 14}\"></svg-icon><span class=\"ml-1 text-warning\">Paused</span></span>\r\n      </td>\r\n      <td>\r\n        <div style=\"width: 30px;\" class=\"text-center {{this.hoverIndex === i ? 'hyper-number' : ''}}\"\r\n             (click)=\"viewRuns(instance, i)\">{{this.instance.runs}}</div>\r\n      </td>\r\n      <td>{{timeHelperService.formatDateTime(instance.epochCreationTime)}}</td>\r\n      <td>\r\n        <div (click)=\"delete(instance, i)\" [ngStyle]=\"{visibility: hoverIndex === i? 'visible': 'hidden', float: 'right'}\" class=\"ml-4 btn btn-icon-white\">\r\n          <fa-icon [icon]=\"faTrash\"></fa-icon>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n"
        },
        {
            "name": "InstancesFilterComponent",
            "id": "component-InstancesFilterComponent-16ae5080c5b08f216edaa720528a7277a014a64d6f5eaedcbbc6163ae812d3eaf2302049932d464945e3b4d281450755323518b7361154b123569889a1de982c",
            "file": "src/app/layout/dashboard-layout/components/instances-filter/instances-filter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-instances-filter",
            "styleUrls": [
                "./instances-filter.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./instances-filter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faChevronDown",
                    "defaultValue": "faChevronDown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "opened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "searchForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "wasInside",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "applyFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "changeInstanceId",
                    "args": [
                        {
                            "name": "newValue",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newValue",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clickInside",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                },
                {
                    "name": "clickOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click'"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36
                },
                {
                    "name": "document:click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n\tselector: 'app-instances-filter',\n\ttemplateUrl: './instances-filter.component.html',\n\tstyleUrls: ['./instances-filter.component.css'],\n})\nexport class InstancesFilterComponent implements OnInit {\n\tfaChevronDown = faChevronDown;\n\topened = false;\n\twasInside = false;\n\n\tselectedValue: any;\n\tsearchForm: FormGroup;\n\n\tconstructor(private formBuilder: FormBuilder, private router: Router, private actRoute: ActivatedRoute) {\n\t\tthis.searchForm = this.formBuilder.group({\n\t\t\tinstanceId: [, []],\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.selectedValue = undefined;\n\t\tthis.actRoute.queryParams.subscribe(value => {\n\t\t\tthis.selectedValue = value['instanceId'];\n\t\t\tif (this.selectedValue) {\n\t\t\t\tthis.searchForm.controls['instanceId'].setValue(this.selectedValue);\n\t\t\t}\n\t\t});\n\t}\n\n\t@HostListener('click')\n\tclickInside() {\n\t\tthis.wasInside = true;\n\t}\n\n\t@HostListener('document:click')\n\tclickOut() {\n\t\tif (!this.wasInside) {\n\t\t\tthis.opened = false;\n\t\t}\n\t\tthis.wasInside = false;\n\t}\n\n\tapplyFilter() {\n\t\tif (this.searchForm.invalid) return;\n\t\tthis.opened = false;\n\t\tlet value = this.searchForm.value.instanceId;\n\t\tthis.changeInstanceId(value && value.length > 0 ? value : undefined);\n\t}\n\n\tchangeInstanceId(newValue: string | undefined) {\n\t\tthis.opened = false;\n\t\tthis.actRoute.queryParams.subscribe(queryParams => {\n\t\t\tlet newQ = JSON.parse(JSON.stringify(queryParams));\n\t\t\tnewQ.instanceId = newValue;\n\t\t\tthis.router.navigate([], { queryParams: newQ });\n\t\t});\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-control{\r\n  padding: 0.22rem 0.625rem !important;\r\n  height: 32px;\r\n}\r\n",
                    "styleUrl": "./instances-filter.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  [ngStyle]=\"{\r\n        width: '350px',\r\n        position: 'relative'\r\n     }\"\r\n  class=\"form-group\">\r\n  <div class=\"form-control\" (click)=\"opened = !opened\"\r\n       style=\"    padding: 0.625rem 0.75rem;     border: 1px solid #CED4DA;\">\r\n    <span class=\"ml-1 text-default no-select\">{{selectedValue === undefined ? 'All Instances' : selectedValue}}</span>\r\n    <span style=\"float: right;\">\r\n      <fa-icon [icon]=\"faChevronDown\"></fa-icon>\r\n  </span>\r\n  </div>\r\n  <div class=\"dropdown-menu {{opened?'show': ''}}\" style=\"min-width: 100%;\">\r\n    <a class=\"dropdown-item\" (click)=\"changeInstanceId(undefined)\">\r\n      <span class=\"ml-1 text-default no-select\">All Instances</span>\r\n      <img *ngIf=\"selectedValue === undefined\" class=\"no-select float-right text-primary\" height=\"16\" width=\"16\"\r\n           src=\"../assets/img/custom/check.svg\"/>\r\n    </a>\r\n    <form class=\"p-3\" [formGroup]=\"searchForm\">\r\n      <input id=\"accountName\" class=\"form-control\"\r\n             formControlName=\"instanceId\"\r\n             placeholder=\"fcc43720-97f6-463e-b72f-2480ac0719b3\" type=\"text\">\r\n             <app-button\r\n             btnColor=\"primary\"\r\n             [fullWidthOfContainer]=\"true\"\r\n             class=\"float-right ml-3 mt-3\"\r\n             type=\"submit\"\r\n             (click)=\"applyFilter()\"\r\n             btnSize=\"small\"\r\n           >Apply\r\n           </app-button>\r\n\r\n           <app-button\r\n           btnColor=\"basic\"\r\n           [fullWidthOfContainer]=\"true\"\r\n           class=\"float-right mt-3\"\r\n           type=\"submit\"\r\n           (click)=\"changeInstanceId(undefined)\"\r\n           btnSize=\"small\"\r\n         >Clear\r\n         </app-button>\r\n\r\n    </form>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n"
        },
        {
            "name": "IterationAccordionComponent",
            "id": "component-IterationAccordionComponent-f63fed2c54e5aa219d8a6e5555ecae1670d7e32fd47f4af1efd9559d3672a124aea659aa81dff4d04731635782fc1e18e51fabcb43eb06cb4af0f566bb3ec077",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/run-details/steps-results-list/iteration-accordion/iteration-accordion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-iteration-accordion",
            "styleUrls": [
                "./iteration-accordion.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./iteration-accordion.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iterationIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "IterationResults",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "literal type[]",
                    "decorators": []
                },
                {
                    "name": "nestingLevel",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "selectedStepName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "stopPropagation",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { StepResult } from 'src/app/layout/common-layout/model/instance-run.interface';\r\n\r\n@Component({\r\n\tselector: 'app-iteration-accordion',\r\n\ttemplateUrl: './iteration-accordion.component.html',\r\n\tstyleUrls: ['./iteration-accordion.component.css'],\r\n})\r\nexport class IterationAccordionComponent {\r\n\t@Input() iterationIndex: number;\r\n\t@Input() IterationResults: { stepName: string; result: StepResult }[];\r\n\t@Input() selectedStepName: string | undefined;\r\n\t@Input() nestingLevel = 0;\r\n\tconstructor() {}\r\n\r\n\tstopPropagation(event: MouseEvent) {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-accordion .mat-expansion-panel {\r\n  border-radius: 0px;\r\n  box-shadow: unset !important;\r\n}",
                    "styleUrl": "./iteration-accordion.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "templateData": "<app-step-result\r\n  *ngFor=\"let iteration of IterationResults\"\r\n  [stepNameAndResult]=\"iteration\"\r\n  [selectedStepName]=\"selectedStepName\"\r\n  [nestingLevel]=\"nestingLevel\"\r\n></app-step-result>\r\n"
        },
        {
            "name": "JsonViewComponent",
            "id": "component-JsonViewComponent-b87d2b964e6c7ddc0893e6bd6691f9a49e5b5f61a9f1eb362da83639db521f4fef8d40af0e2e6fa991470185990fbef01dfa7a569705144263e05c156a1a620c",
            "file": "src/app/layout/common-layout/components/json-view/json-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-json-viewer",
            "styleUrls": [
                "./json-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./json-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "maxHeight",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number | undefined",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "highlight",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { HighlightService } from '../../service/highlightservice';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { JsonViewModalComponent } from '../json-view-modal/json-view-modal.component';\r\n\r\n@Component({\r\n\tselector: 'app-json-viewer',\r\n\ttemplateUrl: './json-view.component.html',\r\n\tstyleUrls: ['./json-view.component.scss'],\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class JsonViewComponent implements AfterViewInit {\r\n\thighlight = false;\r\n\r\n\t@Input() title: string;\r\n\t@Input() maxHeight: number | undefined = undefined;\r\n\r\n\t_content: any;\r\n\tget content(): any {\r\n\t\treturn this._content;\r\n\t}\r\n\t@Input() set content(value: any) {\r\n\t\tthis.highlight = false;\r\n\t\tthis._content = value;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.highlightService.highlightAll();\r\n\t\t}, 10);\r\n\t}\r\n\r\n\tprivate bsModalRef: BsModalRef;\r\n\r\n\tconstructor(private modalService: BsModalService, private highlightService: HighlightService) {}\r\n\r\n\tngAfterViewInit(): void {\r\n\t\tif (!this.highlight) {\r\n\t\t\tthis.highlight = true;\r\n\t\t\tthis.highlightService.highlightAll();\r\n\t\t}\r\n\t}\r\n\r\n\topenModal() {\r\n\t\tthis.bsModalRef = this.modalService.show(JsonViewModalComponent, { class: 'modal-xl' });\r\n\t\tthis.bsModalRef.content.json = this.content;\r\n\t\tthis.bsModalRef.content.title = this.title;\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/assets/scss/custom/variables';\r\n\r\n.code-container{\r\n  background: #FFFFFF;\r\n  box-shadow: inset 0px 0px 0px 1px $dividers;\r\n  border-radius: 4px;\r\n}\r\n\r\n.code-area{\r\n  background: $white;\r\n  border: 1px solid $dividers;\r\n  box-sizing: border-box;\r\n  border-radius: 0px 0px 4px 4px;\r\n\r\n}\r\n\r\n.code-header{\r\n  padding: 0.625rem 1rem;\r\n}\r\n",
                    "styleUrl": "./json-view.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "highlightService",
                        "type": "HighlightService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "highlightService",
                        "type": "HighlightService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "accessors": {
                "content": {
                    "name": "content",
                    "setSignature": {
                        "name": "content",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 22,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "any",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "content",
                        "type": "any",
                        "returnType": "any",
                        "line": 19
                    }
                }
            },
            "templateData": "<div class=\"code-container\">\r\n  <div class=\"code-header d-flex\">\r\n    <div style=\"flex-grow: 1;\">\r\n      <span class=\"font-weight-600\">{{title}}</span>\r\n    </div>\r\n    <div>\r\n      <app-img [src]=\"'/assets/img/custom/maximize-black.svg'\" [width]=\"16\" [height]=\"16\"\r\n              style=\"cursor:pointer; color: black;\" (click)=\"openModal()\"></app-img>\r\n    </div>\r\n  </div>\r\n  <div class=\"code-area\">\r\n    <pre class=\"line-numbers\" style=\"{{maxHeight !== undefined ? '': 'max-height:' + maxHeight + 'px'}}\"><code class=\"language-js\"\r\n                                    [innerHTML]=\"content | outputLog\"></code></pre>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "JsonViewModalComponent",
            "id": "component-JsonViewModalComponent-bc8b7b83c99120339b6fc161e2c6499be1be1737caf1655d9b1fa7c7993e5cbeb45b9fc9a130a460710570b83df4b725e221d2e0fb400bda1214681d058ac9fd",
            "file": "src/app/layout/common-layout/components/json-view-modal/json-view-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-json-view-modal",
            "styleUrls": [
                "./json-view-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./json-view-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "json",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_json",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "highlight",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, Input } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { HighlightService } from '../../service/highlightservice';\n\n@Component({\n\tselector: 'app-json-view-modal',\n\ttemplateUrl: './json-view-modal.component.html',\n\tstyleUrls: ['./json-view-modal.component.scss'],\n})\nexport class JsonViewModalComponent implements AfterViewInit {\n\thighlight = false;\n\n\t_json: any;\n\n\t@Input() title: string;\n\n\tget json(): boolean {\n\t\treturn this._json;\n\t}\n\t@Input() set json(value: boolean) {\n\t\tthis.highlight = false;\n\t\tthis._json = value;\n\t\tsetTimeout(() => {\n\t\t\tthis.highlightService.highlightAll();\n\t\t}, 10);\n\t}\n\n\tconstructor(public bsModalRef: BsModalRef, private highlightService: HighlightService) {}\n\n\tngAfterViewInit(): void {\n\t\tif (!this.highlight) {\n\t\t\tthis.highlight = true;\n\t\t\tthis.highlightService.highlightAll();\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/assets/scss/custom/variables';\r\n\r\n.code-area{\r\n  background: $white;\r\n  border: 1px solid $dividers;\r\n  box-sizing: border-box;\r\n  border-radius: 0px 0px 4px 4px;\r\n}\r\n\r\n\r\n.max-height{\r\n  max-height: 800px;\r\n}\r\n\r\n.space-wrap{\r\n  white-space: pre-wrap !important;;\r\n}\r\n\r\n.close-custom{\r\n  font-size: 2rem !important;\r\n  color: $body !important;\r\n}\r\n",
                    "styleUrl": "./json-view-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "highlightService",
                        "type": "HighlightService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "highlightService",
                        "type": "HighlightService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "accessors": {
                "json": {
                    "name": "json",
                    "setSignature": {
                        "name": "json",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 20,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "json",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 17
                    }
                }
            },
            "templateData": "<div class=\"modal-header\">\r\n  <h5 class=\"modal-title pull-left\">{{title}}</h5>\r\n  <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef?.hide()\">\r\n    <span aria-hidden=\"true\" class=\"close-custom visually-hidden\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <div class=\"code-area\">\r\n    <pre class=\"line-numbers max-height\"><code class=\"space-wrap language-js\"\r\n                                    [innerHTML]=\"json | rawOutputLog\"></code></pre>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "LoadingIconComponent",
            "id": "component-LoadingIconComponent-a4cc7b3fa5f621ce382b579fb64b45a805e42d71869ef488e7280575d64f38ddaebfa554d803e06f7420dc50a73d0f03dc2c224c6b953b3af84a30f0d1b3069a",
            "file": "src/app/layout/common-layout/components/loading-icon/loading-icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loading-icon",
            "styleUrls": [
                "./loading-icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loading-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "whiteLoader",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'app-loading-icon',\n\ttemplateUrl: './loading-icon.component.html',\n\tstyleUrls: ['./loading-icon.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoadingIconComponent {\n\t@Input() whiteLoader = false;\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n@keyframes loading-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.loading-spin-animation {\r\n  animation-name: loading-spin;\r\n  animation-duration: 1s;\r\n  animation-iteration-count: infinite;\r\n  animation-timing-function: linear;\r\n  fill: $description;\r\n}\r\n\r\n.white-loader{\r\n  fill: $white;\r\n}\r\n",
                    "styleUrl": "./loading-icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "templateData": "<svg-icon\r\n  src=\"assets/img/custom/loading.svg\"\r\n  class=\"loading-spin-animation white-loader\"\r\n  *ngIf=\"whiteLoader\"\r\n  [applyClass]=\"true\"\r\n></svg-icon>\r\n<svg-icon\r\n  src=\"assets/img/custom/loading.svg\"\r\n  class=\"loading-spin-animation\"\r\n  *ngIf=\"!whiteLoader\"\r\n  [applyClass]=\"true\"\r\n></svg-icon>\r\n"
        },
        {
            "name": "LoadingSkeletonComponent",
            "id": "component-LoadingSkeletonComponent-c7403006415475bbb71f2e3e8fa0e0a693ecc295ce2ee49633bf2b93fa69f280b894e2990f50de9452c261e761f57fa450d2df23cf96d29840840333418dec9c",
            "file": "src/app/layout/common-layout/components/loading-skeleton/loading-skeleton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loading-skeleton",
            "styleUrls": [
                "./loading-skeleton.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./loading-skeleton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "emptyArray",
                    "defaultValue": "[{}, {}, {}]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-loading-skeleton',\n\ttemplateUrl: './loading-skeleton.component.html',\n\tstyleUrls: ['./loading-skeleton.component.css'],\n})\nexport class LoadingSkeletonComponent {\n\temptyArray = [{}, {}, {}];\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./loading-skeleton.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div class=\"row mb-4 mt-3\">\r\n  <div class=\"col-5\">\r\n    <ngx-skeleton-loader  count=\"1\"\r\n                          appearance=\"line\"></ngx-skeleton-loader>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row mb-2\"  *ngFor=\"let row of emptyArray\">\r\n  <div class=\"col-4\">\r\n    <ngx-skeleton-loader  count=\"1\"\r\n                          appearance=\"line\"></ngx-skeleton-loader>\r\n  </div>\r\n\r\n  <div class=\"col-1\">\r\n\r\n  </div>\r\n  <div class=\"col-3\">\r\n    <ngx-skeleton-loader  count=\"1\"\r\n                          appearance=\"line\"></ngx-skeleton-loader>\r\n  </div>\r\n  <div class=\"col-3\">\r\n    <ngx-skeleton-loader  count=\"1\"\r\n                          appearance=\"line\"></ngx-skeleton-loader>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "LongTextFormControlComponent",
            "id": "component-LongTextFormControlComponent-81ac2f1d49f7b6fe6e9d065bfa05c6ea9929734609c341f233dc270ea5fa3f73fbc9679e3110ef7f5e9fcb957849532df714e47391a7420eaf0f725eaf3f240d",
            "file": "src/app/layout/common-layout/components/form-controls/long-text-form-control/long-text-form-control.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: LongTextFormControlComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-long-text-form-control",
            "styleUrls": [
                "./long-text-form-control.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./long-text-form-control.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "applyInvalidFormControlCss",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueEditted",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "change",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "change",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "touched",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "touched",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "valueChanged",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "newValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n\tselector: 'app-long-text-form-control',\n\ttemplateUrl: './long-text-form-control.component.html',\n\tstyleUrls: ['./long-text-form-control.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: LongTextFormControlComponent,\n\t\t},\n\t],\n})\nexport class LongTextFormControlComponent implements ControlValueAccessor {\n\t@Output()\n\tvalueEditted = new EventEmitter();\n\t@Input()\n\tplaceholder: string = '';\n\t@Input()\n\tapplyInvalidFormControlCss = false;\n\tvalue: string = '';\n\tdisabled = false;\n\tonChange = (newValue: string) => {};\n\tonTouched = () => {};\n\tconstructor() {}\n\twriteValue(newValue: string): void {\n\t\tthis.value = newValue;\n\t}\n\tregisterOnChange(change: any): void {\n\t\tthis.onChange = change;\n\t}\n\tregisterOnTouched(touched: any): void {\n\t\tthis.onTouched = touched;\n\t}\n\tsetDisabledState(disabled: boolean) {\n\t\tconsole.log(disabled);\n\t\tthis.disabled = disabled;\n\t}\n\n\tvalueChanged(event: Event) {\n\t\tthis.value = (event.target as HTMLDivElement).textContent\n\t\t\t? ((event.target as HTMLDivElement).textContent as string)\n\t\t\t: '';\n\t\tthis.valueEditted.emit(this.value);\n\t\tthis.onChange(this.value);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"/src/assets/scss/custom/variables\";\r\n.long-text-input {\r\n  outline: 0;\r\n  height: unset;\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n}\r\n.long-text-input:empty:not(:focus)::before {\r\n  content: attr(placeholder);\r\n  color: $placeholder;\r\n}\r\n\r\n.long-text-input.disabled {\r\n  word-break: break-all;\r\n}\r\n",
                    "styleUrl": "./long-text-form-control.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<div\r\n  [attr.contenteditable]=\"!disabled\"\r\n  class=\"form-control long-text-input\"\r\n  [class.disabled]=\"disabled\"\r\n  (input)=\"valueChanged($event)\"\r\n  [textContent]=\"value\"\r\n  [attr.placeholder]=\"placeholder\"\r\n  [class.invalid-form-control]=\"applyInvalidFormControlCss\"\r\n></div>\r\n"
        },
        {
            "name": "LoopLineConnectionComponent",
            "id": "component-LoopLineConnectionComponent-85565782481e5c4ee1775499541adaa8d627356799a7d08c6ed9531386b1be0fe69f4fac555672800420281496c230229aa6436b788957f85d7f1ea976599611",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/loop-line-connection/loop-line-connection.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loop-line-connection",
            "styleUrls": [
                "./loop-line-connection.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loop-line-connection.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "flowItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "LoopOnItemActionInterface",
                    "decorators": []
                },
                {
                    "name": "viewMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_flowItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LoopOnItemActionInterface",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "addButtonAndFlowItemNameContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AddButtonAndFlowItemNameContainer",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "addButtonLeft",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "addButtonTop",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "addButtonView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'addButton'"
                        }
                    ]
                },
                {
                    "name": "afterLoopAddButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'afterLoopAddButton'"
                        }
                    ]
                },
                {
                    "name": "afterLoopAddButtonLeft",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "afterLoopAddButtonTop",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "afterLoopArrowCommand",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "afterLoopArrowHeadLeft",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "afterLoopArrowHeadTop",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "arrowHeadLeft",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "arrowHeadTop",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "drawer",
                    "defaultValue": "new Drawer()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Drawer",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "emptyLoopAddButtonLeftOffset",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "emptyLoopAddButtonTopOffset",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "emptyLoopAddButtonView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'emptyLoopAddButton'"
                        }
                    ]
                },
                {
                    "name": "showDropArea$",
                    "defaultValue": "new Observable<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "showEmptyLoopAddButtonBoxShadow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "startingLoopLineDrawCommand",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "svgHeight",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56
                }
            ],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 199,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addLoopItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "calculateEmptyLoopAddButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "calculateOffsetAfterLoop",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "calculateOffsetBeforeFirstAction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "findReturningVerticalLineLength",
                    "args": [
                        {
                            "name": "subGraph",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "subGraph",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "insertAddButtonToRendererServiceListOfContainers",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loopItemStyle",
                    "args": [],
                    "optional": false,
                    "returnType": "{ width: string; height: string; top: string; left: string; position: string; }",
                    "typeParameters": [],
                    "line": 232,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeAfterArrow",
                    "args": [
                        {
                            "name": "childFlowsGraphHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "childFlowsGraphHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeLines",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeLoopClosing",
                    "args": [
                        {
                            "name": "childFlowsGraphHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "childFlowsGraphHeight",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeStartingLine",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n\tChangeDetectionStrategy,\r\n\tComponent,\r\n\tElementRef,\r\n\tInput,\r\n\tOnChanges,\r\n\tSimpleChanges,\r\n\tViewChild,\r\n} from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { RightSideBarType } from 'src/app/layout/common-layout/model/enum/right-side-bar-type.enum';\r\nimport { AddButtonAndFlowItemNameContainer } from 'src/app/layout/common-layout/model/flow-builder/flow-add-button';\r\nimport { FlowRendererService } from 'src/app/layout/flow-builder/service/flow-renderer.service';\r\nimport {\r\n\tADD_BUTTON_SIZE,\r\n\tARC_LENGTH,\r\n\tARROW_HEAD_SIZE,\r\n\tDrawer,\r\n\tEMPTY_LOOP_ADD_BUTTON_HEIGHT,\r\n\tFLOW_ITEM_HEIGHT,\r\n\tFLOW_ITEM_WIDTH,\r\n\tHORZIONTAL_LINE_LENGTH,\r\n\tSPACE_BETWEEN_ITEM_CONTENT_AND_LINE,\r\n\tVERTICAL_LINE_LENGTH,\r\n} from '../draw-utils';\r\nimport { LoopOnItemActionInterface } from '../../../../../../../common-layout/model/flow-builder/actions/loop-action.interface';\r\nimport { AddButtonType } from '../../../../../../../common-layout/model/enum/add-button-type';\r\nimport { FlowsActions } from '../../../../../../store/action/flows.action';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n\tselector: 'app-loop-line-connection',\r\n\ttemplateUrl: './loop-line-connection.component.html',\r\n\tstyleUrls: ['./loop-line-connection.component.scss'],\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LoopLineConnectionComponent implements OnChanges {\r\n\t@ViewChild('addButton') addButtonView: ElementRef;\r\n\t@ViewChild('emptyLoopAddButton') emptyLoopAddButtonView: ElementRef;\r\n\t@ViewChild('afterLoopAddButton') afterLoopAddButton: ElementRef;\r\n\tafterLoopArrowCommand = '';\r\n\tstartingLoopLineDrawCommand = '';\r\n\tarrowHeadLeft: number = 0;\r\n\tarrowHeadTop: number = 0;\r\n\tdrawer: Drawer = new Drawer();\r\n\taddButtonAndFlowItemNameContainer: AddButtonAndFlowItemNameContainer;\r\n\taddButtonTop = '0px';\r\n\taddButtonLeft = '0px';\r\n\temptyLoopAddButtonTopOffset = '0px';\r\n\temptyLoopAddButtonLeftOffset = '0px';\r\n\tafterLoopAddButtonTop = '0px';\r\n\tafterLoopAddButtonLeft = '0px';\r\n\tafterLoopArrowHeadLeft: number = 0;\r\n\tafterLoopArrowHeadTop: number = 0;\r\n\tshowEmptyLoopAddButtonBoxShadow = false;\r\n\tsvgHeight: number = 0;\r\n\r\n\t_flowItem: LoopOnItemActionInterface;\r\n\r\n\tshowDropArea$: Observable<boolean> = new Observable<boolean>();\r\n\r\n\t@Input() viewMode: boolean;\r\n\r\n\t@Input() set flowItem(value: LoopOnItemActionInterface) {\r\n\t\tthis._flowItem = value;\r\n\t\tthis.svgHeight = this.flowItem.connectionsBox!.height;\r\n\t\tthis.writeLines();\r\n\t\tthis.calculateOffsetBeforeFirstAction();\r\n\t\tthis.calculateOffsetAfterLoop();\r\n\t\tthis.calculateEmptyLoopAddButton();\r\n\t}\r\n\r\n\tget flowItem() {\r\n\t\treturn this._flowItem;\r\n\t}\r\n\r\n\tconstructor(private store: Store, private flowRendererService: FlowRendererService) {\r\n\t\tthis.showDropArea$ = this.flowRendererService.draggingSubject;\r\n\t}\r\n\r\n\twriteLines() {\r\n\t\tconst commands: string[] = [];\r\n\t\tlet childFlowsGraphHeight: number;\r\n\t\tif (this.flowItem.firstLoopAction === undefined || this.flowItem.firstLoopAction === null) {\r\n\t\t\tchildFlowsGraphHeight = EMPTY_LOOP_ADD_BUTTON_HEIGHT + SPACE_BETWEEN_ITEM_CONTENT_AND_LINE + VERTICAL_LINE_LENGTH;\r\n\t\t} else {\r\n\t\t\tchildFlowsGraphHeight = this.flowItem.firstLoopAction.boundingBox!.height;\r\n\t\t}\r\n\t\tcommands.push(...this.writeStartingLine());\r\n\t\tcommands.push(...this.writeLoopClosing(childFlowsGraphHeight));\r\n\t\tcommands.push(...this.writeAfterArrow(childFlowsGraphHeight));\r\n\t\tthis.startingLoopLineDrawCommand = commands.join(' ');\r\n\t}\r\n\r\n\twriteStartingLine() {\r\n\t\tconst commands: string[] = [];\r\n\t\tcommands.push(this.drawer.move(FLOW_ITEM_WIDTH / 2, SPACE_BETWEEN_ITEM_CONTENT_AND_LINE));\r\n\t\tcommands.push(this.drawer.drawVerticalLine(VERTICAL_LINE_LENGTH));\r\n\t\tcommands.push(this.drawer.drawArc(false, true, true));\r\n\t\tcommands.push(this.drawer.drawHorizontalLine(HORZIONTAL_LINE_LENGTH));\r\n\t\tcommands.push(this.drawer.drawArc(false, true, false));\r\n\t\tcommands.push(this.drawer.drawVerticalLine(VERTICAL_LINE_LENGTH));\r\n\t\treturn commands;\r\n\t}\r\n\r\n\twriteLoopClosing(childFlowsGraphHeight: number) {\r\n\t\tconst commands: string[] = [];\r\n\t\tcommands.push(this.drawer.move(0, SPACE_BETWEEN_ITEM_CONTENT_AND_LINE));\r\n\t\tif (!this.flowItem.firstLoopAction) {\r\n\t\t\tcommands.push(this.drawer.move(0, EMPTY_LOOP_ADD_BUTTON_HEIGHT));\r\n\t\t\tcommands.push(this.drawer.move(0, SPACE_BETWEEN_ITEM_CONTENT_AND_LINE));\r\n\t\t\tcommands.push(this.drawer.drawVerticalLine(VERTICAL_LINE_LENGTH));\r\n\t\t} else {\r\n\t\t\tcommands.push(this.drawer.move(0, childFlowsGraphHeight));\r\n\t\t}\r\n\t\tcommands.push(this.drawer.drawArc(true, true, false));\r\n\t\tcommands.push(this.drawer.drawHorizontalLine(-2.5 * HORZIONTAL_LINE_LENGTH));\r\n\t\tcommands.push(this.drawer.drawArc(true, false, false));\r\n\t\tconst returningVerticalLineToBeginingLength = this.findReturningVerticalLineLength(childFlowsGraphHeight);\r\n\t\tcommands.push(this.drawer.drawVerticalLine(-returningVerticalLineToBeginingLength));\r\n\t\tcommands.push(this.drawer.drawArc(false, false, false));\r\n\t\tcommands.push(this.drawer.drawHorizontalLine(HORZIONTAL_LINE_LENGTH));\r\n\t\treturn commands;\r\n\t}\r\n\r\n\twriteAfterArrow(childFlowsGraphHeight: number) {\r\n\t\tconst commands: string[] = [];\r\n\t\tcommands.push(\r\n\t\t\tthis.drawer.move(\r\n\t\t\t\t0.5 * HORZIONTAL_LINE_LENGTH - ARC_LENGTH,\r\n\t\t\t\tARC_LENGTH + VERTICAL_LINE_LENGTH + SPACE_BETWEEN_ITEM_CONTENT_AND_LINE + childFlowsGraphHeight + ARC_LENGTH\r\n\t\t\t)\r\n\t\t);\r\n\t\tcommands.push(this.drawer.drawVerticalLine(VERTICAL_LINE_LENGTH));\r\n\t\treturn commands;\r\n\t}\r\n\r\n\tinsertAddButtonToRendererServiceListOfContainers() {\r\n\t\tif (this.flowItem.firstLoopAction) {\r\n\t\t\tthis.addButtonAndFlowItemNameContainer = new AddButtonAndFlowItemNameContainer(\r\n\t\t\t\tthis.addButtonView.nativeElement,\r\n\t\t\t\tthis.flowItem.name\r\n\t\t\t);\r\n\t\t\tthis.flowRendererService.addButtonsWithStepNamesContainers.push(this.addButtonAndFlowItemNameContainer);\r\n\t\t} else {\r\n\t\t\tthis.addButtonAndFlowItemNameContainer = new AddButtonAndFlowItemNameContainer(\r\n\t\t\t\tthis.emptyLoopAddButtonView.nativeElement,\r\n\t\t\t\tthis.flowItem.name\r\n\t\t\t);\r\n\t\t\tthis.flowRendererService.addButtonsWithStepNamesContainers.push(this.addButtonAndFlowItemNameContainer);\r\n\t\t}\r\n\t}\r\n\r\n\tcalculateEmptyLoopAddButton() {\r\n\t\tconst leftOffset = HORZIONTAL_LINE_LENGTH + 11;\r\n\t\tconst topOffset = VERTICAL_LINE_LENGTH * 2 + ARC_LENGTH * 2 + 2 * SPACE_BETWEEN_ITEM_CONTENT_AND_LINE;\r\n\t\tthis.emptyLoopAddButtonTopOffset = `${topOffset}px`;\r\n\t\tthis.emptyLoopAddButtonLeftOffset = `calc(50% + ${leftOffset}px`;\r\n\t}\r\n\r\n\tcalculateOffsetBeforeFirstAction() {\r\n\t\tlet lineStrokeOffset = 1;\r\n\t\tlet leftOffset = FLOW_ITEM_WIDTH / 2 + ARC_LENGTH + HORZIONTAL_LINE_LENGTH + ARC_LENGTH;\r\n\t\tlet topOffset =\r\n\t\t\tVERTICAL_LINE_LENGTH + ARC_LENGTH + ARC_LENGTH + VERTICAL_LINE_LENGTH - SPACE_BETWEEN_ITEM_CONTENT_AND_LINE;\r\n\t\tthis.arrowHeadLeft = leftOffset - (ARROW_HEAD_SIZE.width / 2.0 + lineStrokeOffset);\r\n\t\tthis.arrowHeadTop = topOffset + ARROW_HEAD_SIZE.height;\r\n\r\n\t\tthis.addButtonLeft = leftOffset - ADD_BUTTON_SIZE.width / 2.0 + 'px';\r\n\t\tthis.addButtonTop = topOffset - VERTICAL_LINE_LENGTH / 2.0 + 'px';\r\n\t}\r\n\r\n\tcalculateOffsetAfterLoop() {\r\n\t\tconst topOffset =\r\n\t\t\tthis.flowItem.connectionsBox!.height -\r\n\t\t\tSPACE_BETWEEN_ITEM_CONTENT_AND_LINE -\r\n\t\t\t(this.flowItem.nextAction ? SPACE_BETWEEN_ITEM_CONTENT_AND_LINE : 0);\r\n\t\tthis.afterLoopAddButtonTop = `${topOffset - VERTICAL_LINE_LENGTH / 2.0 - ADD_BUTTON_SIZE.height / 2.0}px`;\r\n\t\tthis.afterLoopAddButtonLeft = `calc(50% - ${ADD_BUTTON_SIZE.width / 2}px`;\r\n\r\n\t\tlet lineStrokeOffset = 1;\r\n\t\tthis.afterLoopArrowHeadTop = topOffset - ARROW_HEAD_SIZE.height - lineStrokeOffset;\r\n\t\tthis.afterLoopArrowHeadLeft =\r\n\t\t\tthis.flowItem.connectionsBox!.width / 2.0 - ARROW_HEAD_SIZE.width / 2 - lineStrokeOffset;\r\n\t}\r\n\r\n\taddLoopItem() {\r\n\t\tthis.store.dispatch(\r\n\t\t\tFlowsActions.setRightSidebar({\r\n\t\t\t\tsidebarType: RightSideBarType.STEP_TYPE,\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tbuttonType: AddButtonType.FIRST_LOOP_ACTION,\r\n\t\t\t\t\tstepName: this.flowItem.name,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tadd() {\r\n\t\tthis.store.dispatch(\r\n\t\t\tFlowsActions.setRightSidebar({\r\n\t\t\t\tsidebarType: RightSideBarType.STEP_TYPE,\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tbuttonType: AddButtonType.NEXT_ACTION,\r\n\t\t\t\t\tstepName: this.flowItem.name,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tfindReturningVerticalLineLength(subGraph: number) {\r\n\t\treturn subGraph + VERTICAL_LINE_LENGTH + SPACE_BETWEEN_ITEM_CONTENT_AND_LINE;\r\n\t}\r\n\r\n\tngOnChanges(changes: SimpleChanges): void {\r\n\t\tif (\r\n\t\t\tthis.addButtonAndFlowItemNameContainer &&\r\n\t\t\tthis.flowItem.name != this.addButtonAndFlowItemNameContainer.stepName\r\n\t\t) {\r\n\t\t\tconst containerInArray = this.flowRendererService.addButtonsWithStepNamesContainers.find(\r\n\t\t\t\titem => item == this.addButtonAndFlowItemNameContainer\r\n\t\t\t);\r\n\t\t\tif (!containerInArray) {\r\n\t\t\t\tconsole.error('addButtonsWithStepNamesContainer not found');\r\n\t\t\t} else {\r\n\t\t\t\tthis.addButtonAndFlowItemNameContainer.stepName = this.flowItem.name;\r\n\t\t\t\tcontainerInArray.stepName = this.flowItem.name;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tloopItemStyle() {\r\n\t\treturn {\r\n\t\t\twidth: FLOW_ITEM_WIDTH + 'px',\r\n\t\t\theight: FLOW_ITEM_HEIGHT + 'px',\r\n\t\t\ttop:\r\n\t\t\t\tSPACE_BETWEEN_ITEM_CONTENT_AND_LINE +\r\n\t\t\t\tVERTICAL_LINE_LENGTH +\r\n\t\t\t\tARC_LENGTH +\r\n\t\t\t\tARC_LENGTH +\r\n\t\t\t\tVERTICAL_LINE_LENGTH +\r\n\t\t\t\tSPACE_BETWEEN_ITEM_CONTENT_AND_LINE +\r\n\t\t\t\t'px',\r\n\t\t\tleft: FLOW_ITEM_WIDTH / 2 + ARC_LENGTH * 2 + HORZIONTAL_LINE_LENGTH - FLOW_ITEM_WIDTH / 2 + 'px',\r\n\t\t\tposition: 'relative',\r\n\t\t};\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.line-props {\r\n  stroke: $border;\r\n  stroke-width: 2px;\r\n}\r\n.add-button {\r\n  position: absolute;\r\n  height: 17px;\r\n  width: 16px;\r\n\r\n  svg {\r\n    margin-top: -11px;\r\n  }\r\n\r\n  .drop-point-container {\r\n    position: absolute;\r\n    left: -4.5px;\r\n    top: -3.5px;\r\n  }\r\n  .drop-point-border {\r\n    height: $drop-point-height;\r\n    width: $drop-point-width;\r\n    transform: scale(0);\r\n    border: 2px $border dashed;\r\n    border-radius: 5px;\r\n    transition: 200ms transform ease;\r\n  }\r\n}\r\n.group {\r\n  position: relative;\r\n}\r\n\r\n.scale-1 {\r\n  transform: scale(1) !important;\r\n}\r\n\r\n.empty-loop-add-button {\r\n  background-color: #f0f1f3;\r\n  border-radius: 8px;\r\n  height: 40px;\r\n  width: 40px;\r\n  &:hover {\r\n    .empty-loop-icon {\r\n      transform: scale(1.1);\r\n    }\r\n    border: 1px $border dashed;\r\n  }\r\n  &.box-shadow {\r\n    box-shadow: 0px 0px 0px 5px #fafafa;\r\n  }\r\n}\r\n.empty-loop-icon {\r\n  fill: #a6b1bf;\r\n}\r\n",
                    "styleUrl": "./loop-line-connection.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowRendererService",
                        "type": "FlowRendererService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 75,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowRendererService",
                        "type": "FlowRendererService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "accessors": {
                "flowItem": {
                    "name": "flowItem",
                    "setSignature": {
                        "name": "flowItem",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "LoopOnItemActionInterface",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 64,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "LoopOnItemActionInterface",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "flowItem",
                        "type": "",
                        "returnType": "",
                        "line": 73
                    }
                }
            },
            "templateData": "<div class=\"positioned-absolute\">\r\n  <svg [attr.height]=\"this.flowItem.connectionsBox!.height\">\r\n    <g class=\"group\">\r\n      <path\r\n        class=\"line-props\"\r\n        fill=\"transparent\"\r\n        [attr.d]=\"startingLoopLineDrawCommand\"\r\n      />\r\n      <svg [attr.x]=\"arrowHeadLeft\" [attr.y]=\"arrowHeadTop\">\r\n        <path\r\n          class=\"line-props\"\r\n          fill-rule=\"evenodd\"\r\n          d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\r\n        />\r\n      </svg>\r\n      <svg [attr.x]=\"afterLoopArrowHeadLeft\" [attr.y]=\"afterLoopArrowHeadTop\">\r\n        <path\r\n          class=\"line-props\"\r\n          fill-rule=\"evenodd\"\r\n          d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\r\n        />\r\n      </svg>\r\n    </g>\r\n  </svg>\r\n  <div\r\n    class=\"add-button cursor-pointer\"\r\n    (click)=\"addLoopItem()\"\r\n    [style.top]=\"addButtonTop\"\r\n    [style.left]=\"addButtonLeft\"\r\n    *ngIf=\"flowItem.firstLoopAction && !viewMode\"\r\n    #addButton>\r\n    <div class=\"drop-point-container\"  *ngIf=\"showDropArea$ | async as showDropArea\">\r\n      <div class=\"drop-point-border\" [class.scale-1]=\"showDropArea\"></div>\r\n    </div>\r\n    <svg-icon src=\"./assets/img/custom/add-button.svg\"></svg-icon>\r\n  </div>\r\n\r\n  <div\r\n    class=\"add-button cursor-pointer afterLoopAddButton\"\r\n    (click)=\"add()\"\r\n    *ngIf=\"!viewMode\"\r\n    [style.top]=\"afterLoopAddButtonTop\"\r\n    [style.left]=\"afterLoopAddButtonLeft\"\r\n    #afterLoopAddButton\r\n  >\r\n    <div class=\"drop-point-container\"  *ngIf=\"showDropArea$ | async as showDropArea\">\r\n      <div class=\"drop-point-border\" [class.scale-1]=\"showDropArea\"></div>\r\n    </div>\r\n\r\n    <svg-icon src=\"./assets/img/custom/add-button.svg\"></svg-icon>\r\n  </div>\r\n  <div\r\n    #emptyLoopAddButton\r\n    class=\"empty-loop-add-button d-flex align-items-center justify-content-center positioned-absolute cursor-pointer\"\r\n    (mousedown)=\"showEmptyLoopAddButtonBoxShadow = true\"\r\n    (mouseup)=\"showEmptyLoopAddButtonBoxShadow = false\"\r\n    [class.box-shadow]=\"showEmptyLoopAddButtonBoxShadow\"\r\n    [style.top]=\"emptyLoopAddButtonTopOffset\"\r\n    [style.left]=\"emptyLoopAddButtonLeftOffset\"\r\n    *ngIf=\"!flowItem.firstLoopAction && !viewMode\"\r\n    (click)=\"addLoopItem()\"\r\n  >\r\n    <svg-icon\r\n      src=\"./assets/img/custom/plus.svg\"\r\n      class=\"empty-loop-icon\"\r\n      [applyClass]=\"true\"\r\n    ></svg-icon>\r\n  </div>\r\n</div>\r\n<ng-container *ngIf=\"flowItem.firstLoopAction\">\r\n  <app-flow-item [flowItemData]=\"flowItem.firstLoopAction\"\r\n                 [ngStyle]=\"loopItemStyle()\"></app-flow-item>\r\n</ng-container>\r\n"
        },
        {
            "name": "LoopStepInputFormComponent",
            "id": "component-LoopStepInputFormComponent-fa49565151fd7003f8ece61bd1303b720692644fc90e4f61fa1b398b0fbde9b05b219deaa1ad2ed062ea5333e5f0236ca5ee5415f7daf43cd6bd0bf61e8fb22a",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/loop-step-input-form/loop-step-input-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: LoopStepInputFormComponent,\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, multi: true, useExisting: LoopStepInputFormComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-loop-step-input-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./loop-step-input-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loopStepForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "updateComponentValue$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "getControl",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "{ invalid: boolean; }",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "InputFormsSchema",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "InputFormsSchema",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n\tValidators,\n} from '@angular/forms';\n\nimport { Observable, tap } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { InputFormsSchema } from '../input-forms-schema';\n\n@Component({\n\tselector: 'app-loop-step-input-form',\n\ttemplateUrl: './loop-step-input-form.component.html',\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: LoopStepInputFormComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: LoopStepInputFormComponent,\n\t\t},\n\t],\n\tanimations: [fadeInUp400ms],\n})\nexport class LoopStepInputFormComponent implements ControlValueAccessor {\n\tloopStepForm: FormGroup;\n\tupdateComponentValue$: Observable<any>;\n\tonChange = (value: InputFormsSchema) => {};\n\tonTouch = () => {};\n\n\tconstructor(private formBuilder: FormBuilder) {\n\t\tthis.loopStepForm = this.formBuilder.group({\n\t\t\titems: new FormControl('', Validators.required),\n\t\t});\n\t\tthis.updateComponentValue$ = this.loopStepForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.onChange(this.loopStepForm.value);\n\t\t\t})\n\t\t);\n\t}\n\n\twriteValue(obj: InputFormsSchema): void {\n\t\tif (obj.type === ActionType.LOOP_ON_ITEMS) {\n\t\t\tthis.loopStepForm.patchValue(obj);\n\t\t}\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t}\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouch = fn;\n\t}\n\n\tvalidate() {\n\t\tif (this.loopStepForm.invalid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetControl(name: string) {\n\t\treturn this.loopStepForm.get(name)!;\n\t}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.loopStepForm.disable();\n\t\t} else if (this.loopStepForm.disabled) {\n\t\t\tthis.loopStepForm.enable();\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<form [formGroup]=\"loopStepForm\" class=\"ng-submitted\">\r\n  <div class=\"d-flex flex-column accordion-form-controls-container\">\r\n    <div>\r\n      <label for=\"variable\" required>Items Variable</label>\r\n      <input  for=\"variable\" class=\"form-control\" type=\"text\" formControlName=\"items\" />\r\n      <p @fadeInUp *ngIf=\"getControl('items').invalid\" class=\"invalid-input\">\r\n        Items variable is required.\r\n      </p>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<ng-container *ngIf=\"updateComponentValue$ | async\"></ng-container>\r\n"
        },
        {
            "name": "MultiDropdownComponent",
            "id": "component-MultiDropdownComponent-69324bbbf2d1af706b623e940c728a726f6e305fd0ffb43c8e2c12b5ec27f98eb573184f21c88ad00c239201c93f14795fd72120d843310c04a99161d9d11de5",
            "file": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/multi-dropdown/multi-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-multi-dropdown",
            "styleUrls": [
                "./multi-dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./multi-dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dynamicControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "MultiDropdownFormControl",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "opened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "wasInside",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "clickInside",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                },
                {
                    "name": "clickout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click'"
                        }
                    ]
                },
                {
                    "name": "flip",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "itemSelected",
                    "args": [
                        {
                            "name": "item",
                            "type": "DropdownItemOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "DropdownItemOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22
                },
                {
                    "name": "document:click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input } from '@angular/core';\nimport { DropdownItemOption } from 'src/app/layout/common-layout/model/fields/variable/subfields/dropdown-item-option';\nimport { MultiDropdownFormControl } from '../../../../model/dynamic-controls/multi-dropdown-form-control';\n\n@Component({\n\tselector: 'app-multi-dropdown',\n\ttemplateUrl: './multi-dropdown.component.html',\n\tstyleUrls: ['./multi-dropdown.component.scss'],\n})\nexport class MultiDropdownComponent {\n\topened = false;\n\twasInside = false;\n\t@Input() dynamicControl: MultiDropdownFormControl;\n\n\tconstructor() {}\n\n\tflip() {\n\t\tthis.opened = !this.opened;\n\t}\n\n\t@HostListener('click')\n\tclickInside() {\n\t\tthis.wasInside = true;\n\t}\n\n\t@HostListener('document:click')\n\tclickout() {\n\t\tif (!this.wasInside) {\n\t\t\tthis.opened = false;\n\t\t}\n\t\tthis.wasInside = false;\n\t}\n\titemSelected(item: DropdownItemOption) {\n\t\tconst values: any[] = this.dynamicControl.formControl().value;\n\t\treturn values.find(v => v == item.value) !== undefined;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.dropdown-menu {\r\n  width: 100%;\r\n  margin-left: 0;\r\n}\r\n\r\n.form-control {\r\n  cursor: pointer;\r\n}\r\n\r\n.value-tag {\r\n  padding: 0.0625rem 0px 0.0625rem 0.5rem;\r\n  color: $primary-dark;\r\n}\r\n\r\n.clear-icon {\r\n  padding: 0.5156rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.check-icon {\r\n  height: 12px;\r\n  width: 12px;\r\n  fill: $primary;\r\n}\r\n",
                    "styleUrl": "./multi-dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "templateData": "<ng-select\r\n  *ngIf=\"dynamicControl\"\r\n  [formControl]=\"dynamicControl.formControl()\"\r\n  [items]=\"dynamicControl.getDropdownOptions()\"\r\n  [multiple]=\"true\"\r\n  bindLabel=\"label\"\r\n  bindValue=\"value\"\r\n  placeholder=\"Please select\"\r\n  appendTo=\"body\"\r\n>\r\n  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\r\n    <span class=\"value-tag\"> {{ item.label }} </span>\r\n    <span class=\"clear-icon ng-clear\" (click)=\"clear(item)\" aria-hidden=\"true\"\r\n      >×</span\r\n    >\r\n  </ng-template>\r\n  <ng-template ng-option-tmp let-item=\"item\">\r\n    <div class=\"d-flex\">\r\n      <div class=\"flex-grow-1\">{{ item.label }}</div>\r\n      <svg-icon\r\n        *ngIf=\"itemSelected(item)\"\r\n        src=\"assets/img/custom/check.svg\"\r\n        class=\"check-icon\"\r\n        [applyClass]=\"true\"\r\n      >\r\n      </svg-icon>\r\n    </div>\r\n  </ng-template>\r\n</ng-select>\r\n"
        },
        {
            "name": "NewAddNpmPackageModalComponent",
            "id": "component-NewAddNpmPackageModalComponent-be35310e513d5b2dc9a11920ff7b598d53bec4bdbc28dfdd9a6b01dcefcf8c2795238095a303d6f17bf661ecf87ed71615866e6b9753985f677b0c372f7ddf9a",
            "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/add-npm-package-modal/add-npm-package-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-npm-package-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./add-npm-package-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "packageFound$",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "npmForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "npmPackage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type | null>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "packageNameChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "lookForNpmPackage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable, tap } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\nimport { CodeService } from 'src/app/layout/flow-builder/service/code.service';\ntype PackageName = string;\ntype PackageVersion = string;\n@Component({\n\tselector: 'app-add-npm-package-modal',\n\ttemplateUrl: './add-npm-package-modal.component.html',\n\tanimations: [fadeInUp400ms],\n})\nexport class NewAddNpmPackageModalComponent implements OnInit {\n\tnpmForm: FormGroup;\n\t@Output()\n\tpackageFound$: EventEmitter<{ [key: PackageName]: PackageVersion }> = new EventEmitter();\n\tloading = false;\n\tnpmPackage$: Observable<{ [key: PackageName]: PackageVersion } | null>;\n\tsubmitted = false;\n\tpackageNameChanged$: Observable<void>;\n\tconstructor(private formBuilder: FormBuilder, private modalRef: BsModalRef, private codeService: CodeService) {\n\t\tthis.npmForm = this.formBuilder.group({ packageName: new FormControl('', Validators.required) });\n\t}\n\n\tngOnInit(): void {\n\t\tconst packaageNameControl = this.npmForm.get('packageName')!;\n\t\tthis.packageNameChanged$ = packaageNameControl.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tpackaageNameControl.setErrors(null);\n\t\t\t})\n\t\t);\n\t}\n\thide() {\n\t\tthis.modalRef.hide();\n\t}\n\tlookForNpmPackage() {\n\t\tthis.submitted = true;\n\t\tif (this.npmForm.valid && !this.loading) {\n\t\t\tthis.loading = true;\n\t\t\tthis.npmPackage$ = this.codeService.getLatestVersionOfNpmPackage(this.npmForm.get('packageName')!.value).pipe(\n\t\t\t\ttap(pkg => {\n\t\t\t\t\tif (pkg) {\n\t\t\t\t\t\tconsole.log(pkg);\n\t\t\t\t\t\tthis.packageFound$.emit(pkg);\n\t\t\t\t\t\tthis.modalRef.hide();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.npmForm.get('packageName')?.setErrors({ invalid: true });\n\t\t\t\t\t}\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"npmForm\" >\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title pull-left\">Add npm Package</h5>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn-close close pull-right\"\r\n      aria-label=\"Close\"\r\n      (click)=\"hide()\"\r\n    >\r\n      <span aria-hidden=\"true\" class=\"visually-hidden close-custom\"\r\n        >&times;</span\r\n      >\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n\r\n      <input type=\"text\" class=\"form-control\" formControlName=\"packageName\">\r\n      <span  class=\"text-sm text-muted\">\r\n        Please type the name of the npm package, the latest version will be fetched , and added to package.json\r\n      </span>\r\n      <ng-container *ngIf=\"submitted && npmForm.get('packageName')!.invalid\">\r\n        <ng-container *ngIf=\"npmForm.get('packageName')!.hasError('required');else invalidName\">\r\n          Package name is required\r\n        </ng-container>\r\n        <ng-template #invalidName>\r\n          <p @fadeInUp   class=\"invalid-input\">\r\n            Package not found\r\n           </p>\r\n        </ng-template>\r\n      </ng-container>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n\r\n    <app-button\r\n    btnColor=\"basic\"\r\n    btnStyle=\"basic\"\r\n    (buttonClicked)=\"hide()\"\r\n  > Cancel\r\n  </app-button>\r\n\r\n\r\n    <app-button\r\n      type=\"submit\"\r\n      [loading]=\"loading\"\r\n      btnColor=\"primary\"\r\n      (buttonClicked)=\"lookForNpmPackage()\"\r\n    >Add package</app-button>\r\n  </div>\r\n</form>\r\n<ng-container *ngIf=\"npmPackage$ | async\"></ng-container>\r\n\r\n<ng-container *ngIf=\"packageNameChanged$  | async\"></ng-container>\r\n"
        },
        {
            "name": "NewAuthenticationModalComponent",
            "id": "component-NewAuthenticationModalComponent-b64b0e082c97d955b7114b62de6ea47e966447dcf796fb5209200f97f3f5e85df401cb3bba0c07e071b1506743169df2773b41c7351c0047a0b28253b9ec3bab",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-authentication-modal/new-authentication-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-authentication-modal",
            "styleUrls": [
                "./new-authentication-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-authentication-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "configToUpdateWithIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "literal type | undefined",
                    "decorators": []
                },
                {
                    "name": "connectorAuthConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "Config",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "saveClicked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "clientIdTooltip",
                    "defaultValue": "'Your App ID, Key or Client ID. You can find it if you go to your app on the 3rd party service.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "clientSecretTooltip",
                    "defaultValue": "\"Your App Secret. It's usually hidden and will show up when you click on Show in your app on the 3rd party service\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "collectionId$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<UUID>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "keyTooltip",
                    "defaultValue": "'The ID of this authentication definition. You will need to select this key whenever you want to reuse this authentication.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "ngSelect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgSelectComponent",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "NgSelectComponent"
                        }
                    ]
                },
                {
                    "name": "redirectUrlTooltip",
                    "defaultValue": "'Copy this URL and paste it under Redirect URL in your app on the 3rd party service. Activepieces predefines this because we manage the authentication flow.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "saving",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "scopesTooltip",
                    "defaultValue": "'The permissions needed to access the endpoints you plan to work with on the 3rd party service.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "settingsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [
                {
                    "name": "constructConfig",
                    "args": [
                        {
                            "name": "currentCollectionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Config",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "currentCollectionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveConfigToCollection",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submit",
                    "args": [
                        {
                            "name": "currentCollectionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "currentCollectionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NgSelectComponent } from '@ng-select/ng-select';\nimport { Store } from '@ngrx/store';\nimport { UUID } from 'angular2-uuid';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Observable, take } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\n\nimport { ConfigSource } from 'src/app/layout/common-layout/model/enum/config-source';\nimport { ConfigType } from 'src/app/layout/common-layout/model/enum/config-type';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\nimport { OAuth2ConfigSettings } from 'src/app/layout/common-layout/model/fields/variable/config-settings';\nimport { Oauth2UserInputType } from 'src/app/layout/common-layout/model/fields/variable/subfields/oauth2-user-input.type';\nimport { PieceAction } from 'src/app/layout/flow-builder/store/action/piece.action';\nimport { BuilderSelectors } from 'src/app/layout/flow-builder/store/selector/flow-builder.selector';\nimport { environment } from 'src/environments/environment';\nimport { ConfigKeyValidator } from '../../validators/configKeyValidator';\n\n@Component({\n\tselector: 'app-new-authentication-modal',\n\ttemplateUrl: './new-authentication-modal.component.html',\n\tstyleUrls: ['./new-authentication-modal.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class NewAuthenticationModalComponent implements OnInit, AfterViewInit {\n\t@ViewChild(NgSelectComponent) ngSelect!: NgSelectComponent;\n\t@Input() connectorAuthConfig: Config;\n\t@Input() appName: string;\n\t@Input() configToUpdateWithIndex: { config: Config; indexInList: number } | undefined;\n\t@Output() saveClicked = new EventEmitter();\n\tsettingsForm: FormGroup;\n\tsaving = false;\n\tcollectionId$: Observable<UUID>;\n\tsubmitted = false;\n\tclientIdTooltip = 'Your App ID, Key or Client ID. You can find it if you go to your app on the 3rd party service.';\n\tclientSecretTooltip =\n\t\t\"Your App Secret. It's usually hidden and will show up when you click on Show in your app on the 3rd party service\";\n\tredirectUrlTooltip =\n\t\t'Copy this URL and paste it under Redirect URL in your app on the 3rd party service. Activepieces predefines this because we manage the authentication flow.';\n\tscopesTooltip = 'The permissions needed to access the endpoints you plan to work with on the 3rd party service.';\n\tkeyTooltip =\n\t\t'The ID of this authentication definition. You will need to select this key whenever you want to reuse this authentication.';\n\tconstructor(private fb: FormBuilder, private store: Store, public bsModalRef: BsModalRef) {}\n\n\tngOnInit(): void {\n\t\tthis.collectionId$ = this.store.select(BuilderSelectors.selectCurrentCollectionId);\n\t\tthis.settingsForm = this.fb.group({\n\t\t\tredirectUrl: new FormControl({ value: environment.redirectUrl, disabled: true }),\n\t\t\tuserInputType: new FormControl(Oauth2UserInputType.LOGIN, Validators.required),\n\t\t\tclientSecret: new FormControl('', Validators.required),\n\t\t\tclientId: new FormControl('', Validators.required),\n\t\t\tauthUrl: new FormControl('', Validators.required),\n\t\t\trefreshUrl: new FormControl(''),\n\t\t\ttokenUrl: new FormControl('', Validators.required),\n\t\t\tresponseType: new FormControl('code', Validators.required),\n\t\t\tscope: new FormControl([], Validators.required),\n\t\t\tkey: new FormControl(\n\t\t\t\tthis.appName.replace(/[^A-Za-z0-9_]/g, '_'),\n\t\t\t\t[Validators.required, Validators.pattern('[A-Za-z0-9_]*')],\n\t\t\t\t[\n\t\t\t\t\tConfigKeyValidator.createValidator(\n\t\t\t\t\t\tthis.store.select(BuilderSelectors.selectAllConfigs).pipe(take(1)),\n\t\t\t\t\t\tundefined\n\t\t\t\t\t),\n\t\t\t\t]\n\t\t\t),\n\t\t});\n\t\tif (!this.configToUpdateWithIndex) {\n\t\t\tthis.settingsForm.patchValue(this.connectorAuthConfig.settings);\n\t\t} else {\n\t\t\tthis.settingsForm.patchValue(this.configToUpdateWithIndex.config.settings);\n\t\t\tthis.settingsForm.get('key')?.setValue(this.configToUpdateWithIndex.config.key);\n\t\t\tthis.settingsForm\n\t\t\t\t.get('scope')!\n\t\t\t\t.setValue((this.configToUpdateWithIndex.config.settings as OAuth2ConfigSettings).scope.split(' '));\n\t\t\tthis.settingsForm.get('key')!.disable();\n\t\t}\n\n\t\tthis.settingsForm.get('userInputType')!.setValue(Oauth2UserInputType.LOGIN);\n\t}\n\tsubmit(currentCollectionId: UUID) {\n\t\tthis.submitted = true;\n\n\t\tif (this.settingsForm.valid) {\n\t\t\tconst config = this.constructConfig(currentCollectionId);\n\t\t\tthis.saveConfigToCollection(config);\n\t\t\tthis.saveClicked.next(config);\n\t\t\tthis.bsModalRef.hide();\n\t\t}\n\t}\n\tconstructConfig(currentCollectionId: UUID) {\n\t\tconst scopes: string = (this.settingsForm.get('scope')!.value as string[]).map(str => str.trim()).join(' ');\n\t\tconst configKey = this.configToUpdateWithIndex\n\t\t\t? this.configToUpdateWithIndex.config.key\n\t\t\t: this.settingsForm.get('key')!.value;\n\t\tconst configLabel = this.configToUpdateWithIndex\n\t\t\t? this.configToUpdateWithIndex.config.label\n\t\t\t: this.settingsForm.get('key')!.value;\n\t\tconst settingsFormValue = this.settingsForm.getRawValue();\n\t\tdelete settingsFormValue.key;\n\t\tconst configParent = this.connectorAuthConfig\n\t\t\t? { configKey: this.connectorAuthConfig.key }\n\t\t\t: (this.configToUpdateWithIndex?.config.settings as OAuth2ConfigSettings).configParent;\n\t\tconst newConfig: Config = {\n\t\t\tkey: configKey,\n\t\t\tlabel: configLabel,\n\t\t\tsource: ConfigSource.USER,\n\t\t\ttype: ConfigType.OAUTH2,\n\t\t\tcollectionVersionId: currentCollectionId,\n\t\t\tsettings: {\n\t\t\t\t...settingsFormValue,\n\t\t\t\trequired: true,\n\t\t\t\tconfigParent: configParent,\n\t\t\t\tscope: scopes,\n\t\t\t},\n\t\t\tvalue: null,\n\t\t};\n\t\treturn newConfig;\n\t}\n\n\tsaveConfigToCollection(config: Config): void {\n\t\tif (!this.configToUpdateWithIndex) {\n\t\t\tthis.store.dispatch(PieceAction.addConfig({ config: config }));\n\t\t} else {\n\t\t\tthis.store.dispatch(\n\t\t\t\tPieceAction.updateConfig({ config: config, configIndex: this.configToUpdateWithIndex.indexInList })\n\t\t\t);\n\t\t}\n\t}\n\n\tngAfterViewInit() {\n\t\tthis.ngSelect.onInputBlur = () => {\n\t\t\tthis.ngSelect.searchTerm = '';\n\t\t};\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.modal-body {\r\n  max-height: 480px;\r\n  overflow-y: scroll;\r\n  overflow-x: hidden;\r\n  min-width: 500px;\r\n  padding : 0 1.25rem 0 1.5625rem !important\r\n}\r\n\r\n.modal-footer{\r\n  border-top: 1px solid $dividers !important;\r\n}\r\n",
                    "styleUrl": "./new-authentication-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit"
            ],
            "templateData": "<ng-container *ngIf=\"collectionId$ |async as collectionId\">\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title pull-left\">\r\n      <ng-container *ngIf=\"!configToUpdateWithIndex; else editConfigHeader\">New Authentication</ng-container>\r\n      <ng-template #editConfigHeader>Edit {{configToUpdateWithIndex!.config.key}}</ng-template>\r\n    </h5>\r\n    <button type=\"button\" class=\"btn-close close  pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\r\n      <span aria-hidden=\"true\" class=\"close-custom visually-hidden\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"settingsForm\" class=\"d-flex flex-column config-modal-form-controls-container\"\r\n      [class.ng-submitted]=\"submitted\">\r\n      <div>\r\n        <label class=\"dashed-underline-label\" required [matTooltip]=\"clientIdTooltip\" matTooltipClass=\"labels-tooltip\"\r\n          >Client ID</label>\r\n        <input class=\"form-control\" formControlName=\"clientId\" type=\"text\">\r\n        <p @fadeInUp class=\"invalid-input\" *ngIf=\"submitted && settingsForm.get('clientId')!.invalid \">\r\n          Client ID is required\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <label class=\"dashed-underline-label\" required [matTooltip]=\"clientSecretTooltip\" matTooltipClass=\"labels-tooltip\"\r\n          >Client Secret</label>\r\n        <input class=\"form-control\" formControlName=\"clientSecret\" type=\"text\">\r\n        <p @fadeInUp class=\"invalid-input\" *ngIf=\"submitted && settingsForm.get('clientSecret')!.invalid \">\r\n          Client secret is required\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <label class=\"dashed-underline-label\" placement=\"bottom\" [matTooltip]=\"redirectUrlTooltip\"\r\n        matTooltipClass=\"labels-tooltip\" required>Redirect URL</label>\r\n        <input class=\"form-control\" formControlName=\"redirectUrl\" type=\"text\">\r\n      </div>\r\n      <div>\r\n        <label class=\"dashed-underline-label\"  matTooltipClass=\"labels-tooltip\"\r\n          [matTooltip]=\"scopesTooltip\" required>Scopes</label>\r\n        <ng-select tagsOnly\r\n          [items]=\"[]\"\r\n          [addTag]=\"true\"\r\n          [multiple]=\"true\"\r\n          addTagText=\"Adding Scope\"\r\n          notFoundText=\"Type to add scope\"\r\n          placeholder=\"Enter the scopes required seperated by enter\" appendTo=\"body\" formControlName=\"scope\">\r\n\r\n\r\n          <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\r\n            <app-ng-select-tag-value-template [item]=\"item\" [clear]=\"clear\"></app-ng-select-tag-value-template>\r\n          </ng-template>\r\n        </ng-select>\r\n        <p @fadeInUp class=\"invalid-input\" *ngIf=\"submitted && settingsForm.get('scope')!.invalid\">\r\n          <ng-container *ngIf=\"submitted &&  settingsForm.get('scope')!.getError('required')\">\r\n            Scopes are required\r\n          </ng-container>\r\n\r\n        </p>\r\n      </div>\r\n\r\n      <div>\r\n        <label required [matTooltip]=\"keyTooltip\" class=\"dashed-underline-label\"\r\n        matTooltipClass=\"labels-tooltip\">Key</label>\r\n        <input class=\"form-control\" formControlName=\"key\" type=\"text\">\r\n        <p @fadeInUp class=\"invalid-input\" *ngIf=\"submitted && settingsForm.get('key')!.invalid\">\r\n          <ng-container *ngIf=\"submitted &&  settingsForm.get('key')!.getError('required'); else patternErrorOrAlreadyUsed\">\r\n            Key is required\r\n          </ng-container>\r\n          <ng-template  #patternErrorOrAlreadyUsed>\r\n            <ng-container *ngIf=\"settingsForm.get('key')!.getError('requiredPattern');\">\r\n              Keys can only contain letters, numbers and underscores\r\n            </ng-container>\r\n            <ng-container *ngIf=\"settingsForm.get('key')!.getError('keyUsed');\">\r\n              Keys is already used\r\n            </ng-container>\r\n          </ng-template>\r\n        </p>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <app-button\r\n    btnColor=\"basic\"\r\n    btnStyle=\"basic\"\r\n    (buttonClicked)=\"bsModalRef.hide()\"\r\n  > Cancel\r\n  </app-button>\r\n    <app-button [load]=\"saving\" (buttonClicked)=\"submit(collectionId)\"  btnColor=\"primary\">Save\r\n    </app-button>\r\n  </div>\r\n\r\n</ng-container>\r\n"
        },
        {
            "name": "NewEditPieceSidebarComponent",
            "id": "component-NewEditPieceSidebarComponent-2964a7d744b984a3e9335f19969599d24eda89073f83cd6c23fe778b8f344b8a00303a8ab9e98655c260d110643c1e4830730162c990ccf0fa7a98f54357828b",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/new-edit-piece-sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-edit-piece-sidebar",
            "styleUrls": [
                "./new-edit-piece-sidebar.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./new-edit-piece-sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayNameChanged$",
                    "defaultValue": "new BehaviorSubject('Step')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string>",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "flowId$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<null | UUID>",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "selectedFlowItemDetails$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<FlowItemDetails | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "selectedStepAndFlowId$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "stepCacheKeyAndArtifactUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | null",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "closeSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, Observable, of, switchMap, tap } from 'rxjs';\nimport { FlowItemDetails } from '../step-type-sidebar/step-type-item/flow-item-details';\nimport { Store } from '@ngrx/store';\nimport { RightSideBarType } from '../../../../../common-layout/model/enum/right-side-bar-type.enum';\nimport { BuilderSelectors } from '../../../../store/selector/flow-builder.selector';\nimport { FlowsActions } from '../../../../store/action/flows.action';\nimport { UUID } from 'angular2-uuid';\nimport { FlowItem } from 'src/app/layout/common-layout/model/flow-builder/flow-item';\nimport { StepCacheKey } from 'src/app/layout/flow-builder/service/artifact-cache-key';\nimport { CodeAction } from 'src/app/layout/common-layout/model/flow-builder/actions/code-action.interface';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { RemoteFlowCacheService } from 'src/app/layout/flow-builder/service/remote-flow-cache.service';\nimport { ConfigSource } from 'src/app/layout/common-layout/model/enum/config-source';\n\n@Component({\n\tselector: 'app-new-edit-piece-sidebar',\n\ttemplateUrl: './new-edit-piece-sidebar.component.html',\n\tstyleUrls: ['./new-edit-piece-sidebar.component.css'],\n})\nexport class NewEditPieceSidebarComponent implements OnInit {\n\tconstructor(private store: Store, private remoteFlowCache: RemoteFlowCacheService, private cd: ChangeDetectorRef) {}\n\tdisplayNameChanged$: BehaviorSubject<string> = new BehaviorSubject('Step');\n\tselectedStepAndFlowId$: Observable<{ step: FlowItem | null | undefined; flowId: UUID | null }>;\n\tselectedFlowItemDetails$: Observable<FlowItemDetails | undefined>;\n\tstepCacheKeyAndArtifactUrl: { cacheKey: StepCacheKey; url: string } | null;\n\n\tflowId$: Observable<null | UUID>;\n\tngOnInit(): void {\n\t\tthis.remoteFlowCache;\n\t\tmap;\n\t\tswitchMap;\n\t\t//in case you switch piece while the edit piece panel is opened\n\t\tthis.selectedStepAndFlowId$ = combineLatest({\n\t\t\tstep: this.store.select(BuilderSelectors.selectCurrentStep),\n\t\t\tflowId: this.store.select(BuilderSelectors.selectCurrentFlowId),\n\t\t}).pipe(\n\t\t\tdistinctUntilChanged((prev, current) => {\n\t\t\t\treturn prev.flowId === current.flowId && prev.step?.name === current.step?.name;\n\t\t\t}),\n\t\t\ttap(result => {\n\t\t\t\tif (result.step) {\n\t\t\t\t\tthis.displayNameChanged$.next(result.step.displayName);\n\t\t\t\t\tthis.selectedFlowItemDetails$ = this.store.select(BuilderSelectors.selectFlowItemDetails(result.step!)).pipe(\n\t\t\t\t\t\tswitchMap(flowItemDetails => {\n\t\t\t\t\t\t\tif (flowItemDetails && flowItemDetails.type === ActionType.REMOTE_FLOW) {\n\t\t\t\t\t\t\t\treturn this.remoteFlowCache\n\t\t\t\t\t\t\t\t\t.getCollectionFlowsVersions(\n\t\t\t\t\t\t\t\t\t\tflowItemDetails.extra!.pieceVersionId,\n\t\t\t\t\t\t\t\t\t\tflowItemDetails.extra!.flowsVersionIds\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\tmap(flowsVersions => {\n\t\t\t\t\t\t\t\t\t\t\tconst flowVersiondIdToConfig = flowsVersions.map(flowVer => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: flowVer.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\tconfigs: flowVer.configs.filter(c => c.source !== ConfigSource.PREDEFINED),\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayName: flowVer.displayName,\n\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tconst clonedFlowItemDetails: FlowItemDetails = JSON.parse(JSON.stringify(flowItemDetails));\n\t\t\t\t\t\t\t\t\t\t\tclonedFlowItemDetails.extra!.flowVersiondIdToConfig = flowVersiondIdToConfig;\n\t\t\t\t\t\t\t\t\t\t\treturn clonedFlowItemDetails;\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn of(flowItemDetails);\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tthis.cd.detectChanges();\n\t\t\t\t\tif (result.step.type === ActionType.CODE) {\n\t\t\t\t\t\tthis.stepCacheKeyAndArtifactUrl = {\n\t\t\t\t\t\t\tcacheKey: new StepCacheKey(result.flowId!, result.step!.name),\n\t\t\t\t\t\t\turl: (result.step as CodeAction).settings.artifactUrl,\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.stepCacheKeyAndArtifactUrl = null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.selectedFlowItemDetails$ = of(undefined);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tcloseSidebar() {\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.setRightSidebar({\n\t\t\t\tsidebarType: RightSideBarType.NONE,\n\t\t\t\tprops: {},\n\t\t\t})\n\t\t);\n\t}\n\tget ActionType() {\n\t\treturn ActionType;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".inside-panel-item-title {\r\n  padding-top: 25px;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n  color: #7B7B7B;\r\n  border-bottom: 0.5px dashed #7B7B7B;\r\n}\r\n\r\n.expansion-panel-label {\r\n  margin-bottom: 0px !important;\r\n}\r\n\r\n.flip-chevorn-up {\r\n  transform: rotate(180deg);\r\n}\r\n\r\n.flip-chevorn-down {\r\n  transform: rotate(0deg);\r\n}\r\n\r\n.flip-transition {\r\n  transition: transform 0.5s ease;\r\n}\r\n\r\n.expansion-panel-transition {\r\n  transition: background-color 1s ease;\r\n}\r\n\r\n.expansion-panel-opened {\r\n  background-color: #FAFAFA;\r\n}\r\n\r\n.chevorn-margin-left {\r\n  margin-left: auto;\r\n  margin-right: 20px;\r\n}\r\n\r\nmat-expansion-panel-header {\r\n  padding-top: 20px;\r\n}\r\n\r\n.expansion-panel-body-bottom-padding {\r\n  padding-bottom: 25px;\r\n}\r\n\r\n.step-type-item-container {\r\n  padding: 1.25rem;\r\n}",
                    "styleUrl": "./new-edit-piece-sidebar.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "remoteFlowCache",
                        "type": "RemoteFlowCacheService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "remoteFlowCache",
                        "type": "RemoteFlowCacheService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "ActionType": {
                    "name": "ActionType",
                    "getSignature": {
                        "name": "ActionType",
                        "type": "",
                        "returnType": "",
                        "line": 94
                    }
                }
            },
            "templateData": "<div class=\"d-column\">\r\n  <div class=\"px-3 pt-3\">\r\n    <ng-container *ngIf=\"displayNameChanged$ | async as title\">\r\n      <app-sidebar-header\r\n        [title]=\"'Edit '+ title\"\r\n        (closeClicked)=\"closeSidebar()\"\r\n      ></app-sidebar-header\r\n    >\r\n  </ng-container>\r\n  </div>\r\n\r\n  <div class=\"step-type-item-container\">\r\n    <app-step-type-item\r\n      [clickable]=\"false\"\r\n      [flowItemDetails$]=\"selectedFlowItemDetails$\"\r\n    ></app-step-type-item>\r\n  </div>\r\n  <ng-container *ngIf=\"selectedStepAndFlowId$ | async as selectedStepAndFlowId; else loading\">\r\n    <ng-container  *ngIf=\"selectedFlowItemDetails$  | async; else loading\"\r\n    >  <app-edit-step-accodion\r\n    [selectedStep]=\"selectedStepAndFlowId.step!\"\r\n    [stepArtifactCacheKeyAndUrl]=\"stepCacheKeyAndArtifactUrl\"\r\n    [displayNameChanged$]=\"displayNameChanged$\"\r\n  ></app-edit-step-accodion>\r\n  </ng-container>\r\n\r\n    </ng-container>\r\n\r\n\r\n  <ng-template #loading>\r\n    <div class=\"d-column flex-grow-1 justify-content-center align-items-center\">\r\n      <app-loading-icon> </app-loading-icon>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n"
        },
        {
            "name": "NgSelectItemTemplateComponent",
            "id": "component-NgSelectItemTemplateComponent-1d43535be9ead1909371a95ef9dbccb5c0d944bdf727d04f5cbafe00d55b498da215be0376175bfbb4cce32d1890e5e5b413928f97af5896215e52cff85206f5",
            "file": "src/app/layout/common-layout/components/form-controls/ng-select-item-template/ng-select-item-template.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ng-select-item-template",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ng-select-item-template.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isSelected",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "DropdownOption",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { DropdownOption } from '../../../model/fields/variable/config-settings';\n\n@Component({\n\ttemplateUrl: './ng-select-item-template.component.html',\n\tstyleUrls: [],\n\tselector: 'app-ng-select-item-template',\n})\nexport class NgSelectItemTemplateComponent {\n\t@Input() item: DropdownOption;\n\t@Input() isSelected: boolean = false;\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "templateData": "<div class=\"d-flex option-container\">\r\n  <div class=\"flex-grow-1\">{{ item.label }}</div>\r\n  <svg-icon\r\n    *ngIf=\"isSelected\"\r\n    src=\"assets/img/custom/check.svg\"\r\n    class=\"check-icon\"\r\n    [applyClass]=\"true\"\r\n  >\r\n  </svg-icon>\r\n</div>\r\n"
        },
        {
            "name": "NgSelectLoadingSpinnerTemplateComponent",
            "id": "component-NgSelectLoadingSpinnerTemplateComponent-764217f731f279deb583a874f537a2d62457491f859cf68ed6934008536ee293fcade32eba0356837342e02d2ff61b8c2c9815d00193932d0a3b6c3193f0aa22",
            "file": "src/app/layout/common-layout/components/form-controls/ng-select-loading-spinner-template/ng-select-loading-spinner-template.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ng-select-loading-spinner-template",
            "styleUrls": [
                "./ng-select-loading-spinner-template.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ng-select-loading-spinner-template.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-ng-select-loading-spinner-template',\n\ttemplateUrl: './ng-select-loading-spinner-template.component.html',\n\tstyleUrls: ['./ng-select-loading-spinner-template.component.scss'],\n})\nexport class NgSelectLoadingSpinnerTemplateComponent {\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.black-spinner {\r\n  fill: $body;\r\n}\r\n\r\n@keyframes loading-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.loading-spin-animation {\r\n  svg {\r\n    transform-origin: 6.7px 6.7px 0;\r\n    animation-name: loading-spin;\r\n    animation-duration: 1s;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n  }\r\n}\r\n",
                    "styleUrl": "./ng-select-loading-spinner-template.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div class=\"d-flex align-items-center\">\r\n  <svg-icon\r\n    [svgStyle]=\"{ width: 14, height: 14 }\"\r\n    src=\"assets/img/custom/loading.svg\"\r\n    class=\"loading-spin-animation black-spinner\"\r\n    [applyClass]=\"true\"\r\n  ></svg-icon>\r\n</div>\r\n"
        },
        {
            "name": "NgSelectTagValueTemplateComponent",
            "id": "component-NgSelectTagValueTemplateComponent-6693fbc1298f5e395cb02c864d97b33d4c9c14ec4e7a92f6e8c79cece451c45583bc51aadf133d0c1ea5e0713ad6cbf34d70f9e4bf75abb357923bd09f5f8e4b",
            "file": "src/app/layout/common-layout/components/form-controls/ng-select-tag-value-template/ng-select-tag-value-template.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ng-select-tag-value-template",
            "styleUrls": [
                "./ng-select-tag-value-template.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ng-select-tag-value-template.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "clear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "Function",
                    "decorators": []
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "DropdownOption | string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { DropdownOption } from '../../../model/dynamic-controls/dropdown-options';\n\n@Component({\n\tselector: 'app-ng-select-tag-value-template',\n\ttemplateUrl: './ng-select-tag-value-template.component.html',\n\tstyleUrls: ['./ng-select-tag-value-template.component.scss'],\n})\nexport class NgSelectTagValueTemplateComponent {\n\tconstructor() {}\n\t@Input() clear: Function;\n\t@Input() item: DropdownOption | string;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.value-tag {\r\n  padding: 0.0625rem 0px 0.0625rem 0.5rem;\r\n  color: $primary-dark;\r\n}\r\n\r\n.clear-icon {\r\n  padding: 0.5156rem;\r\n  cursor: pointer;\r\n}\r\n",
                    "styleUrl": "./ng-select-tag-value-template.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<span class=\"value-tag\"> {{ item |itemText }} </span>\r\n<span class=\"clear-icon ng-clear\" (click)=\"clear(item)\" aria-hidden=\"true\"\r\n  >×</span\r\n>\r\n"
        },
        {
            "name": "NotFoundComponent",
            "id": "component-NotFoundComponent-bf50165a495e0534aff9b6c5a4571180d66463e618e1643b6e86a819cd22a5d9585066b12c59bcbde6bef8f9bba76f9a4b6069706c34d4f27760d5fdfe787721",
            "file": "src/app/layout/not-found/not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-not-found",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { NavigationService } from '../dashboard-layout/service/navigation.service';\n\n@Component({\n\tselector: 'app-not-found',\n\ttemplateUrl: './not-found.component.html',\n})\nexport class NotFoundComponent implements OnInit {\n\tconstructor(private navigationService: NavigationService) {}\n\n\tngOnInit() {\n\t\tthis.navigationService.setTitle('Not Found');\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"wrapper\">\r\n  <div class=\"page-header error-page\">\r\n    <div\r\n      class=\"page-header-image\"\r\n      style=\"background-image: url('assets/img/ill/404.svg');\"\r\n    ></div>\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 text-center\">\r\n          <h1 class=\"title\">404</h1>\r\n          <p class=\"lead\">Page not found :(</p>\r\n          <h4 class=\"description text-default\">\r\n            Ooooups! Looks like you got lost.\r\n          </h4>\r\n          <h4 class=\"text-default\">\r\n            <a href=\"/\">Return Home</a>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "OAuth2ConfigSettingsComponent",
            "id": "component-OAuth2ConfigSettingsComponent-27c4474d9ad0c2b5d824aee73d57d1e7cd86a85e44ffadacc19caf364e929bc6d614905700f9f0da15e711707d7825a40e1168749d6f996e500cea9cf1900968",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/o-auth2-config-settings/o-auth2-config-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: OAuth2ConfigSettingsComponent,\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, multi: true, useExisting: OAuth2ConfigSettingsComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-o-auth2-config-settings",
            "styleUrls": [
                "./o-auth2-config-settings.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./o-auth2-config-settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "settingsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "settingsFormValueChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "userInputTypeChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Oauth2UserInputType>",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setupUserInputTypeListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "{ invalid: boolean; }",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n\tValidators,\n} from '@angular/forms';\nimport { Observable, tap } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\nimport {\n\tOauth2UserInputType,\n\tOAuth2UserInputTypeDropdownOptions,\n} from 'src/app/layout/common-layout/model/fields/variable/subfields/oauth2-user-input.type';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n\tselector: 'app-o-auth2-config-settings',\n\ttemplateUrl: './o-auth2-config-settings.component.html',\n\tstyleUrls: ['./o-auth2-config-settings.component.css'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: OAuth2ConfigSettingsComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: OAuth2ConfigSettingsComponent,\n\t\t},\n\t],\n\tanimations: [fadeInUp400ms],\n})\nexport class OAuth2ConfigSettingsComponent implements ControlValueAccessor {\n\tsettingsForm: FormGroup;\n\tuserInputTypeChanged$: Observable<Oauth2UserInputType>;\n\tsettingsFormValueChanged$: Observable<void>;\n\t@Input() submitted: boolean = false;\n\tonChange = val => {};\n\tconstructor(private formBuilder: FormBuilder) {\n\t\tthis.settingsForm = this.formBuilder.group({\n\t\t\tredirectUrl: new FormControl({ value: environment.redirectUrl, disabled: true }),\n\t\t\tuserInputType: new FormControl(Oauth2UserInputType.LOGIN, Validators.required),\n\t\t\tclientSecret: new FormControl('', Validators.required),\n\t\t\tclientId: new FormControl('', Validators.required),\n\t\t\tauthUrl: new FormControl('', Validators.required),\n\t\t\trefreshUrl: new FormControl(''),\n\t\t\ttokenUrl: new FormControl('', Validators.required),\n\t\t\tresponseType: new FormControl('code', Validators.required),\n\t\t\tscope: ['', [Validators.required]],\n\t\t});\n\t\tthis.settingsFormValueChanged$ = this.settingsForm.valueChanges.pipe(\n\t\t\ttap(() => this.onChange(this.settingsForm.getRawValue()))\n\t\t);\n\t\tthis.setupUserInputTypeListener();\n\t}\n\twriteValue(obj: any): void {\n\t\tthis.settingsForm.patchValue(obj);\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t}\n\tregisterOnTouched(fn: any): void {}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.settingsForm.disable();\n\t\t}\n\t}\n\tvalidate() {\n\t\tif (this.settingsForm.invalid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\tprivate setupUserInputTypeListener() {\n\t\tthis.userInputTypeChanged$ = this.settingsForm.get('userInputType')!.valueChanges.pipe(\n\t\t\ttap((userInputType: Oauth2UserInputType) => {\n\t\t\t\tconst oAuth2Controls = ['authUrl', 'refreshUrl', 'tokenUrl', 'clientId', 'clientSecret', 'scope'];\n\t\t\t\toAuth2Controls.forEach(ctrlName => {\n\t\t\t\t\tthis.settingsForm.get(ctrlName)!.enable();\n\t\t\t\t});\n\t\t\t\tif (userInputType == Oauth2UserInputType.EVERYTHING) {\n\t\t\t\t\toAuth2Controls.forEach(ctrlName => {\n\t\t\t\t\t\tthis.settingsForm.get(ctrlName)!.disable();\n\t\t\t\t\t});\n\t\t\t\t} else if (userInputType === Oauth2UserInputType.APP_DETAILS) {\n\t\t\t\t\tconst controlsToDisable = ['clientId', 'clientSecret', 'scope'];\n\t\t\t\t\tcontrolsToDisable.forEach(ctrlName => {\n\t\t\t\t\t\tthis.settingsForm.get(ctrlName)!.disable();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tget userInputDropdownOptions() {\n\t\treturn OAuth2UserInputTypeDropdownOptions;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./o-auth2-config-settings.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 42,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "userInputDropdownOptions": {
                    "name": "userInputDropdownOptions",
                    "getSignature": {
                        "name": "userInputDropdownOptions",
                        "type": "",
                        "returnType": "",
                        "line": 99
                    }
                }
            },
            "templateData": "<form [formGroup]=\"settingsForm\" class=\"d-flex flex-column config-modal-form-controls-container\">\r\n  <div>\r\n    <label>User Input Type</label>\r\n    <ng-select [items]=\"userInputDropdownOptions\" bindLabel=\"label\" bindValue=\"value\" id=\"role\"\r\n      formControlName=\"userInputType\" [searchable]=\"false\" [clearable]=\"false\" placeholder=\"Please select\">\r\n      <ng-template ng-option-tmp let-item=\"item\">\r\n        <app-ng-select-item-template [item]=\"item\"\r\n          [isSelected]=\"item.value === settingsForm.get('userInputType')!.value\"></app-ng-select-item-template>\r\n      </ng-template>\r\n    </ng-select>\r\n  </div>\r\n  <div>\r\n    <label required>Redirect Url</label>\r\n    <input type=\"text\" formControlName=\"redirectUrl\" class=\"form-control\">\r\n\r\n  </div>\r\n\r\n  <div>\r\n    <label required>Auth Url</label>\r\n    <input type=\"text\" formControlName=\"authUrl\" class=\"form-control\">\r\n    <p @fadeInUp  class=\"invalid-input\" *ngIf=\"submitted &&  settingsForm.get('authUrl')!.invalid \">\r\n      Auth url is required\r\n    </p>\r\n  </div>\r\n  <div>\r\n    <label required>Token Url</label>\r\n    <input type=\"text\" formControlName=\"tokenUrl\" class=\"form-control\">\r\n    <p @fadeInUp  class=\"invalid-input\" *ngIf=\"submitted &&  settingsForm.get('tokenUrl')!.invalid \">\r\n      Toekn url is required\r\n    </p>\r\n  </div>\r\n  <div>\r\n    <label>Refresh Url</label>\r\n    <input type=\"text\" formControlName=\"refreshUrl\" class=\"form-control\">\r\n  </div>\r\n  <div>\r\n    <label required>Client Id</label>\r\n    <input type=\"text\" formControlName=\"clientId\" class=\"form-control\">\r\n    <p @fadeInUp  class=\"invalid-input\" *ngIf=\"submitted &&  settingsForm.get('clientId')!.invalid \">\r\n      Client id is required\r\n    </p>\r\n  </div>\r\n  <div>\r\n    <label required> Client Secret</label>\r\n    <input type=\"text\" formControlName=\"clientSecret\" class=\"form-control\">\r\n    <p @fadeInUp  class=\"invalid-input\" *ngIf=\"submitted &&  settingsForm.get('clientSecret')!.invalid\">\r\n      Client secret is required\r\n    </p>\r\n  </div>\r\n  <div>\r\n    <label required> Scope</label>\r\n    <input type=\"text\" formControlName=\"scope\" class=\"form-control\">\r\n    <span  class=\"text-sm text-muted\">Enter the scope required seperated by space.</span>\r\n    <p @fadeInUp  class=\"invalid-input\" *ngIf=\"submitted && settingsForm.get('scope')!.invalid\">\r\n      Scope is required\r\n    </p>\r\n  </div>\r\n</form>\r\n<ng-container *ngIf=\"settingsFormValueChanged$|async\"></ng-container>\r\n<ng-container *ngIf=\"userInputTypeChanged$|async\"></ng-container>\r\n"
        },
        {
            "name": "OAuth2ConnectControlComponent",
            "id": "component-OAuth2ConnectControlComponent-3b27fd819e5b47542bf6224869f63b48eca9ba49409958f46d4cfe8f4e166a7a4afde8c7ff3d2b0722b45548cdc2fe1d954fc4099d052686cc6df8098da97cba",
            "file": "src/app/layout/common-layout/components/form-controls/o-auth2-connect-control/o-auth2-connect-control.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: OAuth2ConnectControlComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-o-auth2-connect-control",
            "styleUrls": [
                "./o-auth2-connect-control.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./o-auth2-connect-control.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "configSettings",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "OAuth2ConfigSettings",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "emptySettings",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "popUpError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "popupOpened$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "responseData",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "clearControlValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openPopup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { catchError, Observable, tap, throwError } from 'rxjs';\nimport { OAuth2ConfigSettings } from '../../../model/fields/variable/config-settings';\nimport { Oauth2Service } from '../../../service/oauth2.service';\n\n@Component({\n\tselector: 'app-o-auth2-connect-control',\n\ttemplateUrl: './o-auth2-connect-control.component.html',\n\tstyleUrls: ['./o-auth2-connect-control.component.css'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: OAuth2ConnectControlComponent,\n\t\t},\n\t],\n})\nexport class OAuth2ConnectControlComponent implements ControlValueAccessor, OnChanges {\n\t@Input() configSettings: OAuth2ConfigSettings;\n\tresponseData: any = null;\n\tisDisabled = false;\n\temptySettings = false;\n\tpopupOpened$: Observable<any>;\n\tonChange = (newValue: any) => {};\n\tonTouched = () => {};\n\tconstructor(private oauth2Service: Oauth2Service) {}\n\tngOnChanges(changes: SimpleChanges): void {\n\t\tconst settings = this.configSettings as OAuth2ConfigSettings;\n\t\tthis.emptySettings = !(\n\t\t\tsettings.clientSecret &&\n\t\t\tsettings.clientId &&\n\t\t\tsettings.authUrl &&\n\t\t\tsettings.responseType &&\n\t\t\tsettings.scope\n\t\t);\n\t}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tthis.isDisabled = isDisabled;\n\t}\n\n\twriteValue(obj: any): void {\n\t\tthis.responseData = obj;\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t}\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouched = fn;\n\t}\n\tpopUpError = false;\n\n\topenPopup(): void {\n\t\tconst configSettings = this.configSettings;\n\n\t\tthis.popupOpened$ = this.oauth2Service.openPopup(configSettings).pipe(\n\t\t\ttap(value => {\n\t\t\t\tthis.responseData = value;\n\t\t\t\tthis.onChange(value);\n\t\t\t}),\n\t\t\tcatchError(err => {\n\t\t\t\tthis.responseData = null;\n\t\t\t\tthis.onChange(null);\n\t\t\t\tthis.popUpError = true;\n\t\t\t\treturn throwError(() => {\n\t\t\t\t\treturn err;\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n\tclearControlValue() {\n\t\tthis.responseData = null;\n\t\tthis.onChange(null);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./o-auth2-connect-control.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "oauth2Service",
                        "type": "Oauth2Service",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "oauth2Service",
                        "type": "Oauth2Service",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor",
                "OnChanges"
            ],
            "templateData": "<app-button\r\n  *ngIf=\"!responseData\"\r\n  btnColor=\"primary\"\r\n  (buttonClicked)=\"openPopup()\"\r\n  [fullWidthOfContainer]=\"true\"\r\n  [disabled]=\"emptySettings || isDisabled\"\r\n> Connect</app-button>\r\n<app-button\r\n  *ngIf=\"responseData\"\r\n  btnColor=\"warn\"\r\n  (buttonClicked)=\"clearControlValue()\"\r\n  [fullWidthOfContainer]=\"true\"\r\n  [disabled]=\"isDisabled\"\r\n>Disconnect</app-button>\r\n<p *ngIf=\"popUpError\" class=\"invalid-input\" @fadeInUp>\r\n  Please make sure this config's credentials are correct.\r\n</p>\r\n\r\n<ng-container *ngIf=\"popupOpened$ | async\"></ng-container>\r\n"
        },
        {
            "name": "OnBoardingFormComponent",
            "id": "component-OnBoardingFormComponent-b7a5ca3d4a6fcea48e59638a180f9c0bb0925d7c4c7c256f0b68c1b568fd7d85be6937409b035240e83d5bf1e8b8e2f9e83a7e73c22f18e31cfdeb5bfe955af0",
            "file": "src/app/layout/auth-layout/pages/email-registration/on-boarding-form/on-boarding-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-on-boarding-form",
            "styleUrls": [
                "./on-boarding-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./on-boarding-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "animationDone",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "multiDropDownController",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MultiDropdownFormControl",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "onBoardingForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "roleDropdownOptions",
                    "defaultValue": "[\n\t\t{ value: OnboardingUserRoleEnum.DEVELOPER, label: 'Developer' },\n\t\t{\n\t\t\tvalue: OnboardingUserRoleEnum.MARKETING_MANAGER,\n\t\t\tlabel: 'Marketing Manager',\n\t\t},\n\t\t{ value: OnboardingUserRoleEnum.PRODUCT_MANAGER, label: 'Product Manager' },\n\t\t{\n\t\t\tvalue: OnboardingUserRoleEnum.QUALITY_ENGINEER,\n\t\t\tlabel: 'Quality Engineer',\n\t\t},\n\t\t{ value: OnboardingUserRoleEnum.OTHER, label: 'Other' },\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "technicalLevelDropdownOptions",
                    "defaultValue": "[\n\t\t{\n\t\t\tvalue: OnboardingTechnicalLevelEnum.NOT_DEVELOPER,\n\t\t\tlabel: \"I'm not a developer\",\n\t\t},\n\t\t{\n\t\t\tvalue: OnboardingTechnicalLevelEnum.STIlL_LEARNING,\n\t\t\tlabel: 'Still Leanring',\n\t\t},\n\t\t{ value: OnboardingTechnicalLevelEnum.BEGINNER, label: 'Beginner' },\n\t\t{ value: OnboardingTechnicalLevelEnum.INTERMEDIATE, label: 'Intermediate' },\n\t\t{ value: OnboardingTechnicalLevelEnum.EXPERT, label: 'Expert' },\n\t\t{\n\t\t\tvalue: OnboardingTechnicalLevelEnum.LOW_CODE,\n\t\t\tlabel: 'Low Code/No Code Developer',\n\t\t},\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "useCasesDropdownOptions",
                    "defaultValue": "[\n\t\t{\n\t\t\tvalue: OnboardingUsecasesEnum.LOAD_DATA_INTO_WAREHOUSE,\n\t\t\tlabel: 'Load data into warehouse',\n\t\t},\n\t\t{\n\t\t\tvalue: OnboardingUsecasesEnum.SEND_DATA_INT_DIFFERENT_TOOLS,\n\t\t\tlabel: 'Send data to different tools',\n\t\t},\n\t\t{\n\t\t\tvalue: OnboardingUsecasesEnum.COLLECT_USER_DATA,\n\t\t\tlabel: 'Collect user data',\n\t\t},\n\t\t{\n\t\t\tvalue: OnboardingUsecasesEnum.AUTOMATE_MANUAL_WORK,\n\t\t\tlabel: 'Automate  manual work',\n\t\t},\n\t\t{\n\t\t\tvalue: OnboardingUsecasesEnum.INTEGRATE_DIFFERENT_TOOL,\n\t\t\tlabel: 'Integrate different tools',\n\t\t},\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "navigateToDashboard",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MultiDropdownFormControl } from 'src/app/layout/common-layout/model/dynamic-controls/multi-dropdown-form-control';\nimport { OnboardingTechnicalLevelEnum } from 'src/app/layout/common-layout/model/enum/onboarding-technical-level.enum';\nimport { OnboardingUsecasesEnum } from 'src/app/layout/common-layout/model/enum/onboarding-usecases.enum';\nimport { OnboardingUserRoleEnum } from 'src/app/layout/common-layout/model/enum/onboarding-user-role.enum';\nimport { OnboardingService } from 'src/app/layout/common-layout/service/onboarding.service';\nimport { fadeInUp400ms } from '../../../../common-layout/animation/fade-in-up.animation';\n\n@Component({\n\tselector: 'app-on-boarding-form',\n\ttemplateUrl: './on-boarding-form.component.html',\n\tstyleUrls: ['./on-boarding-form.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class OnBoardingFormComponent implements OnInit {\n\tonBoardingForm: FormGroup;\n\tmultiDropDownController: MultiDropdownFormControl;\n\t@Input() animationDone = false;\n\tsubmitted = false;\n\tloading: boolean = false;\n\tuseCasesDropdownOptions = [\n\t\t{\n\t\t\tvalue: OnboardingUsecasesEnum.LOAD_DATA_INTO_WAREHOUSE,\n\t\t\tlabel: 'Load data into warehouse',\n\t\t},\n\t\t{\n\t\t\tvalue: OnboardingUsecasesEnum.SEND_DATA_INT_DIFFERENT_TOOLS,\n\t\t\tlabel: 'Send data to different tools',\n\t\t},\n\t\t{\n\t\t\tvalue: OnboardingUsecasesEnum.COLLECT_USER_DATA,\n\t\t\tlabel: 'Collect user data',\n\t\t},\n\t\t{\n\t\t\tvalue: OnboardingUsecasesEnum.AUTOMATE_MANUAL_WORK,\n\t\t\tlabel: 'Automate  manual work',\n\t\t},\n\t\t{\n\t\t\tvalue: OnboardingUsecasesEnum.INTEGRATE_DIFFERENT_TOOL,\n\t\t\tlabel: 'Integrate different tools',\n\t\t},\n\t];\n\n\troleDropdownOptions = [\n\t\t{ value: OnboardingUserRoleEnum.DEVELOPER, label: 'Developer' },\n\t\t{\n\t\t\tvalue: OnboardingUserRoleEnum.MARKETING_MANAGER,\n\t\t\tlabel: 'Marketing Manager',\n\t\t},\n\t\t{ value: OnboardingUserRoleEnum.PRODUCT_MANAGER, label: 'Product Manager' },\n\t\t{\n\t\t\tvalue: OnboardingUserRoleEnum.QUALITY_ENGINEER,\n\t\t\tlabel: 'Quality Engineer',\n\t\t},\n\t\t{ value: OnboardingUserRoleEnum.OTHER, label: 'Other' },\n\t];\n\n\ttechnicalLevelDropdownOptions = [\n\t\t{\n\t\t\tvalue: OnboardingTechnicalLevelEnum.NOT_DEVELOPER,\n\t\t\tlabel: \"I'm not a developer\",\n\t\t},\n\t\t{\n\t\t\tvalue: OnboardingTechnicalLevelEnum.STIlL_LEARNING,\n\t\t\tlabel: 'Still Leanring',\n\t\t},\n\t\t{ value: OnboardingTechnicalLevelEnum.BEGINNER, label: 'Beginner' },\n\t\t{ value: OnboardingTechnicalLevelEnum.INTERMEDIATE, label: 'Intermediate' },\n\t\t{ value: OnboardingTechnicalLevelEnum.EXPERT, label: 'Expert' },\n\t\t{\n\t\t\tvalue: OnboardingTechnicalLevelEnum.LOW_CODE,\n\t\t\tlabel: 'Low Code/No Code Developer',\n\t\t},\n\t];\n\tconstructor(private router: Router, private formBuilder: FormBuilder, private onBoardingService: OnboardingService) {}\n\n\tngOnInit(): void {\n\t\tthis.onBoardingForm = this.formBuilder.group({\n\t\t\trole: [, [Validators.required]],\n\t\t\tusecases: [, Validators.required],\n\t\t\ttechnicalLevel: [, Validators.required],\n\t\t});\n\t}\n\n\tnavigateToDashboard() {\n\t\tthis.router.navigate(['/']).then(value => {});\n\t}\n\tsubmit() {\n\t\tthis.submitted = true;\n\t\tif (this.onBoardingForm.valid) {\n\t\t\tthis.loading = true;\n\t\t\tconst request = this.onBoardingForm.value;\n\t\t\tthis.onBoardingService.submitOnboardingQuestions(request).subscribe(() => {\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.navigateToDashboard();\n\t\t\t});\n\t\t}\n\t}\n\tget roleControl() {\n\t\treturn this.onBoardingForm.get('role');\n\t}\n\tget technicalLevelControl() {\n\t\treturn this.onBoardingForm.get('technicalLevel');\n\t}\n\tget usecasesControl() {\n\t\treturn this.onBoardingForm.get('usecases');\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.form-control {\r\n  &:focus {\r\n    border: 1px solid #6e41e2;\r\n    box-shadow: 0px 0px 0px 4px rgba(110, 65, 226, 0.14);\r\n  }\r\n}\r\n.auth-form-title {\r\n  font-weight: 600;\r\n  color: $title;\r\n  margin-bottom: 1.563rem;\r\n}\r\n.auth-button {\r\n  padding: 0.5rem 0rem;\r\n  border-radius: 4px;\r\n  transition: all 0.3s ease;\r\n  font-size: 0.875rem;\r\n  border: 0px;\r\n  &:focus {\r\n    outline: 1px;\r\n  }\r\n  margin-top: 0rem;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.on-boarding-container {\r\n  margin: 0px 5px;\r\n}\r\n.btns-container {\r\n  margin-top: 30px;\r\n  max-width: 170px;\r\n  gap: 0.8rem;\r\n}\r\n\r\n.animation-done {\r\n  .mat-tab-body-wrapper {\r\n    overflow: visible !important;\r\n  }\r\n  .mat-tab-body {\r\n    overflow: visible !important;\r\n  }\r\n\r\n  .mat-tab-body-content {\r\n    overflow: visible !important;\r\n  }\r\n}\r\n\r\n.placeholder-select {\r\n  color: $body;\r\n}\r\n.dropdown-menu {\r\n  width: 100%;\r\n  margin-left: 0;\r\n}\r\n\r\n.form-control {\r\n  cursor: pointer;\r\n}\r\n\r\n.value-tag {\r\n  padding: 0.0625rem 0px 0.0625rem 0.5rem;\r\n  color: $primary-dark;\r\n}\r\n\r\n.clear-icon {\r\n  padding: 0.5156rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.check-icon {\r\n  height: 12px;\r\n  width: 12px;\r\n  fill: $primary;\r\n}\r\n",
                    "styleUrl": "./on-boarding-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "onBoardingService",
                        "type": "OnboardingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 76,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "onBoardingService",
                        "type": "OnboardingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "roleControl": {
                    "name": "roleControl",
                    "getSignature": {
                        "name": "roleControl",
                        "type": "",
                        "returnType": "",
                        "line": 101
                    }
                },
                "technicalLevelControl": {
                    "name": "technicalLevelControl",
                    "getSignature": {
                        "name": "technicalLevelControl",
                        "type": "",
                        "returnType": "",
                        "line": 104
                    }
                },
                "usecasesControl": {
                    "name": "usecasesControl",
                    "getSignature": {
                        "name": "usecasesControl",
                        "type": "",
                        "returnType": "",
                        "line": 107
                    }
                }
            },
            "templateData": "<div class=\"on-boarding-container\">\r\n  <div class=\"auth-form-title\">Help improve your experience</div>\r\n  <form [formGroup]=\"onBoardingForm\" (ngSubmit)=\"submit()\">\r\n    <div class=\"form-group\">\r\n      <label class=\"form-text\" for=\"role\">What's your role?</label>\r\n\r\n      <ng-select\r\n        [items]=\"roleDropdownOptions\"\r\n        bindLabel=\"label\"\r\n        bindValue=\"value\"\r\n        id=\"role\"\r\n        formControlName=\"role\"\r\n        [searchable]=\"false\"\r\n        [clearable]=\"false\"\r\n        placeholder=\"Please select...\"\r\n      >\r\n        <ng-template ng-option-tmp let-item=\"item\">\r\n          <div class=\"d-flex option-container\">\r\n            <div class=\"flex-grow-1\">{{ item.label }}</div>\r\n            <svg-icon\r\n              *ngIf=\"item.value === roleControl?.value\"\r\n              src=\"assets/img/custom/check.svg\"\r\n              class=\"check-icon\"\r\n              [applyClass]=\"true\"\r\n            >\r\n            </svg-icon>\r\n          </div>\r\n        </ng-template>\r\n      </ng-select>\r\n\r\n      <p\r\n        @fadeInUp\r\n        *ngIf=\"submitted && onBoardingForm.controls['role'].invalid\"\r\n        class=\"invalid-input\"\r\n      >\r\n        Role is required\r\n      </p>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label class=\"form-text\" for=\"usecases\"\r\n        >I want to use Activepieces for:</label\r\n      >\r\n\r\n      <ng-select\r\n        id=\"usecases\"\r\n        [items]=\"useCasesDropdownOptions\"\r\n        formControlName=\"usecases\"\r\n        [multiple]=\"true\"\r\n        bindLabel=\"label\"\r\n        bindValue=\"value\"\r\n        placeholder=\"Please select...\"\r\n        appendTo=\"body\"\r\n      >\r\n        <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\r\n          <span class=\"value-tag\"> {{ item.label }} </span>\r\n          <span\r\n            class=\"clear-icon ng-clear\"\r\n            (click)=\"clear(item)\"\r\n            aria-hidden=\"true\"\r\n            >×</span\r\n          >\r\n        </ng-template>\r\n        <ng-template ng-option-tmp let-item=\"item\">\r\n          <div class=\"d-flex\">\r\n            <div class=\"flex-grow-1\">{{ item.label }}</div>\r\n            <svg-icon\r\n              *ngIf=\"item.value === usecasesControl?.value\"\r\n              src=\"assets/img/custom/check.svg\"\r\n              class=\"check-icon\"\r\n              [applyClass]=\"true\"\r\n            >\r\n            </svg-icon>\r\n          </div>\r\n        </ng-template>\r\n      </ng-select>\r\n\r\n      <p\r\n        @fadeInUp\r\n        *ngIf=\"submitted && onBoardingForm.controls['usecases'].invalid\"\r\n        class=\"invalid-input\"\r\n      >\r\n        Use cases is required\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label class=\"form-text\" for=\"technicalLevel\"\r\n        >How technical are you?</label\r\n      >\r\n\r\n      <ng-select\r\n        [items]=\"technicalLevelDropdownOptions\"\r\n        bindLabel=\"label\"\r\n        bindValue=\"value\"\r\n        id=\"technicalLevel\"\r\n        formControlName=\"technicalLevel\"\r\n        [searchable]=\"false\"\r\n        [clearable]=\"false\"\r\n        placeholder=\"Please select...\"\r\n      >\r\n        <ng-template ng-option-tmp let-item=\"item\">\r\n          <div class=\"d-flex option-container\">\r\n            <div class=\"flex-grow-1\">{{ item.label }}</div>\r\n            <svg-icon\r\n              *ngIf=\"item.value === technicalLevelControl?.value\"\r\n              src=\"assets/img/custom/check.svg\"\r\n              class=\"check-icon\"\r\n              [applyClass]=\"true\"\r\n            >\r\n            </svg-icon>\r\n          </div>\r\n        </ng-template>\r\n      </ng-select>\r\n      <p\r\n        @fadeInUp\r\n        *ngIf=\"submitted && onBoardingForm.controls['technicalLevel'].invalid\"\r\n        class=\"invalid-input\"\r\n      >\r\n        Technical level is required\r\n      </p>\r\n    </div>\r\n  </form>\r\n  <div class=\"text-right d-flex btns-container ml-auto h-100\">\r\n    <app-button\r\n    [loading]=\"loading\"\r\n    (buttonClicked)=\"navigateToDashboard()\"\r\n    btnColor=\"basic\"\r\n    btnStyle=\"basic\"\r\n    [fullWidthOfContainer]=\"true\"\r\n  >\r\n  Skip\r\n  </app-button>\r\n    <app-button\r\n      [loading]=\"loading\"\r\n      (buttonClicked)=\"submit()\"\r\n      btnColor=\"primary\"\r\n      [fullWidthOfContainer]=\"true\"\r\n    >\r\n    Submit\r\n    </app-button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PaginationComponent",
            "id": "component-PaginationComponent-d4e8bd1fbd94dc38cc8949e8dee1a778bbbb013918df5e7a20c0b077f07c826b85b7827cc2a6b245627ff18b513f69d721b0911f9e9540c145b5788f552dcc69",
            "file": "src/app/layout/common-layout/components/pagination/pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pagination",
            "styleUrls": [
                "./pagination.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "SeekPage<any>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faAngleLeft",
                    "defaultValue": "faAngleLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "faAngleRight",
                    "defaultValue": "faAngleRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "hasNext",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hasPrevious",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "next",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previous",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { SeekPage } from '../../service/seek-page';\nimport { Router } from '@angular/router';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n\tselector: 'app-pagination',\n\ttemplateUrl: './pagination.component.html',\n\tstyleUrls: ['./pagination.component.css'],\n})\nexport class PaginationComponent {\n\t@Input() page: SeekPage<any>;\n\tfaAngleRight = faAngleRight;\n\tfaAngleLeft = faAngleLeft;\n\n\tconstructor(private router: Router) {}\n\n\thasPrevious() {\n\t\treturn (this.page.endingBefore !== null && this.page.hasMore) || this.page.startingAfter !== null;\n\t}\n\n\thasNext() {\n\t\treturn (this.page.endingBefore === null && this.page.hasMore) || this.page.endingBefore !== null;\n\t}\n\n\tprevious() {\n\t\tif (this.hasPrevious()) {\n\t\t\tthis.router.navigate([], {\n\t\t\t\tqueryParams: { endingBefore: this.page.data[0].id },\n\t\t\t});\n\t\t}\n\t}\n\n\tnext() {\n\t\tif (this.hasNext()) {\n\t\t\tthis.router.navigate([], {\n\t\t\t\tqueryParams: { startingAfter: this.page.data[this.page.data.length - 1].id },\n\t\t\t});\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./pagination.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<nav aria-label=\"Page navigation example\">\r\n  <ul class=\"pagination justify-content-center\">\r\n    <li class=\"page-item {{hasPrevious() ? '': 'disabled'}}\" (click)=\"previous()\">\r\n      <a class=\"page-link\" tabindex=\"-1\">\r\n        <fa-icon [icon]=\"faAngleLeft\"></fa-icon>\r\n        <span class=\"sr-only\">Previous</span>\r\n      </a>\r\n    </li>\r\n    <li class=\"page-item {{hasNext() ? '': 'disabled'}}\" (click)=\"next()\">\r\n      <a class=\"page-link\">\r\n        <fa-icon [icon]=\"faAngleRight\"></fa-icon>\r\n        <span class=\"sr-only\">Next</span>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n"
        },
        {
            "name": "PieceBuilderComponent",
            "id": "component-PieceBuilderComponent-b15d934c8cc30b00175509fbcb4a01b967079c07b7f4bb350c0acb60ac31904f49e2309216860772f0f98cc9e94b87c1af331aac72ab72d63b6e77360b1e6c5b",
            "file": "src/app/layout/flow-builder/page/flow-builder/piece-builder.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-piece-builder",
            "styleUrls": [
                "./piece-builder.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./piece-builder.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "canvasWrapper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'canvasWrapper'"
                        }
                    ]
                },
                {
                    "name": "leftDrawerRect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DOMRect",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "leftSideBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'leftSideDrawer', {read: ElementRef}"
                        }
                    ]
                },
                {
                    "name": "leftSidebar$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<LeftSideBarType>",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "leftSidebarDragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "leftSideBarWidth",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "loadInitialData$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "pieceBuilderService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PieceBuilderService",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "rightDrawerRect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DOMRect",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "rightSideBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'rightSideDrawer', {read: ElementRef}"
                        }
                    ]
                },
                {
                    "name": "rightSidebar$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<RightSideBarType>",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "rightSidebarDragging",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "rightSidebarWidth",
                    "defaultValue": "'0'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "methodsClass": [
                {
                    "name": "canCloseWindow",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:beforeunload', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "leftDrawerHandleDrag",
                    "args": [
                        {
                            "name": "dragMoveEvent",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dragHandle",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "builderContainer",
                            "type": "MatDrawerContainer",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dragMoveEvent",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dragHandle",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "builderContainer",
                            "type": "MatDrawerContainer",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "leftDrawerHandleDragEnded",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "leftDrawerHandleDragStarted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openUserback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "rightDrawerHandleDrag",
                    "args": [
                        {
                            "name": "dragMoveEvent",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dragHandle",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "builderContainer",
                            "type": "MatDrawerContainer",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dragMoveEvent",
                            "type": "CdkDragMove",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dragHandle",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "builderContainer",
                            "type": "MatDrawerContainer",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "rightDrawerHandleDragStarted",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "rightDrawHandleDragStopped",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:beforeunload",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 181
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n\tComponent,\r\n\tElementRef,\r\n\tHostListener,\r\n\tNgZone,\r\n\tOnDestroy,\r\n\tOnInit,\r\n\tViewChild,\r\n\tViewEncapsulation,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PieceBuilderService } from '../../service/piece-builder.service';\r\nimport { InstanceRunStatus } from '../../../common-layout/model/enum/instance-run-status';\r\nimport { NavigationService } from '../../../dashboard-layout/service/navigation.service';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/htmlmixed/htmlmixed';\r\nimport 'codemirror/mode/shell/shell';\r\nimport 'codemirror/addon/display/autorefresh';\r\nimport { RightSideBarType } from '../../../common-layout/model/enum/right-side-bar-type.enum';\r\nimport { LeftSideBarType } from 'src/app/layout/common-layout/model/enum/left-side-bar-type.enum';\r\nimport { Collection } from '../../../common-layout/model/piece.interface';\r\nimport { Store } from '@ngrx/store';\r\nimport { BuilderSelectors } from '../../store/selector/flow-builder.selector';\r\nimport { lastValueFrom, map, Observable, take, tap } from 'rxjs';\r\nimport { ViewModeEnum } from '../../store/model/enums/view-mode.enum';\r\nimport { UserbackService } from 'src/app/layout/common-layout/service/userback.service';\r\n\r\nimport { MatDrawerContainer } from '@angular/material/sidenav';\r\nimport { CdkDragMove } from '@angular/cdk/drag-drop';\r\nimport { SaveState } from '../../store/model/enums/save-state.enum';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { TestRunBarComponent } from './test-run-bar/test-run-bar.component';\r\nimport { BuilderActions } from '../../store/action/builder.action';\r\nimport { FlowItemDetailsActions } from '../../store/action/flow-items-details.action';\r\nimport { InstanceRun } from '../../../common-layout/model/instance-run.interface';\r\nimport { Flow } from '../../../common-layout/model/flow.class';\r\n\r\n@Component({\r\n\tselector: 'app-piece-builder',\r\n\ttemplateUrl: './piece-builder.component.html',\r\n\tstyleUrls: ['./piece-builder.component.scss'],\r\n\tencapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PieceBuilderComponent implements OnInit, OnDestroy {\r\n\t@ViewChild('canvasWrapper') canvasWrapper: ElementRef;\r\n\t@ViewChild('rightSideDrawer', { read: ElementRef }) rightSideBar: ElementRef;\r\n\t@ViewChild('leftSideDrawer', { read: ElementRef }) leftSideBar: ElementRef;\r\n\tbsModalRef: BsModalRef;\r\n\trightSidebarWidth = '0';\r\n\tleftSideBarWidth = '0';\r\n\tleftSidebar$: Observable<LeftSideBarType>;\r\n\trightSidebar$: Observable<RightSideBarType>;\r\n\trightDrawerRect: DOMRect;\r\n\tleftDrawerRect: DOMRect;\r\n\trightSidebarDragging: boolean = false;\r\n\tleftSidebarDragging: boolean = false;\r\n\tloadInitialData$: Observable<void> = new Observable<void>();\r\n\r\n\tconstructor(\r\n\t\tprivate store: Store,\r\n\t\tprivate navigationService: NavigationService,\r\n\t\tpublic pieceBuilderService: PieceBuilderService,\r\n\t\tprivate actRoute: ActivatedRoute,\r\n\t\tprivate userbackService: UserbackService,\r\n\t\tprivate ngZone: NgZone,\r\n\t\tprivate snackbar: MatSnackBar\r\n\t) {\r\n\t\tthis.navigationService.isInBuilder = true;\r\n\t\tthis.loadInitialData$ = this.actRoute.data.pipe(\r\n\t\t\ttap(value => {\r\n\t\t\t\tlet runInformation = value['runInformation'];\r\n\t\t\t\tif (runInformation !== undefined) {\r\n\t\t\t\t\tthis.navigationService.setTitle('View Run');\r\n\t\t\t\t\tlet piece = runInformation.piece;\r\n\t\t\t\t\tlet flow: Flow = runInformation.flow;\r\n\t\t\t\t\tlet run: InstanceRun = runInformation.run;\r\n\t\t\t\t\tthis.store.dispatch(\r\n\t\t\t\t\t\tBuilderActions.loadInitial({\r\n\t\t\t\t\t\t\tpiece: piece,\r\n\t\t\t\t\t\t\tflows: [flow],\r\n\t\t\t\t\t\t\tviewMode: ViewModeEnum.VIEW_INSTANCE_RUN,\r\n\t\t\t\t\t\t\trun: run,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis.snackbar.openFromComponent(TestRunBarComponent, {\r\n\t\t\t\t\t\tduration: undefined,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet piece: Collection = value['piece'];\r\n\t\t\t\t\tlet flows = value['flows'];\r\n\r\n\t\t\t\t\tthis.navigationService.setTitle(piece.lastVersion.displayName);\r\n\t\t\t\t\tthis.store.dispatch(\r\n\t\t\t\t\t\tBuilderActions.loadInitial({\r\n\t\t\t\t\t\t\tpiece: piece,\r\n\t\t\t\t\t\t\tflows: flows.data,\r\n\t\t\t\t\t\t\tviewMode: ViewModeEnum.BUILDING,\r\n\t\t\t\t\t\t\trun: undefined,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tmap(value => void 0)\r\n\t\t);\r\n\r\n\t\tthis.leftSidebar$ = this.store.select(BuilderSelectors.selectCurrentLeftSidebarType);\r\n\t\tthis.rightSidebar$ = this.store.select(BuilderSelectors.selectCurrentRightSideBarType);\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.snackbar.dismiss();\r\n\t\tthis.navigationService.isInBuilder = false;\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tdocument.addEventListener('mousemove', () => {}, {\r\n\t\t\tpassive: false,\r\n\t\t\tcapture: true,\r\n\t\t});\r\n\t\tthis.store.dispatch(FlowItemDetailsActions.clearFlowItemsDetails());\r\n\t\tthis.store.dispatch(FlowItemDetailsActions.loadFlowItemsDetails());\r\n\t}\r\n\r\n\tpublic get rightSideBarType() {\r\n\t\treturn RightSideBarType;\r\n\t}\r\n\r\n\tpublic get instanceRunStatus() {\r\n\t\treturn InstanceRunStatus;\r\n\t}\r\n\r\n\tpublic get leftSideBarType() {\r\n\t\treturn LeftSideBarType;\r\n\t}\r\n\r\n\topenUserback() {\r\n\t\tthis.userbackService.openUserbackSubject.next(true);\r\n\t}\r\n\r\n\trightDrawerHandleDrag(dragMoveEvent: CdkDragMove, dragHandle: HTMLElement, builderContainer: MatDrawerContainer) {\r\n\t\tthis.ngZone.runOutsideAngular(() => {\r\n\t\t\tconst width = this.rightDrawerRect.width + dragMoveEvent.distance.x * -1;\r\n\t\t\tthis.rightSidebarWidth = `${width}px`;\r\n\t\t\tdragHandle.style.transform = `translate(0px, 0)`;\r\n\t\t\tbuilderContainer.updateContentMargins();\r\n\t\t});\r\n\t}\r\n\r\n\trightDrawerHandleDragStarted() {\r\n\t\tthis.rightSidebarDragging = true;\r\n\t\tconst targetSideBar: HTMLElement = this.rightSideBar.nativeElement;\r\n\t\tthis.rightDrawerRect = targetSideBar.getBoundingClientRect();\r\n\t}\r\n\r\n\tleftDrawerHandleDragStarted() {\r\n\t\tconst targetSideBar: HTMLElement = this.leftSideBar.nativeElement;\r\n\t\tthis.leftDrawerRect = targetSideBar.getBoundingClientRect();\r\n\t}\r\n\r\n\tleftDrawerHandleDrag(dragMoveEvent: CdkDragMove, dragHandle: HTMLElement, builderContainer: MatDrawerContainer) {\r\n\t\tthis.leftSidebarDragging = true;\r\n\t\tthis.ngZone.runOutsideAngular(() => {\r\n\t\t\tconst width = this.leftDrawerRect.width + dragMoveEvent.distance.x;\r\n\t\t\tthis.leftSideBarWidth = `${width}px`;\r\n\t\t\tdragHandle.style.transform = `translate(0px, 0)`;\r\n\t\t\tbuilderContainer.updateContentMargins();\r\n\t\t});\r\n\t}\r\n\r\n\trightDrawHandleDragStopped() {\r\n\t\tthis.rightSidebarDragging = false;\r\n\t}\r\n\r\n\tleftDrawerHandleDragEnded() {\r\n\t\tthis.leftSidebarDragging = false;\r\n\t}\r\n\r\n\t@HostListener('window:beforeunload', ['$event'])\r\n\tasync canCloseWindow($event: Event) {\r\n\t\tconst saveState = await lastValueFrom(this.store.select(BuilderSelectors.selectBuilderSaveState).pipe(take(1)));\r\n\r\n\t\tif (saveState == SaveState.SAVING) {\r\n\t\t\t$event.preventDefault();\r\n\t\t\t$event.returnValue = false;\r\n\t\t}\r\n\t\treturn $event;\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/assets/scss/custom/variables';\r\n\r\n$dot-size:2.5px;\r\n$dot-space: 20px;\r\n$drawer-min-width:21.25rem;\r\n$drawers-margin:0.625rem;\r\n$drawer-max-width:33.333333vw;\r\n$knob-width:3px;\r\n$knob-height:24px;\r\n.canvas {\r\n  background:\r\n    linear-gradient(90deg, $white ($dot-space - $dot-size), transparent 70%) center,\r\n    linear-gradient($white ($dot-space - $dot-size), transparent 70%) center,\r\n    rgba($dividers, 0.7);\r\n  background-size: $dot-space $dot-space;\r\n  overflow-y: scroll;\r\n  overflow-x: scroll;\r\n}\r\n\r\n.mat-drawer-content{\r\n  overflow: hidden;\r\n}\r\n\r\n.box {\r\n  display: flex;\r\n  flex-flow: column;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-width: 100%\r\n}\r\n\r\nmat-drawer[position=end]{\r\n  border-left: $drawers-margin solid $header !important;\r\n  min-width: $drawer-min-width;\r\n  max-width: $drawer-max-width;\r\n}\r\n\r\n\r\nmat-drawer[position=start]{\r\n  border-right: $drawers-margin solid $header !important;\r\n  min-width: $drawer-min-width;\r\n  max-width: $drawer-max-width;\r\n\r\n\r\n}\r\n\r\n.box .header {\r\n  flex: 0 1 auto;\r\n}\r\n\r\n.box .content {\r\n  flex: 1 1 auto;\r\n  overflow-y: auto;\r\n}\r\n\r\n.drawer-container\r\n{\r\n  position: relative; width: 100%; height: 100%\r\n}\r\n\r\n\r\n\r\n.support-icon-piece-builder\r\n{\r\n  position:absolute;\r\n  bottom:20px;\r\n  border-radius: 50%;\r\n  background-color:$body;\r\n  width: 30px;\r\n  height: 30px;\r\n  right: 20px;\r\n  cursor: pointer;\r\n  &:hover{\r\n    background-color:$title;\r\n  }\r\n}\r\n\r\n.side-drawer\r\n{\r\n  position: relative;\r\n}\r\n\r\n\r\n.flow-builder-resizer-handle\r\n{\r\n  position: absolute;\r\n  background-color: transparent;\r\n  width:10px;\r\n  height:100%;\r\n\r\n  cursor:col-resize;\r\n  touch-action: none;\r\n  transition: background-color 200ms ease 0s;\r\n\r\n  .knob\r\n  {\r\n    background-color: $border;\r\n    width:$knob-width;\r\n    height:$knob-height;\r\n    border-radius: 50px;\r\n    transition: all 400ms cubic-bezier(0.35, 0, 0.25, 1);\r\n  }\r\n  &:hover,&.active\r\n  {\r\n    .knob\r\n    {\r\n      background-color: $body;\r\n    }\r\n\r\n  }\r\n  z-index: 1000000;\r\n\r\n}\r\n\r\n.no-transition\r\n{\r\n  transition-duration: 0ms !important;\r\n}\r\n\r\n.right-side-handle\r\n{\r\n  left:-.625rem;\r\n}\r\n.left-side-handle {\r\n  right: -.625rem;\r\n}\r\n",
                    "styleUrl": "./piece-builder.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pieceBuilderService",
                        "type": "PieceBuilderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userbackService",
                        "type": "UserbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 58,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pieceBuilderService",
                        "type": "PieceBuilderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userbackService",
                        "type": "UserbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ngZone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "rightSideBarType": {
                    "name": "rightSideBarType",
                    "getSignature": {
                        "name": "rightSideBarType",
                        "type": "",
                        "returnType": "",
                        "line": 126
                    }
                },
                "instanceRunStatus": {
                    "name": "instanceRunStatus",
                    "getSignature": {
                        "name": "instanceRunStatus",
                        "type": "",
                        "returnType": "",
                        "line": 130
                    }
                },
                "leftSideBarType": {
                    "name": "leftSideBarType",
                    "getSignature": {
                        "name": "leftSideBarType",
                        "type": "",
                        "returnType": "",
                        "line": 134
                    }
                }
            },
            "templateData": "<div class=\"box\">\r\n  <div class=\"header\">\r\n    <app-flow-builder-header></app-flow-builder-header>\r\n  </div>\r\n  <div class=\"content\">\r\n    <div class=\"drawer-container\">\r\n      <mat-drawer-container class=\"h-100\" #builderContainer>\r\n        <mat-drawer\r\n          [disableClose]=\"true\"\r\n          mode=\"side\"\r\n          position=\"end\"\r\n          [opened]=\"(rightSidebar$ | async) !== rightSideBarType.NONE\"\r\n          #rightSideDrawer\r\n          [style.width]=\"rightSidebarWidth\"\r\n          [style.overflow]=\"'visible'\"\r\n        >\r\n          <div\r\n            #dragHandleRight\r\n            cdkDragLockAxis=\"x\"\r\n            cdkDrag\r\n            class=\"flow-builder-resizer-handle d-flex justify-content-center align-items-center right-side-handle\"\r\n            [class.active]=\"rightSidebarDragging\"\r\n            (cdkDragMoved)=\"\r\n              rightDrawerHandleDrag($event, dragHandleRight, builderContainer)\r\n            \"\r\n            (cdkDragStarted)=\"rightDrawerHandleDragStarted()\"\r\n            (cdkDragEnded)=\"rightDrawHandleDragStopped()\"\r\n          >\r\n            <div class=\"knob\"></div>\r\n          </div>\r\n          <app-flow-right-sidebar></app-flow-right-sidebar>\r\n        </mat-drawer>\r\n        <mat-drawer-content\r\n          [class.no-transition]=\"rightSidebarDragging || leftSidebarDragging\"\r\n        >\r\n          <div class=\"box\">\r\n            <div class=\"header\">\r\n              <app-flow-builder-tabs></app-flow-builder-tabs>\r\n            </div>\r\n            <div class=\"content canvas\" #canvasWrapper>\r\n              <app-flow-item-tree></app-flow-item-tree>\r\n              <div\r\n                class=\"support-icon-piece-builder d-flex justify-content-center align-items-center\"\r\n                (click)=\"openUserback()\"\r\n                matTooltip=\"Feedback and Support\"\r\n                matTooltipPosition=\"left\"\r\n              >\r\n                <svg-icon\r\n                  [svgStyle]=\"{ width: 9, height: 15 }\"\r\n                  src=\"assets/img/custom/support.svg\"\r\n                ></svg-icon>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </mat-drawer-content>\r\n        <mat-drawer\r\n          [disableClose]=\"true\"\r\n          mode=\"side\"\r\n          position=\"start\"\r\n          [opened]=\"(leftSidebar$ | async) !== leftSideBarType.NONE\"\r\n          [style.width]=\"leftSideBarWidth\"\r\n          [style.overflow]=\"'visible'\"\r\n          #leftSideDrawer\r\n        >\r\n          <div\r\n            #dragHandleLeft\r\n            cdkDragLockAxis=\"x\"\r\n            cdkDrag\r\n            class=\"flow-builder-resizer-handle d-flex justify-content-center align-items-center left-side-handle\"\r\n            (cdkDragMoved)=\"\r\n              leftDrawerHandleDrag($event, dragHandleLeft, builderContainer)\r\n            \"\r\n            [class.active]=\"leftSidebarDragging\"\r\n            (cdkDragStarted)=\"leftDrawerHandleDragStarted()\"\r\n            (cdkDragEnded)=\"leftDrawerHandleDragEnded()\"\r\n          >\r\n            <div class=\"knob\"></div>\r\n          </div>\r\n          <app-flow-left-sidebar></app-flow-left-sidebar>\r\n        </mat-drawer>\r\n      </mat-drawer-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-container *ngIf=\"loadInitialData$ | async\"></ng-container>\r\n"
        },
        {
            "name": "PieceSettingsComponent",
            "id": "component-PieceSettingsComponent-6b386ef8d3fc2d1847f22c714eb276eb4c02ea4f5b0a513393a3ce2348677a2a08c8481303a15830d63e3789cd81b5921c173e0768c89fe95c8c131f9db66a7c",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/piece-settings/piece-settings.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-piece-settings",
            "styleUrls": [
                "./piece-settings.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./piece-settings.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "autoSaveChanges$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "formBuilder",
                    "defaultValue": "new FormBuilder()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormBuilder",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "logoFile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "logoUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "pieceSettingsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "saveLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "title",
                    "defaultValue": "'Settings'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "updateCollectionInformation$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Collection>",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "autoSave",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setupAutoSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LeftSideBarType } from 'src/app/layout/common-layout/model/enum/left-side-bar-type.enum';\nimport { Store } from '@ngrx/store';\nimport { BuilderSelectors } from '../../../../store/selector/flow-builder.selector';\nimport { distinctUntilChanged, map, Observable, skipWhile, take, tap } from 'rxjs';\nimport { updateSettings } from '../../../../store/action/piece.action';\nimport { fadeInUp400ms } from '../../../../../common-layout/animation/fade-in-up.animation';\nimport { FlowsActions } from '../../../../store/action/flows.action';\nimport { Collection } from '../../../../../common-layout/model/piece.interface';\n\n@Component({\n\tselector: 'app-piece-settings',\n\ttemplateUrl: './piece-settings.component.html',\n\tstyleUrls: ['./piece-settings.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class PieceSettingsComponent implements OnInit {\n\ttitle = 'Settings';\n\tpieceSettingsForm: FormGroup;\n\tsaveLoading = false;\n\tlogoUrl: string;\n\tlogoFile: File;\n\tformBuilder: FormBuilder = new FormBuilder();\n\n\tautoSaveChanges$: Observable<void>;\n\tupdateCollectionInformation$: Observable<Collection>;\n\n\tconstructor(private store: Store) {}\n\n\tngOnInit(): void {\n\t\tthis.pieceSettingsForm = this.formBuilder.group({\n\t\t\ticon: new FormControl(),\n\t\t\tdescription: new FormControl('', [Validators.required]),\n\t\t});\n\n\t\tthis.updateCollectionInformation$ = this.store.select(BuilderSelectors.selectCurrentCollection).pipe(\n\t\t\ttake(1),\n\t\t\ttap(piece => {\n\t\t\t\tif (piece) {\n\t\t\t\t\tthis.pieceSettingsForm.controls['description'].setValue(piece?.lastVersion.description);\n\t\t\t\t}\n\t\t\t\tif (piece && piece.lastVersion.logoUrl) {\n\t\t\t\t\tthis.logoUrl = piece?.lastVersion.logoUrl;\n\t\t\t\t\tfetch(this.logoUrl, { mode: 'no-cors' }).then(r => {\n\t\t\t\t\t\tr.blob().then(blob => {\n\t\t\t\t\t\t\tthis.logoFile = new File([blob], 'icon.png');\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.pieceSettingsForm.get('description')?.setValue(piece.lastVersion.description);\n\n\t\t\t\tthis.setupAutoSave();\n\t\t\t})\n\t\t);\n\t}\n\n\tsetupAutoSave() {\n\t\tlet initialValue = this.pieceSettingsForm.value;\n\t\tthis.autoSaveChanges$ = this.pieceSettingsForm.valueChanges.pipe(\n\t\t\tskipWhile(f => JSON.stringify(f) === JSON.stringify(initialValue)),\n\t\t\tdistinctUntilChanged((a, b) => {\n\t\t\t\treturn JSON.stringify(a) === JSON.stringify(b);\n\t\t\t}),\n\t\t\ttap(value => {\n\t\t\t\tthis.autoSave(value);\n\t\t\t}),\n\t\t\tmap(value => void 0)\n\t\t);\n\t}\n\n\tcloseSidebar() {\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.setLeftSidebar({\n\t\t\t\tsidebarType: LeftSideBarType.NONE,\n\t\t\t\tprops: {},\n\t\t\t})\n\t\t);\n\t}\n\n\tautoSave(value: any) {\n\t\tlet icon = value.icon;\n\t\tlet description = value.description;\n\t\tif (icon != undefined) {\n\t\t\tconst reader = new FileReader();\n\t\t\treader.onload = () => {\n\t\t\t\tthis.store.dispatch(\n\t\t\t\t\tupdateSettings({\n\t\t\t\t\t\tlogoEncodedUrl: reader.result as string,\n\t\t\t\t\t\tlogoFile: icon,\n\t\t\t\t\t\tdescription: description ?? '',\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t};\n\t\t\treader.readAsDataURL(icon);\n\t\t} else {\n\t\t\tthis.store.dispatch(\n\t\t\t\tupdateSettings({\n\t\t\t\t\tlogoEncodedUrl: undefined,\n\t\t\t\t\tlogoFile: undefined,\n\t\t\t\t\tdescription: description ?? '',\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.piece-settings-form {\r\n  margin: 6px 20px;\r\n}\r\n\r\n.piece-settings-form label {\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n  color: $formLabel;\r\n  border-bottom: 0.5px dashed $formLabel;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.save-cancel-buttons-container-body {\r\n  padding: 10px;\r\n}\r\n\r\n.save-cancel-buttons-container {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  background-color: $white;\r\n}\r\n\r\n.border-top-separator {\r\n  border-top: 1px solid $line;\r\n}\r\n\r\n.required-astrisk {\r\n  color: $danger;\r\n}\r\n",
                    "styleUrl": "./piece-settings.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"d-column\">\r\n  <div class=\"top p-3\">\r\n    <app-sidebar-header\r\n      (closeClicked)=\"closeSidebar()\"\r\n      title=\"Settings\"\r\n    ></app-sidebar-header>\r\n  </div>\r\n\r\n  <form\r\n    [formGroup]=\"pieceSettingsForm\"\r\n    class=\"piece-settings-form\"\r\n  >\r\n    <div class=\"form-group\">\r\n      <label>Piece Icon </label>\r\n      <app-file-upload\r\n        [file]=\"logoFile\"\r\n        [loadedImageUrl]=\"logoUrl\"\r\n        formControlName=\"icon\"\r\n      ></app-file-upload>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"description\">Description</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        id=\"description\"\r\n        rows=\"2\"\r\n        formControlName=\"description\"\r\n      ></textarea>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<ng-container *ngIf=\"autoSaveChanges$ | async\"></ng-container>\r\n<ng-container *ngIf=\"updateCollectionInformation$ | async\"></ng-container>\r\n"
        },
        {
            "name": "PublishPopoverComponent",
            "id": "component-PublishPopoverComponent-f4cc75f14590b00b1ca7bc665969259eb808c5d551b00ca17b1ca91074649eb7a947bd68d87e5afeaa98dfc59d32929cb4680815e5488b9153cf4c2824eee842",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-builder-header/publish-popover/publish-popover.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-publish-popover",
            "styleUrls": [
                "./publish-popover.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./publish-popover.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "aFlowIsInvalid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "allFlowsValid$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "collectionVersionSequenceForEachEnvironment",
                    "defaultValue": "new Map<string, string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "excutePublishBtnText",
                    "defaultValue": "'Publish'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "executePublish$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Collection>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "executePublishBtnDisabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "isPublishing",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isSaving",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "popoverToggleBtnText",
                    "defaultValue": "'Publish'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "projectEnvironmentsAndCurrentCollection$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "publishing$",
                    "defaultValue": "of(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "saving$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<SaveState>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "selectedEnvironments$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "selectedEnvironmentsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "'Publish collection'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "clearEnvironmentsFormValue",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createEnvironmentsForm",
                    "args": [
                        {
                            "name": "environmentAndCollection",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "environmentAndCollection",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "executePublishBtnStyleInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getProjectEnvironments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getSavingState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getSelectedEnvironments",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openVersionsList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "publish",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 165,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setSelectedEnvironmentsListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { combineLatest, map, Observable, of, switchMap, take, tap } from 'rxjs';\nimport { ProjectEnvironment } from 'src/app/layout/common-layout/model/project-environment.interface';\nimport { CollectionService } from 'src/app/layout/common-layout/service/collection.service';\nimport { EnvironmentSelectors } from 'src/app/layout/common-layout/store/selector/environment.selector';\nimport { BuilderSelectors } from 'src/app/layout/flow-builder/store/selector/flow-builder.selector';\nimport { Collection } from 'src/app/layout/common-layout/model/piece.interface';\nimport { SaveState } from 'src/app/layout/flow-builder/store/model/enums/save-state.enum';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { FlowsActions } from 'src/app/layout/flow-builder/store/action/flows.action';\nimport { RightSideBarType } from 'src/app/layout/common-layout/model/enum/right-side-bar-type.enum';\nimport { PieceAction } from 'src/app/layout/flow-builder/store/action/piece.action';\nimport { VersionEditState } from 'src/app/layout/common-layout/model/enum/version-edit-state.enum';\n@Component({\n\tselector: 'app-publish-popover',\n\ttemplateUrl: './publish-popover.component.html',\n\tstyleUrls: ['./publish-popover.component.scss'],\n})\nexport class PublishPopoverComponent implements OnInit {\n\tprojectEnvironmentsAndCurrentCollection$: Observable<{ environments: ProjectEnvironment[]; collection: Collection }>;\n\tselectedEnvironmentsForm: FormGroup;\n\texecutePublish$: Observable<Collection>;\n\tsaving$: Observable<SaveState>;\n\tisSaving: boolean = false;\n\tisPublishing: boolean = false;\n\tpublishing$: Observable<boolean> = of(false);\n\tallFlowsValid$: Observable<boolean>;\n\tpopoverToggleBtnText = 'Publish';\n\texcutePublishBtnText = 'Publish';\n\ttooltipText = 'Publish collection';\n\texecutePublishBtnDisabled = true;\n\taFlowIsInvalid = false;\n\tcollectionVersionSequenceForEachEnvironment = new Map<string, string>();\n\tselectedEnvironments$: Observable<string[]>;\n\tconstructor(\n\t\tprivate store: Store,\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate collectionService: CollectionService,\n\t\tprivate actions$: Actions\n\t) {}\n\n\texecutePublishBtnStyleInit() {\n\t\tthis.executePublishBtnDisabled = true;\n\t\tthis.excutePublishBtnText = 'Publish';\n\t}\n\tngOnInit(): void {\n\t\tthis.getProjectEnvironments();\n\t\tthis.getSavingState();\n\t\tthis.executePublishBtnStyleInit();\n\t\tthis.allFlowsValid$ = this.store.select(BuilderSelectors.selectFlowsValidity).pipe(\n\t\t\ttap(valid => {\n\t\t\t\tthis.aFlowIsInvalid = !valid;\n\t\t\t\tif (this.aFlowIsInvalid) {\n\t\t\t\t\tthis.tooltipText = 'Please make sure all flows are valid';\n\t\t\t\t} else {\n\t\t\t\t\tthis.tooltipText = 'Publish collection';\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate setSelectedEnvironmentsListener() {\n\t\tthis.selectedEnvironments$ = this.selectedEnvironmentsForm.valueChanges.pipe(\n\t\t\tmap(() => {\n\t\t\t\treturn this.getSelectedEnvironments();\n\t\t\t}),\n\t\t\ttap(selectedEnvironments => {\n\t\t\t\tif (selectedEnvironments.length > 0) {\n\t\t\t\t\tthis.excutePublishBtnText = `Publish to ${selectedEnvironments.length}`;\n\t\t\t\t\tif (selectedEnvironments.length > 1) {\n\t\t\t\t\t\tthis.excutePublishBtnText = `${this.excutePublishBtnText} environments`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.excutePublishBtnText = `${this.excutePublishBtnText} environment`;\n\t\t\t\t\t}\n\t\t\t\t\tthis.executePublishBtnDisabled = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.excutePublishBtnText = `Publish`;\n\t\t\t\t\tthis.executePublishBtnDisabled = true;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate getSavingState() {\n\t\tthis.saving$ = this.store.select(BuilderSelectors.selectBuilderSaveState).pipe(\n\t\t\ttap(state => {\n\t\t\t\tif (state === SaveState.SAVING) {\n\t\t\t\t\tthis.popoverToggleBtnText = 'Saving';\n\t\t\t\t\tthis.isSaving = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (this.isPublishing) {\n\t\t\t\t\t\tthis.popoverToggleBtnText = 'Publishing';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.popoverToggleBtnText = 'Publish';\n\t\t\t\t\t}\n\t\t\t\t\tthis.isSaving = false;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate getProjectEnvironments() {\n\t\tthis.projectEnvironmentsAndCurrentCollection$ = combineLatest({\n\t\t\tenvironments: this.store.select(EnvironmentSelectors.selectEnvironments),\n\t\t\tcollection: this.store.select(BuilderSelectors.selectCurrentCollection),\n\t\t}).pipe(\n\t\t\ttap(result => {\n\t\t\t\tconst envrionmentsFormValueFromLastTimePopoverWasOpen = this.selectedEnvironmentsForm\n\t\t\t\t\t? this.getSelectedEnvironments()\n\t\t\t\t\t: [];\n\t\t\t\tthis.createEnvironmentsForm(result);\n\t\t\t\tif (envrionmentsFormValueFromLastTimePopoverWasOpen) {\n\t\t\t\t\tenvrionmentsFormValueFromLastTimePopoverWasOpen.forEach(envId => {\n\t\t\t\t\t\tthis.selectedEnvironmentsForm.get(envId)!.setValue(true);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.setSelectedEnvironmentsListener();\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate createEnvironmentsForm(environmentAndCollection: {\n\t\tenvironments: ProjectEnvironment[];\n\t\tcollection: Collection;\n\t}) {\n\t\tthis.collectionVersionSequenceForEachEnvironment.clear();\n\t\tconst environmentsControls: { [key: string]: FormControl } = {};\n\t\tenvironmentAndCollection.environments.forEach(e => {\n\t\t\tconst currentCollectionStateOnEnvrionment = e.deployedCollections.find(\n\t\t\t\tc => c.collectionId === environmentAndCollection.collection.id\n\t\t\t);\n\t\t\tif (currentCollectionStateOnEnvrionment) {\n\t\t\t\tconst collectionVersionSequence = environmentAndCollection.collection.versionsList.findIndex(\n\t\t\t\t\tverId => currentCollectionStateOnEnvrionment.collectionVersionsId[0] === verId\n\t\t\t\t);\n\t\t\t\tthis.collectionVersionSequenceForEachEnvironment.set(e.id, `V${collectionVersionSequence + 1}`);\n\t\t\t\tconst isLatestCollectionVersionDeployedOnEnvrionment =\n\t\t\t\t\tenvironmentAndCollection.collection.lastVersion.id ===\n\t\t\t\t\tcurrentCollectionStateOnEnvrionment.collectionVersionsId[0];\n\t\t\t\tenvironmentsControls[e.id] = new FormControl({\n\t\t\t\t\tvalue: isLatestCollectionVersionDeployedOnEnvrionment,\n\t\t\t\t\tdisabled: isLatestCollectionVersionDeployedOnEnvrionment,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tenvironmentsControls[e.id] = new FormControl(false);\n\t\t\t}\n\t\t});\n\n\t\tthis.selectedEnvironmentsForm = this.formBuilder.group(environmentsControls);\n\t}\n\n\tgetSelectedEnvironments() {\n\t\tconst formValue: { [key: string]: boolean } = this.selectedEnvironmentsForm.value;\n\t\tconst selectedEnvironmentsIds: string[] = [];\n\t\tfor (let envId in formValue) {\n\t\t\tif (formValue[envId] && !this.selectedEnvironmentsForm.get(envId)!.disabled) {\n\t\t\t\tselectedEnvironmentsIds.push(envId);\n\t\t\t}\n\t\t}\n\t\treturn selectedEnvironmentsIds;\n\t}\n\n\tpublish() {\n\t\tthis.executePublishBtnStyleInit();\n\t\tconst currentCollection$ = this.store.select(BuilderSelectors.selectCurrentCollection).pipe(take(1));\n\t\tthis.isPublishing = true;\n\t\tthis.popoverToggleBtnText = 'Publishing';\n\t\tthis.executePublish$ = currentCollection$.pipe(\n\t\t\tswitchMap(collection => {\n\t\t\t\tif (collection.lastVersion.state === VersionEditState.DRAFT) {\n\t\t\t\t\treturn this.collectionService.lock(collection.id);\n\t\t\t\t}\n\t\t\t\treturn of(collection);\n\t\t\t}),\n\t\t\ttap(lockedCollection => {\n\t\t\t\tconst environmentsControlValue: string[] = this.getSelectedEnvironments();\n\t\t\t\tthis.store.dispatch(\n\t\t\t\t\tPieceAction.publishCollection({\n\t\t\t\t\t\tenvironmentIds: environmentsControlValue,\n\t\t\t\t\t\tcollection: lockedCollection,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tthis.publishing$ = of(true).pipe(\n\t\t\t\t\tswitchMap(() => {\n\t\t\t\t\t\treturn this.actions$.pipe(\n\t\t\t\t\t\t\tofType(PieceAction.publishCollectionSuccess, PieceAction.publishCollectionFailed),\n\t\t\t\t\t\t\ttake(1),\n\t\t\t\t\t\t\ttap(() => {\n\t\t\t\t\t\t\t\tthis.excutePublishBtnText = 'Publish';\n\t\t\t\t\t\t\t\tthis.executePublishBtnDisabled = true;\n\t\t\t\t\t\t\t\tthis.clearEnvironmentsFormValue();\n\t\t\t\t\t\t\t\tif (!this.isSaving) {\n\t\t\t\t\t\t\t\t\tthis.popoverToggleBtnText = 'Publish';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.isPublishing = false;\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tmap(() => {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t})\n\t\t);\n\t}\n\tclearEnvironmentsFormValue() {\n\t\tconst controls = this.selectedEnvironmentsForm.controls;\n\t\tconst controlsNames = Object.keys(controls);\n\t\tcontrolsNames.forEach(cn => {\n\t\t\tthis.selectedEnvironmentsForm.get(cn)!.setValue(false);\n\t\t});\n\t}\n\topenVersionsList() {\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.setRightSidebar({\n\t\t\t\tsidebarType: RightSideBarType.COLLECTION_VERSIONS,\n\t\t\t\tprops: {},\n\t\t\t})\n\t\t);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.btn-light-green {\r\n  color: #fff;\r\n  background-color: #14AE5C;\r\n  border-color: #14AE5C;\r\n  font-weight: 500;\r\n  font-size: .875rem;\r\n  line-height: 1.375rem;\r\n  &[disabled]{\r\n    background-color:#D4D4D4;\r\n    border-color:#D4D4D4;\r\n    color:$formLabel;\r\n  }\r\n}\r\n\r\n.btn-section {\r\n padding:0px .75rem;\r\n margin-bottom:.9375rem;\r\n gap:0.5rem;\r\n}\r\n\r\n.publish-popover-container {\r\n\r\n  padding: .3125rem;\r\n  border-radius: 3px;\r\n  background-color: $white;\r\n  min-width: 19.3125rem;\r\n  max-width: 19.3125rem;\r\n  .btn\r\n  {\r\n    padding: .3125rem .6875rem;\r\n  }\r\n}\r\n\r\n.envrionments-list-section {\r\n  padding:0px .75rem;\r\n  ul{\r\n    padding:0px;\r\n    max-height: 7.875rem;\r\n    margin-bottom: 0px ;\r\n    padding-bottom:10px;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n    list-style-type: none;\r\n    &::-webkit-scrollbar\r\n    {\r\n      width: 5px;\r\n    }\r\n  }\r\n  li{\r\n   padding-bottom:.3125rem;\r\n   .version-tag\r\n    {\r\n      background: rgba(0, 0, 0, 0.05);\r\n      border-radius: 130px;\r\n      padding:.0938rem .375rem;\r\n      font-weight: 400;\r\n      font-size: 12px;\r\n      line-height: 16px;\r\n      color: $body;\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n.publish-to-text {\r\n  font-weight: 500;\r\n  font-size: .875rem;\r\n  line-height: 1.5rem;\r\n  padding: .3125rem 0px;\r\n  color:$formLabel;\r\n\r\n}\r\n\r\n.publish-popover-separator\r\n{\r\n  border-top:1px solid $dividers;\r\n}\r\n\r\n.publish-warning\r\n{\r\n  color:$warn;\r\n  font-weight: 400;\r\n  font-size: .75rem;\r\n  line-height: 1rem;\r\n  gap:.625rem;\r\n  margin-top:.9375rem;\r\n  margin-bottom:1.25rem;\r\n}\r\n\r\n.older-versions-text\r\n{\r\n  color:$blue-link;\r\n  margin:.625rem .75rem .625rem .75rem ;\r\n  font-size:.875rem;\r\n\r\n}\r\n\r\n.publish-popover-chevron{\r\n  fill:$white;\r\n  height:5px;\r\n  width: 10px;\r\n  &.flip{\r\n    svg{\r\n      transform: rotate((180deg));\r\n    }\r\n\r\n  }\r\n}\r\n\r\n.publish-popover-text\r\n{\r\n  gap:10px;\r\n}\r\n@keyframes loading-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.loading-spin-animation {\r\n  svg {\r\n    transform-origin: 7.5px 7.5px 0;\r\n    animation-name: loading-spin;\r\n    animation-duration: 1s;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: linear;\r\n  }\r\n}\r\n\r\n.white-loader{\r\n  fill: $white;\r\n  height:15px;\r\n  width: 15px;\r\n  margin-bottom:2px;\r\n}\r\n\r\n.loading-template\r\n{\r\n  gap:4px;\r\n}\r\n.environment-published-text\r\n{\r\n  color:#14AE5C\r\n}\r\n\r\n.environment-name\r\n{\r\n  white-space: nowrap;\r\n  max-width: 9.5rem;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n}\r\n\r\n.envrionment-name-container\r\n{\r\n  gap:0.5ch;\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./publish-popover.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "collectionService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 36,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "collectionService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [matTooltip]=\"popover.isOpen? '' : tooltipText\" >\r\n  <app-button [outsideClick]=\"true\"\r\n  btnSize=\"medium\" #popover=\"bs-popover\" [popover]=\"publishPopOver\" placement=\"bottom\"\r\n  containerClass=\"publish-popover\" container=\"body\" triggers=\"\" (click)=\"isSaving || isPublishing || aFlowIsInvalid||popover.isOpen ? popover.hide() : popover.show()\">\r\n  <ng-container *ngIf=\"isSaving || isPublishing; else defaultTemplate\">\r\n    <div class=\"d-flex loading-template\">\r\n      <svg-icon src=\"assets/img/custom/loading.svg\" class=\"loading-spin-animation white-loader\" [applyClass]=\"true\">\r\n      </svg-icon>\r\n      {{ popoverToggleBtnText}}\r\n    </div>\r\n\r\n  </ng-container>\r\n  <ng-template #defaultTemplate>\r\n    <div class=\"d-flex publish-popover-text\">\r\n      {{ popoverToggleBtnText}} <svg-icon class=\"publish-popover-chevron\" [class.flip]=\"popover.isOpen\"\r\n        [applyClass]=\"true\" src=\"assets/img/custom/chevron.svg\"> </svg-icon>\r\n    </div>\r\n  </ng-template>\r\n </app-button>\r\n\r\n</div>\r\n\r\n\r\n<ng-template #publishPopOver>\r\n  <div class=\"publish-popover-container\">\r\n    <ng-container *ngIf=\"projectEnvironmentsAndCurrentCollection$|async as collectionAndEnvrionment\">\r\n      <section class=\"envrionments-list-section\">\r\n        <div class=\"publish-to-text\">Publish V{{collectionAndEnvrionment.collection.versionsList.length}} to: </div>\r\n        <form [formGroup]=\"selectedEnvironmentsForm\">\r\n          <ul>\r\n\r\n            <li *ngFor=\"let env of collectionAndEnvrionment.environments; let isLast=last\">\r\n              <div class=\"custom-control custom-checkbox\">\r\n                <input class=\"custom-control-input\" [id]=\"env.id\" [formControlName]=\"env.id\" type=\"checkbox\">\r\n                <label class=\"custom-control-label\" [for]=\"env.id\">\r\n                  <div class=\"d-flex envrionment-name-container\">\r\n                    <div class=\"environment-name\" #envNameEl\r\n                      [matTooltip]=\"envNameEl.scrollWidth > envNameEl.clientWidth? env.name: ''\"\r\n                      matTooltipClass=\"publish-popover-mat-tooltip\"\r\n\r\n                      >{{env.name}} </div>\r\n                    <ng-container *ngIf=\"selectedEnvironmentsForm.get(env.id)!.enabled &&\r\n                  collectionVersionSequenceForEachEnvironment.get(env.id);else published\">\r\n                      <div class=\"version-tag d-flex align-items-center\">\r\n                        {{collectionVersionSequenceForEachEnvironment.get(env.id)}} </div>\r\n                    </ng-container>\r\n                    <ng-template #published>\r\n                      <div *ngIf=\"selectedEnvironmentsForm.get(env.id)!.disabled\" class=\"environment-published-text\">\r\n                        (Published)</div>\r\n                    </ng-template>\r\n                  </div>\r\n\r\n                </label>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n        <div class=\"publish-popover-separator\">\r\n        </div>\r\n        <div class=\"publish-warning d-flex align-items-center\">\r\n          <svg-icon [svgStyle]=\"{ width: 16, height: 16 }\" src=\"assets/img/custom/warn.svg\"></svg-icon>\r\n          <div>\r\n            All users will be automatically upgraded to the new version.\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n\r\n      <section class=\"d-flex btn-section\">\r\n        <app-button\r\n        btnColor=\"basic\"\r\n        btnStyle=\"stroked\"\r\n        btnSize=\"medium\"\r\n        (buttonClicked)=\"popover.hide();\"\r\n      > Close\r\n      </app-button>\r\n      <app-button class=\"flex-grow-1\"  btnSize=\"medium\"   [disabled]=\"executePublishBtnDisabled\" btnColor=\"success\" (buttonClicked)=\"publish(); popover.hide();\" [fullWidthOfContainer]=\"true\">{{excutePublishBtnText}}</app-button>\r\n      </section>\r\n      <div class=\"older-versions-text cursor-pointer\" (click)=\"openVersionsList(); popover.hide();\">View older versions\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-container *ngIf=\"saving$ | async\"></ng-container>\r\n<ng-container *ngIf=\"executePublish$ | async\"></ng-container>\r\n<ng-container *ngIf=\"publishing$ | async\"></ng-container>\r\n<ng-container *ngIf=\"selectedEnvironments$|async\"></ng-container>\r\n<ng-container *ngIf=\"allFlowsValid$ | async\"></ng-container>\r\n"
        },
        {
            "name": "RedirectUrlComponent",
            "id": "component-RedirectUrlComponent-b777a1bb18bf5f8ffac51194f1c6e0f8b80feb70b51c3c529c13d5161e1705d25494a6e8207ad06b9104edd0d89d0a35d93b8335948128a5c03e8835670b4c65",
            "file": "src/app/layout/redirect-url/redirect-url.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-redirect-url",
            "styleUrls": [
                "./redirect-url.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./redirect-url.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sendCodeFromIFrame$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, Observable, tap } from 'rxjs';\n\n@Component({\n\tselector: 'app-redirect-url',\n\ttemplateUrl: './redirect-url.component.html',\n\tstyleUrls: ['./redirect-url.component.css'],\n})\nexport class RedirectUrlComponent implements OnInit {\n\tsendCodeFromIFrame$: Observable<void> = new Observable<void>();\n\tconstructor(private route: ActivatedRoute) {}\n\n\tngOnInit(): void {\n\t\tthis.sendCodeFromIFrame$ = this.route.queryParams\n\t\t\t.pipe(\n\t\t\t\ttap(params => {\n\t\t\t\t\tif (window.opener && params['code'] != undefined) {\n\t\t\t\t\t\twindow.opener.postMessage(params, '*');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t\t.pipe(map(value => void 0));\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./redirect-url.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>redirect-url works!</p>\r\n<ng-container *ngIf=\"sendCodeFromIFrame$ | async\"></ng-container>\r\n"
        },
        {
            "name": "RemoteFlowInputFormComponent",
            "id": "component-RemoteFlowInputFormComponent-33d60fe6576dd5ce92dc9dbb54eb49c6b7a151b8749cccbff3c7df017aba71cdbe31c61103e6fc2a190549f1af89f7d44010298ee7707ee75136ab8d80bea230",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/remote-flow-input-form/remote-flow-input-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: RemoteFlowInputFormComponent,\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, multi: true, useExisting: RemoteFlowInputFormComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-remote-flow-input-form",
            "styleUrls": [
                "./remote-flow-input-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./remote-flow-input-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_flowItemDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItemDetails",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "allAuthConfigs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Config[]>",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "collectionConfigsAndRemoteFlowConfigs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Config[]",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "configsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "descriptionLimit",
                    "defaultValue": "35",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "dynamicDropdownsObservablesMap",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<ConfigKey | Observable<DynamicDropdownResult>>",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "flowItemDetails$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<FlowItemDetails | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "flowsDropdownControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "flowsDropdownOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownOption[]",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "flowVersionDropdownValueChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "hintTextFullyShown",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean[]",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "newAuthConfigAdded$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Config>",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "refreshersList$",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "updateAuthConfig$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "valueChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 66
                }
            ],
            "methodsClass": [
                {
                    "name": "buildFormBecauseFlowVersionChanged",
                    "args": [
                        {
                            "name": "flowVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "buildFormBecauseStepChanged",
                    "args": [
                        {
                            "name": "flowVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowVersionId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createDynamicDropdownObservableBasedOnConfigScope",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "refreshEndPointBody",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 293,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "refreshEndPointBody",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createDynamicDropdownOptionsRequest",
                    "args": [
                        {
                            "name": "configToRefresh",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 327,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "configToRefresh",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createDynamicDropdownResultObservable",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "refreshEndPointBody",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<DynamicDropdownResult>",
                    "typeParameters": [],
                    "line": 256,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "refreshEndPointBody",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editSelectedAuthConfig",
                    "args": [
                        {
                            "name": "remoteFlowAuthConfigKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 380,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "remoteFlowAuthConfigKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAuthChildConfigs",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getAuthConfigSettings",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "OAuth2ConfigSettings",
                    "typeParameters": [],
                    "line": 351,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getControl",
                    "args": [
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 338,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDropdownSettings",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "DropdownSettings",
                    "typeParameters": [],
                    "line": 345,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDynamicDropdownObservable",
                    "args": [
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<DynamicDropdownResult>",
                    "typeParameters": [],
                    "line": 341,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "configKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getStaticDropdownSettings",
                    "args": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "StaticDropdownSettings",
                    "typeParameters": [],
                    "line": 348,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "listenToRefreshReferecneValueChanges",
                    "args": [
                        {
                            "name": "refresherConfigKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configToRefresh",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 310,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "refresherConfigKey",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configToRefresh",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openNewAuthenticationModal",
                    "args": [
                        {
                            "name": "connectorAuthConfig",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 364,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "connectorAuthConfig",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "prepareDynamicDropdowns",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 240,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 154,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setConfigsFormValueChangedListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 172,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFlowVersionDropdownListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "{ invalid: boolean; }",
                    "typeParameters": [],
                    "line": 166,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "remoteFlowSettings",
                            "type": "RemoteFlowInputFormSchema",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "remoteFlowSettings",
                            "type": "RemoteFlowInputFormSchema",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n\tValidatorFn,\n\tValidators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { UUID } from 'angular2-uuid';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { combineLatest, map, Observable, of, shareReplay, startWith, switchMap, take, tap } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\nimport { DropdownOption } from 'src/app/layout/common-layout/model/dynamic-controls/dropdown-options';\nimport { DynamicDropdownResult } from 'src/app/layout/common-layout/model/dynamic-controls/dynamic-dropdown-result';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { ConfigSource } from 'src/app/layout/common-layout/model/enum/config-source';\nimport { ConfigType, DropdownType } from 'src/app/layout/common-layout/model/enum/config.enum';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\nimport {\n\tDropdownSettings,\n\tDynamicDropdownSettings,\n\tOAuth2ConfigSettings,\n\tStaticDropdownSettings,\n} from 'src/app/layout/common-layout/model/fields/variable/config-settings';\nimport { Oauth2UserInputType } from 'src/app/layout/common-layout/model/fields/variable/subfields/oauth2-user-input.type';\nimport { DynamicDropdownService } from 'src/app/layout/common-layout/service/dynamic-dropdown.service';\nimport { RemoteFlowCacheService } from 'src/app/layout/flow-builder/service/remote-flow-cache.service';\nimport { BuilderSelectors } from 'src/app/layout/flow-builder/store/selector/flow-builder.selector';\nimport { NewAuthenticationModalComponent } from '../../../../new-authentication-modal/new-authentication-modal.component';\nimport { FlowItemDetails } from '../../../../step-type-sidebar/step-type-item/flow-item-details';\nimport { InputFormsSchema, RemoteFlowInputFormSchema } from '../input-forms-schema';\ndeclare type ConfigKey = string;\ndeclare type ConfigsAndTheirValues = { [key: string]: any };\n@Component({\n\tselector: 'app-remote-flow-input-form',\n\ttemplateUrl: './remote-flow-input-form.component.html',\n\tstyleUrls: ['./remote-flow-input-form.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: RemoteFlowInputFormComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: RemoteFlowInputFormComponent,\n\t\t},\n\t],\n\tanimations: [fadeInUp400ms],\n})\nexport class RemoteFlowInputFormComponent implements ControlValueAccessor {\n\tconfigsForm: FormGroup;\n\tflowsDropdownControl: FormControl;\n\tflowsDropdownOptions: DropdownOption[] = [];\n\tcollectionConfigsAndRemoteFlowConfigs: Config[] = [];\n\tdescriptionLimit = 35;\n\thintTextFullyShown: boolean[] = [];\n\tdynamicDropdownsObservablesMap: Map<ConfigKey, Observable<DynamicDropdownResult>> = new Map();\n\trefreshersList$: Observable<void>[] = [];\n\t_flowItemDetails: FlowItemDetails;\n\tvalueChanged$: Observable<void>;\n\tallAuthConfigs$: Observable<Config[]>;\n\tflowVersionDropdownValueChanged$: Observable<void>;\n\tflowItemDetails$: Observable<FlowItemDetails | undefined>;\n\tnewAuthConfigAdded$: Observable<Config>;\n\tupdateAuthConfig$: Observable<{ indexInList: number; config: Config } | undefined>;\n\tonChange = (value: InputFormsSchema) => {};\n\tonTouch = () => {};\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate dynamicDropdownService: DynamicDropdownService,\n\t\tprivate store: Store,\n\t\tprivate modalService: BsModalService,\n\t\tprivate remoteFlowCache: RemoteFlowCacheService\n\t) {\n\t\tthis.getAuthChildConfigs();\n\t}\n\n\tgetAuthChildConfigs() {\n\t\tthis.allAuthConfigs$ = combineLatest({\n\t\t\tflowConfigs: this.store.select(BuilderSelectors.selectCurrentFlowConfigs),\n\t\t\tcollectionConfigs: this.store.select(BuilderSelectors.selectCurrentCollectionConfigs),\n\t\t}).pipe(\n\t\t\tmap(res => {\n\t\t\t\tconst allConfigs = [...res.collectionConfigs, ...res.flowConfigs];\n\t\t\t\treturn allConfigs.filter(c => c.type === ConfigType.OAUTH2);\n\t\t\t})\n\t\t);\n\t}\n\twriteValue(remoteFlowSettings: RemoteFlowInputFormSchema): void {\n\t\tif (remoteFlowSettings.type === ActionType.REMOTE_FLOW) {\n\t\t\tthis.flowItemDetails$ = this.store\n\t\t\t\t.select(BuilderSelectors.selectRemoteFlowItemDetails(remoteFlowSettings.pieceVersionId))\n\t\t\t\t.pipe(\n\t\t\t\t\tswitchMap(flowItemDetails => {\n\t\t\t\t\t\tconsole.log(flowItemDetails);\n\t\t\t\t\t\tif (flowItemDetails) {\n\t\t\t\t\t\t\treturn this.remoteFlowCache\n\t\t\t\t\t\t\t\t.getCollectionFlowsVersions(\n\t\t\t\t\t\t\t\t\tflowItemDetails.extra!.pieceVersionId,\n\t\t\t\t\t\t\t\t\tflowItemDetails.extra!.flowsVersionIds\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\tmap(flowsVersions => {\n\t\t\t\t\t\t\t\t\t\tconst flowVersiondIdToConfig = flowsVersions.map(flowVer => {\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\tid: flowVer.id,\n\t\t\t\t\t\t\t\t\t\t\t\tconfigs: flowVer.configs.filter(c => c.source !== ConfigSource.PREDEFINED),\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayName: flowVer.displayName,\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tconst clonedFlowItemDetails: FlowItemDetails = JSON.parse(JSON.stringify(flowItemDetails));\n\t\t\t\t\t\t\t\t\t\tclonedFlowItemDetails.extra!.flowVersiondIdToConfig = flowVersiondIdToConfig;\n\t\t\t\t\t\t\t\t\t\treturn clonedFlowItemDetails;\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn of(flowItemDetails);\n\t\t\t\t\t}),\n\t\t\t\t\ttap(flowItemDetails => {\n\t\t\t\t\t\tif (flowItemDetails) {\n\t\t\t\t\t\t\tthis._flowItemDetails = flowItemDetails;\n\t\t\t\t\t\t\tthis.flowsDropdownOptions =\n\t\t\t\t\t\t\t\tflowItemDetails.extra?.flowVersiondIdToConfig.map(flowVer => {\n\t\t\t\t\t\t\t\t\treturn { label: flowVer.displayName, value: flowVer.id };\n\t\t\t\t\t\t\t\t}) || [];\n\t\t\t\t\t\t\tif (remoteFlowSettings.flowVersionId) {\n\t\t\t\t\t\t\t\tthis.buildFormBecauseStepChanged(remoteFlowSettings.flowVersionId);\n\t\t\t\t\t\t\t} else if (this.flowsDropdownOptions.length > 0) {\n\t\t\t\t\t\t\t\tthis.flowsDropdownControl.setValue(this.flowsDropdownOptions[0].value);\n\t\t\t\t\t\t\t\tthis.buildFormBecauseStepChanged(this.flowsDropdownOptions[0].value);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.configsForm = this.formBuilder.group({});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.prepareDynamicDropdowns();\n\t\t\t\t\t\t\tif (remoteFlowSettings.input) {\n\t\t\t\t\t\t\t\tthis.configsForm.patchValue(remoteFlowSettings.input);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t} else {\n\t\t\tthis.flowItemDetails$ = of(undefined);\n\t\t}\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t}\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouch = fn;\n\t}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.configsForm.disable();\n\t\t\tthis.flowsDropdownControl.disable();\n\t\t} else {\n\t\t\tthis.flowsDropdownControl.enable();\n\t\t\tthis.configsForm.enable();\n\t\t}\n\t}\n\tvalidate() {\n\t\tif (this.configsForm?.invalid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\tsetConfigsFormValueChangedListener() {\n\t\tthis.valueChanged$ = this.configsForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.onChange({\n\t\t\t\t\tinput: this.configsForm.value,\n\t\t\t\t\tflowVersionId: this.flowsDropdownControl.value,\n\t\t\t\t\tpieceVersionId: this._flowItemDetails.extra?.pieceVersionId,\n\t\t\t\t});\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\t}\n\tsetFlowVersionDropdownListener() {\n\t\tthis.flowVersionDropdownValueChanged$ = this.flowsDropdownControl.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.buildFormBecauseFlowVersionChanged(this.flowsDropdownControl.value);\n\t\t\t\tthis.prepareDynamicDropdowns();\n\t\t\t})\n\t\t);\n\t}\n\n\tbuildFormBecauseStepChanged(flowVersionId: UUID) {\n\t\tconst controls: { [key: string]: FormControl } = {};\n\t\tconst flowVersionConfigs =\n\t\t\tthis._flowItemDetails.extra!.flowVersiondIdToConfig.find(res => res.id === flowVersionId)?.configs || [];\n\t\tthis.collectionConfigsAndRemoteFlowConfigs = [\n\t\t\t...flowVersionConfigs,\n\t\t\t...this._flowItemDetails.extra!.collectionConfigs,\n\t\t];\n\t\tthis.collectionConfigsAndRemoteFlowConfigs.forEach(config => {\n\t\t\tconst validators: ValidatorFn[] = [];\n\t\t\tif (config.settings?.required || config.settings?.required === undefined) {\n\t\t\t\tvalidators.push(Validators.required);\n\t\t\t}\n\t\t\tcontrols[config.key] = new FormControl(config.value, validators);\n\t\t});\n\t\tthis.hintTextFullyShown = new Array(this.collectionConfigsAndRemoteFlowConfigs.length);\n\t\tthis.hintTextFullyShown = this.hintTextFullyShown.fill(false);\n\t\tthis.configsForm = this.formBuilder.group(controls);\n\t\tthis.setConfigsFormValueChangedListener();\n\t\tthis.flowsDropdownControl = new FormControl(flowVersionId);\n\t\tthis.setFlowVersionDropdownListener();\n\t}\n\tbuildFormBecauseFlowVersionChanged(flowVersionId: UUID) {\n\t\tconst controls: { [key: string]: FormControl } = {};\n\t\tconst flowVersionConfigs =\n\t\t\tthis._flowItemDetails.extra!.flowVersiondIdToConfig.find(res => res.id === flowVersionId)?.configs || []!;\n\t\tthis.collectionConfigsAndRemoteFlowConfigs = [\n\t\t\t...flowVersionConfigs,\n\t\t\t...this._flowItemDetails.extra!.collectionConfigs,\n\t\t];\n\t\tthis.collectionConfigsAndRemoteFlowConfigs.forEach(config => {\n\t\t\tconst validators: ValidatorFn[] = [];\n\t\t\tif (config.settings?.required || config.settings?.required === undefined) {\n\t\t\t\tvalidators.push(Validators.required);\n\t\t\t}\n\t\t\tcontrols[config.key] = new FormControl(config.value, validators);\n\t\t});\n\t\tthis.hintTextFullyShown = new Array(this.collectionConfigsAndRemoteFlowConfigs.length);\n\t\tthis.hintTextFullyShown = this.hintTextFullyShown.fill(false);\n\t\tthis.configsForm = this.formBuilder.group(controls);\n\t\tthis.setConfigsFormValueChangedListener();\n\t\tthis.onChange({\n\t\t\tinput: this.configsForm.value,\n\t\t\tflowVersionId: this.flowsDropdownControl.value,\n\t\t\tpieceVersionId: this._flowItemDetails.extra?.pieceVersionId,\n\t\t});\n\t}\n\tprepareDynamicDropdowns() {\n\t\tthis.dynamicDropdownsObservablesMap.clear();\n\t\tthis.collectionConfigsAndRemoteFlowConfigs.forEach(c => {\n\t\t\tconst configSettings = c.settings as DynamicDropdownSettings;\n\t\t\tif (c.type == ConfigType.DROPDOWN && configSettings.dropdownType === DropdownType.DYNAMIC) {\n\t\t\t\tif (!configSettings.refreshReferences || configSettings.refreshReferences.length == 0) {\n\t\t\t\t\tthis.dynamicDropdownsObservablesMap.set(c.key, this.createDynamicDropdownResultObservable(c, {}));\n\t\t\t\t} else {\n\t\t\t\t\tconfigSettings.refreshReferences.forEach(refresherConfigKey => {\n\t\t\t\t\t\tthis.listenToRefreshReferecneValueChanges(refresherConfigKey, c);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tcreateDynamicDropdownResultObservable(config: Config, refreshEndPointBody: any) {\n\t\tvar dropdownResult$: Observable<DynamicDropdownResult> = this.createDynamicDropdownObservableBasedOnConfigScope(\n\t\t\tconfig,\n\t\t\trefreshEndPointBody\n\t\t);\n\n\t\tdropdownResult$ = dropdownResult$.pipe(\n\t\t\tmap(res => {\n\t\t\t\tif (!res) {\n\t\t\t\t\tconsole.warn(`Activepieces-response for config:${config.label} was null`);\n\t\t\t\t\tres = new DynamicDropdownResult();\n\t\t\t\t\tres.options = [];\n\t\t\t\t\tres.placeholder = 'No options';\n\t\t\t\t}\n\t\t\t\tif (!res.options) {\n\t\t\t\t\tres.options = [];\n\t\t\t\t}\n\t\t\t\tres.loaded = true;\n\t\t\t\treturn res;\n\t\t\t}),\n\t\t\ttap(res => {\n\t\t\t\tconst configControl = this.configsForm.get(config.key);\n\n\t\t\t\tconst currentOption = res.options.find(o => JSON.stringify(o.value) === JSON.stringify(configControl?.value));\n\t\t\t\tif (!currentOption) {\n\t\t\t\t\tconfigControl?.setValue(null);\n\t\t\t\t}\n\t\t\t\tif (res?.disabled) {\n\t\t\t\t\tconfigControl?.disable();\n\t\t\t\t}\n\t\t\t}),\n\t\t\tshareReplay()\n\t\t);\n\n\t\treturn dropdownResult$;\n\t}\n\n\tcreateDynamicDropdownObservableBasedOnConfigScope(config: Config, refreshEndPointBody: any) {\n\t\tconst isConfigCollectionScoped = this._flowItemDetails.extra!.collectionConfigs.find(c => c.key == config.key);\n\n\t\tif (isConfigCollectionScoped) {\n\t\t\treturn this.dynamicDropdownService.refreshCollectionDynamicDropdownConfig(\n\t\t\t\tthis._flowItemDetails.extra!.pieceVersionId,\n\t\t\t\tconfig.key,\n\t\t\t\trefreshEndPointBody\n\t\t\t);\n\t\t} else {\n\t\t\treturn this.dynamicDropdownService.refreshFlowDynamicDropdownConfig(\n\t\t\t\tthis.flowsDropdownControl.value,\n\t\t\t\tconfig.key,\n\t\t\t\trefreshEndPointBody\n\t\t\t);\n\t\t}\n\t}\n\tlistenToRefreshReferecneValueChanges(refresherConfigKey: string, configToRefresh: Config) {\n\t\tconst refresherConfigControl = this.getControl(refresherConfigKey);\n\t\tthis.refreshersList$.push(\n\t\t\trefresherConfigControl!.valueChanges\n\t\t\t\t.pipe(\n\t\t\t\t\tstartWith(refresherConfigControl.value),\n\t\t\t\t\ttap(() => {\n\t\t\t\t\t\tconst requestBody = this.createDynamicDropdownOptionsRequest(configToRefresh);\n\t\t\t\t\t\tthis.dynamicDropdownsObservablesMap.set(\n\t\t\t\t\t\t\tconfigToRefresh.key,\n\t\t\t\t\t\t\tthis.createDynamicDropdownResultObservable(configToRefresh, requestBody)\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.pipe(map(() => void 0))\n\t\t);\n\t}\n\tcreateDynamicDropdownOptionsRequest(configToRefresh: Config) {\n\t\tconst refreshersConfigs = this.collectionConfigsAndRemoteFlowConfigs.filter(c =>\n\t\t\t(configToRefresh.settings as DynamicDropdownSettings).refreshReferences?.find(key => key == c.key)\n\t\t);\n\t\tconst requestBody = {};\n\t\trefreshersConfigs.forEach(c => {\n\t\t\trequestBody[c.key] = this.getControl(c.key).value;\n\t\t});\n\t\treturn requestBody;\n\t}\n\n\tgetControl(configKey: string) {\n\t\treturn this.configsForm.get(configKey)!;\n\t}\n\tgetDynamicDropdownObservable(configKey: string) {\n\t\treturn this.dynamicDropdownsObservablesMap.get(configKey) as Observable<DynamicDropdownResult>;\n\t}\n\n\tgetDropdownSettings(config: Config) {\n\t\treturn config.settings as DropdownSettings;\n\t}\n\tgetStaticDropdownSettings(config: Config) {\n\t\treturn config.settings as StaticDropdownSettings;\n\t}\n\tgetAuthConfigSettings(config: Config) {\n\t\treturn config.settings as OAuth2ConfigSettings;\n\t}\n\tget configType() {\n\t\treturn ConfigType;\n\t}\n\tget dropdownType() {\n\t\treturn DropdownType;\n\t}\n\tget userInputType() {\n\t\treturn Oauth2UserInputType;\n\t}\n\n\topenNewAuthenticationModal(connectorAuthConfig: Config) {\n\t\tconst modalRef = this.modalService.show(NewAuthenticationModalComponent, {\n\t\t\tignoreBackdropClick: true,\n\t\t\tclass: 'modal-dialog-centered',\n\t\t\tinitialState: {\n\t\t\t\tconnectorAuthConfig: connectorAuthConfig,\n\t\t\t\tappName: this._flowItemDetails.name,\n\t\t\t},\n\t\t});\n\t\tthis.newAuthConfigAdded$ = modalRef.content!.saveClicked.pipe(\n\t\t\ttap(newAuthConfig => {\n\t\t\t\tthis.configsForm.get(connectorAuthConfig.key)?.setValue(`\\${configs.${newAuthConfig.key}}`);\n\t\t\t})\n\t\t);\n\t}\n\n\teditSelectedAuthConfig(remoteFlowAuthConfigKey: string) {\n\t\tconst selectedValue: string = this.configsForm.get(remoteFlowAuthConfigKey)!.value;\n\t\tconst configKey = selectedValue.split('.')[1].replace('}', '');\n\t\tthis.updateAuthConfig$ = this.store.select(BuilderSelectors.selectConfig(configKey)).pipe(\n\t\t\ttake(1),\n\t\t\ttap(configAndIndex => {\n\t\t\t\tif (configAndIndex) {\n\t\t\t\t\tthis.modalService.show(NewAuthenticationModalComponent, {\n\t\t\t\t\t\tignoreBackdropClick: true,\n\t\t\t\t\t\tclass: 'modal-dialog-centered',\n\t\t\t\t\t\tinitialState: {\n\t\t\t\t\t\t\tconfigToUpdateWithIndex: configAndIndex,\n\t\t\t\t\t\t\tappName: this._flowItemDetails.name,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.description-container {\r\n  font-weight: 400;\r\n  font-size: 0.75rem;\r\n  line-height: 1.375rem;\r\n  margin-bottom: 5px;\r\n  color: $description;\r\n}\r\n\r\n.ap-more-text {\r\n  color: $blue-link;\r\n  cursor: pointer;\r\n}\r\n.new-config-btn\r\n{\r\n  margin-top: 0.25rem;\r\n  display: block;\r\n}\r\n.doc-logo-icon{\r\n  width: 18px;\r\n  height: 18px;\r\n  object-fit: contain;\r\n  margin-right: 0.325rem;\r\n}\r\n\r\n.doc-text:hover{\r\n  color: black;\r\n}\r\n.doc-text{\r\n  color: $body;\r\n  font-size: 14px;\r\n  line-height: 22px;\r\n}\r\n\r\n.external-link{\r\n  width: .75rem;\r\n  height: .75rem;\r\n  margin-left: 0.25rem;\r\n}\r\n\r\n.doc-container {\r\n  display: flex;\r\n  padding: 0.5rem;\r\n  background-color: $sidebar;\r\n  align-items: center;\r\n}\r\n\r\n.edit-selected-auth\r\n{\r\n  position: absolute;\r\n  top:8px;\r\n  right:24px;\r\n  z-index: $appended-to-body-z-index;\r\n  color:$primary;\r\n\r\n  margin:0px;\r\n}\r\n",
                    "styleUrl": "./remote-flow-input-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dynamicDropdownService",
                        "type": "DynamicDropdownService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "remoteFlowCache",
                        "type": "RemoteFlowCacheService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 73,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dynamicDropdownService",
                        "type": "DynamicDropdownService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "remoteFlowCache",
                        "type": "RemoteFlowCacheService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "configType": {
                    "name": "configType",
                    "getSignature": {
                        "name": "configType",
                        "type": "",
                        "returnType": "",
                        "line": 354
                    }
                },
                "dropdownType": {
                    "name": "dropdownType",
                    "getSignature": {
                        "name": "dropdownType",
                        "type": "",
                        "returnType": "",
                        "line": 357
                    }
                },
                "userInputType": {
                    "name": "userInputType",
                    "getSignature": {
                        "name": "userInputType",
                        "type": "",
                        "returnType": "",
                        "line": 360
                    }
                }
            },
            "templateData": "<form *ngIf=\"flowItemDetails$ | async; else loading\" [formGroup]=\"configsForm\" class=\"ng-submitted\">\r\n  <div class=\"d-flex flex-column accordion-form-controls-container\">\r\n    <a *ngIf=\"_flowItemDetails.extra?.documentationUrl\" [href]=\"_flowItemDetails.extra?.documentationUrl\" [target]=\"'_window'\">\r\n      <div class=\"mt-2 doc-container\">\r\n        <span class=\"doc-text\">Go to {{_flowItemDetails.name}} Docs</span>\r\n        <img class='external-link' src=\"assets/img/custom/external-website.png\"/>\r\n      </div>\r\n    </a>\r\n    <div>\r\n      <label>Action</label>\r\n      <ng-select [formControl]=\"flowsDropdownControl\" [items]=\"flowsDropdownOptions\" placeholder=\"Please select\"\r\n        bindLabel=\"label\" bindValue=\"value\" [clearable]=\"false\" [searchable]=\"true\">\r\n        <ng-template ng-option-tmp let-item=\"item\">\r\n          <app-ng-select-item-template [item]=\"item\" [isSelected]=\"item.value === flowsDropdownControl.value\">\r\n          </app-ng-select-item-template>\r\n        </ng-template>\r\n      </ng-select>\r\n    </div>\r\n    <div *ngFor=\"let config of collectionConfigsAndRemoteFlowConfigs; let i = index\" [ngSwitch]=\"config.type\">\r\n      <label [attr.required]=\"config.type === configType.DICTIONARY? null: config.settings?.required? config.settings?.required:true\" [for]=\"'form-input' + i\">{{ config.label }}</label>\r\n      <div class=\"d-flex description-container text-break\">\r\n        <span *ngIf=\"config.hintText\">\r\n          {{\r\n            hintTextFullyShown[i]\r\n          ? config.hintText\r\n          : config.hintText.slice(0, descriptionLimit)\r\n          }}\r\n        </span>\r\n        <span *ngIf=\"\r\n          config.hintText &&\r\n          config.hintText.length > descriptionLimit &&\r\n          !   hintTextFullyShown[i]\r\n        \">\r\n          &nbsp;\r\n          <span>...</span>\r\n          <span class=\"ap-more-text\" (click)=\"hintTextFullyShown[i] = true\">more\r\n          </span>\r\n        </span>\r\n      </div>\r\n\r\n      <div [id]=\"'form-input' + i\">\r\n        <input *ngSwitchCase=\"configType.SHORT_TEXT\" class=\"form-control\" type=\"text\" [formControlName]=\"config.key\"\r\n          [placeholder]=\"config.placeholder ? config.placeholder : ''\" />\r\n\r\n          <textarea\r\n          *ngSwitchCase=\"configType.LONG_TEXT\"\r\n          [formControlName]=\"config.key\"\r\n          [placeholder]=\"config.placeholder ? config.placeholder : ''\"\r\n          rows=\"4\"\r\n          class=\"form-control\"\r\n          type=\"text\"\r\n    >\r\n          </textarea>\r\n        <input *ngSwitchCase=\"configType.EMAIL\" class=\"form-control\" type=\"email\" [formControlName]=\"config.key\"\r\n          [placeholder]=\"config.placeholder ? config.placeholder : ''\" />\r\n        <input *ngSwitchCase=\"configType.INTEGER\" class=\"form-control\" type=\"number\" [formControlName]=\"config.key\"\r\n          [placeholder]=\"config.placeholder ? config.placeholder : ''\" />\r\n        <ng-container *ngSwitchCase=\"configType.OAUTH2\">\r\n          <app-o-auth2-connect-control\r\n            *ngIf=\"getAuthConfigSettings(config).userInputType === userInputType.LOGIN; else createDelegateConfig \"\r\n            [formControlName]=\"config.key\" [configSettings]=\"getAuthConfigSettings(config)\">\r\n          </app-o-auth2-connect-control>\r\n          <ng-template #createDelegateConfig>\r\n            <div class=\"position-relative\">\r\n              <app-button\r\n              btnColor=\"primary\"\r\n              btnStyle=\"basic\"\r\n              btnSize=\"extraSmall\"\r\n              *ngIf=\"getControl(config.key).value\"\r\n              (buttonClicked)=\"editSelectedAuthConfig(config.key)\"\r\n              class=\"edit-selected-auth\"\r\n            > Edit\r\n            </app-button>\r\n              <ng-select [items]=\"config | connectorAuthConfigsFinder:(allAuthConfigs$|async)\" bindLabel=\"label\" bindValue=\"value\"\r\n              id=\"role\" [formControlName]=\"config.key\" [searchable]=\"false\" [clearable]=\"false\"\r\n              placeholder=\"Please select\">\r\n              <ng-template ng-option-tmp let-item=\"item\">\r\n                <app-ng-select-item-template [item]=\"item\" [isSelected]=\"getControl(config.key).value===item.value\">\r\n                </app-ng-select-item-template>\r\n              </ng-template>\r\n            </ng-select>\r\n\r\n            <app-button\r\n            btnColor=\"primary\"\r\n            btnStyle=\"basic\"\r\n            (buttonClicked)=\"openNewAuthenticationModal(config)\"\r\n            type=\"button\"\r\n            class=\"new-config-btn\"\r\n            btnSize=\"medium\"\r\n          >   + New Authentication\r\n          </app-button>\r\n\r\n            </div>\r\n\r\n          </ng-template>\r\n        </ng-container>\r\n\r\n\r\n        <app-dictonary-form-control *ngSwitchCase=\"configType.DICTIONARY\" [formControlName]=\"config.key\">\r\n        </app-dictonary-form-control>\r\n\r\n        <ng-container *ngSwitchCase=\"configType.DROPDOWN\">\r\n          <ng-container *ngIf=\"\r\n            getDropdownSettings(config).dropdownType === dropdownType.DYNAMIC;\r\n            else staticDropdown\r\n          \">\r\n            <ng-select [formControlName]=\"config.key\" [items]=\"\r\n              (getDynamicDropdownObservable(config.key) | async)?.options || []\r\n            \" [loading]=\"\r\n              !(getDynamicDropdownObservable(config.key) | async)?.loaded ||\r\n              false\r\n            \" [placeholder]=\"\r\n              !(getDynamicDropdownObservable(config.key) | async)?.loaded\r\n                ? 'Loading...'\r\n                : (getDynamicDropdownObservable(config.key) | async)\r\n                    ?.placeholder!\r\n            \" bindLabel=\"label\" bindValue=\"value\" [clearable]=\"!getDropdownSettings(config).required\"\r\n            appendTo=\"body\"\r\n              [searchable]=\"false\">\r\n              <ng-template ng-option-tmp let-item=\"item\">\r\n                <app-ng-select-item-template [item]=\"item\" [isSelected]=\"item.value === getControl(config.key)?.value\">\r\n                </app-ng-select-item-template>\r\n              </ng-template>\r\n\r\n              <ng-template ng-loadingspinner-tmp>\r\n                <app-ng-select-loading-spinner-template></app-ng-select-loading-spinner-template>\r\n              </ng-template>\r\n            </ng-select>\r\n          </ng-container>\r\n          <ng-template #staticDropdown>\r\n            <ng-select [formControlName]=\"config.key\" [items]=\"getStaticDropdownSettings(config).options\"\r\n              bindLabel=\"label\" bindValue=\"value\" [clearable]=\"!getDropdownSettings(config).required\"\r\n              [searchable]=\"false\">\r\n              <ng-template ng-option-tmp let-item=\"item\">\r\n                <app-ng-select-item-template [item]=\"item\" [isSelected]=\"item.value === getControl(config.key)?.value\">\r\n                </app-ng-select-item-template>\r\n              </ng-template>\r\n            </ng-select>\r\n          </ng-template>\r\n        </ng-container>\r\n\r\n        <ng-container *ngIf=\"getControl(config.key)?.invalid\">\r\n          <p @fadeInUp class=\"invalid-input\">{{ config.label }} is required.</p>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</form>\r\n<ng-container *ngIf=\"valueChanged$ | async\"></ng-container>\r\n<ng-container *ngIf=\"flowVersionDropdownValueChanged$ | async\"></ng-container>\r\n<ng-container *ngFor=\"let refreshRefernceValueChanged$ of refreshersList$ \">\r\n  <ng-container *ngIf=\"refreshRefernceValueChanged$ | async\"></ng-container>\r\n</ng-container>\r\n<ng-template #loading>\r\n  <div class=\"d-column flex-grow-1 justify-content-center align-items-center\">\r\n    <app-loading-icon> </app-loading-icon>\r\n  </div>\r\n</ng-template>\r\n<ng-container *ngIf=\"newAuthConfigAdded$ | async\"></ng-container>\r\n<ng-container *ngIf=\"updateAuthConfig$ | async\"> </ng-container>\r\n"
        },
        {
            "name": "ResetPasswordComponent",
            "id": "component-ResetPasswordComponent-80d7e0d7965ef96ae2c2dd61b78f2649c74798c16d16aea586bda9f263e7b2b76ffd8c2663224807cb5f3455b2f1e7e4fce86f1a8556e748e45efddb39ca8aa6",
            "file": "src/app/layout/auth-layout/pages/reset-password/reset-password.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reset-password",
            "styleUrls": [
                "./reset-password.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reset-password.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checkPasswords",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidatorFn",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "invalidTokenMessage",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "resetPasswordForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "delayLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetPassword",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from '../../../common-layout/service/authentication.service';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { User } from '../../../common-layout/model/user.interface';\nimport { StatusCodes } from 'http-status-codes';\nimport { ThemeService } from '../../../common-layout/service/theme.service';\nimport { fadeInUp400ms } from '../../../common-layout/animation/fade-in-up.animation';\nimport { NavigationService } from '../../../dashboard-layout/service/navigation.service';\n\n@Component({\n\tselector: 'app-reset-password',\n\ttemplateUrl: './reset-password.component.html',\n\tstyleUrls: ['./reset-password.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class ResetPasswordComponent implements OnInit {\n\tresetPasswordForm: FormGroup;\n\tsubmitted = false;\n\tinvalidTokenMessage = false;\n\tloading = false;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate navigationService: NavigationService,\n\t\tprivate themeService: ThemeService,\n\t\tprivate authenticationService: AuthenticationService\n\t) {\n\t\tthis.resetPasswordForm = this.formBuilder.group(\n\t\t\t{\n\t\t\t\tnewPassword: [\n\t\t\t\t\t,\n\t\t\t\t\t[\n\t\t\t\t\t\tValidators.required,\n\t\t\t\t\t\tValidators.minLength(8),\n\t\t\t\t\t\tValidators.maxLength(64),\n\t\t\t\t\t\tValidators.pattern('^((?=.*\\\\d)(?=.*[A-Za-z])(?=.*\\\\W).{3,})$'),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\tconfirmPassword: [, [Validators.required]],\n\t\t\t\ttoken: [, [Validators.required]],\n\t\t\t},\n\t\t\t{ validators: this.checkPasswords }\n\t\t);\n\t}\n\n\tcheckPasswords: ValidatorFn = (group: AbstractControl): ValidationErrors | null => {\n\t\tlet pass = group.get('newPassword')?.value;\n\t\tlet confirmPass = group.get('confirmPassword')?.value;\n\t\treturn pass === confirmPass ? null : { passwordMatch: true };\n\t};\n\n\tngOnInit() {\n\t\tthis.navigationService.setTitle('Reset Password');\n\t\tthis.activatedRoute.params.subscribe(value => {\n\t\t\tthis.resetPasswordForm.controls['token'].setValue(value['token']);\n\t\t});\n\t}\n\n\tdelayLoading() {\n\t\tsetTimeout(() => {\n\t\t\tthis.loading = false;\n\t\t}, this.themeService.DELAY_LOADING_DURATION);\n\t}\n\n\tresetPassword(): void {\n\t\tthis.submitted = true;\n\t\tif (this.resetPasswordForm.valid) {\n\t\t\tthis.loading = true;\n\t\t\tthis.invalidTokenMessage = false;\n\t\t\tconst request = this.resetPasswordForm.value;\n\t\t\tthis.authenticationService.changePassword(request).subscribe({\n\t\t\t\tnext: (response: HttpResponse<User>) => {\n\t\t\t\t\tthis.authenticationService.saveUser(response);\n\t\t\t\t\tthis.router.navigate(['/']);\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t},\n\t\t\t\terror: (error: HttpErrorResponse) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tif (error.status === StatusCodes.UNAUTHORIZED) {\n\t\t\t\t\t\tthis.invalidTokenMessage = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.delayLoading();\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.auth-form-title {\r\n  font-weight: 600;\r\n  color: $title;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 1.563rem;\r\n}\r\n",
                    "styleUrl": "./reset-password.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"auth-form-title\">Reset Your Password</div>\r\n\r\n<form (ngSubmit)=\"resetPassword()\" [formGroup]=\"resetPasswordForm\">\r\n  <div class=\"form-group\">\r\n    So, you forgot your password? No Problem, it happens to all of us. Just pick a new one below.\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label class=\"form-text\" for=\"password\">Password</label>\r\n    <input id=\"password\"\r\n           class=\"form-control\"\r\n           formControlName=\"newPassword\"\r\n           placeholder=\"Pick a strong password\"\r\n           type=\"password\">\r\n    <div @fadeInUp *ngIf=\"submitted && this.resetPasswordForm.controls['newPassword'].invalid\">\r\n      <p class=\"invalid-input\" *ngIf=\"submitted && this.resetPasswordForm.controls['newPassword'].hasError('required')\">\r\n        Password is required\r\n      </p>\r\n      <p class=\"invalid-input\"\r\n         *ngIf=\"submitted && this.resetPasswordForm.controls['newPassword'].hasError('minlength')\">\r\n        Password must be at least 8 characters\r\n      </p>\r\n      <p class=\"invalid-input\"\r\n         *ngIf=\"submitted && this.resetPasswordForm.controls['newPassword'].hasError('maxlength')\">\r\n        Password must be at most 64 characters\r\n      </p>\r\n      <p class=\"invalid-input\" *ngIf=\"submitted && this.resetPasswordForm.controls['newPassword'].hasError('pattern')\">\r\n        Password must contain letter, number and special character.\r\n      </p>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label class=\"form-text\" for=\"confirmPassword\">Repeat the password</label>\r\n    <input id=\"confirmPassword\"\r\n           class=\"form-control\"\r\n           formControlName=\"confirmPassword\"\r\n           placeholder=\"Type the same password again\"\r\n           type=\"password\">\r\n    <div @fadeInUp *ngIf=\"submitted && this.resetPasswordForm.controls['confirmPassword'].invalid\">\r\n      <p class=\"invalid-input\"\r\n         *ngIf=\"submitted && this.resetPasswordForm.controls['confirmPassword'].hasError('required')\">\r\n        Confirm password is required\r\n      </p>\r\n    </div>\r\n    <p class=\"invalid-input\" *ngIf=\"submitted && this.resetPasswordForm.hasError('passwordMatch')\">\r\n      Passwords must match\r\n    </p>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <p @fadeInUp *ngIf=\"submitted && invalidTokenMessage\"\r\n       class=\"invalid-input\">\r\n      The link is already expired, Please restart the process again\r\n    </p>\r\n  </div>\r\n  <div class=\"text-center mt-4\">\r\n    <app-button\r\n    btnColor=\"primary\"\r\n    type=\"submit\"\r\n    [loading]=\"loading\"\r\n    [fullWidthOfContainer]=\"true\"\r\n  >Change Password\r\n  </app-button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "ResponseStepInputFormComponent",
            "id": "component-ResponseStepInputFormComponent-75fa382b825038c0508f97ca202bcf082b939bf5c63ed51f47d9e1d15d6794dcbced1b532f6d6873a4fece3aa2f37e7e542096ee58b63971365114e824ee9ff2",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/response-step-input-form/response-step-input-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: ResponseStepInputFormComponent,\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, multi: true, useExisting: ResponseStepInputFormComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-response-step-input-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./response-step-input-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "responseStepForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "updateComponentValue$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "{ invalid: boolean; }",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "ResponseStepInputFormSchema",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "ResponseStepInputFormSchema",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { Observable, tap } from 'rxjs';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { InputFormsSchema, ResponseStepInputFormSchema } from '../input-forms-schema';\n\n@Component({\n\tselector: 'app-response-step-input-form',\n\ttemplateUrl: './response-step-input-form.component.html',\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: ResponseStepInputFormComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: ResponseStepInputFormComponent,\n\t\t},\n\t],\n})\nexport class ResponseStepInputFormComponent implements ControlValueAccessor {\n\tresponseStepForm: FormGroup;\n\tonChange = (value: InputFormsSchema) => {};\n\tonTouch = () => {};\n\tupdateComponentValue$: Observable<any>;\n\tconstructor(private formBuilder: FormBuilder) {\n\t\tthis.responseStepForm = this.formBuilder.group({\n\t\t\toutput: new FormControl(''),\n\t\t});\n\t\tthis.updateComponentValue$ = this.responseStepForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.onChange(this.responseStepForm.value);\n\t\t\t})\n\t\t);\n\t}\n\twriteValue(obj: ResponseStepInputFormSchema): void {\n\t\tif (obj.type === ActionType.RESPONSE) {\n\t\t\tthis.responseStepForm.patchValue(obj);\n\t\t}\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t}\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouch = fn;\n\t}\n\tvalidate() {\n\t\tif (this.responseStepForm.invalid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.responseStepForm.disable();\n\t\t} else if (this.responseStepForm.disabled) {\n\t\t\tthis.responseStepForm.enable();\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<form [formGroup]=\"responseStepForm\" class=\"ng-submitted\">\r\n  <div class=\"d-flex flex-column accordion-form-controls-container\">\r\n    <div>\r\n      <label for=\"output\">Output</label>\r\n      <app-dictonary-form-control\r\n      id=\"output\"\r\n        formControlName=\"output\"\r\n      ></app-dictonary-form-control>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<ng-container *ngIf=\"updateComponentValue$ | async\"></ng-container>\r\n"
        },
        {
            "name": "ResponsiveTableComponent",
            "id": "component-ResponsiveTableComponent-b91ff29a87187f7a2032a18c49b57b0eb09da9a075745fb7b0cbfb7751acd648b908caf83936031045f7c20269fb1e8aed53aa838eff647d49173fca67eb0805",
            "file": "src/app/layout/common-layout/components/responsive-table/responsive-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-responsive-table",
            "styleUrls": [
                "./responsive-table.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./responsive-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "DataRow[]",
                    "decorators": []
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "DataHeader[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "new EventEmitter<{\n\t\taction: string;\n\t\tindex: number;\n\t}>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataRow[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "hoverIndex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "alignClass",
                    "args": [
                        {
                            "name": "align",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"\" | \"text-center\" | \"text-right\"",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "align",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createStyle",
                    "args": [
                        {
                            "name": "header",
                            "type": "DataHeader",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ width: any; }",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "header",
                            "type": "DataHeader",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dataClassList",
                    "args": [
                        {
                            "name": "column",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dataStyle",
                    "args": [
                        {
                            "name": "column",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ cursor: string; }",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitAction",
                    "args": [
                        {
                            "name": "actionToReturn",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "actionToReturn",
                            "type": "string | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openRoute",
                    "args": [
                        {
                            "name": "route",
                            "type": "literal type | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "literal type | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DataRow } from './data-row';\nimport { DataHeader } from './data-header';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-responsive-table',\n\ttemplateUrl: './responsive-table.component.html',\n\tstyleUrls: ['./responsive-table.component.css'],\n})\nexport class ResponsiveTableComponent {\n\t_data: DataRow[];\n\n\tget data(): DataRow[] {\n\t\treturn this._data;\n\t}\n\n\t@Input() set data(value: DataRow[]) {\n\t\tthis._data = value;\n\t}\n\n\t@Input() headers: DataHeader[];\n\t@Output() actions: EventEmitter<{ action: string; index: number }> = new EventEmitter<{\n\t\taction: string;\n\t\tindex: number;\n\t}>();\n\n\thoverIndex: number;\n\n\tconstructor(private router: Router) {}\n\n\talignClass(align: string | undefined) {\n\t\tif (align === 'center') {\n\t\t\treturn 'text-center';\n\t\t}\n\t\tif (align === 'right') {\n\t\t\treturn 'text-right';\n\t\t}\n\t\treturn '';\n\t}\n\n\tcreateStyle(header: DataHeader) {\n\t\treturn {\n\t\t\twidth: header.width,\n\t\t};\n\t}\n\n\temitAction(actionToReturn: string | undefined, index: number) {\n\t\tif (actionToReturn) {\n\t\t\tthis.actions.emit({ action: actionToReturn, index: index });\n\t\t}\n\t}\n\n\topenRoute(route: { route: string; extra: any } | undefined) {\n\t\tif (route) {\n\t\t\tthis.router.navigate([route.route], route.extra);\n\t\t}\n\t}\n\n\tdataStyle(column: any) {\n\t\treturn {\n\t\t\tcursor: column.route ? 'pointer' : '',\n\t\t};\n\t}\n\n\tdataClassList(column: any, index: number) {\n\t\tlet classList: string[] = [];\n\t\tif (column.align) {\n\t\t\tclassList.push(this.alignClass(column.align));\n\t\t}\n\t\tif (column.route && this.hoverIndex === index) {\n\t\t\tclassList.push('hyper-number');\n\t\t}\n\t\treturn classList.join(' ');\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./responsive-table.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "DataRow[]",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 18,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "DataRow[]",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "data",
                        "type": "[]",
                        "returnType": "DataRow[]",
                        "line": 14
                    }
                }
            },
            "templateData": "<div class=\"table-responsive\">\r\n  <table class=\"table align-items-center table-flush\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th\r\n          scope=\"col\"\r\n          *ngFor=\"let header of headers\"\r\n          class=\"{{ alignClass(header.align) }}\"\r\n          [style]=\"createStyle(header)\"\r\n        >\r\n          <div *ngIf=\"header.isButton\">\r\n            <button\r\n              class=\"btn btn-primary btn-sm\"\r\n              (click)=\"emitAction(header.actionToReturn, -1)\"\r\n            >\r\n              {{ header.content }}\r\n            </button>\r\n          </div>\r\n          <div *ngIf=\"!header.isButton\">\r\n            {{ header.content }}\r\n          </div>\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody class=\" list\">\r\n    <tr *ngFor=\"let row of data; let i=index\" (mouseenter)=\"this.hoverIndex = i\" (mouseleave)=\"this.hoverIndex = -1\">\r\n      <td *ngFor=\"let column of row.columns; let j=index;\" class=\"{{dataClassList(column, i)}}\"\r\n          [style]=\"dataStyle(column)\">\r\n        <div  (click)=\"openRoute(column.route)\">\r\n\r\n          <div *ngIf=\"column.onHover\">\r\n            <div (click)=\"emitAction(column.actionToReturn, i)\"\r\n                 class=\"{{alignClass(column.align)}} btn btn-icon-white\"\r\n                 [ngStyle]=\"{visibility: hoverIndex === i ? 'visible': 'hidden'}\">\r\n              <fa-icon [icon]=\"column.faIcon\"></fa-icon>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"!column.onHover\">\r\n            {{column.content}}\r\n          </div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n"
        },
        {
            "name": "RunDetailsComponent",
            "id": "component-RunDetailsComponent-e87fa807d56f98e6e1b6435ab0db71f82792d9f0f35974af2925e84d07968ccfb8f3744c8ce09b584fe37a96e2579b9d87cd74a768de90fc16a0a322196bd721",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/run-details/run-details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-run-details",
            "styleUrls": [
                "./run-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./run-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "flowId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UUID",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "iterationDetailsService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IterationDetailsService",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "logs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type | undefined | null>",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "runResults",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "timeHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeHelperService",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeLeftSideBar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "copyStepResultAndFormatDuration",
                    "args": [
                        {
                            "name": "stepResult",
                            "type": "StepResult",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "StepResult",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "stepResult",
                            "type": "StepResult",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createStepResultsForDetailsAccordion",
                    "args": [
                        {
                            "name": "run",
                            "type": "InstanceRun",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type[]",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "run",
                            "type": "InstanceRun",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatStepDuration",
                    "args": [
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nimport { combineLatest, map, Observable } from 'rxjs';\r\nimport { InstanceRunStatus } from '../../../../../common-layout/model/enum/instance-run-status';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { ActionStatus } from '../../../../../common-layout/model/enum/action-status';\r\nimport { InstanceRun, StepResult } from '../../../../../common-layout/model/instance-run.interface';\r\nimport { TimeHelperService } from '../../../../../common-layout/service/time-helper.service';\r\nimport { LeftSideBarType } from 'src/app/layout/common-layout/model/enum/left-side-bar-type.enum';\r\nimport { BuilderSelectors } from '../../../../store/selector/flow-builder.selector';\r\nimport { Store } from '@ngrx/store';\r\nimport { IterationDetailsService } from './iteration-details.service';\r\nimport { FlowItem } from 'src/app/layout/common-layout/model/flow-builder/flow-item';\r\nimport { FlowsActions } from 'src/app/layout/flow-builder/store/action/flows.action';\r\n\r\n@Component({\r\n\tselector: 'app-run-details',\r\n\ttemplateUrl: './run-details.component.html',\r\n\tstyleUrls: ['./run-details.component.scss'],\r\n})\r\nexport class RunDetailsComponent implements OnInit {\r\n\trunResults: {\r\n\t\tresult: StepResult;\r\n\t\tstepName: string;\r\n\t}[] = [];\r\n\tflowId: UUID;\r\n\tlogs$: Observable<\r\n\t\t| {\r\n\t\t\t\tselectedStep: FlowItem | undefined | null;\r\n\t\t\t\tselectedRun: InstanceRun | undefined;\r\n\t\t\t\trunResults: {\r\n\t\t\t\t\tresult: StepResult;\r\n\t\t\t\t\tstepName: string;\r\n\t\t\t\t}[];\r\n\t\t  }\r\n\t\t| undefined\r\n\t\t| null\r\n\t>;\r\n\tconstructor(\r\n\t\tprivate store: Store,\r\n\t\tpublic timeHelperService: TimeHelperService,\r\n\t\tpublic iterationDetailsService: IterationDetailsService\r\n\t) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tconst selectedStep$ = this.store.select(BuilderSelectors.selectCurrentStep);\r\n\t\tconst run$ = this.store.select(BuilderSelectors.selectCurrentFlowRun);\r\n\t\tthis.logs$ = combineLatest({\r\n\t\t\tselectedFlowRun: run$,\r\n\t\t\tselectedStep: selectedStep$,\r\n\t\t}).pipe(\r\n\t\t\tmap(result => {\r\n\t\t\t\tif (result.selectedFlowRun && result.selectedFlowRun.status !== InstanceRunStatus.RUNNING) {\r\n\t\t\t\t\tif (this.runResults.length === 0) {\r\n\t\t\t\t\t\tthis.runResults = this.createStepResultsForDetailsAccordion(result.selectedFlowRun);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tselectedRun: result.selectedFlowRun,\r\n\t\t\t\t\t\trunResults: this.runResults,\r\n\t\t\t\t\t\tselectedStep: result.selectedStep,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tthis.runResults = [];\r\n\t\t\t\treturn undefined;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tcopyStepResultAndFormatDuration(stepResult: StepResult) {\r\n\t\tconst copiedStep: StepResult = JSON.parse(JSON.stringify(stepResult));\r\n\t\tcopiedStep.duration = this.formatStepDuration(copiedStep.duration);\r\n\t\treturn copiedStep;\r\n\t}\r\n\tformatStepDuration(duration: number) {\r\n\t\tconst durationInSeconds = (duration /= 1000);\r\n\t\tconst durationFloatingPointFixed = durationInSeconds.toFixed(3);\r\n\t\treturn Number.parseFloat(durationFloatingPointFixed);\r\n\t}\r\n\r\n\tcloseLeftSideBar() {\r\n\t\tthis.store.dispatch(\r\n\t\t\tFlowsActions.setLeftSidebar({\r\n\t\t\t\tsidebarType: LeftSideBarType.NONE,\r\n\t\t\t\tprops: {},\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tpublic get actionStatusEnum() {\r\n\t\treturn ActionStatus;\r\n\t}\r\n\r\n\tpublic get InstanceRunStatus() {\r\n\t\treturn InstanceRunStatus;\r\n\t}\r\n\r\n\tcreateStepResultsForDetailsAccordion(run: InstanceRun): {\r\n\t\tresult: StepResult;\r\n\t\tstepName: string;\r\n\t}[] {\r\n\t\tconst stepNames = Object.keys(run.state.steps);\r\n\t\treturn stepNames.map(name => {\r\n\t\t\tlet result = run.state.steps[name];\r\n\t\t\tif (!result.output) {\r\n\t\t\t\tresult = { ...result, output: result.errorMessage };\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tresult: result,\r\n\t\t\t\tstepName: name,\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.loading-icon {\r\n  position: absolute;\r\n  left: calc(50% - 10.5px);\r\n  top: calc(50% - 10.5px);\r\n}\r\n.pane-separator {\r\n  height: 10px;\r\n  background: $graySelect;\r\n}\r\n.steps-results {\r\n  min-height: calc(50% - 5px - 33px);\r\n  max-height: calc(50% - 5px - 33px);\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n}\r\n.selected-step-result {\r\n  min-height: calc(50% - 5px - 33px);\r\n  max-height: calc(50% - 5px - 33px);\r\n  overflow-y: scroll;\r\n  &::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./run-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "iterationDetailsService",
                        "type": "IterationDetailsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "iterationDetailsService",
                        "type": "IterationDetailsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "actionStatusEnum": {
                    "name": "actionStatusEnum",
                    "getSignature": {
                        "name": "actionStatusEnum",
                        "type": "",
                        "returnType": "",
                        "line": 90
                    }
                },
                "InstanceRunStatus": {
                    "name": "InstanceRunStatus",
                    "getSignature": {
                        "name": "InstanceRunStatus",
                        "type": "",
                        "returnType": "",
                        "line": 94
                    }
                }
            },
            "templateData": "<div class=\"p-3\">\r\n  <app-sidebar-header\r\n    (closeClicked)=\"closeLeftSideBar()\"\r\n    [title]=\"'Run Details'\"\r\n  ></app-sidebar-header>\r\n</div>\r\n\r\n<ng-container *ngIf=\"logs$ | async as logs; else loading\">\r\n  <ng-container *ngIf=\"logs; else loading\">\r\n    <div class=\"steps-results\">\r\n      <ng-container\r\n        *ngFor=\"let stepResult of logs.runResults; let stepIndex = index\"\r\n      >\r\n        <app-step-result\r\n          [isTrigger]=\"stepIndex === 0\"\r\n          [stepNameAndResult]=\"stepResult\"\r\n          [selectedStepName]=\"logs.selectedStep?.name\"\r\n        >\r\n        </app-step-result>\r\n      </ng-container>\r\n    </div>\r\n\r\n    <div\r\n      #paneSeparator\r\n      class=\"d-flex align-items-center justify-content-center pane-separator\"\r\n    ></div>\r\n    <div class=\"selected-step-result\">\r\n      <ng-container\r\n        *ngIf=\"\r\n          iterationDetailsService.currentStepResult$\r\n            | async as currentStepResult\r\n        \"\r\n      >\r\n        <ng-container *ngIf=\"logs.selectedStep\">\r\n          <div class=\"px-3\">\r\n            <app-selected-step-result\r\n              [selectedStepResult]=\"currentStepResult\"\r\n              [selectedStepName]=\"logs.selectedStep.name\"\r\n            ></app-selected-step-result>\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n    </div>\r\n  </ng-container>\r\n</ng-container>\r\n\r\n<ng-template #loading>\r\n  <div class=\"loading-icon\">\r\n    <app-loading-icon></app-loading-icon>\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "RunsComponent",
            "id": "component-RunsComponent-05bc1719eabe9bacef02aa45bd0b129c9f6aa0fa7ebadadc60acfa6a2c8c53f4041cb3c89ee0ef4389b6781685c421e2a25b4d69754c9f3785bd15be8efce9b2",
            "file": "src/app/layout/dashboard-layout/pages/runs/runs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-runs",
            "styleUrls": [
                "./runs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./runs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "runsPage$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<SeekPage<InstanceRun>>",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "timeHelperService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TimeHelperService",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "instanceRunEnum",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openInstanceRun",
                    "args": [
                        {
                            "name": "run",
                            "type": "InstanceRun",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "run",
                            "type": "InstanceRun",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { SeekPage } from '../../../common-layout/service/seek-page';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TimeHelperService } from '../../../common-layout/service/time-helper.service';\nimport { InstanceRun } from '../../../common-layout/model/instance-run.interface';\nimport { ThemeService } from '../../../common-layout/service/theme.service';\nimport { InstanceRunStatus } from '../../../common-layout/model/enum/instance-run-status';\nimport { NavigationService } from '../../service/navigation.service';\nimport { map, Observable } from 'rxjs';\n\n@Component({\n\tselector: 'app-runs',\n\ttemplateUrl: './runs.component.html',\n\tstyleUrls: ['./runs.component.scss'],\n})\nexport class RunsComponent implements OnInit {\n\trunsPage$: Observable<SeekPage<InstanceRun>>;\n\n\tconstructor(\n\t\tprivate actRoute: ActivatedRoute,\n\t\tprivate router: Router,\n\t\tprivate navigationService: NavigationService,\n\t\tpublic themeService: ThemeService,\n\t\tpublic timeHelperService: TimeHelperService\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.navigationService.setTitle('Runs');\n\t\tthis.runsPage$ = this.actRoute.data.pipe(\n\t\t\tmap(data => {\n\t\t\t\treturn data['runs'];\n\t\t\t})\n\t\t);\n\t}\n\n\topenInstanceRun(run: InstanceRun) {\n\t\tlet url = this.router.serializeUrl(this.router.createUrlTree(['/runs'])) + '/' + run.id;\n\t\twindow.open(url, '_blank');\n\t}\n\n\tinstanceRunEnum() {\n\t\treturn InstanceRunStatus;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'src/assets/scss/custom/variables';\r\n\r\n.account-name{\r\n  color: $formLabel;\r\n}\r\n",
                    "styleUrl": "./runs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "actRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-filter-bar [account]=\"true\" [instance]=\"true\"></app-filter-bar>\r\n<div class=\" table-responsive\" *ngIf=\"runsPage$ | async as runsPage; else fuckup\">\r\n  <table class=\" table align-items-center table-flush\">\r\n    <thead class=\" thead-light\">\r\n    <tr>\r\n      <th scope=\"col\">Run</th>\r\n      <th scope=\"col\">Flow</th>\r\n      <th scope=\"col\">Status</th>\r\n      <th scope=\"col\">Time</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody class=\" list\">\r\n    <tr *ngFor=\"let run of runsPage.data; let i=index\"  style=\"cursor:pointer;\" (click)=\"openInstanceRun(run)\">\r\n      <th scope=\"row\">\r\n        <span>{{run.pieceDisplayName}}</span>\r\n        <span class=\"mr-2\"></span>\r\n        <span class=\"account-name text-xm\">/</span>\r\n        <span class=\"ml-2 account-name text-xm\">{{run.accountName}}</span>\r\n        <span class=\"td-description\">{{run.id}}</span>\r\n      </th>\r\n      <td>{{run.flowDisplayName}}</td>\r\n      <td>\r\n        <span *ngIf=\"run.status === instanceRunEnum().SUCCEEDED\" ><app-state-icon [succeeded]=\"true\"></app-state-icon><span class=\"ml-1 text-success\">Succeeded</span></span>\r\n        <span *ngIf=\"run.status === instanceRunEnum().FAILED\" ><app-state-icon [succeeded]=\"false\"></app-state-icon><span class=\"ml-1 text-danger\">Failed</span></span>\r\n        <span *ngIf=\"run.status === instanceRunEnum().RUNNING\" ><span class=\"ml-1 text-success\">Running</span></span>\r\n\r\n      </td>\r\n      <td>\r\n        <div *ngIf=\"run.epochStartTime\">{{run.epochStartTime | timeago}}</div>\r\n      </td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <app-pagination [page]=\"runsPage\"></app-pagination>\r\n</div>\r\n<ng-template #fuckup>\r\nnothing\r\n</ng-template>\r\n"
        },
        {
            "name": "SaveCancelPanelSectionComponent",
            "id": "component-SaveCancelPanelSectionComponent-d1d549ea4fe5c6c5ca42bb041710e62d6ec0b82f3981a7e6a05c46249fb52b207aad53feae6a14f9ba16144aa019555fcffeb978d0aa48d41275fb8eedc4e43c",
            "file": "src/app/layout/common-layout/components/save-cancel-panel-section/save-cancel-panel-section.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-save-cancel-panel-section",
            "styleUrls": [
                "./save-cancel-panel-section.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./save-cancel-panel-section.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonsOnTheLeftOfContainer",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "saveHidden",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "saving",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cancelClicked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<>"
                },
                {
                    "name": "saveClicked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n\tselector: 'app-save-cancel-panel-section',\n\ttemplateUrl: './save-cancel-panel-section.component.html',\n\tstyleUrls: ['./save-cancel-panel-section.component.css'],\n})\nexport class SaveCancelPanelSectionComponent {\n\t@Input() saveHidden = false;\n\t@Input() saving = false;\n\t@Input() buttonsOnTheLeftOfContainer = false;\n\t@Output() saveClicked: EventEmitter<null> = new EventEmitter();\n\t@Output() cancelClicked: EventEmitter<null> = new EventEmitter();\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".save-cancel-buttons-container-body {\r\n  padding: 10px;\r\n}\r\n\r\n.save-cancel-buttons-container {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  background-color: white\r\n}\r\n\r\n.border-top-separator {\r\n  border-top: 1px solid #F0F0F0;\r\n}\r\n\r\n.config-variable-form-margin {\r\n  margin: 20px;\r\n  margin-bottom: 80px;\r\n}",
                    "styleUrl": "./save-cancel-panel-section.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "templateData": "<div class=\"save-cancel-buttons-container\">\r\n  <div\r\n    class=\"d-flex save-cancel-buttons-container-body border-top-separator\"\r\n    [class.flex-row-reverse]=\"!buttonsOnTheLeftOfContainer\"\r\n  >\r\n    <app-button\r\n      [hidden]=\"saveHidden\"\r\n      btnColor=\"primary\"\r\n      [loadingCSS]=\"'text-primary'\"\r\n      [loading]=\"saving\"\r\n      (buttonClicked)=\"saveClicked.emit()\"\r\n    >Save</app-button>\r\n    <button class=\"btn btn-text\" (click)=\"cancelClicked.emit()\">Cancel</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ScheduleTriggerInputFormComponent",
            "id": "component-ScheduleTriggerInputFormComponent-9afd43e44a2b567cfeedebcac21c10fb753ecc3430b07ed0996cf4c7ae6c35605eb605c308e8bb661f365ff64fdf23afdaa92da4be50a1e08cc98aed970592b4",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/schedule-trigger-input-form/schedule-trigger-input-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: ScheduleTriggerInputFormComponent,\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, multi: true, useExisting: ScheduleTriggerInputFormComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-schedule-trigger-input-form",
            "styleUrls": [
                "./schedule-trigger-input-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./schedule-trigger-input-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "scheduledFrom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "updateComponentValue$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "getControl",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "interpretCronExpression",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "{ invalid: boolean; }",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "InputFormsSchema",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "InputFormsSchema",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { Observable, tap } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\nimport { cronJobValidator } from 'src/app/layout/common-layout/validators/cronjob-validator';\nimport { InputFormsSchema } from '../input-forms-schema';\nimport cronstrue from 'cronstrue';\nimport { TriggerType } from 'src/app/layout/common-layout/model/enum/trigger-type.enum';\n@Component({\n\tselector: 'app-schedule-trigger-input-form',\n\ttemplateUrl: './schedule-trigger-input-form.component.html',\n\tstyleUrls: ['./schedule-trigger-input-form.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: ScheduleTriggerInputFormComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: ScheduleTriggerInputFormComponent,\n\t\t},\n\t],\n\tanimations: [fadeInUp400ms],\n})\nexport class ScheduleTriggerInputFormComponent implements ControlValueAccessor {\n\tscheduledFrom: FormGroup;\n\tonChange = (value: InputFormsSchema) => {};\n\tonTouch = () => {};\n\tupdateComponentValue$: Observable<any>;\n\tconstructor(private formBuilder: FormBuilder) {\n\t\tthis.scheduledFrom = this.formBuilder.group({ cronExpression: new FormControl('', cronJobValidator) });\n\t\tthis.updateComponentValue$ = this.scheduledFrom.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.onChange(this.scheduledFrom.value);\n\t\t\t})\n\t\t);\n\t}\n\twriteValue(obj: InputFormsSchema): void {\n\t\tif (obj.type === TriggerType.SCHEDULE) {\n\t\t\tthis.scheduledFrom.patchValue(obj);\n\t\t}\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t}\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouch = fn;\n\t}\n\tgetControl(controlName: string) {\n\t\treturn this.scheduledFrom.get(controlName);\n\t}\n\tvalidate() {\n\t\tif (this.scheduledFrom.invalid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\tinterpretCronExpression() {\n\t\treturn cronstrue.toString(this.getControl('cronExpression')!.value);\n\t}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.scheduledFrom.disable();\n\t\t} else if (this.scheduledFrom.disabled) {\n\t\t\tthis.scheduledFrom.enable();\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.cron-expression-interpretation\r\n{\r\n  margin-top: 0.5rem;\r\n  color: $description;\r\n  font-size: 0.875rem;\r\n  font-weight: 300;\r\n  margin-bottom: 0px;\r\n}\r\n",
                    "styleUrl": "./schedule-trigger-input-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<form [formGroup]=\"scheduledFrom\" class=\"ng-submitted\">\r\n<label required for=\"expression\">\r\n  Cron Expression\r\n</label>\r\n<input id=\"expression\" type=\"text\" class=\"form-control\" formControlName=\"cronExpression\">\r\n<ng-container *ngIf=\"getControl('cronExpression')!.invalid; else cronExpressionInterpretation\">\r\n  <p @fadeInUp  class=\"invalid-input\">\r\n    <ng-container *ngIf=\"getControl('cronExpression')!.getError('required'); else invalidCronExpression\">\r\n      Key is required.\r\n    </ng-container>\r\n    <ng-template #invalidCronExpression>\r\n      Cron expression is invalid.\r\n    </ng-template>\r\n  </p>\r\n</ng-container>\r\n\r\n</form>\r\n<ng-template #cronExpressionInterpretation >\r\n  <p class=\"cron-expression-interpretation\">\r\n    {{interpretCronExpression()}}\r\n  </p>\r\n\r\n</ng-template>\r\n<ng-container *ngIf=\"updateComponentValue$|async\"></ng-container>\r\n"
        },
        {
            "name": "SelectDeploymentEnvironmentStepComponent",
            "id": "component-SelectDeploymentEnvironmentStepComponent-ce802f791569c8575a8f67b64db4075627946355a803e8e3e2e7888e86f69f3c7351c8877dbd9cb0416df31bdc13996a85a813e3bddb5bb4cffbed5694e5c97e",
            "file": "src/app/layout/common-layout/components/deploy-modal/select-targeted-environment-step/select-deployment-environment-step.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-deployment-environment",
            "styleUrls": [
                "./select-deployment-environment-step.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./select-deployment-environment-step.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "collection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "Collection",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "cancelClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "nextClicked",
                    "defaultValue": "new EventEmitter<DeployStepSelectTargetEmittedValue>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "accountsDropdownOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "accountsDropdownPlaceHolder",
                    "defaultValue": "'Please Select'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "collectionVersionDropdownOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownItemOption[]",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "collectionVersionsDropdownPlaceHolder",
                    "defaultValue": "'Please Select'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "destroyed$",
                    "defaultValue": "new Observable<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "environmentDropdownOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownItemOption[]",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "environmentDropdownOptions$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<DropdownItemOption[]>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "environments",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectEnvironment[]",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "selectDeploymentEnvironmentForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "getControl",
                    "args": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 203,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "controlName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nextStep",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setCollectionVersionsPublishedForEnvironment",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setEnvrionmentAccounts",
                    "args": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "environmentId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setEvnironmentIdControlListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { fadeInUp400ms } from '../../../animation/fade-in-up.animation';\nimport { Collection, CollectionVersion } from '../../../model/piece.interface';\nimport { UUID } from 'angular2-uuid';\nimport { AccountService } from '../../../service/account.service';\nimport { CollectionService } from '../../../service/collection.service';\nimport { FlowService } from '../../../service/flow.service';\nimport { DropdownItemOption } from '../../../model/fields/variable/subfields/dropdown-item-option';\nimport { distinctUntilChanged, forkJoin, map, Observable, shareReplay, switchMap, takeUntil, tap } from 'rxjs';\n\nimport { DropdownOption } from '../../../model/dynamic-controls/dropdown-options';\nimport { FlowVersion } from '../../../model/flow-version.class';\nimport { Store } from '@ngrx/store';\nimport { EnvironmentSelectors } from '../../../store/selector/environment.selector';\nimport { ProjectEnvironment } from '../../../model/project-environment.interface';\n\nexport interface DeployStepSelectTargetEmittedValue {\n\tcollectionVersion: CollectionVersion;\n\taccountId: UUID;\n\tflowsVersions: FlowVersion[];\n\taccountName: string;\n\tenvironmentName: string;\n}\n\n@Component({\n\tselector: 'app-select-deployment-environment',\n\ttemplateUrl: './select-deployment-environment-step.component.html',\n\tstyleUrls: ['./select-deployment-environment-step.component.css'],\n\tanimations: [fadeInUp400ms],\n})\nexport class SelectDeploymentEnvironmentStepComponent implements OnInit {\n\tselectDeploymentEnvironmentForm: FormGroup;\n\tenvironmentDropdownOptions$: Observable<DropdownItemOption[]>;\n\n\tcollectionVersionsDropdownPlaceHolder = 'Please Select';\n\taccountsDropdownPlaceHolder = 'Please Select';\n\tloading = false;\n\tsubmitted = false;\n\taccountsDropdownOptions$: Observable<{\n\t\taccountOptions: DropdownOption[];\n\t\tloaded: boolean;\n\t}>;\n\t@Input() collection: Collection;\n\t@Output() cancelClicked: EventEmitter<void> = new EventEmitter<void>();\n\t@Output() nextClicked: EventEmitter<any> = new EventEmitter<DeployStepSelectTargetEmittedValue>();\n\tdestroyed$: Observable<boolean> = new Observable<boolean>();\n\tenvironmentDropdownOptions: DropdownItemOption[];\n\tenvironments: ProjectEnvironment[];\n\n\tcollectionVersionDropdownOptions: DropdownItemOption[];\n\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate store: Store,\n\t\tprivate flowService: FlowService,\n\t\tprivate pieceService: CollectionService,\n\t\tprivate accountService: AccountService\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.selectDeploymentEnvironmentForm = this.formBuilder.group({\n\t\t\tenvironmentId: ['', [Validators.required]],\n\t\t\tcollectionVersionId: ['', [Validators.required]],\n\t\t\taccountName: ['', [Validators.required]],\n\t\t});\n\n\t\tthis.environmentDropdownOptions$ = this.store.select(EnvironmentSelectors.selectEnvironments).pipe(\n\t\t\ttap(envs => {\n\t\t\t\tthis.environments = envs;\n\t\t\t}),\n\t\t\tmap(envs => {\n\t\t\t\treturn envs.map(env => {\n\t\t\t\t\treturn { value: env.id, label: env.name };\n\t\t\t\t});\n\t\t\t}),\n\t\t\ttap(envOptions => {\n\t\t\t\tthis.environmentDropdownOptions = envOptions;\n\t\t\t\tthis.setEvnironmentIdControlListener();\n\t\t\t\tif (envOptions.length == 0) {\n\t\t\t\t} else {\n\t\t\t\t\tthis.getControl('environmentId')?.setValue(envOptions[0].value);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tsetEvnironmentIdControlListener() {\n\t\tconst environmentDropdownControl = this.getControl('environmentId');\n\t\tenvironmentDropdownControl!.valueChanges\n\t\t\t.pipe(distinctUntilChanged(), takeUntil(this.destroyed$))\n\t\t\t.subscribe((envId: UUID) => {\n\t\t\t\tthis.setCollectionVersionsPublishedForEnvironment(envId);\n\t\t\t\tthis.setEnvrionmentAccounts(envId);\n\t\t\t});\n\t}\n\n\tsetCollectionVersionsPublishedForEnvironment(environmentId: UUID) {\n\t\tlet env = this.environments.find(env => env.id === environmentId)!;\n\t\tlet publishedCollectionInEnvironment = env.deployedCollections.find(\n\t\t\tcollection => collection.collectionId == this.collection.id\n\t\t)!;\n\t\tlet publishedCollectionVersions = this.collection.versionsList.filter(collectionVersionId => {\n\t\t\treturn !!publishedCollectionInEnvironment.collectionVersionsId.find(\n\t\t\t\tpublishedCollectionVersionId => collectionVersionId === publishedCollectionVersionId\n\t\t\t);\n\t\t});\n\n\t\t//TODO are you sure the versions always are returned in the same order?\n\t\tthis.collectionVersionDropdownOptions = publishedCollectionVersions.map(publishedCollectionVersionId => {\n\t\t\tconst idx = this.collection.versionsList.findIndex(\n\t\t\t\tcollectionVersionId => collectionVersionId === publishedCollectionVersionId\n\t\t\t);\n\t\t\treturn {\n\t\t\t\tlabel: `Version ${idx + 1}`,\n\t\t\t\tvalue: publishedCollectionVersionId,\n\t\t\t};\n\t\t});\n\t\tif (this.collectionVersionDropdownOptions.length === 0) {\n\t\t\tthis.collectionVersionsDropdownPlaceHolder = `This Collection Is Not Published on ${env.name}`;\n\t\t\tthis.getControl('collectionVersionId')!.setValue(null);\n\t\t\tthis.getControl('collectionVersionId')!.setErrors(null);\n\t\t} else {\n\t\t\tthis.collectionVersionsDropdownPlaceHolder = `Please Select`;\n\t\t\tthis.getControl('collectionVersionId')!.setValue(this.collectionVersionDropdownOptions[0].value);\n\t\t\tthis.getControl('collectionVersionId')!.setErrors(null);\n\t\t}\n\t}\n\n\tsetEnvrionmentAccounts(environmentId: UUID) {\n\t\tlet environment = this.environments.find(f => f.id === environmentId)!;\n\t\tthis.getControl('accountName')?.setValue(null);\n\t\tthis.accountsDropdownPlaceHolder = 'Loading';\n\t\tthis.accountsDropdownOptions$ = this.accountService.list(environmentId, 9999).pipe(\n\t\t\tmap(accounts => {\n\t\t\t\tlet dropdownOptions: DropdownItemOption[] = accounts.data.map(acc => {\n\t\t\t\t\treturn { value: acc.name, label: acc.name };\n\t\t\t\t});\n\t\t\t\treturn { accountOptions: dropdownOptions, loaded: true };\n\t\t\t}),\n\t\t\ttap(result => {\n\t\t\t\tif (result.accountOptions.length == 0) {\n\t\t\t\t\tthis.accountsDropdownPlaceHolder = `No accounts on ${environment?.name}`;\n\t\t\t\t} else {\n\t\t\t\t\tthis.accountsDropdownPlaceHolder = 'Please Select';\n\t\t\t\t\tthis.getControl('accountName')?.setValue(result.accountOptions[0].value);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tnextStep() {\n\t\tthis.submitted = true;\n\t\tif (this.selectDeploymentEnvironmentForm.invalid) {\n\t\t\treturn;\n\t\t}\n\t\tlet accountName = this.selectDeploymentEnvironmentForm.get('accountName')!.value;\n\n\t\tthis.loading = true;\n\n\t\tconst collectionVersion$ = this.pieceService\n\t\t\t.getVersion(this.selectDeploymentEnvironmentForm.get('collectionVersionId')!.value)\n\t\t\t.pipe(shareReplay());\n\n\t\tconst flowsVersions$ = collectionVersion$.pipe(\n\t\t\tswitchMap(version => {\n\t\t\t\treturn this.flowService.listByPieceVersion(version);\n\t\t\t})\n\t\t);\n\t\tconst account$ = this.accountService.getByNameAndEnvironment(\n\t\t\tthis.selectDeploymentEnvironmentForm.get('environmentId')!.value,\n\t\t\taccountName\n\t\t);\n\t\tconst joinedRequests$ = forkJoin({\n\t\t\tcollectionVersion: collectionVersion$,\n\t\t\tflowsVersions: flowsVersions$,\n\t\t\taccount: account$,\n\t\t});\n\t\tconst environmentName = this.environmentDropdownOptions.find(\n\t\t\tev => ev.value == this.selectDeploymentEnvironmentForm.get('environmentId')!.value\n\t\t)!.label;\n\t\tjoinedRequests$.subscribe({\n\t\t\tnext: response => {\n\t\t\t\tthis.loading = false;\n\t\t\t\tconst valueToPassToNextStep: DeployStepSelectTargetEmittedValue = {\n\t\t\t\t\taccountId: response.account.id,\n\t\t\t\t\tflowsVersions: response.flowsVersions,\n\t\t\t\t\tcollectionVersion: response.collectionVersion,\n\t\t\t\t\tenvironmentName: environmentName,\n\t\t\t\t\taccountName: accountName,\n\t\t\t\t};\n\t\t\t\tthis.loading = false;\n\n\t\t\t\tthis.nextClicked.emit(valueToPassToNextStep);\n\t\t\t},\n\t\t\terror: err => {\n\t\t\t\tthis.loading = false;\n\t\t\t\tconsole.log(err);\n\t\t\t},\n\t\t});\n\t}\n\n\tgetControl(controlName: string) {\n\t\treturn this.selectDeploymentEnvironmentForm.get(controlName);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./select-deployment-environment-step.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pieceService",
                        "type": "CollectionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "accountService",
                        "type": "AccountService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"selectDeploymentEnvironmentForm\">\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title pull-left\">\r\n      Deploy {{ collection.lastVersion.displayName }}\r\n    </h5>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn-close close pull-right\"\r\n      aria-label=\"Close\"\r\n      (click)=\"this.cancelClicked.emit()\"\r\n    >\r\n      <span aria-hidden=\"true\" class=\"visually-hidden close-custom\"\r\n        >&times;</span\r\n      >\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"form-group\">\r\n      <label for=\"environment\"\r\n        >Which <strong>environment</strong> do you want to deploy on?</label\r\n      >\r\n      <ng-select\r\n        id=\"environment\"\r\n        [clearable]=\"false\"\r\n        [items]=\"environmentDropdownOptions\"\r\n        formControlName=\"environmentId\"\r\n        bindLabel=\"label\"\r\n        bindValue=\"value\"\r\n      >\r\n        <ng-template ng-option-tmp let-item=\"item\">\r\n          <app-ng-select-item-template\r\n            [item]=\"item\"\r\n            [isSelected]=\"item.value === getControl('environmentId')?.value\"\r\n          ></app-ng-select-item-template>\r\n        </ng-template>\r\n      </ng-select>\r\n      <div @fadeInUp *ngIf=\"submitted && getControl('environmentId')!.invalid\">\r\n        <p class=\"invalid-input\">Environment is required</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"collectionVersion\"\r\n        >Which <strong>version</strong> do you want to deploy?</label\r\n      >\r\n\r\n      <ng-select\r\n        id=\"collectionVersion\"\r\n        [clearable]=\"false\"\r\n        [items]=\"collectionVersionDropdownOptions\"\r\n        formControlName=\"collectionVersionId\"\r\n        [placeholder]=\"collectionVersionsDropdownPlaceHolder\"\r\n        bindLabel=\"label\"\r\n        bindValue=\"value\"\r\n      >\r\n        <ng-template ng-option-tmp let-item=\"item\">\r\n          <app-ng-select-item-template\r\n            [item]=\"item\"\r\n            [isSelected]=\"\r\n              item.value === getControl('collectionVersionId')?.value\r\n            \"\r\n          ></app-ng-select-item-template>\r\n        </ng-template>\r\n      </ng-select>\r\n\r\n      <div\r\n        @fadeInUp\r\n        *ngIf=\"submitted && getControl('collectionVersionId')?.invalid\"\r\n      >\r\n        <p\r\n          *ngIf=\"getControl('collectionVersionId')?.getError('required')\"\r\n          class=\"invalid-input\"\r\n        >\r\n          Version is required\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"account\">Which account do you want to deploy for?</label>\r\n      <ng-select\r\n        id=\"account\"\r\n        [clearable]=\"false\"\r\n        [items]=\"(accountsDropdownOptions$ | async)?.accountOptions || []\"\r\n        formControlName=\"accountName\"\r\n        [loading]=\"!(accountsDropdownOptions$ | async)?.loaded\"\r\n        bindLabel=\"label\"\r\n        bindValue=\"value\"\r\n        [placeholder]=\"accountsDropdownPlaceHolder\"\r\n      >\r\n        <ng-template ng-option-tmp let-item=\"item\">\r\n          <app-ng-select-item-template\r\n            [item]=\"item\"\r\n            [isSelected]=\"item.value === getControl('accountName')?.value\"\r\n          ></app-ng-select-item-template>\r\n          <ng-template ng-loadingspinner-tmp>\r\n            <app-ng-select-loading-spinner-template></app-ng-select-loading-spinner-template>\r\n          </ng-template>\r\n        </ng-template>\r\n      </ng-select>\r\n\r\n      <div @fadeInUp *ngIf=\"submitted && getControl('accountName')?.invalid\">\r\n        <p class=\"invalid-input\">Account is required</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <app-button\r\n    btnColor=\"basic\"\r\n    btnStyle=\"basic\"\r\n    (buttonClicked)=\"this.cancelClicked.emit()\"\r\n  > Cancel\r\n  </app-button>\r\n\r\n    <app-button\r\n      (buttonClicked)=\"nextStep()\"\r\n      btnColor=\"primary\"\r\n      [loading]=\"loading\"\r\n    >Next</app-button>\r\n  </div>\r\n</form>\r\n<ng-container *ngIf=\"environmentDropdownOptions$ | async\"></ng-container>\r\n"
        },
        {
            "name": "SelectedStepResultComponent",
            "id": "component-SelectedStepResultComponent-290c6c979e3d57abf6f9a802d6479b18b45cba082a6a5a787df5a2023f9ea4ee448b542a11e03069e24e4703d660c11f94b93c4468b2f4091e0a9a1cf307ca15",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/run-details/selected-step-result/selected-step-result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-selected-step-result",
            "styleUrls": [
                "./selected-step-result.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./selected-step-result.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "selectedStepName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "selectedStepResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "StepResult",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { ActionStatus } from 'src/app/layout/common-layout/model/enum/action-status';\r\nimport { StepResult } from 'src/app/layout/common-layout/model/instance-run.interface';\r\n\r\n@Component({\r\n\tselector: 'app-selected-step-result',\r\n\ttemplateUrl: './selected-step-result.component.html',\r\n\tstyleUrls: ['./selected-step-result.component.scss'],\r\n})\r\nexport class SelectedStepResultComponent {\r\n\t@Input() selectedStepResult: StepResult;\r\n\t@Input() selectedStepName: string;\r\n\tconstructor() {}\r\n\r\n\tget ActionStatusEnum() {\r\n\t\treturn ActionStatus;\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.status-section {\r\n  color: $title;\r\n  gap: 0.625rem;\r\n  margin: 1.25rem 0;\r\n  font-weight: 600;\r\n}\r\n.status-icon {\r\n  margin-top: -4px;\r\n}\r\n.detail-item {\r\n  font-weight: 500;\r\n  gap: 0.625rem;\r\n  margin-bottom: 0.5rem;\r\n  .description {\r\n    color: $description;\r\n  }\r\n}\r\n",
                    "styleUrl": "./selected-step-result.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "accessors": {
                "ActionStatusEnum": {
                    "name": "ActionStatusEnum",
                    "getSignature": {
                        "name": "ActionStatusEnum",
                        "type": "",
                        "returnType": "",
                        "line": 15
                    }
                }
            },
            "templateData": "<div>\r\n  <div class=\"status-section d-flex align-items-center\">\r\n    <ng-container\r\n      *ngIf=\"ActionStatusEnum.SUCCEEDED === selectedStepResult.status\"\r\n    >\r\n      <svg-icon\r\n        src=\"assets/img/custom/success-step-result.svg\"\r\n        [svgStyle]=\"{ width: 21, height: 20 }\"\r\n        matTooltip=\"Step succeeded\"\r\n      ></svg-icon>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"ActionStatusEnum.FAILED === selectedStepResult.status\">\r\n      <svg-icon\r\n        src=\"assets/img/custom/failure-step-result.svg\"\r\n        [svgStyle]=\"{ width: 21, height: 20 }\"\r\n        matTooltip=\"Step succeeded\"\r\n      ></svg-icon>\r\n    </ng-container>\r\n    {{ selectedStepName }}\r\n  </div>\r\n\r\n  <div class=\"detail-item d-flex align-items-center\">\r\n    <svg-icon\r\n      src=\"assets/img/custom/duration.svg\"\r\n      [svgStyle]=\"{ width: 12, height: 20 }\"\r\n    ></svg-icon>\r\n    Duration:\r\n    <span class=\"description\"> {{ selectedStepResult.duration }}ms </span>\r\n  </div>\r\n\r\n  <div class=\"mt-4\" *ngIf=\"selectedStepResult.input\">\r\n    <app-json-viewer\r\n      class=\"json-viewer\"\r\n      [title]=\"'Input'\"\r\n      [maxHeight]=\"400\"\r\n      [content]=\"selectedStepResult.input\"\r\n    ></app-json-viewer>\r\n  </div>\r\n  <div class=\"mt-4\" *ngIf=\"selectedStepResult.output\">\r\n    <app-json-viewer\r\n      [title]=\"'Output'\"\r\n      [content]=\"selectedStepResult.output\"\r\n    ></app-json-viewer>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SelectEventComponent",
            "id": "component-SelectEventComponent-46b4057285e0043b24a7bf1b6de09949aae212efcd740225257f9e7eabf79c268e1df5cab37ad993cab0ba9eccd9d0edf84555fe885e3ae7087e1ef322a0ed86",
            "file": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/select-event/select-event.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-event",
            "styleUrls": [
                "./select-event.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-event.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dynamicControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "SelectEventFormControl",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openEvent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { SelectEventFormControl } from '../../../../model/dynamic-controls/select-event-form-control';\nimport { CreateNewEventModalComponent } from '../../../create-new-event-modal/create-new-event-modal.component';\nimport { BsModalService } from 'ngx-bootstrap/modal';\n\n@Component({\n\tselector: 'app-select-event',\n\ttemplateUrl: './select-event.component.html',\n\tstyleUrls: ['./select-event.component.scss'],\n})\nexport class SelectEventComponent {\n\t@Input() dynamicControl: SelectEventFormControl;\n\n\tconstructor(private modalService: BsModalService) {}\n\n\topenEvent() {\n\t\tthis.modalService.show(CreateNewEventModalComponent);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.new-event-btn {\r\n  background-color: transparent;\r\n  margin-top: 0.5rem;\r\n  font-weight: 500;\r\n}\r\n.new-event-btn:hover {\r\n  background-color: $buttonTextPrimaryHover;\r\n}\r\n",
                    "styleUrl": "./select-event.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<app-multi-dropdown\r\n  *ngIf=\"dynamicControl\"\r\n  [dynamicControl]=\"dynamicControl\"\r\n></app-multi-dropdown>\r\n<app-button\r\nbtnColor=\"primary\"\r\nbtnStyle=\"basic\"\r\nbtnSize=\"medium\"\r\n(buttonClicked)=\"openEvent()\"\r\n>   + New Event\r\n</app-button>\r\n\r\n"
        },
        {
            "name": "SelectOauth2Component",
            "id": "component-SelectOauth2Component-ff93159956d4f34486c9c39ec8958ec32589442678c3ffc725e44cd7dbb0d789391f27e9e65c63eaa2f5fe6263e9c7d721c82c0e5fda97782ed9b2f866c53d77",
            "file": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/select-oauth2/select-oauth2.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select-oauth2",
            "styleUrls": [
                "./select-oauth2.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-oauth2.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dynamicControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Oauth2SelectFormControl",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_dynamicControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Oauth2SelectFormControl",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "dropdownFormControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownFormControl",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "optionsSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "valueSyncSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "findSuitableAuth",
                    "args": [
                        {
                            "name": "oauth2Variable",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "flowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Config[]>",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "oauth2Variable",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "flowId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openConfigVariable",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateValue",
                    "args": [
                        {
                            "name": "$event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Oauth2SelectFormControl } from '../../../../model/dynamic-controls/oauth2-select-form-control';\nimport { distinctUntilChanged, map, Observable, Subscription } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { BuilderSelectors } from '../../../../../flow-builder/store/selector/flow-builder.selector';\nimport { UUID } from 'angular2-uuid';\nimport { DropdownFormControl } from '../../../../model/dynamic-controls/dropdown-form-control';\nimport { DropdownItemOption } from '../../../../model/fields/variable/subfields/dropdown-item-option';\n\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Validators } from '@angular/forms';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\n\n@Component({\n\tselector: 'app-select-oauth2',\n\ttemplateUrl: './select-oauth2.component.html',\n\tstyleUrls: ['./select-oauth2.component.scss'],\n})\nexport class SelectOauth2Component {\n\tdropdownFormControl: DropdownFormControl;\n\t_dynamicControl: Oauth2SelectFormControl;\n\toptionsSubscription: Subscription;\n\tvalueSyncSubscription: Subscription;\n\n\t@Input() set dynamicControl(_dynamicControl: Oauth2SelectFormControl) {\n\t\tthis._dynamicControl = _dynamicControl;\n\t\tif (this.optionsSubscription != undefined && !this.optionsSubscription.closed) {\n\t\t\tthis.optionsSubscription.unsubscribe();\n\t\t}\n\t\tif (this.valueSyncSubscription != undefined && !this.valueSyncSubscription.closed) {\n\t\t\tthis.valueSyncSubscription.unsubscribe();\n\t\t}\n\n\t\tthis.optionsSubscription = this.findSuitableAuth(null, this.dynamicControl.getFlowId())\n\t\t\t.pipe(\n\t\t\t\tmap(configs => {\n\t\t\t\t\tlet dropdownOptions: DropdownItemOption[] = [];\n\t\t\t\t\tfor (let i = 0; i < configs.length; ++i) {\n\t\t\t\t\t\tdropdownOptions.push({\n\t\t\t\t\t\t\tvalue: '${configs.' + configs[i].key + '}',\n\t\t\t\t\t\t\tlabel: configs[i].label,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t``;\n\t\t\t\t\treturn dropdownOptions;\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe(configs => {\n\t\t\t\tthis.dropdownFormControl = new DropdownFormControl({\n\t\t\t\t\tname: this._dynamicControl.getName(),\n\t\t\t\t\tlabel: this._dynamicControl.getLabel(),\n\t\t\t\t\tvalue: this._dynamicControl.formControl().value,\n\t\t\t\t\tdropdownOptions: configs,\n\t\t\t\t\tdisabled: this._dynamicControl.isDisabled(),\n\t\t\t\t\tvalidatorFns: [Validators.required],\n\t\t\t\t});\n\n\t\t\t\tthis.valueSyncSubscription = this.dropdownFormControl.formControl().valueChanges.subscribe(value => {\n\t\t\t\t\t_dynamicControl.formControl().setValue(value);\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tget dynamicControl() {\n\t\treturn this._dynamicControl;\n\t}\n\n\tconstructor(private store: Store, private modalService: BsModalService) {}\n\n\tfindSuitableAuth(oauth2Variable: any, flowId: UUID): Observable<Config[]> {\n\t\treturn this.store\n\t\t\t.select(BuilderSelectors.selectAuth2Configs(oauth2Variable, flowId))\n\t\t\t.pipe(distinctUntilChanged((previous, current) => JSON.stringify(previous) === JSON.stringify(current)));\n\t}\n\n\tupdateValue($event: string) {\n\t\tthis._dynamicControl.formControl().setValue($event);\n\t}\n\n\topenConfigVariable() {\n\t\tthis, this.modalService;\n\t\t// let bsModalRef = this.modalService.show(CreateEditVariableModalComponent, {\n\t\t// \tignoreBackdropClick: true,\n\t\t// });\n\t\t// (bsModalRef.content as CreateEditVariableModalComponent).information = {\n\t\t// \tparentType: ConfigScope.COLLECTION,\n\t\t// \tselectedIndex: undefined,\n\t\t// \tselectedVariable: undefined,\n\t\t// \tconfigFlowId: this._dynamicControl.getFlowId(),\n\t\t// \tconfigParent: this._dynamicControl.getVariable(),\n\t\t// };\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.new-authentication-button {\r\n  background-color: transparent;\r\n  margin-top: 0.5rem;\r\n  font-weight: 500;\r\n}\r\n.new-authentication-button:hover {\r\n  background-color: $buttonTextPrimaryHover;\r\n}\r\n",
                    "styleUrl": "./select-oauth2.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 66,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "dynamicControl": {
                    "name": "dynamicControl",
                    "setSignature": {
                        "name": "dynamicControl",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "_dynamicControl",
                                "type": "Oauth2SelectFormControl",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 25,
                        "jsdoctags": [
                            {
                                "name": "_dynamicControl",
                                "type": "Oauth2SelectFormControl",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "dynamicControl",
                        "type": "",
                        "returnType": "",
                        "line": 64
                    }
                }
            },
            "templateData": "<app-basic-select [dynamicControl]=\"dropdownFormControl\"></app-basic-select>\r\n<button\r\n  class=\"btn btn-text text-primary new-authentication-button p-2\"\r\n  type=\"button\"\r\n  (click)=\"openConfigVariable()\"\r\n  *ngIf=\"!dropdownFormControl.isDisabled()\"\r\n>\r\n  + New Authentication\r\n</button>\r\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-fe01453c80a9b3c5547b4786aabe2299102396fa469d40569fbf85e4e0657bd3a67831c27f64f3010db8ef584d63782f9e8c25058567ab927b39a93c159563bd",
            "file": "src/app/layout/dashboard-layout/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: BsDropdownConfig, useValue: { isAnimated: false, autoClose: true },\n}"
                }
            ],
            "selector": "app-sidebar",
            "styleUrls": [
                "./sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "DEFAULT_WIDTH",
                    "defaultValue": "250",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "ICON_BAR_WIDTH",
                    "defaultValue": "80",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "navigationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NavigationService",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "selectedIndex$",
                    "defaultValue": "of(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "selectedSubmenuIndex",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type | undefined",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "submenuOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "supportButtonHovered",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "updateSelectedIndex$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "updateSelectedSubmenuIndex$",
                    "defaultValue": "of(undefined)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "updateSubmenuOpen$",
                    "defaultValue": "of(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "borderColor",
                    "args": [
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ border?: undefined; } | { border: string; }",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clickSubmenu",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "route",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "route",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hoverContainer",
                    "args": [
                        {
                            "name": "submenuOpen",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ boxShadow: string; transitionDuration: string; transitionProperty: string; background: any; width: string; overflow: string; }",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "submenuOpen",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "navigateHome",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openUserback",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sdContainer",
                    "args": [],
                    "optional": false,
                    "returnType": "{ display: string; zIndex: number; flexDirection: string; width: string; height: string; background: any; boxShadow: string; overflow: string; }",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectSubMenu",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 140,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateSelectedIndex",
                    "args": [
                        {
                            "name": "currentRoute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "currentRoute",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ThemeService } from '../../common-layout/service/theme.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { NavigationService } from '../service/navigation.service';\nimport { AuthenticationService } from '../../common-layout/service/authentication.service';\nimport { BsDropdownConfig } from 'ngx-bootstrap/dropdown';\nimport { UserbackService } from '../../common-layout/service/userback.service';\nimport { map, Observable, of, tap } from 'rxjs';\n\n@Component({\n\tselector: 'app-sidebar',\n\ttemplateUrl: './sidebar.component.html',\n\tstyleUrls: ['./sidebar.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: BsDropdownConfig,\n\t\t\tuseValue: { isAnimated: false, autoClose: true },\n\t\t},\n\t],\n})\nexport class SidebarComponent implements OnInit {\n\tselectedIndex$: Observable<number> = of(0);\n\tupdateSubmenuOpen$: Observable<boolean> = of(false);\n\tupdateSelectedIndex$: Observable<void>;\n\tupdateSelectedSubmenuIndex$: Observable<{ menu: number; submenu: number } | undefined> = of(undefined);\n\n\tsubmenuOpen: boolean = false;\n\tselectedIndex: number = 0;\n\tselectedSubmenuIndex: { menu: number; submenu: number } | undefined = undefined;\n\n\tsupportButtonHovered = false;\n\tDEFAULT_WIDTH = 250;\n\tICON_BAR_WIDTH = 80;\n\n\tconstructor(\n\t\tprivate themeService: ThemeService,\n\t\tprivate router: Router,\n\t\tprivate authenticationService: AuthenticationService,\n\t\tpublic navigationService: NavigationService,\n\t\tprivate userbackService: UserbackService\n\t) {}\n\n\tngOnInit(): void {\n\t\tthis.updateSelectedIndex(this.router.url);\n\t\tthis.updateSelectedIndex$ = this.router.events.pipe(\n\t\t\ttap(val => {\n\t\t\t\tif (val instanceof NavigationEnd) {\n\t\t\t\t\tthis.updateSelectedIndex(val.url);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\t\tthis.updateSubmenuOpen$ = this.navigationService.getSubmenuState().pipe(\n\t\t\ttap(value => {\n\t\t\t\tthis.submenuOpen = value;\n\t\t\t})\n\t\t);\n\t\tthis.updateSelectedSubmenuIndex$ = this.navigationService.getSelectedRoute().pipe(\n\t\t\ttap(value => {\n\t\t\t\tthis.selectedSubmenuIndex = value;\n\t\t\t})\n\t\t);\n\t\tthis.selectedIndex$ = this.navigationService.getSelectedMenuIndex().pipe(\n\t\t\ttap(value => {\n\t\t\t\tthis.selectedIndex = value;\n\t\t\t})\n\t\t);\n\t}\n\n\tupdateSelectedIndex(currentRoute: string) {\n\t\tlet sub: any = undefined;\n\t\tlet main: any = undefined;\n\t\tfor (let i = 0; i < this.navigationService.sidebarRoutes.length; ++i) {\n\t\t\tfor (let j = 0; j < this.navigationService.sidebarRoutes[i].submenuItems.length; ++j) {\n\t\t\t\tlet linkPrefix = this.navigationService.sidebarRoutes[i].submenuItems[j].link;\n\t\t\t\tif (linkPrefix && currentRoute.startsWith(linkPrefix)) {\n\t\t\t\t\tmain = i;\n\t\t\t\t\tsub = j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (main === undefined) {\n\t\t\tmain = 0;\n\t\t\tsub = 0;\n\t\t}\n\t\tthis.navigationService.setSubmenuState(sub !== undefined);\n\t\tthis.navigationService.setSelectedMenuIndex(main);\n\t\tthis.navigationService.setSelectedRoute({ menu: main, submenu: sub });\n\t}\n\n\thoverContainer(submenuOpen) {\n\t\treturn {\n\t\t\tboxShadow: 'inset -20px 0px 10px -20px rgba(0, 0, 0, 0.05), inset 1px 0px 0px rgba(224, 228, 232, 0.25)',\n\t\t\ttransitionDuration: '0.5s',\n\t\t\ttransitionProperty: 'left top',\n\t\t\tbackground: this.themeService.GRAYCARD_COLOR,\n\t\t\twidth: submenuOpen ? this.DEFAULT_WIDTH - this.ICON_BAR_WIDTH + 'px' : '0px',\n\t\t\toverflow: 'hidden',\n\t\t};\n\t}\n\n\tsdContainer() {\n\t\treturn {\n\t\t\tdisplay: 'flex',\n\t\t\tzIndex: 1,\n\t\t\tflexDirection: 'column',\n\t\t\twidth: this.ICON_BAR_WIDTH + 'px',\n\t\t\theight: '100%',\n\t\t\tbackground: this.themeService.SIDEBAR_COLOR,\n\t\t\tboxShadow: '1px 0px 0px #EBF0F5',\n\t\t\toverflow: 'hidden',\n\t\t};\n\t}\n\n\tclickSubmenu(index: number, route: any) {\n\t\tif (!this.isTrialExpired) {\n\t\t\tthis.navigationService.setSubmenuState(route.submenu);\n\t\t\tthis.navigationService.setSelectedMenuIndex(index);\n\t\t\tif (!route.submenu) {\n\t\t\t\tthis.navigationService.setSelectedRoute({\n\t\t\t\t\tmenu: index,\n\t\t\t\t\tsubmenu: undefined,\n\t\t\t\t});\n\t\t\t\tthis.router.navigate([route.link]).then(r => {});\n\t\t\t} else {\n\t\t\t\tthis.navigationService.setSelectedRoute({ menu: index, submenu: 0 });\n\t\t\t\tthis.router.navigate([this.navigationService.sidebarRoutes[index].submenuItems[0].link]);\n\t\t\t}\n\t\t}\n\t}\n\n\tborderColor(index: any) {\n\t\tif (this.isTrialExpired || index !== this.selectedIndex) return {};\n\n\t\treturn {\n\t\t\tborder: '1px solid ' + this.navigationService.sidebarRoutes[index].color,\n\t\t};\n\t}\n\n\tselectSubMenu(index: number, item: any) {\n\t\tthis.navigationService.setSelectedRoute({\n\t\t\tmenu: this.selectedIndex,\n\t\t\tsubmenu: index,\n\t\t});\n\t\tthis.router.navigate([item.link]).then(r => {});\n\t}\n\n\topenUserback() {\n\t\tthis.userbackService.openUserbackSubject.next(true);\n\t}\n\n\tget isTrialExpired() {\n\t\tconst now = new Date().getTime() / 1000;\n\n\t\treturn (\n\t\t\tthis.authenticationService.currentUser.epochExpirationTime &&\n\t\t\tthis.authenticationService.currentUser.epochExpirationTime < now\n\t\t);\n\t}\n\n\tnavigateHome() {\n\t\tconst route = this.navigationService.sidebarRoutes.find(r => r.link === '/flows')!;\n\t\tconst index = this.navigationService.sidebarRoutes.findIndex(r => r.link === '/flows');\n\t\tthis.navigationService.setSubmenuState(route.submenu);\n\t\tthis.navigationService.setSelectedMenuIndex(index);\n\t\tthis.navigationService.setSelectedRoute({\n\t\t\tmenu: index,\n\t\t\tsubmenu: undefined,\n\t\t});\n\t\tthis.router.navigate([route.link]).then(r => {});\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.items-top {\r\n  flex: 1 1 auto;\r\n}\r\n.items-bottom {\r\n  flex: 0 1 auto;\r\n  margin-bottom: 1.75rem;\r\n}\r\n\r\n.sd-icon-container {\r\n  padding: 0.375rem;\r\n  margin: auto;\r\n  width: 40px;\r\n  border: 1px solid transparent;\r\n  border-radius: 8px;\r\n  box-sizing: border-box;\r\n  transition: all 400ms cubic-bezier(0.35, 0, 0.25, 1);\r\n}\r\n\r\n.sd-icon-container-hover {\r\n  background: darken($sidebar, 4%);\r\n}\r\n\r\n.submenu-item {\r\n  cursor: pointer;\r\n  text-overflow: clip;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n\r\n.sd-icon-wrapper {\r\n  padding-top: 1.25rem;\r\n  padding-bottom: 1.25rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.sd-icon {\r\n  text-align: center;\r\n}\r\n.sd-icon-text {\r\n  text-align: center;\r\n  margin-top: 0.375rem;\r\n  font-size: 0.625rem;\r\n  color: $formLabel;\r\n}\r\n\r\n.sd-icon-text-clicked {\r\n  color: $title;\r\n  font-weight: 500;\r\n}\r\n\r\n.dashboard-side-bar {\r\n  position: sticky;\r\n  top: 0px;\r\n  height: 100vh;\r\n}\r\n\r\n.sub-menu {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.support-icon-wrapper {\r\n  padding: 1rem 1.25rem;\r\n}\r\n\r\n.support-icon-circle {\r\n  background-color: $primary;\r\n  border-radius: 50%;\r\n  height: 23px;\r\n  min-width: 23px;\r\n}\r\n\r\n.support-icon-container {\r\n  min-height: 40px;\r\n}\r\n\r\n.support-icon {\r\n  margin-top: -1px;\r\n}\r\n.disabled-icon {\r\n  cursor: auto;\r\n}\r\n\r\n.home-icon {\r\n  padding-top: 1.25rem;\r\n  padding-bottom: 1.25rem;\r\n}\r\n",
                    "styleUrl": "./sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userbackService",
                        "type": "UserbackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userbackService",
                        "type": "UserbackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "isTrialExpired": {
                    "name": "isTrialExpired",
                    "getSignature": {
                        "name": "isTrialExpired",
                        "type": "",
                        "returnType": "",
                        "line": 152
                    }
                }
            },
            "templateData": "<div class=\"dashboard-side-bar d-flex\">\r\n  <div [ngStyle]=\"sdContainer()\">\r\n    <app-img\r\n      class=\"sd-icon mb-2 home-icon cursor-pointer\"\r\n      [width]=\"30\"\r\n      [height]=\"30\"\r\n      [src]=\"'/assets/img/custom/sidebar/activepieces-small.png'\"\r\n      (click)=\"navigateHome()\"\r\n    ></app-img>\r\n    <div class=\"items-top\">\r\n      <div\r\n        class=\"sd-icon-wrapper\"\r\n        [class.disabled-icon]=\"isTrialExpired\"\r\n        *ngFor=\"\r\n          let route of this.navigationService.sidebarRoutes;\r\n          let i = index\r\n        \"\r\n      >\r\n        <div\r\n          class=\"sd-icon\"\r\n          (click)=\"clickSubmenu(i, route)\"\r\n          (mouseenter)=\"route.hover = true && !isTrialExpired\"\r\n          (mouseleave)=\"route.hover = false\"\r\n        >\r\n          <div\r\n            class=\"sd-icon-container {{\r\n              route && route.hover ? 'sd-icon-container-hover' : ''\r\n            }}\"\r\n            [ngStyle]=\"borderColor(i)\"\r\n          >\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 23, height: 23, fill: 'grey' }\"\r\n              [src]=\"isTrialExpired ? route.disabledIcon : route.icon\"\r\n            ></svg-icon>\r\n          </div>\r\n          <div\r\n            class=\"sd-icon-text no-select {{\r\n              selectedIndex === i ? 'sd-icon-text-clicked' : ''\r\n            }}\"\r\n          >\r\n            {{ route.text }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"items-bottom\">\r\n      <div\r\n        class=\"sd-icon submenu-item support-icon-wrapper\"\r\n        (mouseenter)=\"supportButtonHovered = true\"\r\n        (mouseleave)=\"supportButtonHovered = false\"\r\n        (click)=\"openUserback()\"\r\n      >\r\n        <div\r\n          class=\"sd-icon-container support-icon-container d-flex justify-content-center align-items-center\"\r\n          [class.sd-icon-container-hover]=\"supportButtonHovered\"\r\n        >\r\n          <div\r\n            class=\"support-icon-circle d-flex justify-content-center align-items-center\"\r\n          >\r\n            <svg-icon\r\n              [svgStyle]=\"{ width: 13, height: 13 }\"\r\n              src=\"assets/img/custom/support.svg\"\r\n              class=\"support-icon\"\r\n            ></svg-icon>\r\n          </div>\r\n        </div>\r\n        <div class=\"sd-icon-text no-select\">Support</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    [ngStyle]=\"hoverContainer(submenuOpen)\"\r\n    *ngIf=\"this.navigationService.sidebarRoutes[selectedIndex].submenu\"\r\n  >\r\n    <div class=\"sub-menu\">\r\n      <div class=\"px-4 py-4 font-weight-600 mb-2 no-select\">\r\n        {{ this.navigationService.sidebarRoutes[selectedIndex].text }}\r\n      </div>\r\n      <div\r\n        class=\"px-4 py-2 submenu-item no-select\"\r\n        [class.text-primary]=\"\r\n          this.selectedSubmenuIndex &&\r\n          i === this.selectedSubmenuIndex.submenu &&\r\n          this.selectedIndex === this.selectedSubmenuIndex.menu\r\n        \"\r\n        *ngFor=\"\r\n          let item of this.navigationService.sidebarRoutes[selectedIndex]\r\n            .submenuItems;\r\n          let i = index\r\n        \"\r\n        (click)=\"selectSubMenu(i, item)\"\r\n      >\r\n        {{ item.text }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-container *ngIf=\"updateSelectedIndex$ | async\"></ng-container>\r\n<ng-container *ngIf=\"selectedIndex$ | async\"></ng-container>\r\n<ng-container *ngIf=\"updateSelectedSubmenuIndex$ | async\"></ng-container>\r\n<ng-container *ngIf=\"updateSubmenuOpen$ | async\"></ng-container>\r\n"
        },
        {
            "name": "SidebarHeaderComponent",
            "id": "component-SidebarHeaderComponent-fc57c682fa1060eeb4fe2b08e73a6fa7737a88906adae074254918fec0a98c56415facc4769d092523d62b0dc4775c747d5e8dfc840a0dfe480a49d443127377",
            "file": "src/app/layout/flow-builder/components/sidebar-header/sidebar-header.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar-header",
            "styleUrls": [
                "./sidebar-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidebar-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backArrow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "backArrowClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<void>"
                },
                {
                    "name": "closeClicked",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "faChevronLeft",
                    "defaultValue": "faChevronLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { ThemeService } from 'src/app/layout/common-layout/service/theme.service';\n\n@Component({\n\tselector: 'app-sidebar-header',\n\ttemplateUrl: './sidebar-header.component.html',\n\tstyleUrls: ['./sidebar-header.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SidebarHeaderComponent {\n\tfaChevronLeft = faChevronLeft;\n\t@Input() title: string;\n\t@Input() backArrow = false;\n\n\t@Output() backArrowClicked: EventEmitter<void> = new EventEmitter<void>();\n\t@Output() closeClicked: EventEmitter<void> = new EventEmitter<void>();\n\n\tconstructor(public themeService: ThemeService) {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.title-header {\r\n  flex-grow: 1;\r\n  width: 100%;\r\n  margin-bottom: 0px !important;\r\n  font-weight: 600;\r\n  font-size: 1rem;\r\n  display: inline;\r\n  line-height: 18px;\r\n}\r\n",
                    "styleUrl": "./sidebar-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"d-flex align-items-center\">\r\n  <div *ngIf=\"backArrow\" class=\"icon-button\" (click)=\"backArrowClicked.emit()\">\r\n    <fa-icon\r\n      [fixedWidth]=\"true\"\r\n      [size]=\"'1x'\"\r\n      [icon]=\"faChevronLeft\"\r\n      style=\"flex-grow: 1; cursor: pointer\"\r\n    ></fa-icon>\r\n  </div>\r\n  <div class=\"title-header\">\r\n    {{ title }}\r\n  </div>\r\n  <app-icon-button\r\n    [iconFilename]=\"'close.svg'\"\r\n    [hoverColor]=\"themeService.PRIMARY_COLOR\"\r\n    [color]=\"themeService.BODY_COLOR\"\r\n    (click)=\"closeClicked.emit()\"\r\n  ></app-icon-button>\r\n</div>\r\n"
        },
        {
            "name": "SignInComponent",
            "id": "component-SignInComponent-5f81054814e5d280465ecfa65089222c61d8bfc9ee6d3af95b2454ea54991f388a0c853cf68130ba5d3df956df93d026be8f73f23745677c1b3f5b96073e3b98",
            "file": "src/app/layout/auth-layout/pages/sign-in/sign-in.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./sign-in.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-in.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "showErrorMessage",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "delayLoadingSpinner",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { StatusCodes } from 'http-status-codes';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { AuthenticationService } from '../../../common-layout/service/authentication.service';\nimport { User } from '../../../common-layout/model/user.interface';\nimport { fadeInUp400ms } from '../../../common-layout/animation/fade-in-up.animation';\nimport { ThemeService } from '../../../common-layout/service/theme.service';\nimport { NavigationService } from '../../../dashboard-layout/service/navigation.service';\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './sign-in.component.html',\n\tstyleUrls: ['./sign-in.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class SignInComponent implements OnInit {\n\tloginForm: FormGroup;\n\tsubmitted = false;\n\tshowErrorMessage = false;\n\tloading = false;\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate navigationService: NavigationService,\n\t\tprivate themeService: ThemeService,\n\t\tprivate authenticationService: AuthenticationService\n\t) {\n\t\tthis.loginForm = this.formBuilder.group({\n\t\t\temail: [, [Validators.email, Validators.required]],\n\t\t\tpassword: [, Validators.required],\n\t\t});\n\t}\n\n\tngOnInit() {\n\t\tthis.navigationService.setTitle('Sign In');\n\t}\n\n\tdelayLoadingSpinner() {\n\t\tsetTimeout(() => {\n\t\t\tthis.loading = false;\n\t\t}, this.themeService.DELAY_LOADING_DURATION);\n\t}\n\n\tsignIn(): void {\n\t\tthis.submitted = true;\n\t\tif (this.loginForm.valid && !this.loading) {\n\t\t\tthis.loading = true;\n\t\t\tthis.showErrorMessage = false;\n\t\t\tconst request = this.loginForm.value;\n\t\t\tthis.authenticationService.signIn(request).subscribe({\n\t\t\t\tnext: (response: HttpResponse<User>) => {\n\t\t\t\t\tthis.authenticationService.saveUser(response);\n\t\t\t\t\tthis.router.navigate(['/']).then(() => {\n\t\t\t\t\t\tthis.loading = false;\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terror: (error: HttpErrorResponse) => {\n\t\t\t\t\tif (error.status === StatusCodes.UNAUTHORIZED || error.status === StatusCodes.BAD_REQUEST) {\n\t\t\t\t\t\tthis.showErrorMessage = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.delayLoadingSpinner();\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.forgot-password {\r\n  float: right;\r\n}\r\n\r\n.auth-form-title {\r\n  font-weight: 600;\r\n  color: $title;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 1.563rem;\r\n}\r\n\r\n.auth-button {\r\n  padding: 0.5rem 0rem;\r\n  border-radius: 4px;\r\n  transition: all 0.3s ease;\r\n  font-weight: 600;\r\n  border: 0px;\r\n  &:focus {\r\n    outline: 1px;\r\n  }\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.auth-links-container {\r\n  margin-top: 1.875rem;\r\n  color: $description;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n\r\n.card {\r\n  border: 1px solid $dividers;\r\n}\r\n",
                    "styleUrl": "./sign-in.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"auth-form-title\">Welcome Back</div>\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"signIn()\">\r\n  <div class=\"form-group\">\r\n    <label class=\"form-text\" for=\"email\">Email</label>\r\n    <input\r\n      id=\"email\"\r\n      (change)=\"showErrorMessage = false\"\r\n      class=\"form-control\"\r\n      formControlName=\"email\"\r\n      placeholder=\"Enter your email\"\r\n      type=\"email\"\r\n    />\r\n    <p\r\n      @fadeInUp\r\n      *ngIf=\"submitted && this.loginForm.controls['email'].invalid\"\r\n      class=\"invalid-input\"\r\n    >\r\n      Email is required\r\n    </p>\r\n  </div>\r\n  <div class=\"form-group mt-4\">\r\n    <span class=\"forgot-password form-text\"><a tabindex=\"-1\" routerLink=\"/forgot-password\">Forgot Password?</a></span>\r\n    <label class=\"form-text\" for=\"password\">Password</label>\r\n    <input\r\n      id=\"password\"\r\n      (change)=\"showErrorMessage = false\"\r\n      class=\"form-control\"\r\n      formControlName=\"password\"\r\n      placeholder=\"Enter your password\"\r\n      type=\"password\"\r\n    />\r\n    <p\r\n      @fadeInUp\r\n      *ngIf=\"submitted && this.loginForm.controls['password'].invalid\"\r\n      class=\"invalid-input\"\r\n    >\r\n      Password is required\r\n    </p>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <p\r\n      @fadeInUp\r\n      *ngIf=\"submitted && showErrorMessage\"\r\n      class=\"invalid-input\"\r\n    >\r\n      Wrong email or password\r\n    </p>\r\n  </div>\r\n  <div class=\"text-center\">\r\n    <app-button\r\n      [loading]=\"loading\"\r\n      (buttonClicked)=\"signIn()\"\r\n      btnColor=\"primary\"\r\n      [fullWidthOfContainer]=\"true\"\r\n    >\r\n    Sign in\r\n    </app-button>\r\n  </div>\r\n</form>\r\n<div\r\n  class=\"text-center auth-links-container d-column justify-content-center align-items-center\"\r\n>\r\n  <div>Don't have an account? <a routerLink=\"/sign-up\">Get yours now</a></div>\r\n</div>\r\n"
        },
        {
            "name": "SigningKeyModalComponent",
            "id": "component-SigningKeyModalComponent-ad20674beac0c12a899250ed8410790711551a4fcd39e496670ca9ab1ffc66833bbe76ec82b9b3c603763bf9dec654b686fe2247c54468eb6dc2c58bea0d7b8c",
            "file": "src/app/layout/dashboard-layout/pages/authentication/signing-key-modal/signing-key-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-signing-key-modal",
            "styleUrls": [
                "./signing-key-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./signing-key-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "environmentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "environmentName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "agreementFormControl",
                    "defaultValue": "new FormControl(false, checkboxIsTrue())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "bsModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "closedPressed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "generateSigningKeyFailed$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "generateSigningKeySuccessful$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "keyCopied",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "newKey",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "signingKeyToClean",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectAuthentication",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "copyKey",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "downloadKey",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "generate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ofType } from '@ngrx/effects';\nimport { ActionsSubject, Store } from '@ngrx/store';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { map, Observable, tap } from 'rxjs';\nimport { download } from 'src/app/layout/common-layout/helper/helpers';\nimport { ProjectAuthentication } from 'src/app/layout/common-layout/model/authentication';\nimport { checkboxIsTrue } from 'src/app/layout/common-layout/validators';\nimport {\n\tclearSigningKeyCredentials,\n\tgenerateSigningKey,\n\tgenerateSigningKeyFailed,\n\tgenerateSigningKeySuccessful,\n} from '../../../store/action/authentication.action';\n\n@Component({\n\tselector: 'app-signing-key-modal',\n\ttemplateUrl: './signing-key-modal.component.html',\n\tstyleUrls: ['./signing-key-modal.component.scss'],\n})\nexport class SigningKeyModalComponent implements OnInit {\n\t@Input()\n\tenvironmentId: string;\n\t@Input()\n\tenvironmentName: string;\n\tnewKey = '';\n\tclosedPressed = false;\n\tloading = false;\n\tkeyCopied = false;\n\tagreementFormControl = new FormControl(false, checkboxIsTrue());\n\tsigningKeyToClean: ProjectAuthentication;\n\n\tconstructor(\n\t\tpublic bsModalRef: BsModalRef,\n\t\tprivate snackbar: MatSnackBar,\n\t\tprivate actionListener$: ActionsSubject,\n\t\tprivate store: Store\n\t) {}\n\n\tgenerateSigningKeySuccessful$: Observable<void> = new Observable<void>();\n\tgenerateSigningKeyFailed$: Observable<void> = new Observable<void>();\n\n\tngOnInit(): void {\n\t\t// TODO MOVE THESE TO EFFECTS\n\t\tthis.generateSigningKeySuccessful$ = this.actionListener$.pipe(\n\t\t\tofType(generateSigningKeySuccessful),\n\t\t\ttap(action => {\n\t\t\t\tthis.signingKeyToClean = action.signingKey;\n\t\t\t\tthis.loading = false;\n\t\t\t\tthis.newKey = action.signingKey.privateKey!;\n\t\t\t}),\n\t\t\tmap(value => void 0)\n\t\t);\n\n\t\tthis.generateSigningKeyFailed$ = this.actionListener$.pipe(\n\t\t\tofType(generateSigningKeyFailed),\n\t\t\ttap(() => {\n\t\t\t\tthis.snackbar.open('Signing Keys generation failed ', '', {\n\t\t\t\t\tduration: undefined,\n\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t});\n\t\t\t\tthis.loading = false;\n\t\t\t}),\n\t\t\tmap(() => void 0)\n\t\t);\n\t}\n\n\tgenerate() {\n\t\tthis.loading = true;\n\t\tthis.store.dispatch(generateSigningKey({ environmentId: this.environmentId }));\n\t}\n\n\tclose() {\n\t\tthis.closedPressed = true;\n\t\tif (!this.agreementFormControl.invalid) {\n\t\t\tthis.store.dispatch(clearSigningKeyCredentials({ key: this.signingKeyToClean }));\n\t\t\tthis.snackbar.open('Signing key generated successfully');\n\t\t\tthis.bsModalRef.hide();\n\t\t}\n\t}\n\n\tcopyKey() {\n\t\tthis.keyCopied = true;\n\t\tnavigator.clipboard.writeText(this.newKey);\n\t\tthis.snackbar.open('Signing key copied to clipboard');\n\t}\n\n\tdownloadKey() {\n\t\tconst now = new Date();\n\t\tconst fileName = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now\n\t\t\t.getDate()\n\t\t\t.toString()\n\t\t\t.padStart(2, '0')}`;\n\t\tdownload(fileName, this.newKey);\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.sub-title {\r\n  font-weight: 600;\r\n  font-size: 0.875rem;\r\n  line-height: 1.375rem;\r\n  margin-bottom: 0.9375rem;\r\n  span {\r\n    font-weight: unset;\r\n  }\r\n}\r\n\r\n.modal-body {\r\n  margin-bottom: 0.875rem;\r\n}\r\n\r\n.red-text {\r\n  color: $danger;\r\n}\r\n\r\n.description {\r\n  font-weight: 400;\r\n  font-size: 0.8125rem;\r\n  line-height: 1.375rem;\r\n  color: #8c8c8c;\r\n  margin-top: 1.25rem;\r\n}\r\n.checkbox-container {\r\n  margin-top: 1.25rem;\r\n  gap: 0.625rem;\r\n  color: $description;\r\n  &.invalid {\r\n    color: $danger;\r\n  }\r\n}\r\n\r\n.key-container {\r\n  gap: 0.9375rem;\r\n  padding: 0px;\r\n\r\n  .key-control {\r\n    height: unset;\r\n    padding: 0px;\r\n    .key-value {\r\n      word-break: break-word;\r\n      overflow-y: scroll;\r\n      height: 3.75rem;\r\n      padding-right: 0.1875rem;\r\n      margin: 0.4375rem 0.8125rem;\r\n    }\r\n  }\r\n  ::-webkit-scrollbar {\r\n    width: 0.25rem;\r\n  }\r\n}\r\n",
                    "styleUrl": "./signing-key-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "actionListener$",
                        "type": "ActionsSubject",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "bsModalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "actionListener$",
                        "type": "ActionsSubject",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"modal-header\">\r\n  <div class=\"modal-title pull-left\">New Key for {{ environmentName }}</div>\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn-close close pull-right\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span *ngIf=\"!newKey\" aria-hidden=\"true\" class=\"visually-hidden\"\r\n      >&times;</span\r\n    >\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <ng-container *ngIf=\"!newKey; else newsigningKey\">\r\n    <p class=\"sub-title\">Generate a new Signing Key?</p>\r\n\r\n    <div>\r\n      <span>\r\n        You will use the generated key to sign requests from your app to\r\n        Activepieces.\r\n      </span>\r\n      <span class=\"red-text\">\r\n        Generating a new key will dismiss your older one and it can no longer be\r\n        used to sign requests.\r\n      </span>\r\n    </div>\r\n  </ng-container>\r\n  <ng-template #newsigningKey>\r\n    <div class=\"sub-title\">\r\n      Your New Signing Key <span> (Keep it with you)</span>\r\n    </div>\r\n    <div class=\"d-flex key-container\">\r\n      <div class=\"form-control key-control\">\r\n        <div class=\"key-value\">\r\n          {{ newKey }}\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex flex-column\">\r\n        <app-icon-button\r\n          [iconFilename]=\"keyCopied ? 'transparent-check.svg' : 'copy.svg'\"\r\n          (click)=\"copyKey()\"\r\n          [color]=\"'#4F4F4F'\"\r\n          matTooltip=\"Copy Key\"\r\n\r\n        ></app-icon-button>\r\n        <app-icon-button\r\n          [iconFilename]=\"'download.svg'\"\r\n          (click)=\"downloadKey()\"\r\n          matTooltip=\"Download Key\"\r\n        ></app-icon-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"description\">\r\n      Read\r\n      <a\r\n        href=\"https://docs.activepieces.com/#activepieces-js-reference\"\r\n        target=\"_blank\"\r\n        >our docs</a\r\n      >\r\n      to see how you will use this key to sign requests sent from your app to\r\n      Activepieces (You will no longer find the key on Activepeices).\r\n    </div>\r\n    <div\r\n      class=\"d-flex checkbox-container\"\r\n      [class.invalid]=\"closedPressed && agreementFormControl.invalid\"\r\n    >\r\n      <app-checkbox\r\n        [formControl]=\"agreementFormControl\"\r\n        [label]=\"\r\n          'I understand I will no longer be able to access this key here.'\r\n        \"\r\n      ></app-checkbox>\r\n    </div>\r\n  </ng-template>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <ng-container *ngIf=\"!newKey; else doneBtn\">\r\n\r\n    <app-button\r\n    btnColor=\"basic\"\r\n    btnStyle=\"basic\"\r\n    (buttonClicked)=\"bsModalRef.hide()\"\r\n  > Cancel\r\n  </app-button>\r\n    <app-button\r\n      type=\"button\"\r\n      btnColor=\"primary\"\r\n      (buttonClicked)=\"generate()\"\r\n      [loading]=\"loading\"\r\n    >Generate</app-button>\r\n  </ng-container>\r\n\r\n  <ng-template #doneBtn>\r\n    <app-button\r\n      type=\"button\"\r\n      btnColor=\"primary\"\r\n      (buttonClicked)=\"close()\"\r\n    >Done</app-button>\r\n  </ng-template>\r\n</div>\r\n<ng-container *ngIf=\"generateSigningKeySuccessful$ | async\"></ng-container>\r\n<ng-container *ngIf=\"generateSigningKeyFailed$ | async\"></ng-container>\r\n"
        },
        {
            "name": "SignUpComponent",
            "id": "component-SignUpComponent-02e1415f9000e8536cb49d386374fc75186f90730faefd1112d7c67ad8572a8ed97aa255bdc20df4ff90bb3d1424045adf09cac8e726831833ec1b43b39fb4b1",
            "file": "src/app/layout/auth-layout/pages/sign-up/sign-up.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sign-up",
            "styleUrls": [
                "./sign-up.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sign-up.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeStep",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "emailChanged",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "emailExists",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "signUpForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendEmailReset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../../common-layout/service/authentication.service';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { StatusCodes } from 'http-status-codes';\nimport { fadeInUp400ms } from '../../../common-layout/animation/fade-in-up.animation';\nimport { NavigationService } from '../../../dashboard-layout/service/navigation.service';\n\n@Component({\n\tselector: 'app-sign-up',\n\ttemplateUrl: './sign-up.component.html',\n\tstyleUrls: ['./sign-up.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class SignUpComponent implements OnInit {\n\tsignUpForm: FormGroup;\n\tsubmitted = false;\n\tloading = false;\n\temailExists: boolean;\n\temail: any;\n\tactiveStep = 0;\n\temailChanged = false;\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate navigationService: NavigationService,\n\t\tprivate authenticationService: AuthenticationService\n\t) {\n\t\tthis.signUpForm = this.formBuilder.group({\n\t\t\temail: [, [Validators.email, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$'), Validators.required]],\n\t\t});\n\t}\n\n\tngOnInit(): void {\n\t\tthis.navigationService.setTitle('Sign Up');\n\t}\n\n\tsendEmailReset() {\n\t\tthis.submitted = true;\n\t\tif (this.signUpForm.valid && !this.loading) {\n\t\t\tthis.loading = true;\n\t\t\tthis.emailExists = false;\n\t\t\tthis.emailChanged = false;\n\t\t\tconst request = this.signUpForm.value;\n\t\t\tthis.email = request.email;\n\t\t\tthis.authenticationService.sendEmailVerification(request).subscribe({\n\t\t\t\tnext: (response: HttpResponse<void>) => {\n\t\t\t\t\tthis.activeStep = 1;\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t},\n\t\t\t\terror: (error: HttpErrorResponse) => {\n\t\t\t\t\tif (error.status === StatusCodes.UNAUTHORIZED || error.status === StatusCodes.BAD_REQUEST) {\n\t\t\t\t\t}\n\t\t\t\t\tif (error.status === StatusCodes.CONFLICT) {\n\t\t\t\t\t\tthis.emailExists = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.loading = false;\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.auth-form-title {\r\n  font-weight: 600;\r\n  color: $title;\r\n  text-align: center;\r\n  font-size: 24px;\r\n  margin-bottom: 1.563rem;\r\n}\r\n\r\n.auth-button {\r\n  padding: 0.5rem 0rem;\r\n  border-radius: 4px;\r\n  transition: all 0.3s ease;\r\n  font-weight: 600;\r\n  border: 0px;\r\n  &:focus {\r\n    outline: 1px;\r\n  }\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.auth-links-container {\r\n  margin-top: 1.875rem;\r\n  color: $description;\r\n  font-size: 0.875rem;\r\n}\r\n\r\n.auth-logo-section {\r\n  color: $title;\r\n  font-weight: 600;\r\n  font-size: calc(1.2rem * 1.4);\r\n  margin-bottom: 1.875rem;\r\n  background: $white;\r\n}\r\n.auth-logo {\r\n  margin-top: -2px;\r\n  margin-right: 0.313rem;\r\n}\r\n\r\n.invalid-input {\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 0px;\r\n  color: $danger;\r\n  font-size: 0.875rem;\r\n}\r\n.email-div {\r\n  color: $title;\r\n}\r\n\r\n.card {\r\n  border: 1px solid $dividers;\r\n}\r\n.form-margin {\r\n  margin: 0px 5px;\r\n}\r\n",
                    "styleUrl": "./sign-up.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "navigationService",
                        "type": "NavigationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-auth-checkbox *ngIf=\"activeStep === 1\" (emailResetPressed)=\"sendEmailReset()\"\r\n              [email]=\"email\" [loading]=\"loading\"\r\n              [linkName]=\"'complete your registration'\">\r\n</app-auth-checkbox>\r\n<div class=\"form-margin\" *ngIf=\"activeStep === 0\">\r\n  <div class=\"auth-form-title\">Let's get started!</div>\r\n  <form [formGroup]=\"signUpForm\" (ngSubmit)=\"sendEmailReset()\">\r\n    <div class=\"form-group\">\r\n      <label class=\"form-text\" for=\"email\">Email</label>\r\n      <input\r\n        id=\"email\"\r\n        class=\"form-control\"\r\n        formControlName=\"email\"\r\n        placeholder=\"Enter your email\"\r\n        type=\"email\"\r\n        (keydown)=\"emailChanged = true\"\r\n      />\r\n      <p\r\n        @fadeInUp\r\n        *ngIf=\"\r\n                  submitted && signUpForm.controls['email'].hasError('required')\r\n                \"\r\n        class=\"invalid-input\"\r\n      >\r\n        Email is required\r\n      </p>\r\n      <p\r\n        @fadeInUp\r\n        *ngIf=\"\r\n                  submitted && (signUpForm.controls['email'].hasError('email') || signUpForm.controls['email'].hasError('pattern'))\r\n                \"\r\n        class=\"invalid-input\"\r\n      >\r\n        Email is invalid\r\n      </p>\r\n\r\n      <p\r\n        @fadeInUp\r\n        *ngIf=\"submitted && emailExists && !emailChanged\"\r\n        class=\"invalid-input\"\r\n      >\r\n        Email is used\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"text-center\">\r\n      <app-button\r\n        [loading]=\"loading\"\r\n        (buttonClicked)=\"sendEmailReset()\"\r\n        btnColor=\"primary\"\r\n        [fullWidthOfContainer]=\"true\"\r\n      >\r\n      Play with activepieces\r\n      </app-button>\r\n    </div>\r\n  </form>\r\n  <div class=\"text-center auth-links-container\">\r\n    <a routerLink=\"/sign-in\">Already have an account?</a>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SimpleLineConnectionComponent",
            "id": "component-SimpleLineConnectionComponent-e389af7d8e9bc3f4c65d86c94004f13f34e652ffd88708de2f1b3f8fb3ae3771beb79651f3309c8bbc21c4564c85af0e13f44ef0019ca2d64850c165179537df",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/simple-line-connection/simple-line-connection.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-simple-line-connection",
            "styleUrls": [
                "./simple-line-connection.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./simple-line-connection.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "flowItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "FlowItem",
                    "decorators": []
                },
                {
                    "name": "viewMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addButtonAndFlowItemNameContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AddButtonAndFlowItemNameContainer",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "addButtonLeft",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "addButtonTop",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "addButtonView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'addButton'"
                        }
                    ]
                },
                {
                    "name": "arrowHeadLeft",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "arrowHeadTop",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "drawCommand",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "drawer",
                    "defaultValue": "new Drawer()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Drawer",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "showDropArea$",
                    "defaultValue": "new Observable<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "SVG_HEIGHT",
                    "defaultValue": "SPACE_BETWEEN_ITEM_CONTENT_AND_LINE + VERTICAL_LINE_LENGTH + SPACE_BETWEEN_ITEM_CONTENT_AND_LINE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "calculateOffsetsForAddButtonAndArrowHead",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "hasNextAction",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "insertAddButtonToRendererServiceListOfContainers",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n\tAfterViewInit,\r\n\tChangeDetectionStrategy,\r\n\tComponent,\r\n\tInput,\r\n\tOnChanges,\r\n\tOnInit,\r\n\tSimpleChanges,\r\n\tViewChild,\r\n} from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { RightSideBarType } from 'src/app/layout/common-layout/model/enum/right-side-bar-type.enum';\r\nimport { AddButtonAndFlowItemNameContainer } from 'src/app/layout/common-layout/model/flow-builder/flow-add-button';\r\nimport { FlowItem } from 'src/app/layout/common-layout/model/flow-builder/flow-item';\r\nimport { FlowRendererService } from 'src/app/layout/flow-builder/service/flow-renderer.service';\r\nimport {\r\n\tADD_BUTTON_SIZE,\r\n\tARROW_HEAD_SIZE,\r\n\tDrawer,\r\n\tFLOW_ITEM_WIDTH,\r\n\tSPACE_BETWEEN_ITEM_CONTENT_AND_LINE,\r\n\tVERTICAL_LINE_LENGTH,\r\n} from '../draw-utils';\r\nimport { AddButtonType } from '../../../../../../../common-layout/model/enum/add-button-type';\r\nimport { FlowsActions } from '../../../../../../store/action/flows.action';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n\tselector: 'app-simple-line-connection',\r\n\ttemplateUrl: './simple-line-connection.component.html',\r\n\tstyleUrls: ['./simple-line-connection.component.scss'],\r\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SimpleLineConnectionComponent implements OnInit, AfterViewInit, OnChanges {\r\n\t@ViewChild('addButton') addButtonView: any;\r\n\taddButtonAndFlowItemNameContainer: AddButtonAndFlowItemNameContainer;\r\n\t@Input() flowItem: FlowItem;\r\n\t@Input() viewMode: boolean;\r\n\tshowDropArea$: Observable<boolean> = new Observable<boolean>();\r\n\tdrawer: Drawer = new Drawer();\r\n\tSVG_HEIGHT: number = SPACE_BETWEEN_ITEM_CONTENT_AND_LINE + VERTICAL_LINE_LENGTH + SPACE_BETWEEN_ITEM_CONTENT_AND_LINE;\r\n\tarrowHeadLeft = '0px';\r\n\tarrowHeadTop = '0px';\r\n\taddButtonLeft = '0px';\r\n\taddButtonTop = '0px';\r\n\r\n\tconstructor(private store: Store, private flowRendererService: FlowRendererService) {}\r\n\r\n\tdrawCommand: string;\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.drawCommand = [\r\n\t\t\tthis.drawer.move(FLOW_ITEM_WIDTH / 2, SPACE_BETWEEN_ITEM_CONTENT_AND_LINE),\r\n\t\t\tthis.drawer.drawVerticalLine(VERTICAL_LINE_LENGTH),\r\n\t\t].join(' ');\r\n\t\tthis.calculateOffsetsForAddButtonAndArrowHead();\r\n\t\tthis.showDropArea$ = this.flowRendererService.draggingSubject;\r\n\t}\r\n\r\n\tngAfterViewInit(): void {\r\n\t\tthis.insertAddButtonToRendererServiceListOfContainers();\r\n\t\tthis.calculateOffsetsForAddButtonAndArrowHead();\r\n\t}\r\n\r\n\tinsertAddButtonToRendererServiceListOfContainers() {\r\n\t\tif (this.addButtonView !== null && this.addButtonView !== undefined) {\r\n\t\t\tthis.addButtonAndFlowItemNameContainer = new AddButtonAndFlowItemNameContainer(\r\n\t\t\t\tthis.addButtonView.nativeElement,\r\n\t\t\t\tthis.flowItem.name\r\n\t\t\t);\r\n\t\t\tthis.flowRendererService.addButtonsWithStepNamesContainers.push(this.addButtonAndFlowItemNameContainer);\r\n\t\t}\r\n\t}\r\n\r\n\tcalculateOffsetsForAddButtonAndArrowHead() {\r\n\t\tlet strokeWidth = 2;\r\n\t\tthis.addButtonTop = `${VERTICAL_LINE_LENGTH / 2}px`;\r\n\t\tthis.addButtonLeft = `calc(50% - ${ADD_BUTTON_SIZE.width / 2}px)`;\r\n\t\tthis.arrowHeadLeft =\r\n\t\t\tthis.flowItem.boundingBox!.width / 2.0 - ARROW_HEAD_SIZE.width / 2.0 - strokeWidth / 2.0 - 0.5 + 'px';\r\n\t\tthis.arrowHeadTop = `${VERTICAL_LINE_LENGTH - 1}px`;\r\n\t}\r\n\r\n\tadd() {\r\n\t\tthis.store.dispatch(\r\n\t\t\tFlowsActions.setRightSidebar({\r\n\t\t\t\tsidebarType: RightSideBarType.STEP_TYPE,\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tbuttonType: AddButtonType.NEXT_ACTION,\r\n\t\t\t\t\tstepName: this.flowItem.name,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tngOnChanges(changes: SimpleChanges): void {\r\n\t\tif (\r\n\t\t\tthis.addButtonAndFlowItemNameContainer &&\r\n\t\t\tthis.flowItem.name != this.addButtonAndFlowItemNameContainer.stepName\r\n\t\t) {\r\n\t\t\tconst containerInArray = this.flowRendererService.addButtonsWithStepNamesContainers.find(\r\n\t\t\t\titem => item == this.addButtonAndFlowItemNameContainer\r\n\t\t\t);\r\n\t\t\tif (!containerInArray) {\r\n\t\t\t\tconsole.error('addButtonsWithStepNamesContainer not found');\r\n\t\t\t} else {\r\n\t\t\t\tthis.addButtonAndFlowItemNameContainer.stepName = this.flowItem.name;\r\n\t\t\t\tcontainerInArray.stepName = this.flowItem.name;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\thasNextAction() {\r\n\t\treturn this.flowItem.nextAction !== undefined && this.flowItem.nextAction !== null;\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.line-props {\r\n  stroke: $border;\r\n  stroke-width: 2px;\r\n}\r\n.add-button {\r\n  position: absolute;\r\n  // left: calc(50% - 8px);\r\n  height: 17px;\r\n  width: 16px;\r\n  z-index: 9999999;\r\n  svg {\r\n    margin-top: -11px;\r\n  }\r\n\r\n  .drop-point-container {\r\n    position: absolute;\r\n    left: -4.5px;\r\n    top: -3.5px;\r\n  }\r\n  .drop-point-border {\r\n    height: $drop-point-height;\r\n    width: $drop-point-width;\r\n    transform: scale(0);\r\n    border: 2px $border dashed;\r\n    border-radius: 5px;\r\n    transition: 200ms transform ease;\r\n  }\r\n}\r\n\r\n.scale-1 {\r\n  transform: scale(1) !important;\r\n}\r\n",
                    "styleUrl": "./simple-line-connection.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowRendererService",
                        "type": "FlowRendererService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 46,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowRendererService",
                        "type": "FlowRendererService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnChanges"
            ],
            "templateData": "<div class=\"positioned-relative\" [ngStyle]=\"{height: SVG_HEIGHT + 'px'}\">\r\n  <svg [attr.height]=\"SVG_HEIGHT\" class=\"positioned-absolute\">\r\n    <g class=\"group\">\r\n      <path class=\"line-props\" fill=\"transparent\" [attr.d]=\"drawCommand\"/>\r\n      <svg [attr.x]=\"arrowHeadLeft\" [attr.y]=\"arrowHeadTop\" *ngIf=\"hasNextAction()\">\r\n        <path\r\n          class=\"line-props\"\r\n          fill-rule=\"evenodd\"\r\n          d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\r\n        />\r\n      </svg>\r\n    </g>\r\n  </svg>\r\n  <div class=\"add-button cursor-pointer positioned-absolute\"\r\n       (click)=\"add()\"\r\n       [style.top]=\"addButtonTop\"\r\n       *ngIf=\"!viewMode\"\r\n       [style.left]=\"addButtonLeft\"\r\n       #addButton\r\n  >\r\n    <div class=\"drop-point-container\" *ngIf=\"showDropArea$ | async as showDropArea\">\r\n      <div class=\"drop-point-border\" [class.scale-1]=\"showDropArea\"></div>\r\n    </div>\r\n    <svg-icon src=\"./assets/img/custom/add-button.svg\"></svg-icon>\r\n  </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "StateIconComponent",
            "id": "component-StateIconComponent-6f80c1676fd701a711f78dfeb18b624e2ee0ad5561dbf13546df2b578859b105a0445221bcc39071487f5ecd389d15265c88e1737968244df080d544994a87c8",
            "file": "src/app/layout/common-layout/components/status-icon/state-icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-state-icon",
            "styleUrls": [
                "./state-icon.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./state-icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "16",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "succeeded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "textAfter",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "textClass",
                    "args": [],
                    "optional": false,
                    "returnType": "\"text-danger\" | \"text-success\"",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'app-state-icon',\n\ttemplateUrl: './state-icon.component.html',\n\tstyleUrls: ['./state-icon.component.css'],\n})\nexport class StateIconComponent {\n\t@Input() size = 16;\n\t@Input() succeeded: boolean;\n\t@Input() textAfter = '';\n\tconstructor() {}\n\ttextClass() {\n\t\tif (!this.succeeded) {\n\t\t\treturn 'text-danger';\n\t\t}\n\t\treturn 'text-success';\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ic{\r\n}\r\n.ic-text{\r\n  margin-left: 0.625rem;\r\n  font-weight: 500;\r\n}\r\n",
                    "styleUrl": "./state-icon.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "templateData": "<div style=\"display: table-cell;\">\r\n  <div style=\"display: inline;\">\r\n    <span *ngIf=\"!succeeded\"><svg-icon src=\"assets/img/custom/table/error.svg\"  [svgStyle]=\"{'width.px': size, 'height.px': size}\"></svg-icon></span>\r\n    <span  *ngIf=\"succeeded\"><svg-icon src=\"assets/img/custom/table/success.svg\"  [svgStyle]=\"{'width.px': size, 'height.px': size}\"></svg-icon></span>\r\n    <span *ngIf=\"textAfter\" class=\"ml-2 {{textClass()}}\">{{textAfter}}</span>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "StaticDropDownOptionsComponent",
            "id": "component-StaticDropDownOptionsComponent-1dbd53bf060e7501888a01d527f865f573483957848bf47ff759e53396c8c3f51a4986430c1358fbe9776fd010f83e9bad4b141e88a2d3495316e5b2784f99cd",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/dropdown-config-settings/static-drop-down-options/static-drop-down-options.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: StaticDropDownOptionsComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-static-drop-down-options",
            "styleUrls": [
                "./static-drop-down-options.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./static-drop-down-options.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allowCustomLabels",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "optionsForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "themeService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeService",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "valueControlsChanged$",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "addNewPair",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addPair",
                    "args": [
                        {
                            "name": "pair",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pair",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "customizeLabels",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dictionaryControlValueChanged",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "formatControlValue",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPair",
                    "args": [
                        {
                            "name": "indexOfPair",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "indexOfPair",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "change",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "change",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "touched",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "touched",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removePair",
                    "args": [
                        {
                            "name": "indexOfPair",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "indexOfPair",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setLabelsToValues",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "DropdownOption[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "DropdownOption[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, tap } from 'rxjs';\nimport { DropdownOption } from 'src/app/layout/common-layout/model/dynamic-controls/dropdown-options';\nimport { ThemeService } from 'src/app/layout/common-layout/service/theme.service';\n\n@Component({\n\tselector: 'app-static-drop-down-options',\n\ttemplateUrl: './static-drop-down-options.component.html',\n\tstyleUrls: ['./static-drop-down-options.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: StaticDropDownOptionsComponent,\n\t\t},\n\t],\n})\nexport class StaticDropDownOptionsComponent {\n\tallowCustomLabels: boolean = false;\n\toptionsForm: FormGroup;\n\tdisabled = false;\n\tvalueControlsChanged$: Observable<void>[] = [];\n\tconstructor(private fb: FormBuilder, public themeService: ThemeService) {\n\t\tthis.optionsForm = this.fb.group({ pairs: this.fb.array([]) });\n\t}\n\tonChange = ({}) => {};\n\n\tregisterOnChange(change: any): void {\n\t\tthis.onChange = change;\n\t}\n\tregisterOnTouched(touched: any): void {}\n\n\tget pairs() {\n\t\treturn this.optionsForm.get('pairs') as FormArray;\n\t}\n\n\taddNewPair() {\n\t\tthis.addPair({ label: '', value: '' });\n\t}\n\twriteValue(obj: DropdownOption[]) {\n\t\tthis.pairs.clear();\n\t\tthis.valueControlsChanged$ = [];\n\t\tif (obj) {\n\t\t\tobj.forEach(o => this.addPair(o));\n\t\t}\n\t\tthis.addNewPair();\n\t}\n\taddPair(pair: { label: string; value: string }) {\n\t\tconst labelControl = new FormControl(pair.label);\n\t\tconst valueControl = new FormControl(pair.value);\n\t\tconst pairGroup = this.fb.group({\n\t\t\tlabel: labelControl,\n\t\t\tvalue: valueControl,\n\t\t});\n\n\t\tif (!this.allowCustomLabels) {\n\t\t\tlabelControl.disable();\n\t\t\tconst valueChange$ = valueControl.valueChanges.pipe(\n\t\t\t\ttap(value => {\n\t\t\t\t\tlabelControl.setValue(value);\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis.valueControlsChanged$.push(valueChange$);\n\t\t}\n\t\tthis.pairs.push(pairGroup);\n\t\tthis.onChange(this.formatControlValue());\n\t}\n\n\tremovePair(indexOfPair: number) {\n\t\tif (this.pairs.length > 1) {\n\t\t\tthis.pairs.removeAt(indexOfPair);\n\t\t\tthis.onChange(this.formatControlValue());\n\t\t}\n\t}\n\tgetPair(indexOfPair: number) {\n\t\treturn this.pairs.at(indexOfPair) as FormGroup;\n\t}\n\n\tdictionaryControlValueChanged() {\n\t\tthis.onChange(this.formatControlValue());\n\t}\n\tsetDisabledState(disabled: boolean) {\n\t\tthis.disabled = disabled;\n\t\tif (disabled) {\n\t\t\tthis.pairs.disable();\n\t\t} else {\n\t\t\tthis.pairs.enable();\n\t\t}\n\t}\n\tformatControlValue() {\n\t\tlet values: DropdownOption[] = [];\n\t\tthis.pairs.controls.forEach(pairGroup => {\n\t\t\tif (pairGroup.get('label')?.value && pairGroup.get('value')?.value) {\n\t\t\t\tconst key = pairGroup.get('label')?.value;\n\t\t\t\tconst value = pairGroup.get('value')?.value;\n\t\t\t\tvalues.push({ label: key, value: value });\n\t\t\t}\n\t\t});\n\t\treturn values;\n\t}\n\n\tcustomizeLabels() {\n\t\tthis.allowCustomLabels = true;\n\t\tthis.pairs.controls.forEach(pairGroup => {\n\t\t\tconst labelControl = pairGroup.get('label');\n\t\t\tlabelControl?.enable();\n\t\t\tthis.valueControlsChanged$ = [];\n\t\t});\n\t}\n\n\tsetLabelsToValues() {\n\t\tthis.allowCustomLabels = false;\n\t\tthis.pairs.controls.forEach(pairGroup => {\n\t\t\tconst labelControl = pairGroup.get('label')!;\n\t\t\tconst valueControl = pairGroup.get('value')!;\n\t\t\tlabelControl.setValue(valueControl?.value);\n\t\t\tlabelControl.disable();\n\t\t\tconst valueChanges$ = valueControl.valueChanges.pipe(tap(() => labelControl?.setValue(valueControl?.value)));\n\t\t\tthis.valueControlsChanged$.push(valueChanges$);\n\t\t});\n\n\t\tthis.onChange(this.formatControlValue());\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.add-btn {\r\n  .add-icon {\r\n    fill: $description;\r\n    width: 0.9375rem;\r\n    height: 0.9375rem;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    .add-icon {\r\n      fill: $primary;\r\n    }\r\n  }\r\n  padding: 0;\r\n}\r\n\r\n.remove-btn {\r\n  .remove-icon {\r\n    width: 0.9375rem;\r\n    height: 0.9375rem;\r\n    fill: $description;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    .remove-icon {\r\n      fill: $danger;\r\n    }\r\n  }\r\n  padding: 0;\r\n}\r\n.pair-form-container {\r\n  gap: 1.25rem;\r\n}\r\n.pair-container {\r\n  gap: 0.9375rem;\r\n  margin-bottom: 0.625rem;\r\n}\r\n\r\n.table-headers-container {\r\n  display: grid;\r\n  grid-template-columns: 40% auto;\r\n  padding-left: 1.5625rem;\r\n  .label-header-container {\r\n    gap: 0.625rem;\r\n    .label-customization {\r\n      color: $primary;\r\n      cursor: pointer;\r\n      border-bottom: 1px dashed $primary;\r\n    }\r\n  }\r\n  &.no-buttons\r\n  {\r\n    grid-template-columns: 52% auto;\r\n    padding-left: 1.7625rem;\r\n  }\r\n  margin-bottom: 0.625rem;\r\n}\r\n\r\nlabel {\r\n  margin: 0px !important;\r\n  user-select: none;\r\n}\r\n\r\n.control-container {\r\n  background-color: $grayCard;\r\n  border-radius: 8px;\r\n  padding: 0.625rem;\r\n}\r\n\r\n\r\n.empty-spacer-instead-of-add-btn\r\n{\r\n\r\n  min-width: 2.0625rem;\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./static-drop-down-options.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "pairs": {
                    "name": "pairs",
                    "getSignature": {
                        "name": "pairs",
                        "type": "",
                        "returnType": "",
                        "line": 34
                    }
                }
            },
            "templateData": "<div class=\"control-container\">\r\n  <div class=\"table-headers-container\" [class.no-buttons]=\"disabled\">\r\n    <div>\r\n      <label class=\"dashed-underline-label\"  matTooltip=\"The actual value that will be assigned to the variable when the option is selected\"  matTooltipClass=\"dictonary-labels-tooltip\">Value</label>\r\n    </div>\r\n\r\n    <div class=\"d-flex label-header-container\"  >\r\n      <label class=\"dashed-underline-label\"  matTooltipClass=\"labels-tooltip\" matTooltip=\"The text that is displayed to the user to understand the option on the UI\">Label</label>\r\n      <span\r\n      *ngIf=\"!disabled\"\r\n        class=\"label-customization\"\r\n        (click)=\"allowCustomLabels ? setLabelsToValues() : customizeLabels()\"\r\n        [matTooltip]=\"allowCustomLabels? '':'Display the values themselves to the user instead of a friendly label' \"\r\n        matTooltipClass=\"labels-tooltip\"\r\n        >{{ allowCustomLabels ? \"Set to Values\" : \"Customize\" }}</span\r\n      >\r\n    </div>\r\n  </div>\r\n  <div class=\"pair-form-container d-flex flex-column\">\r\n    <ng-container *ngFor=\"let pair of pairs.controls; let idx = index; let isLast=last\">\r\n      <div\r\n        class=\"d-flex pair-container align-items-center\"\r\n        [formGroup]=\"getPair(idx)\"\r\n        *ngIf=\"!(isLast && disabled)\"\r\n      >\r\n        <span>{{ idx+1 }}.</span>\r\n        <input\r\n          name=\"value\"\r\n          class=\"form-control\"\r\n          formControlName=\"value\"\r\n          (input)=\"dictionaryControlValueChanged()\"\r\n          type=\"text\"\r\n          placeholder=\"Value\"\r\n        />\r\n        <input\r\n          name=\"label\"\r\n          class=\"form-control\"\r\n          formControlName=\"label\"\r\n          type=\"text\"\r\n          (input)=\"dictionaryControlValueChanged()\"\r\n          placeholder=\"label\"\r\n        />\r\n<ng-container *ngIf=\"!disabled\">\r\n  <app-icon-button\r\n  [color]=\"themeService.BODY_COLOR\"\r\n  (click)=\"addNewPair()\"\r\n  [hoverColor]=\"themeService.PRIMARY_COLOR\"\r\n  [iconFilename]=\"'plus.svg'\"\r\n  *ngIf=\"isLast\"\r\n  [disabled]=\"disabled\"\r\n></app-icon-button>\r\n\r\n<app-icon-button\r\n  [color]=\"themeService.BODY_COLOR\"\r\n  (click)=\"removePair(idx)\"\r\n  [hoverColor]=\"themeService.DANGER_COLOR\"\r\n  [iconFilename]=\"'trash.svg'\"\r\n  [disabled]=\"disabled\"\r\n></app-icon-button>\r\n<div  *ngIf=\"!isLast\" class=\"empty-spacer-instead-of-add-btn\"></div>\r\n</ng-container>\r\n\r\n\r\n        <ng-container *ngIf=\"valueControlsChanged$ && valueControlsChanged$[idx]|async\"></ng-container>\r\n\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "StepResultComponent",
            "id": "component-StepResultComponent-b8b003a383bcaa728c276290e7fff83f110c880fb33dc3e1b2d1501945e752e92d2f3a9023aecdfab0867c7a909d3914d59865ddf1f30aa5affc1964d22fc179",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/run-details/steps-results-list/step-result.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-step-result",
            "styleUrls": [
                "./step-result.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./step-result.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isTrigger",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "nestingLevel",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "selectedStepName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "stepNameAndResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "literal type",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "finishedBuilding",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "iteration$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<[] | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "iterationIndexControl",
                    "defaultValue": "new FormControl(1)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "iterationsAccordionList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[][]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "nestingLevelPadding",
                    "defaultValue": "'0px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "createStepResultsForDetailsAccordion",
                    "args": [
                        {
                            "name": "iteration",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type[]",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "iteration",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "indexSearchClicked",
                    "args": [
                        {
                            "name": "$event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectStepOrToggleExpansionPanel",
                    "args": [
                        {
                            "name": "$event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "expansionPanel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "expansionPanel",
                            "type": "MatExpansionPanel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AfterViewInit, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatExpansionPanel } from '@angular/material/expansion';\r\n\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { map, Observable, startWith } from 'rxjs';\r\nimport { ActionStatus } from 'src/app/layout/common-layout/model/enum/action-status';\r\nimport { StepResult } from 'src/app/layout/common-layout/model/instance-run.interface';\r\nimport { IterationDetailsService } from '../iteration-details.service';\r\nimport { FlowsActions } from '../../../../../store/action/flows.action';\r\n\r\n@Component({\r\n\tselector: 'app-step-result',\r\n\ttemplateUrl: './step-result.component.html',\r\n\tstyleUrls: ['./step-result.component.scss'],\r\n})\r\nexport class StepResultComponent implements OnInit, AfterViewInit, OnChanges {\r\n\t@Input() stepNameAndResult: { stepName: string; result: StepResult };\r\n\t@Input() selectedStepName: string | undefined;\r\n\t@Input() nestingLevel = 0;\r\n\t@Input() isTrigger = false;\r\n\tnestingLevelPadding: string = '0px';\r\n\tfinishedBuilding = false;\r\n\titerationIndexControl = new FormControl(1);\r\n\titeration$: Observable<{ stepName: string; result: StepResult }[] | undefined>;\r\n\titerationsAccordionList: { stepName: string; result: StepResult }[][] = [];\r\n\tconstructor(private store: Store, private iterationDetailsService: IterationDetailsService) {}\r\n\r\n\tngOnInit(): void {\r\n\t\tif (this.stepNameAndResult.result.iterations) {\r\n\t\t\tthis.stepNameAndResult.result.iterations.forEach(iteration => {\r\n\t\t\t\tthis.iterationsAccordionList.push(this.createStepResultsForDetailsAccordion(iteration));\r\n\t\t\t});\r\n\t\t\tthis.iteration$ = this.iterationIndexControl.valueChanges.pipe(\r\n\t\t\t\tstartWith(1),\r\n\t\t\t\tmap(newIndexString => {\r\n\t\t\t\t\tif (newIndexString === '') {\r\n\t\t\t\t\t\treturn this.iterationsAccordionList[0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst newIndex = Number.parseInt(newIndexString);\r\n\t\t\t\t\tif (!newIndex) {\r\n\t\t\t\t\t\treturn undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.iterationsAccordionList[newIndex - 1];\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\tthis.nestingLevelPadding = `${this.nestingLevel * 25}px`;\r\n\t}\r\n\tngAfterViewInit(): void {\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.finishedBuilding = true;\r\n\t\t}, 1);\r\n\t}\r\n\tngOnChanges(changes: SimpleChanges): void {\r\n\t\tif (\r\n\t\t\tthis.selectedStepName === this.stepNameAndResult.stepName &&\r\n\t\t\tthis.iterationDetailsService.currentStepResult$.value !== this.stepNameAndResult.result\r\n\t\t) {\r\n\t\t\tthis.iterationDetailsService.currentStepResult$.next(this.stepNameAndResult.result);\r\n\t\t}\r\n\t}\r\n\tget ActionStatus() {\r\n\t\treturn ActionStatus;\r\n\t}\r\n\r\n\tselectStepOrToggleExpansionPanel($event: MouseEvent, expansionPanel: MatExpansionPanel) {\r\n\t\tif (this.selectedStepName !== this.stepNameAndResult.stepName) {\r\n\t\t\tthis.store.dispatch(\r\n\t\t\t\tFlowsActions.selectStepByName({\r\n\t\t\t\t\tstepName: this.stepNameAndResult.stepName,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} else if (expansionPanel) {\r\n\t\t\texpansionPanel.toggle();\r\n\t\t}\r\n\r\n\t\t$event.stopPropagation();\r\n\t}\r\n\r\n\tcreateStepResultsForDetailsAccordion(iteration: { [key: string]: StepResult }): {\r\n\t\tresult: StepResult;\r\n\t\tstepName: string;\r\n\t}[] {\r\n\t\tconst iterationStepsNames = Object.keys(iteration);\r\n\t\treturn iterationStepsNames.map(stepName => {\r\n\t\t\treturn {\r\n\t\t\t\tstepName: stepName,\r\n\t\t\t\tresult: iteration[stepName],\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\tindexSearchClicked($event: MouseEvent) {\r\n\t\t$event.stopPropagation();\r\n\t\tthis.store.dispatch(\r\n\t\t\tFlowsActions.selectStepByName({\r\n\t\t\t\tstepName: this.stepNameAndResult.stepName,\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.step-result-accordion {\r\n  .mat-expansion-panel-header-title {\r\n    margin: 0;\r\n  }\r\n\r\n  .mat-expansion-panel-spacing {\r\n    margin: 0px;\r\n  }\r\n\r\n  .mat-expansion-panel-header {\r\n    color: $body;\r\n\r\n    font-weight: 500;\r\n    font-size: 0.875rem;\r\n    line-height: 1.375rem;\r\n    padding: 0px 0px;\r\n    height: unset;\r\n    .mat-content {\r\n      display: block;\r\n    }\r\n\r\n    &.selected-step {\r\n      background-color: $graySelect;\r\n      font-weight: 700;\r\n      .step-icon {\r\n        fill: $body;\r\n      }\r\n      .loop-caret {\r\n        fill: $body;\r\n      }\r\n    }\r\n    &:hover {\r\n      background-color: $graySelect;\r\n    }\r\n    .mat-expansion-panel-header-title {\r\n      padding: 0.9375rem 1rem;\r\n    }\r\n  }\r\n\r\n  .mat-accordion .mat-expansion-panel {\r\n    border-radius: 0px;\r\n    box-shadow: unset !important;\r\n  }\r\n  .icon-padding {\r\n    padding-right: 0.375rem;\r\n  }\r\n  .iteration-index-control {\r\n    width: 1.875rem;\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    padding: 0.375rem 0.625rem;\r\n    border-radius: 4px;\r\n  }\r\n  .nested-level-padding {\r\n    max-width: 100px;\r\n  }\r\n\r\n  .expanded {\r\n    .loop-caret {\r\n      transform: rotate(0deg);\r\n    }\r\n  }\r\n  .loop-caret {\r\n    width: 10px;\r\n    height: 10px;\r\n    fill: $add-piece;\r\n    transform: rotate(-45deg);\r\n    transition: all 225ms cubic-bezier(0.35, 0, 0.25, 1);\r\n  }\r\n  .step-icon {\r\n    width: 20px;\r\n    height: 20px;\r\n    fill: $add-piece;\r\n    transition: all 225ms cubic-bezier(0.35, 0, 0.25, 1);\r\n  }\r\n  .icon-and-name-gap {\r\n    gap: 10px;\r\n  }\r\n  .icons-gap {\r\n    gap: 5px;\r\n  }\r\n}\r\n.opacity-0 {\r\n  opacity: 0;\r\n}\r\n",
                    "styleUrl": "./step-result.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "iterationDetailsService",
                        "type": "IterationDetailsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "iterationDetailsService",
                        "type": "IterationDetailsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "AfterViewInit",
                "OnChanges"
            ],
            "accessors": {
                "ActionStatus": {
                    "name": "ActionStatus",
                    "getSignature": {
                        "name": "ActionStatus",
                        "type": "",
                        "returnType": "",
                        "line": 64
                    }
                }
            },
            "templateData": "<div class=\"step-result-accordion\" [class.opacity-0]=\"!finishedBuilding\">\r\n  <mat-accordion>\r\n    <mat-expansion-panel\r\n      hideToggle\r\n      [expanded]=\"iteration$ | async\"\r\n      #expansionPanelTemplate\r\n    >\r\n      <mat-expansion-panel-header\r\n        [class.selected-step]=\"selectedStepName === stepNameAndResult.stepName\"\r\n      >\r\n        <mat-panel-title\r\n          (click)=\"\r\n            selectStepOrToggleExpansionPanel($event, expansionPanelTemplate)\r\n          \"\r\n        >\r\n          <div class=\"d-flex align-items-center w-100\">\r\n            <div\r\n              class=\"nested-level-padding\"\r\n              [style.width]=\"nestingLevelPadding\"\r\n            ></div>\r\n            <div class=\"d-flex icon-and-name-gap\">\r\n              <div\r\n                class=\"d-flex icons-gap\"\r\n                [class.expanded]=\"expansionPanelTemplate.expanded\"\r\n              >\r\n                <svg-icon\r\n                  src=\"assets/img/custom/debug-icons/caret.svg\"\r\n                  *ngIf=\"iteration$ | async\"\r\n                  [applyClass]=\"true\"\r\n                  class=\"loop-caret\"\r\n                ></svg-icon>\r\n                <ng-container *ngTemplateOutlet=\"stepIcon\"></ng-container>\r\n              </div>\r\n\r\n              {{ stepNameAndResult.stepName }}\r\n            </div>\r\n\r\n            <div #spacer class=\"flex-grow-1\"></div>\r\n            <ng-container\r\n              *ngIf=\"\r\n                iterationsAccordionList.length === 0;\r\n                else iterationIndexTemplate\r\n              \"\r\n            >\r\n              <svg-icon\r\n                *ngIf=\"\r\n                  ActionStatus.SUCCEEDED === stepNameAndResult.result.status\r\n                \"\r\n                matTooltip=\"Step succeeded\"\r\n                src=\"assets/img/custom/success-step-result.svg\"\r\n                [svgStyle]=\"{ width: 21, height: 20 }\"\r\n                class=\"icon-padding\"\r\n              ></svg-icon>\r\n              <svg-icon\r\n                *ngIf=\"ActionStatus.FAILED === stepNameAndResult.result.status\"\r\n                src=\"assets/img/custom/failure-step-result.svg\"\r\n                [svgStyle]=\"{ width: 21, height: 20 }\"\r\n                class=\"icon-padding\"\r\n                matTooltip=\"Step failed\"\r\n              ></svg-icon>\r\n            </ng-container>\r\n            <ng-template #iterationIndexTemplate>\r\n              Iteration: &nbsp;\r\n\r\n              <input\r\n                type=\"number\"\r\n                class=\"form-control iteration-index-control text-center\"\r\n                [formControl]=\"iterationIndexControl\"\r\n                (click)=\"indexSearchClicked($event)\"\r\n              />\r\n            </ng-template>\r\n          </div>\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <ng-container *ngIf=\"iteration$ | async as selectedIteration\">\r\n        <app-iteration-accordion\r\n          [IterationResults]=\"selectedIteration\"\r\n          [selectedStepName]=\"selectedStepName\"\r\n          [nestingLevel]=\"nestingLevel + 1\"\r\n        >\r\n        </app-iteration-accordion>\r\n      </ng-container>\r\n    </mat-expansion-panel>\r\n  </mat-accordion>\r\n</div>\r\n\r\n<ng-template #stepIcon>\r\n  <svg-icon\r\n    src=\"assets/img/custom/debug-icons/loop.svg\"\r\n    *ngIf=\"iterationsAccordionList.length > 0\"\r\n    [applyClass]=\"true\"\r\n    class=\"step-icon\"\r\n  ></svg-icon>\r\n\r\n  <svg-icon\r\n    src=\"assets/img/custom/debug-icons/action.svg\"\r\n    *ngIf=\"!isTrigger && iterationsAccordionList.length === 0\"\r\n    [applyClass]=\"true\"\r\n    class=\"step-icon\"\r\n  ></svg-icon>\r\n\r\n  <svg-icon\r\n    src=\"assets/img/custom/debug-icons/trigger.svg\"\r\n    *ngIf=\"isTrigger\"\r\n    [applyClass]=\"true\"\r\n    class=\"step-icon\"\r\n  ></svg-icon>\r\n</ng-template>\r\n\r\n"
        },
        {
            "name": "StepTypeListComponent",
            "id": "component-StepTypeListComponent-4b41dfe8627e874edd2af0497a552259192113f3833c239042445e6db1c80e507962feba98aa0d87ef535264bad8b1746b957b0d9388500610d56640a374cd75",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-list/step-type-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-step-type-list",
            "styleUrls": [
                "./step-type-list.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./step-type-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "typesList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "FlowItemDetails[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "typeSelected",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter<FlowItemDetails>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FlowItemDetails } from '../step-type-item/flow-item-details';\n\n@Component({\n\tselector: 'app-step-type-list',\n\ttemplateUrl: './step-type-list.component.html',\n\tstyleUrls: ['./step-type-list.component.css'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StepTypeListComponent {\n\t@Input() typesList: FlowItemDetails[];\n\t@Output() typeSelected: EventEmitter<FlowItemDetails> = new EventEmitter();\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".list-container {\r\n  padding: 7.5px 0px;\r\n  margin: 5px 20px;\r\n  height: calc(100vh - 204px) !important;\r\n}\r\n\r\n.list-item {\r\n  margin: 7.5px 0px;\r\n}\r\n",
                    "styleUrl": "./step-type-list.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "templateData": "<div class=\"d-column flex-grow-1 list-container\" *ngIf=\"typesList.length > 0\">\r\n  <div class=\"list-item\" *ngFor=\"let flowItemDetails of typesList\">\r\n    <app-step-type-item\r\n      [flowItemDetails]=\"flowItemDetails\"\r\n      (click)=\"typeSelected.emit(flowItemDetails)\"\r\n    >\r\n    </app-step-type-item>\r\n  </div>\r\n</div>\r\n<div\r\n  class=\"flex-grow-1 d-column justify-content-center align-items-center\"\r\n  *ngIf=\"typesList.length === 0\"\r\n>\r\n  <svg-icon src=\"assets/img/custom/variables-list.svg\"></svg-icon>\r\n  <p class=\"text-description\">No collections yet!</p>\r\n</div>\r\n"
        },
        {
            "name": "StepTypeSidebarComponent",
            "id": "component-StepTypeSidebarComponent-adffe133f04c90289720067d08b38cfeab1ceb4993f65a962c7973f9ef9533d80c2cbc3df73b3d64d0e04b39e8b6239a5a3c1dd0c05e99ee573219eca49efa65",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-step-type-sidebar",
            "styleUrls": [
                "./step-type-sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./step-type-sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "showTriggers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_showTriggers",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "flowItemDetailsLoaded$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "sideBarDisplayName",
                    "defaultValue": "'Flow Steps'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "tabsAndTheirLists",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "triggersDetails$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<FlowItemDetails[]>",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "methodsClass": [
                {
                    "name": "closeSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "constructStepSettings",
                    "args": [
                        {
                            "name": "actionType",
                            "type": "ActionType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pieceType",
                            "type": "FlowItemDetails",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ pieceVersionId: any; flowVersionId: any; input: {}; items?: undefined; output?: undefined; operation?: undefined; scope?: undefined; key?: undefined; } | { input: {}; pieceVersionId?: undefined; flowVersionId?: undefined; ... 4 more ...; key?: undefined; } | { ...; } | { ...; } | { ...; } | { ...; }",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "actionType",
                            "type": "ActionType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pieceType",
                            "type": "FlowItemDetails",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dispatchAddStep",
                    "args": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTypeSelected",
                    "args": [
                        {
                            "name": "flowItemDetails",
                            "type": "FlowItemDetails",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flowItemDetails",
                            "type": "FlowItemDetails",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "populateTabsAndTheirLists",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "replaceTrigger",
                    "args": [
                        {
                            "name": "triggerDetails",
                            "type": "FlowItemDetails",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "triggerDetails",
                            "type": "FlowItemDetails",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n\tdefaultCronJobForScheduleTrigger,\n\tgetDefaultDisplayNameForPiece,\n\tgetDisplayNameForTrigger,\n} from 'src/app/layout/common-layout/utils';\nimport { Store } from '@ngrx/store';\nimport { Observable, take, tap } from 'rxjs';\nimport { FlowItemDetails } from './step-type-item/flow-item-details';\nimport { FlowsActions } from '../../../../store/action/flows.action';\nimport { RightSideBarType } from '../../../../../common-layout/model/enum/right-side-bar-type.enum';\nimport { Action } from '../../../../../common-layout/model/flow-builder/actions/action.interface';\nimport { Trigger } from '../../../../../common-layout/model/flow-builder/trigger/trigger.interface';\nimport { TriggerType } from '../../../../../common-layout/model/enum/trigger-type.enum';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { BuilderSelectors } from 'src/app/layout/flow-builder/store/selector/flow-builder.selector';\nimport { FlowVersion } from 'src/app/layout/common-layout/model/flow-version.class';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { StorageOperation } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum';\nimport { StorageScope } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum';\nimport { CodeService } from 'src/app/layout/flow-builder/service/code.service';\nimport { StepCacheKey } from 'src/app/layout/flow-builder/service/artifact-cache-key';\n\n@Component({\n\tselector: 'app-step-type-sidebar',\n\ttemplateUrl: './step-type-sidebar.component.html',\n\tstyleUrls: ['./step-type-sidebar.component.scss'],\n})\nexport class StepTypeSidebarComponent implements OnInit {\n\t_showTriggers = false;\n\t@Input() set showTriggers(shouldShowTriggers) {\n\t\tthis._showTriggers = shouldShowTriggers;\n\t\tif (this._showTriggers) {\n\t\t\tthis.triggersDetails$ = this.store.select(BuilderSelectors.selectFlowItemDetailsForTriggers);\n\t\t\tthis.sideBarDisplayName = 'Triggers';\n\t\t} else {\n\t\t\tif (this.tabsAndTheirLists.length == 0) {\n\t\t\t\tthis.populateTabsAndTheirLists();\n\t\t\t}\n\t\t\tthis.sideBarDisplayName = 'Flow Steps';\n\t\t}\n\t}\n\n\tsideBarDisplayName = 'Flow Steps';\n\ttabsAndTheirLists: {\n\t\tdisplayName: string;\n\t\tlist$: Observable<FlowItemDetails[]>;\n\t}[] = [];\n\n\tflowItemDetailsLoaded$: Observable<boolean>;\n\ttriggersDetails$: Observable<FlowItemDetails[]>;\n\tconstructor(private store: Store, private codeService: CodeService) {}\n\n\tngOnInit(): void {\n\t\tthis.flowItemDetailsLoaded$ = this.store\n\t\t\t.select(BuilderSelectors.selectAllFlowItemsDetailsLoadedState)\n\t\t\t.pipe(tap(console.log));\n\t}\n\n\tpopulateTabsAndTheirLists() {\n\t\tconst coreItemsDetails$ = this.store.select(BuilderSelectors.selectCoreFlowItemsDetails);\n\t\tconst connectersItemsDetails$ = this.store.select(BuilderSelectors.selectFlowItemsDetailsForConnectors);\n\t\tconst userCollectionsItemsDetails$ = this.store.select(BuilderSelectors.selectFlowItemsDetialsForUserCollections);\n\t\tthis.tabsAndTheirLists.push({\n\t\t\tdisplayName: 'Core',\n\t\t\tlist$: coreItemsDetails$,\n\t\t});\n\t\tthis.tabsAndTheirLists.push({\n\t\t\tdisplayName: 'Apps',\n\t\t\tlist$: connectersItemsDetails$,\n\t\t});\n\t\tthis.tabsAndTheirLists.push({\n\t\t\tdisplayName: 'My Collections',\n\t\t\tlist$: userCollectionsItemsDetails$,\n\t\t});\n\t}\n\n\tcloseSidebar() {\n\t\tthis.replaceTrigger;\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.setRightSidebar({\n\t\t\t\tsidebarType: RightSideBarType.NONE,\n\t\t\t\tprops: {},\n\t\t\t})\n\t\t);\n\t}\n\n\tonTypeSelected(flowItemDetails: FlowItemDetails) {\n\t\tthis.store\n\t\t\t.select(BuilderSelectors.selectCurrentFlow)\n\t\t\t.pipe(take(1))\n\t\t\t.subscribe(flow => {\n\t\t\t\tif (flow == undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this._showTriggers) {\n\t\t\t\t\tthis.replaceTrigger(flowItemDetails);\n\t\t\t\t} else {\n\t\t\t\t\tconst stepName = FlowVersion.clone(flow.lastVersion).findAvailableName('step');\n\t\t\t\t\tlet settings: any = this.constructStepSettings(flowItemDetails.type as ActionType, flowItemDetails);\n\t\t\t\t\tlet action: Action = {\n\t\t\t\t\t\ttype: flowItemDetails.type as ActionType,\n\t\t\t\t\t\tname: stepName,\n\t\t\t\t\t\tdisplayName: getDefaultDisplayNameForPiece(flowItemDetails.type as ActionType, flowItemDetails.name),\n\t\t\t\t\t\tsettings: settings,\n\t\t\t\t\t\tvalid: flowItemDetails.type !== ActionType.STORAGE && flowItemDetails.type !== ActionType.LOOP_ON_ITEMS,\n\t\t\t\t\t\tyOffsetFromLastNode: 0,\n\t\t\t\t\t};\n\t\t\t\t\tif (flowItemDetails.type === ActionType.CODE) {\n\t\t\t\t\t\tthis.codeService.getOrCreateStepArtifact(new StepCacheKey(flow.id, stepName), '');\n\t\t\t\t\t}\n\t\t\t\t\tthis.dispatchAddStep(action);\n\t\t\t\t}\n\t\t\t});\n\t}\n\tdispatchAddStep(action: Action) {\n\t\tthis.store.dispatch(FlowsActions.addStep({ newAction: action }));\n\t}\n\n\tprivate replaceTrigger(triggerDetails: FlowItemDetails) {\n\t\tlet trigger: Trigger = {\n\t\t\ttype: triggerDetails.type as TriggerType,\n\t\t\tname: 'trigger',\n\t\t\tdisplayName: getDisplayNameForTrigger(triggerDetails.type as TriggerType),\n\t\t\tsettings: {},\n\t\t\tyOffsetFromLastNode: 0,\n\t\t\tvalid: false,\n\t\t};\n\t\tif (trigger.type == TriggerType.SCHEDULE) {\n\t\t\ttrigger.settings.cronExpression = defaultCronJobForScheduleTrigger;\n\t\t\ttrigger.valid = true;\n\t\t}\n\t\tif (trigger.type === TriggerType.MANUAL) {\n\t\t\ttrigger.valid = true;\n\t\t}\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.replaceTrigger({\n\t\t\t\tnewTrigger: trigger,\n\t\t\t})\n\t\t);\n\t}\n\tconstructStepSettings(actionType: ActionType, pieceType: FlowItemDetails) {\n\t\tswitch (actionType) {\n\t\t\tcase ActionType.REMOTE_FLOW: {\n\t\t\t\tconst flowVersionId =\n\t\t\t\t\tpieceType.extra?.flowsVersionIds.length == 0 ? undefined : pieceType.extra?.flowsVersionIds[0];\n\t\t\t\treturn {\n\t\t\t\t\tpieceVersionId: pieceType.extra?.pieceVersionId,\n\t\t\t\t\tflowVersionId: flowVersionId,\n\t\t\t\t\tinput: {},\n\t\t\t\t};\n\t\t\t}\n\t\t\tcase ActionType.CODE: {\n\t\t\t\treturn {\n\t\t\t\t\tinput: {},\n\t\t\t\t};\n\t\t\t}\n\t\t\tcase ActionType.LOOP_ON_ITEMS: {\n\t\t\t\treturn {\n\t\t\t\t\titems: '',\n\t\t\t\t};\n\t\t\t}\n\t\t\tcase ActionType.RESPONSE: {\n\t\t\t\treturn {\n\t\t\t\t\toutput: {},\n\t\t\t\t};\n\t\t\t}\n\t\t\tcase ActionType.STORAGE: {\n\t\t\t\treturn {\n\t\t\t\t\toperation: StorageOperation.GET,\n\t\t\t\t\tscope: StorageScope.INSTANCE,\n\t\t\t\t\tkey: '',\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {};\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".loading-container-for-flow-items-list {\r\n  height: calc(100vh - 204px) !important;\r\n}\r\n",
                    "styleUrl": "./step-type-sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 50,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "codeService",
                        "type": "CodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "showTriggers": {
                    "name": "showTriggers",
                    "setSignature": {
                        "name": "showTriggers",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "shouldShowTriggers",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 30,
                        "jsdoctags": [
                            {
                                "name": "shouldShowTriggers",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"d-column piece-type-sidebar\">\r\n  <div class=\"px-3 pt-3\">\r\n    <app-sidebar-header\r\n      (closeClicked)=\"closeSidebar()\"\r\n      [title]=\"sideBarDisplayName\"\r\n    ></app-sidebar-header>\r\n  </div>\r\n\r\n  <ng-container *ngIf=\"_showTriggers; else tabsTemplate\">\r\n    <ng-container *ngIf=\"triggersDetails$ | async as list; else loading\">\r\n      <app-step-type-list\r\n        [typesList]=\"list\"\r\n        (typeSelected)=\"onTypeSelected($event)\"\r\n      >\r\n      </app-step-type-list>\r\n    </ng-container>\r\n  </ng-container>\r\n</div>\r\n\r\n<ng-template #tabsTemplate>\r\n  <ng-container *ngIf=\"flowItemDetailsLoaded$ | async; else loading\">\r\n    <mat-tab-group #tabGroup>\r\n      <mat-tab *ngFor=\"let tab of tabsAndTheirLists; let i = index\">\r\n        <ng-template mat-tab-label>\r\n          <div\r\n            class=\"category-label\"\r\n            [class.category-label-active]=\"tabGroup.selectedIndex === i\"\r\n          >\r\n            {{ tab.displayName }}\r\n          </div>\r\n        </ng-template>\r\n        <ng-container *ngIf=\"tab.list$ | async as list; else loading\">\r\n          <app-step-type-list\r\n            [typesList]=\"list\"\r\n            (typeSelected)=\"onTypeSelected($event)\"\r\n          >\r\n          </app-step-type-list>\r\n        </ng-container>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </ng-container>\r\n</ng-template>\r\n<ng-template #loading>\r\n  <div\r\n    class=\"loading-container-for-flow-items-list justify-content-center align-items-center d-column\"\r\n  >\r\n    <app-loading-icon></app-loading-icon>\r\n  </div>\r\n</ng-template>\r\n\r\n"
        },
        {
            "name": "StepTypItemComponent",
            "id": "component-StepTypItemComponent-f9f1afe9415ae3a82f94aab72bc38172c81bd99421271bbc1319157cf67c6d35f91fda675fb7f397daf5aaa0dba52547d312bfd96d5d6830bddadb476e00a162",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-item/step-type-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-step-type-item",
            "styleUrls": [
                "./step-type-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./step-type-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "clickable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "flowItemDetails",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "FlowItemDetails",
                    "decorators": []
                },
                {
                    "name": "flowItemDetails$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Observable<FlowItemDetails | undefined>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faInfo",
                    "defaultValue": "faInfoCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "hover",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FlowItemDetails } from './flow-item-details';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'app-step-type-item',\n\ttemplateUrl: './step-type-item.component.html',\n\tstyleUrls: ['./step-type-item.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StepTypItemComponent {\n\t@Input() clickable = true;\n\t@Input() flowItemDetails: FlowItemDetails;\n\t@Input() flowItemDetails$: Observable<FlowItemDetails | undefined>;\n\tfaInfo = faInfoCircle;\n\thover: boolean = false;\n\tconstructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.item-container {\r\n  padding: 0.9375rem 0.9375rem 0.9375rem 0.9375rem;\r\n  border: 1px solid $line;\r\n  border-radius: 5px;\r\n  background: $white;\r\n  transition: background-color 200ms ease;\r\n  position: relative;\r\n}\r\n\r\n.type-label {\r\n  color: $body;\r\n  overflow: hidden;\r\n}\r\n\r\n.description {\r\n  color: $description;\r\n  overflow: hidden;\r\n}\r\n\r\n.logo-container {\r\n  min-width: 48px;\r\n  max-width: 48px;\r\n  min-height: 48px;\r\n  max-height: 48px;\r\n}\r\n\r\n.type-logo {\r\n  width: 48px;\r\n  height: 48px;\r\n  object-fit: contain;\r\n  border-radius: 3px;\r\n}\r\n\r\n.type-text-container {\r\n  margin-left: 15px;\r\n}\r\n\r\n.info-icon {\r\n  position: absolute;\r\n  right: 22px;\r\n  top: 17px;\r\n}\r\n\r\n.loading-container {\r\n  height: 4.125rem;\r\n}\r\n",
                    "styleUrl": "./step-type-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "templateData": "<div\r\n  class=\"item-container d-flex align-items-center\"\r\n  (mouseenter)=\"this.hover = true\"\r\n  (mouseleave)=\"this.hover = false\"\r\n  [style]=\"\r\n    (hover && clickable\r\n      ? '  background: #FAFAFA; '\r\n      : '  background: #FFFFFF; ') + (clickable ? 'cursor: pointer;' : '')\r\n  \"\r\n>\r\n  <ng-container *ngIf=\"flowItemDetails; else observableFlowItemDetails\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"\r\n        flowItemDetailsBody;\r\n        context: { $implicit: flowItemDetails }\r\n      \"\r\n    ></ng-container>\r\n  </ng-container>\r\n  <ng-template #observableFlowItemDetails>\r\n    <ng-container *ngIf=\"flowItemDetails$ | async as detailsResult;else loading\">\r\n      <ng-container\r\n      *ngTemplateOutlet=\"\r\n        flowItemDetailsBody;\r\n        context: { $implicit: detailsResult }\r\n      \"\r\n    ></ng-container>\r\n    </ng-container>\r\n  </ng-template>\r\n</div>\r\n\r\n<ng-template #flowItemDetailsBody let-flowItemDetails>\r\n  <div class=\"logo-container\">\r\n    <img class=\"type-logo\" [src]=\"flowItemDetails.logoUrl\" />\r\n  </div>\r\n  <div class=\"type-text-container d-column flex-grow-1\">\r\n    <div class=\"type-label\">{{ flowItemDetails.name }}</div>\r\n    <div class=\"description\">{{ flowItemDetails.description }}</div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #loading>\r\n  <div class=\"d-flex align-items-center justify-content-center flex-grow-1 loading-container\">\r\n    <app-loading-icon></app-loading-icon>\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "StorageStepInputFormComponent",
            "id": "component-StorageStepInputFormComponent-f2ca88a8099880fce622d7a39b8887264b05e51532dc75b068479f1d6aa1585550cb4cabe1e78da9cc8827cf9aea7676619a03a254fbc0eee6a713615e6a9630",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/storage-step-input-form/storage-step-input-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: StorageStepInputFormComponent,\n}",
                    "type": "component"
                },
                {
                    "name": "{\n    provide: NG_VALIDATORS, multi: true, useExisting: StorageStepInputFormComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-storage-step-input-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./storage-step-input-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "onTouch",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "operationChanged$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<StorageOperation>",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "operationDropdownOptions",
                    "defaultValue": "[\n\t\t{ label: 'GET', value: StorageOperation.GET },\n\t\t{ label: 'PUT', value: StorageOperation.PUT },\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownOption[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "storageStepForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "updateComponentValue$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any>",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "methodsClass": [
                {
                    "name": "getControl",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isOperationSelected",
                    "args": [
                        {
                            "name": "item",
                            "type": "DropdownOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "DropdownOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "operationControlChecker",
                    "args": [
                        {
                            "name": "operation",
                            "type": "StorageOperation",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "operation",
                            "type": "StorageOperation",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setUpListenerToOperationControl",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "{ invalid: boolean; }",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "obj",
                            "type": "InputFormsSchema",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "InputFormsSchema",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n\tControlValueAccessor,\n\tFormBuilder,\n\tFormControl,\n\tFormGroup,\n\tNG_VALIDATORS,\n\tNG_VALUE_ACCESSOR,\n\tValidators,\n} from '@angular/forms';\nimport { Observable, tap } from 'rxjs';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\nimport { DropdownOption } from 'src/app/layout/common-layout/model/dynamic-controls/dropdown-options';\nimport { ActionType } from 'src/app/layout/common-layout/model/enum/action-type.enum';\nimport { StorageOperation } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum';\nimport { StorageScope } from 'src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum';\nimport { InputFormsSchema, StoragreStepInputFormSchema } from '../input-forms-schema';\n\n@Component({\n\tselector: 'app-storage-step-input-form',\n\ttemplateUrl: './storage-step-input-form.component.html',\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tmulti: true,\n\t\t\tuseExisting: StorageStepInputFormComponent,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tmulti: true,\n\t\t\tuseExisting: StorageStepInputFormComponent,\n\t\t},\n\t],\n\tanimations: [fadeInUp400ms],\n})\nexport class StorageStepInputFormComponent implements ControlValueAccessor {\n\toperationDropdownOptions: DropdownOption[] = [\n\t\t{ label: 'GET', value: StorageOperation.GET },\n\t\t{ label: 'PUT', value: StorageOperation.PUT },\n\t];\n\toperationChanged$: Observable<StorageOperation>;\n\tstorageStepForm: FormGroup;\n\tonChange = (value: InputFormsSchema) => {};\n\tonTouch = () => {};\n\tupdateComponentValue$: Observable<any>;\n\tconstructor(private formBuilder: FormBuilder) {\n\t\tthis.storageStepForm = this.formBuilder.group({\n\t\t\toperation: new FormControl('', Validators.required),\n\t\t\tkey: new FormControl('', Validators.required),\n\t\t\tvalue: new FormControl('', Validators.required),\n\t\t});\n\n\t\tthis.setUpListenerToOperationControl();\n\t\tthis.updateComponentValue$ = this.storageStepForm.valueChanges.pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.onChange({\n\t\t\t\t\t...this.storageStepForm.value,\n\t\t\t\t\tscope: StorageScope.INSTANCE,\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\t}\n\twriteValue(obj: InputFormsSchema): void {\n\t\tif (obj.type === ActionType.STORAGE) {\n\t\t\tthis.storageStepForm.setValue({ operation: '', key: '', value: '' });\n\t\t\tthis.storageStepForm.patchValue(obj);\n\t\t\tthis.operationControlChecker((obj as StoragreStepInputFormSchema).operation);\n\t\t}\n\t}\n\tregisterOnChange(fn: any): void {\n\t\tthis.onChange = fn;\n\t}\n\tregisterOnTouched(fn: any): void {\n\t\tthis.onTouch = fn;\n\t}\n\tsetUpListenerToOperationControl() {\n\t\tconst operationControl = this.storageStepForm.get('operation')!;\n\n\t\tthis.operationChanged$ = operationControl.valueChanges.pipe(\n\t\t\ttap(operation => {\n\t\t\t\tthis.operationControlChecker(operation);\n\t\t\t})\n\t\t);\n\t}\n\n\toperationControlChecker(operation: StorageOperation) {\n\t\tconst valueControl = this.storageStepForm.get('value')!;\n\t\tif (operation === StorageOperation.GET) {\n\t\t\tvalueControl.disable();\n\t\t} else if (operation === StorageOperation.PUT) {\n\t\t\tvalueControl.enable();\n\t\t}\n\t}\n\tvalidate() {\n\t\tif (this.storageStepForm.invalid) {\n\t\t\treturn { invalid: true };\n\t\t}\n\t\treturn null;\n\t}\n\n\tisOperationSelected(item: DropdownOption) {\n\t\treturn this.storageStepForm.get('operation')!.value === item.value;\n\t}\n\n\tgetControl(name: string) {\n\t\treturn this.storageStepForm.get(name)!;\n\t}\n\tsetDisabledState?(isDisabled: boolean): void {\n\t\tif (isDisabled) {\n\t\t\tthis.storageStepForm.disable();\n\t\t} else if (this.storageStepForm.disabled) {\n\t\t\tthis.storageStepForm.enable();\n\t\t}\n\t}\n\n\tget StorageOperation() {\n\t\treturn StorageOperation;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "StorageOperation": {
                    "name": "StorageOperation",
                    "getSignature": {
                        "name": "StorageOperation",
                        "type": "",
                        "returnType": "",
                        "line": 116
                    }
                }
            },
            "templateData": "<form [formGroup]=\"storageStepForm\" class=\"ng-submitted\">\r\n  <div class=\"d-flex flex-column accordion-form-controls-container\">\r\n    <div>\r\n      <label for=\"operation\">Operation</label>\r\n      <ng-select\r\n        id=\"operation\"\r\n        formControlName=\"operation\"\r\n        [items]=\"operationDropdownOptions\"\r\n        bindLabel=\"label\"\r\n        bindValue=\"value\"\r\n        [clearable]=\"false\"\r\n        [searchable]=\"false\"\r\n      >\r\n        <ng-template ng-option-tmp let-item=\"item\">\r\n          <app-ng-select-item-template\r\n            [item]=\"item\"\r\n            [isSelected]=\"isOperationSelected(item)\"\r\n          ></app-ng-select-item-template>\r\n        </ng-template>\r\n      </ng-select>\r\n    </div>\r\n    <div>\r\n      <label required for=\"key\">Key</label>\r\n      <input class=\"form-control\" type=\"text\" id=\"key\" formControlName=\"key\" />\r\n      <p @fadeInUp *ngIf=\"getControl('key').invalid\" class=\"invalid-input\">\r\n        Key is required.\r\n      </p>\r\n    </div>\r\n    <div *ngIf=\"getControl('operation').value === StorageOperation.PUT\" >\r\n      <label [attr.required]=\"getControl('value').enabled? true:null\" for=\"value\">Value</label>\r\n      <input id=\"value\" class=\"form-control\" type=\"text\" formControlName=\"value\" />\r\n    </div>\r\n    <p @fadeInUp *ngIf=\"getControl('value').invalid\" class=\"invalid-input\">\r\n      Value is required.\r\n    </p>\r\n    <div>\r\n      <label >Scope</label>\r\n      <input class=\"form-control\" type=\"text\" value=\"Instance\" disabled/>\r\n    </div>\r\n  </div>\r\n\r\n</form>\r\n\r\n<ng-container *ngIf=\"updateComponentValue$ | async\"></ng-container>\r\n<ng-container *ngIf=\"operationChanged$ | async\"></ng-container>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-63592f71b63bf31992255a07ea502b85ef7ec1e37f48666fd415cb56d2eada7e4e1ff2113b0644861f3c28c8824adef9c371fb693fc96b02c773816681cb6107",
            "file": "src/app/layout/common-layout/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionButtonTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "TemplateRef<any>",
                    "decorators": []
                },
                {
                    "name": "columnNamesAndProperties",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "tableColumnNameAndProperty[]",
                    "decorators": []
                },
                {
                    "name": "values",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any[] | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "gridStyle",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, TemplateRef } from '@angular/core';\nimport { tableColumnNameAndProperty } from './columnNameAndProperty';\n\n@Component({\n\tselector: 'app-table',\n\ttemplateUrl: './table.component.html',\n\tstyleUrls: ['./table.component.scss'],\n})\nexport class TableComponent implements OnInit {\n\t@Input() values: any[] | null;\n\t@Input() columnNamesAndProperties: tableColumnNameAndProperty[];\n\t@Input() actionButtonTemplate: TemplateRef<any>;\n\tgridStyle: any = {};\n\tconstructor() {}\n\n\tngOnInit(): void {\n\t\tif (!this.actionButtonTemplate) {\n\t\t\tthis.gridStyle['grid-template-columns'] = `repeat(${this.columnNamesAndProperties.length - 1}, 11.25rem) auto`;\n\t\t} else {\n\t\t\tthis.gridStyle['grid-template-columns'] = `repeat(${\n\t\t\t\tthis.columnNamesAndProperties.length - 1\n\t\t\t}, 11.25rem) auto 7.5625rem`;\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.ap-table {\r\n  border: 1px solid $dividers;\r\n  border-radius: 5px;\r\n  padding: 1.25rem 1.5625rem;\r\n  display: grid;\r\n  row-gap: 2.1875rem;\r\n  column-gap: 0.9375rem;\r\n  align-items: center;\r\n  .ap-table-header {\r\n    font-size: 1rem;\r\n    line-height: 1.5rem;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .ap-table-row {\r\n    font-weight: 400;\r\n    font-size: 0.875rem;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    line-height: 1.375rem;\r\n  }\r\n  .empty-value {\r\n    color: $formLabel;\r\n  }\r\n}\r\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"ap-table\" [ngStyle]=\"gridStyle\">\r\n  <ng-container\r\n    *ngFor=\"let column of columnNamesAndProperties; let isLast = last\"\r\n  >\r\n    <div class=\"ap-table-header\">\r\n      {{ column.columnName }}\r\n    </div>\r\n  </ng-container>\r\n  <div *ngIf=\"actionButtonTemplate\" #emptySpaceHeader></div>\r\n\r\n  <ng-container *ngFor=\"let val of values\">\r\n    <ng-container\r\n      *ngFor=\"let column of columnNamesAndProperties; let isLast = last\"\r\n    >\r\n      <div class=\"ap-table-row\" #row [class.empty-value]=\"!val[column.propertyName]\" [matTooltip]=\" val[column.propertyName] && row.scrollWidth > row.clientWidth? val[column.propertyName] : ''  \">\r\n        {{\r\n          val[column.propertyName]\r\n            ? val[column.propertyName]\r\n            : column.emptyValueText\r\n        }}\r\n      </div>\r\n    </ng-container>\r\n    <ng-container\r\n      *ngTemplateOutlet=\"actionButtonTemplate; context: { $implicit: val }\"\r\n    >\r\n    </ng-container>\r\n  </ng-container>\r\n</section>\r\n"
        },
        {
            "name": "TestCodeFormModalComponent",
            "id": "component-TestCodeFormModalComponent-8af2fdad3ef6c73d5ea6549e87f1d38bf3c143f22cccb4644df5e8ffec0853963da5ffc331d0d1270a684eaed341c08ed4806ad353be66920fe286997c3eb775",
            "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/test-code-form-modal/test-code-form-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-test-code-form-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./test-code-form-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "contextSubmitted",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<Object>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "editorOptions",
                    "defaultValue": "{\n\t\tlineNumbers: true,\n\t\ttheme: 'lucario',\n\t\tmode: 'javascript',\n\t}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "testCodeForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "hide",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitContext",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { fadeInUp400ms } from 'src/app/layout/common-layout/animation/fade-in-up.animation';\n\nimport { jsonValidator } from 'src/app/layout/common-layout/validators/json-validator';\n\n@Component({\n\tselector: 'app-test-code-form-modal',\n\ttemplateUrl: './test-code-form-modal.component.html',\n\tanimations: [fadeInUp400ms],\n})\nexport class TestCodeFormModalComponent {\n\ttestCodeForm: FormGroup;\n\teditorOptions = {\n\t\tlineNumbers: true,\n\t\ttheme: 'lucario',\n\t\tmode: 'javascript',\n\t};\n\t@Output() contextSubmitted: EventEmitter<Object> = new EventEmitter();\n\tsubmitted = false;\n\tconstructor(private formBuilder: FormBuilder, private modalRef: BsModalRef) {\n\t\tthis.testCodeForm = this.formBuilder.group({ context: ['{\\n\\n}', [Validators.required, jsonValidator]] });\n\t}\n\n\tsubmitContext() {\n\t\tthis.submitted = true;\n\t\tif (this.testCodeForm.valid) {\n\t\t\tthis.contextSubmitted.emit(JSON.parse(this.testCodeForm.get('context')!.value));\n\t\t\tthis.hide();\n\t\t}\n\t}\n\thide() {\n\t\tthis.modalRef.hide();\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<form [formGroup]=\"testCodeForm\">\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title pull-left\">Test Code</h5>\r\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"hide()\">\r\n      <span aria-hidden=\"true\" class=\"visually-hidden close-custom\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div class=\"form-group\">\r\n      <label for=\"context\">Code Input (JSON)</label>\r\n      <p class=\"text-sm\">Pass the following object in the first parameter of the function:</p>\r\n      <ngx-codemirror id=\"context\"\r\n                      formControlName=\"context\"\r\n                      [options]=\"editorOptions\"\r\n      ></ngx-codemirror>\r\n      <p class=\"text-sm mt-2\">Remember that you are testing the code independently of the flow, and this object will only live for the period of this testing session.</p>\r\n      <div @fadeInUp  *ngIf=\"submitted && testCodeForm.get('context')!.invalid\" >\r\n        <p *ngIf=\"testCodeForm.get('context')!.hasError('required');else invalidJson\" class=\"invalid-input\">\r\n          Context is required\r\n        </p>\r\n        <ng-template #invalidJson>\r\n          <p  class=\"invalid-input\">\r\n            Context is not a valid JSON object, please use double quotations.\r\n          </p>\r\n        </ng-template>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n\r\n    <app-button\r\n    btnColor=\"basic\"\r\n    btnStyle=\"basic\"\r\n    (buttonClicked)=\"hide()\"\r\n  > Cancel\r\n  </app-button>\r\n\r\n\r\n\r\n    <app-button type=\"submit\" btnColor=\"primary\"    (buttonClicked)=\"submitContext()\" >Test</app-button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "TestCodeModalComponent",
            "id": "component-TestCodeModalComponent-ecd9caff8183fcf7b85604c2fbdd97f34593491219aedc65caf7c8e24f1a40bf12d5b5740b69361d235f0f18f04e892c27c3667732264ee4fa54c11d6c9d07db",
            "file": "src/app/layout/flow-builder/page/flow-builder/code-editor/test-code-modal/test-code-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-test-code-modal",
            "styleUrls": [
                "./test-code-modal.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./test-code-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "contextSubmitted",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventEmitter<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "modalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "testForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "submitText",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { jsonValidator } from '../../../../../common-layout/validators/json-validator';\n\n@Component({\n\tselector: 'app-test-code-modal',\n\ttemplateUrl: './test-code-modal.component.html',\n\tstyleUrls: ['./test-code-modal.component.css'],\n})\nexport class TestCodeModalComponent implements OnInit {\n\tsubmitted = false;\n\tloading = false;\n\ttestForm: FormGroup;\n\n\tpublic contextSubmitted: EventEmitter<{ context: string }> = new EventEmitter<any>();\n\n\tconstructor(private formBuilder: FormBuilder, public modalRef: BsModalRef, private modalService: BsModalService) {}\n\n\topenModal(template: TemplateRef<any>) {\n\t\tthis.modalRef = this.modalService.show(template);\n\t}\n\n\tngOnInit() {\n\t\tthis.testForm = this.formBuilder.group({\n\t\t\tcontext: ['{\\n\\n}', [Validators.required, jsonValidator]],\n\t\t});\n\t}\n\n\tsubmitText() {\n\t\tthis.submitted = true;\n\t\tif (this.testForm.invalid) {\n\t\t\treturn;\n\t\t}\n\t\tthis.contextSubmitted.next(this.testForm.value);\n\t\tthis.modalRef.hide();\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./test-code-modal.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalRef",
                        "type": "BsModalRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "  <form [formGroup]=\"testForm\">\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title pull-left\">Test Code</h5>\r\n      <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"modalRef?.hide()\">\r\n        <span aria-hidden=\"true\" class=\"visually-hidden close-custom\">&times;</span>\r\n      </button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n      <div class=\"form-group\">\r\n        <label for=\"context\">Code Input (JSON)</label>\r\n        <p class=\"text-sm\">Pass the following object in the first parameter of the function:</p>\r\n        <ngx-codemirror id=\"context\"\r\n                        formControlName=\"context\"\r\n          [options]=\"{\r\n            lineNumbers: true,\r\n            theme: 'material',\r\n            mode: 'javascript'\r\n          }\"\r\n        ></ngx-codemirror>\r\n        <p class=\"text-sm mt-2\">Remember that you are testing the code independently of the flow, and this object will only live for the period of this testing session.</p>\r\n        <div @fadeInUp  *ngIf=\"submitted && (this.testForm.controls['context'].invalid)\" >\r\n          <p class=\"invalid-input\">\r\n            The json is not valid\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"modalRef?.hide()\">Cancel</button>\r\n      <app-button type=\"submit\" [disabled]=\"loading\"        btnColor=\"primary\" (buttonClicked)=\"submitText()\"> Test</app-button>\r\n    </div>\r\n  </form>\r\n"
        },
        {
            "name": "TestFlowModalComponent",
            "id": "component-TestFlowModalComponent-8a566b1ae127d6bcbe1b2be657b9516cf8a6077ad2141e7278f8b132b42cdaecc4f0b82ea6340a7368595279cd7eb33751993954c30e0d373d30c2c32595dc5c",
            "file": "src/app/layout/flow-builder/components/test-flow-modal/test-flow-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-test-flow-modal",
            "styleUrls": [
                "./test-flow-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./test-flow-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "collectionConfigs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Config[]>",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "executeTest$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<InstanceRun | null>",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "instanceRunStatus$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<undefined | InstanceRunStatus>",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "isSaving$",
                    "defaultValue": "of(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "modalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "observablesNeededToBuildForm$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type>",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "selectedCollection$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Collection>",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "selectedFlow$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Flow>",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "selectedFlowConfigs$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Config[]>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "shouldDisableTestButton$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "submitted",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "testFlowButtonDisabledTooltip",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "testFlowForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "testRunSnackbar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatSnackBarRef<TestRunBarComponent>",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "triggerFormControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "triggerPayloadPlaceHolder",
                    "defaultValue": "'{\\n' +\n\t\t'\"name\":\"Spongebob\",\\n' +\n\t\t'\"email\":\"spongebob@gmail.com\",\\n' +\n\t\t'\"description\":\"A user has signed up\"\\n' +\n\t\t'}'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methodsClass": [
                {
                    "name": "addOrRemoveEventTriggerFormControl",
                    "args": [
                        {
                            "name": "flow",
                            "type": "Flow",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flow",
                            "type": "Flow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createObservableNeededToCreateForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModal",
                    "args": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "template",
                            "type": "TemplateRef<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectedInstanceRunStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setupSelectedFlowListener",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "testFlow",
                    "args": [
                        {
                            "name": "flow",
                            "type": "Flow",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "collection",
                            "type": "Collection",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 162,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "flow",
                            "type": "Flow",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "collection",
                            "type": "Collection",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { FlowService } from '../../../common-layout/service/flow.service';\nimport { InstanceRunStatus } from '../../../common-layout/model/enum/instance-run-status';\nimport { catchError, combineLatest, map, Observable, of, switchMap, take, takeUntil, tap, throwError } from 'rxjs';\nimport { fadeInUp400ms } from '../../../common-layout/animation/fade-in-up.animation';\nimport { Flow } from '../../../common-layout/model/flow.class';\nimport { TriggerType } from '../../../common-layout/model/enum/trigger-type.enum';\nimport { Store } from '@ngrx/store';\nimport { BuilderSelectors } from '../../store/selector/flow-builder.selector';\nimport { jsonValidator } from '../../../common-layout/validators/json-validator';\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\nimport { TestRunBarComponent } from '../../page/flow-builder/test-run-bar/test-run-bar.component';\nimport { Config } from 'src/app/layout/common-layout/model/fields/variable/config';\nimport { FlowsActions } from '../../store/action/flows.action';\nimport { Collection } from 'src/app/layout/common-layout/model/piece.interface';\nimport { initializedRun, InstanceRun } from 'src/app/layout/common-layout/model/instance-run.interface';\n\n@Component({\n\tselector: 'app-test-flow-modal',\n\ttemplateUrl: './test-flow-modal.component.html',\n\tstyleUrls: ['./test-flow-modal.component.scss'],\n\tanimations: [fadeInUp400ms],\n})\nexport class TestFlowModalComponent implements OnInit {\n\tsubmitted = false;\n\tinstanceRunStatus$: Observable<undefined | InstanceRunStatus>;\n\tisSaving$: Observable<boolean> = of(false);\n\tmodalRef?: BsModalRef;\n\tselectedFlowConfigs$: Observable<Config[]>;\n\tcollectionConfigs$: Observable<Config[]>;\n\tselectedFlow$: Observable<Flow>;\n\tobservablesNeededToBuildForm$: Observable<{\n\t\tconfigs: Config[];\n\t\tflow: Flow;\n\t\tcollection: Collection;\n\t}>;\n\texecuteTest$: Observable<InstanceRun | null>;\n\tselectedCollection$: Observable<Collection>;\n\tshouldDisableTestButton$: Observable<boolean>;\n\ttestFlowForm: FormGroup;\n\ttriggerFormControl: FormControl;\n\ttestRunSnackbar: MatSnackBarRef<TestRunBarComponent>;\n\ttestFlowButtonDisabledTooltip = '';\n\ttriggerPayloadPlaceHolder =\n\t\t'{\\n' +\n\t\t'\"name\":\"Spongebob\",\\n' +\n\t\t'\"email\":\"spongebob@gmail.com\",\\n' +\n\t\t'\"description\":\"A user has signed up\"\\n' +\n\t\t'}';\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,\n\t\tprivate flowService: FlowService,\n\t\tprivate store: Store,\n\t\tprivate modalService: BsModalService,\n\t\tprivate snackbar: MatSnackBar\n\t) {\n\t\tthis.testFlowForm = this.formBuilder.group({\n\t\t\tconfigs: new FormControl(),\n\t\t});\n\t\tthis.triggerFormControl = new FormControl('', [jsonValidator]);\n\t}\n\n\tngOnInit() {\n\t\tthis.isSaving$ = this.store.select(BuilderSelectors.selectSavingChangeState);\n\t\tthis.selectedCollection$ = this.store.select(BuilderSelectors.selectCurrentCollection);\n\t\tthis.collectionConfigs$ = this.store.select(BuilderSelectors.selectUserDefinedCollectionConfigs);\n\t\tthis.selectedFlowConfigs$ = this.store.select(BuilderSelectors.selectUserDefinedFlowConfigs);\n\t\tthis.setupSelectedFlowListener();\n\t\tthis.selectedInstanceRunStatus();\n\t\tthis.shouldDisableTestButton$ = combineLatest({\n\t\t\tsaving: this.isSaving$,\n\t\t\tvalid: this.store.select(BuilderSelectors.selectCurrentFlowValidity),\n\t\t}).pipe(\n\t\t\ttap(res => {\n\t\t\t\tif (res.saving) {\n\t\t\t\t\tthis.testFlowButtonDisabledTooltip = 'Please wait until saving is complete';\n\t\t\t\t} else if (!res.valid) {\n\t\t\t\t\tthis.testFlowButtonDisabledTooltip = 'Please make sure all flows are valid';\n\t\t\t\t} else {\n\t\t\t\t\tthis.testFlowButtonDisabledTooltip = '';\n\t\t\t\t}\n\t\t\t}),\n\t\t\tmap(res => {\n\t\t\t\treturn res.saving || !res.valid;\n\t\t\t})\n\t\t);\n\t\tthis.createObservableNeededToCreateForm();\n\t}\n\n\tprivate setupSelectedFlowListener() {\n\t\tthis.selectedFlow$ = this.store.select(BuilderSelectors.selectCurrentFlow).pipe(\n\t\t\ttap(flow => {\n\t\t\t\tif (flow) this.addOrRemoveEventTriggerFormControl(flow);\n\t\t\t}),\n\t\t\tswitchMap(flow => {\n\t\t\t\tif (flow) {\n\t\t\t\t\treturn of(flow);\n\t\t\t\t} else {\n\t\t\t\t\treturn throwError(() => 'selected flow is null');\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tselectedInstanceRunStatus() {\n\t\tthis.instanceRunStatus$ = this.store.select(BuilderSelectors.selectCurrentFlowRunStatus);\n\t}\n\n\tcreateObservableNeededToCreateForm() {\n\t\tthis.observablesNeededToBuildForm$ = combineLatest({\n\t\t\tflowConfigs: this.selectedFlowConfigs$,\n\t\t\tflow: this.selectedFlow$,\n\t\t\tcollectionConfigs: this.collectionConfigs$,\n\t\t\tcollection: this.selectedCollection$,\n\t\t}).pipe(\n\t\t\tmap(res => {\n\t\t\t\tconst collectionConfigs = res.collectionConfigs.map(c => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...c,\n\t\t\t\t\t\tcollectionVersionId: res.collection.lastVersion.id,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tconst flowConfigs = res.flowConfigs.map(c => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...c,\n\t\t\t\t\t\tflowVersionId: res.flow.lastVersion.id,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\treturn {\n\t\t\t\t\tconfigs: [...collectionConfigs, ...flowConfigs],\n\t\t\t\t\tflow: res.flow,\n\t\t\t\t\tcollection: res.collection,\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t}\n\n\taddOrRemoveEventTriggerFormControl(flow: Flow) {\n\t\tif (flow.lastVersion.trigger?.type === TriggerType.EVENT || flow.lastVersion.trigger?.type === TriggerType.MANUAL) {\n\t\t\tthis.testFlowForm.addControl('trigger', this.triggerFormControl);\n\t\t} else {\n\t\t\tthis.testFlowForm.removeControl('trigger');\n\t\t}\n\t}\n\topenModal(template: TemplateRef<any>) {\n\t\tthis.observablesNeededToBuildForm$.pipe(take(1)).subscribe(result => {\n\t\t\tif (\n\t\t\t\tresult.configs.length === 0 &&\n\t\t\t\tresult.flow.lastVersion.trigger?.type !== TriggerType.EVENT &&\n\t\t\t\tresult.flow.lastVersion.trigger?.type !== TriggerType.MANUAL\n\t\t\t) {\n\t\t\t\tthis.testFlow(result.flow, result.collection);\n\t\t\t} else {\n\t\t\t\tthis.modalRef = this.modalService.show(template);\n\t\t\t}\n\t\t});\n\t}\n\n\ttestFlow(flow: Flow, collection: Collection) {\n\t\tthis.submitted = true;\n\t\tif (!this.testFlowForm.valid) {\n\t\t\treturn;\n\t\t}\n\t\tconst triggerControlValue = this.testFlowForm.get('trigger')?.value;\n\t\tlet request = {\n\t\t\tconfigs: {\n\t\t\t\t...this.testFlowForm.get('configs')?.value,\n\t\t\t},\n\t\t\ttrigger: triggerControlValue ? JSON.parse(triggerControlValue) : {},\n\t\t};\n\t\tthis.testRunSnackbar = this.snackbar.openFromComponent(TestRunBarComponent, {\n\t\t\tduration: undefined,\n\t\t\tdata: {\n\t\t\t\tflowId: flow.id,\n\t\t\t},\n\t\t});\n\t\tthis.store.dispatch(FlowsActions.setRun({ flowId: flow.id, run: initializedRun }));\n\t\tconst exitRunButtonPressed$ = this.testRunSnackbar.instance.exitButtonClicked;\n\n\t\tthis.executeTest$ = this.flowService\n\t\t\t.execute(collection.lastVersion.id, flow.lastVersion.id, request)\n\t\t\t.pipe(takeUntil(exitRunButtonPressed$))\n\t\t\t.pipe(\n\t\t\t\tcatchError(err => {\n\t\t\t\t\tconsole.error(err);\n\t\t\t\t\tthis.snackbar.open('Instance run failed, please check your console.', '', {\n\t\t\t\t\t\tpanelClass: 'error',\n\t\t\t\t\t});\n\t\t\t\t\tthis.store.dispatch(FlowsActions.exitRun({ flowId: flow.id }));\n\t\t\t\t\treturn of(null);\n\t\t\t\t}),\n\t\t\t\ttap((instanceRun: InstanceRun | null) => {\n\t\t\t\t\tif (instanceRun) {\n\t\t\t\t\t\tthis.store.dispatch(FlowsActions.setRun({ flowId: flow.id, run: instanceRun }));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\n\t\tthis.modalRef?.hide();\n\t\tthis.submitted = false;\n\t}\n\n\tpublic get triggerType() {\n\t\treturn TriggerType;\n\t}\n\n\tpublic get statusEnum() {\n\t\treturn InstanceRunStatus;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".modal-body\r\n{\r\n  max-height: 70vh;\r\n}\r\n",
                    "styleUrl": "./test-flow-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "flowService",
                        "type": "FlowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "snackbar",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "triggerType": {
                    "name": "triggerType",
                    "getSignature": {
                        "name": "triggerType",
                        "type": "",
                        "returnType": "",
                        "line": 206
                    }
                },
                "statusEnum": {
                    "name": "statusEnum",
                    "getSignature": {
                        "name": "statusEnum",
                        "type": "",
                        "returnType": "",
                        "line": 210
                    }
                }
            },
            "templateData": "<ng-template #modalTemplate>\r\n  <div class=\"modal-header\">\r\n    <h5 class=\"modal-title pull-left\">Test flow</h5>\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn-close close pull-right\"\r\n      aria-label=\"Close\"\r\n      (click)=\"modalRef?.hide()\"\r\n    >\r\n      <span aria-hidden=\"true\" class=\"visually-hidden close-custom\"\r\n        >&times;</span\r\n      >\r\n    </button>\r\n  </div>\r\n  <ng-container\r\n    *ngIf=\"observablesNeededToBuildForm$ | async as result; else loadingSpinner\"\r\n  >\r\n    <div class=\"modal-body\">\r\n      <form\r\n        #formTemplate=\"ngForm\"\r\n        [formGroup]=\"testFlowForm\"\r\n        (ngSubmit)=\"testFlow(result.flow, result.collection)\"\r\n      >\r\n        <app-configs-form\r\n          formControlName=\"configs\"\r\n          [configs]=\"result.configs\"\r\n          [submitted]=\"submitted\"\r\n        ></app-configs-form>\r\n        <ng-container *ngIf=\"testFlowForm.get('trigger')\">\r\n          <label required> Payload </label>\r\n          <textarea\r\n            formControlName=\"trigger\"\r\n            class=\"form-control\"\r\n            type=\"text\"\r\n            rows=\"5\"\r\n            [placeholder]=\"triggerPayloadPlaceHolder\"\r\n          ></textarea>\r\n          <p\r\n            @fadeInUp\r\n            *ngIf=\"\r\n              formTemplate.submitted && testFlowForm.get('trigger')?.invalid\r\n            \"\r\n            class=\"invalid-input\"\r\n          >\r\n          Payload is not a valid JSON object, please use double quotations.\r\n          </p>\r\n        </ng-container>\r\n      </form>\r\n    </div>\r\n    <div class=\"modal-footer\" top-border>\r\n      <app-button\r\n      btnColor=\"basic\"\r\n      btnStyle=\"basic\"\r\n      (buttonClicked)=\"modalRef?.hide()\"\r\n    > Cancel\r\n    </app-button>\r\n      <app-button\r\n      btnColor=\"primary\"\r\n      (buttonClicked)=\"formTemplate.onSubmit($event)\"\r\n      >Test\r\n      </app-button>\r\n    </div>\r\n  </ng-container>\r\n\r\n  <ng-template #loadingSpinner> Loading </ng-template>\r\n\r\n</ng-template>\r\n\r\n<ng-container> </ng-container>\r\n<app-button\r\n  [hidden]=\"(instanceRunStatus$ | async) === statusEnum.RUNNING\"\r\n  (buttonClicked)=\"openModal(modalTemplate)\"\r\n  btnStyle=\"basic\"\r\n  btnColor=\"primary\"\r\n  [disabled]=\"shouldDisableTestButton$ | async\"\r\n  [tooltip]=\"testFlowButtonDisabledTooltip\"\r\n  placement=\"bottom\"\r\n  btnSize=\"medium\"\r\n>\r\nTest flow\r\n</app-button>\r\n\r\n<div\r\n  [hidden]=\"(instanceRunStatus$ | async) !== statusEnum.RUNNING\"\r\n  class=\"btn btn-text text-center text-success\"\r\n>\r\n  Running...\r\n</div>\r\n<ng-container *ngIf=\"executeTest$ |async\"></ng-container>\r\n"
        },
        {
            "name": "TestRunBarComponent",
            "id": "component-TestRunBarComponent-49cd1b4f5ca6cec2d5df2475149c3b396b2bf273f2b8d85ac4ffd817dd06b746bd5faa5bbc04725e58a0b60cf08ad41ed01f31b042edb3d8ef08a73bdb1601c4",
            "file": "src/app/layout/flow-builder/page/flow-builder/test-run-bar/test-run-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-test-run-bar",
            "styleUrls": [
                "./test-run-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./test-run-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "exitButtonClicked",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_SNACK_BAR_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "exitRun$",
                    "defaultValue": "new Observable<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<void>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "hideExit$",
                    "defaultValue": "of(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "instanceRunStatusChecker$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<InstanceRun>",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "selectedRun$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<InstanceRun | undefined | null>",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setStatusChecker",
                    "args": [
                        {
                            "name": "runId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "runId",
                            "type": "UUID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Inject, OnInit, Output } from '@angular/core';\nimport { InstanceRunStatus } from '../../../../common-layout/model/enum/instance-run-status';\nimport { initializedRun, InstanceRun } from '../../../../common-layout/model/instance-run.interface';\nimport { Store } from '@ngrx/store';\nimport { BuilderSelectors } from '../../../store/selector/flow-builder.selector';\nimport { filter, interval, Observable, of, switchMap, takeWhile, tap } from 'rxjs';\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { FlowsActions } from '../../../store/action/flows.action';\nimport { UUID } from 'angular2-uuid';\nimport { InstanceRunService } from 'src/app/layout/common-layout/service/instance-run.service';\n\n@Component({\n\tselector: 'app-test-run-bar',\n\ttemplateUrl: './test-run-bar.component.html',\n\tstyleUrls: ['./test-run-bar.component.scss'],\n})\nexport class TestRunBarComponent implements OnInit {\n\tconstructor(\n\t\tprivate snackbarRef: MatSnackBarRef<TestRunBarComponent>,\n\t\tprivate store: Store,\n\t\tprivate instanceRunService: InstanceRunService,\n\t\t@Inject(MAT_SNACK_BAR_DATA) public data: { flowId: UUID }\n\t) {}\n\thideExit$: Observable<boolean> = of(false);\n\tselectedRun$: Observable<InstanceRun | undefined | null>;\n\texitRun$: Observable<void> = new Observable<void>();\n\tinstanceRunStatusChecker$: Observable<InstanceRun>;\n\t@Output()\n\texitButtonClicked: EventEmitter<void> = new EventEmitter();\n\n\tngOnInit(): void {\n\t\tthis.hideExit$ = this.store.select(BuilderSelectors.selectInstanceRunView);\n\t\tthis.selectedRun$ = this.store.select(BuilderSelectors.selectCurrentFlowRun).pipe(\n\t\t\tfilter(run => JSON.stringify(run) !== JSON.stringify(initializedRun)),\n\t\t\ttap(run => {\n\t\t\t\tif (run && run.status === InstanceRunStatus.RUNNING) {\n\t\t\t\t\tthis.setStatusChecker(run.id);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.exitRun$ = this.exitButtonClicked.pipe(\n\t\t\ttap(() => {\n\t\t\t\tthis.snackbarRef.dismiss();\n\t\t\t\t//wait for animation to be done\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.store.dispatch(FlowsActions.exitRun({ flowId: this.data.flowId }));\n\t\t\t\t}, 150);\n\t\t\t})\n\t\t);\n\t}\n\tsetStatusChecker(runId: UUID) {\n\t\tthis.instanceRunStatusChecker$ = interval(1500).pipe(\n\t\t\tswitchMap(() => this.instanceRunService.get(runId)),\n\t\t\ttap(instanceRun => {\n\t\t\t\tif (instanceRun.status !== InstanceRunStatus.RUNNING && instanceRun) {\n\t\t\t\t\tthis.store.dispatch(\n\t\t\t\t\t\tFlowsActions.setRun({\n\t\t\t\t\t\t\tflowId: this.data.flowId,\n\t\t\t\t\t\t\trun: instanceRun,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}),\n\t\t\ttakeWhile(instanceRun => {\n\t\t\t\treturn instanceRun.status === InstanceRunStatus.RUNNING;\n\t\t\t})\n\t\t);\n\t}\n\n\tget instanceRunStatus() {\n\t\treturn InstanceRunStatus;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.bar-container {\r\n  gap: 0.3125rem;\r\n  font-size: 0.875rem;\r\n}\r\n",
                    "styleUrl": "./test-run-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "snackbarRef",
                        "type": "MatSnackBarRef<TestRunBarComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "instanceRunService",
                        "type": "InstanceRunService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "snackbarRef",
                        "type": "MatSnackBarRef<TestRunBarComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "instanceRunService",
                        "type": "InstanceRunService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "literal type",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "instanceRunStatus": {
                    "name": "instanceRunStatus",
                    "getSignature": {
                        "name": "instanceRunStatus",
                        "type": "",
                        "returnType": "",
                        "line": 70
                    }
                }
            },
            "templateData": "<div class=\"d-flex align-items-center bar-container\">\r\n  <ng-container *ngIf=\"selectedRun$ | async as selectedRun; else InitialisingRunTemplate\">\r\n    <ng-container [ngSwitch]=\"selectedRun.status\">\r\n      <ng-container *ngSwitchCase=\"instanceRunStatus.SUCCEEDED\">\r\n        <app-state-icon [succeeded]=\"true\"></app-state-icon>\r\n        <span class=\"text-white\"\r\n        >Run succeeded ({{ selectedRun.id }})</span\r\n        >\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"instanceRunStatus.FAILED\">\r\n        <app-state-icon [succeeded]=\"false\"></app-state-icon>\r\n        <span class=\"text-white\"\r\n        >Test failed ({{ selectedRun.id }})</span\r\n        >\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"instanceRunStatus.RUNNING\">\r\n        <span class=\"text-white\"\r\n        >Test is running ({{ selectedRun.id }})</span>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n  <ng-template #InitialisingRunTemplate> Initialising run...</ng-template>\r\n  <app-button  [hidden]=\"hideExit$ | async\" btnColor=\"basic\"  btnStyle=\"basic\" btnSize=\"medium\" (buttonClicked)=\"exitButtonClicked.next()\">     Exit Run </app-button>\r\n</div>\r\n\r\n<ng-container *ngIf=\"exitRun$|async\"></ng-container>\r\n<ng-container *ngIf=\"instanceRunStatusChecker$ |async\"> </ng-container>\r\n"
        },
        {
            "name": "TrialCountdownComponent",
            "id": "component-TrialCountdownComponent-b103820b535930f093a8bb8c93f7dcfc6ecf9caebc87990af0ffcefa28f9ce19d8a8b1d71f8884686969a5f799607483bae3067edcfd188a37976b4ef8caaf0e",
            "file": "src/app/layout/dashboard-layout/components/trial-countdown/trial-countdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-trial-countdown",
            "styleUrls": [
                "./trial-countdown.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./trial-countdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_expirationValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "countDownText",
                    "defaultValue": "'0 Day'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "progressValue",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/layout/common-layout/service/authentication.service';\nimport { TimeHelperService } from 'src/app/layout/common-layout/service/time-helper.service';\n\n@Component({\n\tselector: 'app-trial-countdown',\n\ttemplateUrl: './trial-countdown.component.html',\n\tstyleUrls: ['./trial-countdown.component.css'],\n})\nexport class TrialCountdownComponent implements OnInit {\n\tconstructor(private authenticationService: AuthenticationService, private timeHelperService: TimeHelperService) {}\n\t_expirationValue: number;\n\tcountDownText: string | undefined = '0 Day';\n\tngOnInit(): void {\n\t\tthis._expirationValue = this.progressValue();\n\t\tthis.countDownText = this.timeHelperService.countDownTimeDaysOnly(this.epochExpirationTime);\n\t}\n\tprogressValue(): number {\n\t\tconst now = new Date();\n\t\tconst utcSecondsSinceEpoch = now.getTime() / 1000;\n\t\tconst timeLeftToExpiry = this.epochExpirationTime - utcSecondsSinceEpoch;\n\t\tconst totalTrialPeriod = this.epochExpirationTime - this.epochCreationTime;\n\t\tif (totalTrialPeriod < 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst progressPrecentage = Math.floor((timeLeftToExpiry / totalTrialPeriod) * 100);\n\t\treturn progressPrecentage > 97 ? 96 : progressPrecentage;\n\t}\n\tget epochCreationTime() {\n\t\treturn this.authenticationService.currentUser.epochCreationTime;\n\t}\n\n\tget epochExpirationTime() {\n\t\treturn this.authenticationService.currentUser.epochExpirationTime;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".trial-count-down-container {\r\n  gap: 10px;\r\n  position: relative;\r\n}\r\n\r\n.trial-progress-actual {\r\n  position: absolute;\r\n  z-index: 9999;\r\n}\r\n\r\n.trial-progress-background {\r\n  position: absolute;\r\n  z-index: 1;\r\n}\r\n\r\n.spinners {\r\n  height: 25px;\r\n  width: 25px;\r\n}\r\n",
                    "styleUrl": "./trial-countdown.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "epochCreationTime": {
                    "name": "epochCreationTime",
                    "getSignature": {
                        "name": "epochCreationTime",
                        "type": "",
                        "returnType": "",
                        "line": 29
                    }
                },
                "epochExpirationTime": {
                    "name": "epochExpirationTime",
                    "getSignature": {
                        "name": "epochExpirationTime",
                        "type": "",
                        "returnType": "",
                        "line": 33
                    }
                }
            },
            "templateData": "<div\r\n  class=\"d-flex flex-row-reverse align-items-center trial-count-down-container\"\r\n>\r\n  {{ countDownText === undefined ? 'Trail expired'  :  countDownText + ' Free Trial'}}\r\n  <div class=\"spinners\">\r\n    <mat-spinner\r\n      diameter=\"25\"\r\n      [value]=\"_expirationValue\"\r\n      mode=\"determinate\"\r\n      class=\"trial-progress-actual\"\r\n    ></mat-spinner>\r\n    <mat-spinner\r\n      diameter=\"25\"\r\n      [value]=\"100\"\r\n      mode=\"determinate\"\r\n      class=\"trial-progress-background\"\r\n    ></mat-spinner>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "TrialStatusComponent",
            "id": "component-TrialStatusComponent-9e7582da69dec1257d27886b683fc072f7a1e4ba722ad221ae315df37cb72f7e7ff5a94c2bd0977bb2586aec624e55de2397e7c6c7f97fdebeb84d8eef6e6f2b",
            "file": "src/app/layout/dashboard-layout/pages/trial-status/trial-status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-trial-status",
            "styleUrls": [
                "./trial-status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./trial-status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "countDownText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "featuresList",
                    "defaultValue": "[\n\t\t'Low-code workflow builder',\n\t\t'In-App embedding',\n\t\t'Unlimited connectors access',\n\t\t'Deployment environments',\n\t\t'Multitenant deployment ',\n\t\t'Version control',\n\t\t'Advanced debugging',\n\t]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "contactSales",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/layout/common-layout/service/authentication.service';\nimport { TimeHelperService } from 'src/app/layout/common-layout/service/time-helper.service';\n\ndeclare var Calendly: any;\n\n@Component({\n\tselector: 'app-trial-status',\n\ttemplateUrl: './trial-status.component.html',\n\tstyleUrls: ['./trial-status.component.scss'],\n})\nexport class TrialStatusComponent implements OnInit {\n\tcountDownText = '';\n\tfeaturesList = [\n\t\t'Low-code workflow builder',\n\t\t'In-App embedding',\n\t\t'Unlimited connectors access',\n\t\t'Deployment environments',\n\t\t'Multitenant deployment ',\n\t\t'Version control',\n\t\t'Advanced debugging',\n\t];\n\tconstructor(private authenticationService: AuthenticationService, private timeHelperService: TimeHelperService) {}\n\n\tngOnInit(): void {\n\t\tthis.countDownText = this.timeHelperService.countDownTimeLeft(this.epochExpirationTime);\n\t}\n\n\tcontactSales() {\n\t\tCalendly.initPopupWidget({\n\t\t\turl: 'https://calendly.com/activepieces/demo?hide_event_type_details=1&hide_gdpr_banner=1',\n\t\t});\n\t}\n\n\tget isTrialExpired() {\n\t\tconst now = new Date().getTime() / 1000;\n\t\treturn (\n\t\t\tthis.authenticationService.currentUser.epochExpirationTime &&\n\t\t\tthis.authenticationService.currentUser.epochExpirationTime < now\n\t\t);\n\t}\n\tget epochExpirationTime() {\n\t\treturn this.authenticationService.currentUser.epochExpirationTime;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n\r\n.trial-status {\r\n  --multiplier: 1;\r\n  .text-section {\r\n    background-image: url(\"/assets/img/custom/trial-bg.svg\");\r\n    background-position: center center;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    width: 100%;\r\n  }\r\n  .card-section {\r\n    width: 100%;\r\n  }\r\n  @media only screen and (min-width: 1366px) {\r\n    .text-section {\r\n      width: 55%;\r\n    }\r\n    .card-section {\r\n      width: 45%;\r\n    }\r\n  }\r\n\r\n  .text-section__title {\r\n    font-weight: 700;\r\n    margin-bottom: 15px;\r\n    font-size: calc(3rem * var(--multiplier));\r\n    line-height: calc(4.0625rem * var(--multiplier));\r\n    max-width: calc(31.25rem * var(--multiplier));\r\n  }\r\n\r\n  .text-section__body {\r\n    font-weight: 400;\r\n    font-size: calc(1.25rem * var(--multiplier));\r\n    line-height: calc(1.6875rem * var(--multiplier));\r\n    max-width: calc(32.375rem * var(--multiplier));\r\n  }\r\n\r\n  .text-section__title__count-down {\r\n    font-weight: 600;\r\n    font-size: 30px;\r\n    line-height: 41px;\r\n    padding: calc(0.25rem * var(--multiplier))\r\n      calc(0.9375rem * var(--multiplier));\r\n    background: rgba(255, 255, 255, 0.3);\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .card-section__features-card {\r\n    background: #ffffff;\r\n    border: 1px solid $primary;\r\n    box-shadow: 0px 3px 50px -10px rgba(130, 131, 137, 0.5);\r\n    border-radius: 15px;\r\n    min-width: 400px;\r\n    // width: 44%;\r\n    // height: 52.8%;\r\n    min-height: 500px;\r\n    padding: calc(2.5rem * var(--multiplier)) calc(1.875rem * var(--multiplier))\r\n      calc(1.875rem * var(--multiplier));\r\n    gap: 30px;\r\n  }\r\n\r\n  .feature_box {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .card-section__features-card__sales-btn {\r\n    padding: 1.1875rem 0rem;\r\n  }\r\n\r\n  .card-section__features-card__title {\r\n    font-weight: 600;\r\n    font-size: calc(1.5rem * var(--multiplier));\r\n    line-height: calc(2rem * var(--multiplier));\r\n    margin: 0px;\r\n  }\r\n\r\n  .card-section__features-card__list-block {\r\n    gap: 30px;\r\n    min-width: 340px;\r\n  }\r\n\r\n  .card-section__features-card__features-list {\r\n    font-weight: 400;\r\n    line-height: 19px;\r\n\r\n    li {\r\n      padding: calc(0.625rem * var(--multiplier));\r\n      border-radius: 3px;\r\n      font-size: calc(1rem * var(--multiplier));\r\n    }\r\n    li:nth-child(even) {\r\n      background-color: $hover;\r\n    }\r\n  }\r\n\r\n  .green-check {\r\n    fill: $successColor;\r\n    height: 15px;\r\n    width: 15px;\r\n  }\r\n}\r\n\r\n@media only screen and (min-width: 1441px) {\r\n  .trial-status {\r\n    --multiplier: 1.2;\r\n  }\r\n}\r\n",
                    "styleUrl": "./trial-status.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "timeHelperService",
                        "type": "TimeHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "isTrialExpired": {
                    "name": "isTrialExpired",
                    "getSignature": {
                        "name": "isTrialExpired",
                        "type": "",
                        "returnType": "",
                        "line": 35
                    }
                },
                "epochExpirationTime": {
                    "name": "epochExpirationTime",
                    "getSignature": {
                        "name": "epochExpirationTime",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                }
            },
            "templateData": "<div class=\"h-100 trial-status d-flex w-100 justify-content-center flex-wrap\">\r\n  <section\r\n    class=\"text-section flex-grow-1 d-flex flex-column justify-content-center align-items-center\"\r\n  >\r\n    <div>\r\n      <h1 class=\"text-section__title\">\r\n        <ng-container *ngIf=\"isTrialExpired; else trialStatus\">\r\n          Trial period Expired!\r\n        </ng-container>\r\n        <ng-template #trialStatus>\r\n          The free trial expires in\r\n          <span class=\"text-section__title__count-down\">{{\r\n            countDownText\r\n          }}</span>\r\n        </ng-template>\r\n      </h1>\r\n      <p class=\"text-section__body\">\r\n        <ng-container *ngIf=\"isTrialExpired; else contactSalesText\">\r\n          Sorry, the trial period has expired, your data is stored in our\r\n          database, you can resume working on them by upgrading your account.\r\n        </ng-container>\r\n        <ng-template #contactSalesText>\r\n          Our team can map our ready product to your needs\r\n        </ng-template>\r\n      </p>\r\n    </div>\r\n  </section>\r\n\r\n  <section\r\n    class=\"card-section d-flex justify-content-center align-items-center\"\r\n  >\r\n    <div class=\"card-section__features-card d-flex flex-column\">\r\n      <div class=\"card-section__features-card__list-block d-flex flex-column\">\r\n        <h1 class=\"card-section__features-card__title\">Growth 🚀</h1>\r\n        <ul role=\"list\" class=\"card-section__features-card__features-list\">\r\n          <li *ngFor=\"let feature of featuresList\" class=\"feature_box\">\r\n            <svg-icon\r\n              src=\"assets/img/custom/transparent-check.svg\"\r\n              svgClass=\"green-check\"\r\n            >\r\n            </svg-icon>\r\n            <span class=\"ml-2\">\r\n            {{ feature }}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <app-button\r\n      btnColor=\"primary\"\r\n      [fullWidthOfContainer]=\"true\"\r\n      (buttonClicked)=\"contactSales()\"\r\n    > Talk to sales, NOW!\r\n    </app-button>\r\n\r\n    </div>\r\n  </section>\r\n</div>\r\n"
        },
        {
            "name": "UploadImageControlComponent",
            "id": "component-UploadImageControlComponent-a2c5d9d1379055f409bd7ca0ba0aeb4138ac571115fbe24a88f7328b00be7c2a1080c48c8f48c37b41cbc86183c3694109fdf7a6aab724877b65a8507e1ea7d9",
            "file": "src/app/layout/common-layout/components/upload-image-control/upload-image-control.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: UploadImageControlComponent, multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "app-file-upload",
            "styleUrls": [
                "./upload-image-control.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./upload-image-control.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "extensions",
                    "defaultValue": "['.jpeg', '.png', '.jpg']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string[]",
                    "decorators": []
                },
                {
                    "name": "file",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "File | null",
                    "decorators": []
                },
                {
                    "name": "fileMaxSize",
                    "defaultValue": "90000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "loadedImageUrl",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "showError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "uploadButtonHovered",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "emitFiles",
                    "args": [
                        {
                            "name": "event",
                            "type": "FileList",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'change', ['$event.target.files']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FileList",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "fileDropped",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "readImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "Function",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "Function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "Function",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "Function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateFileType",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "FileList",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event.target.files"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n\tselector: 'app-file-upload',\n\ttemplateUrl: './upload-image-control.component.html',\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: UploadImageControlComponent,\n\t\t\tmulti: true,\n\t\t},\n\t],\n\tstyleUrls: ['./upload-image-control.component.scss'],\n})\nexport class UploadImageControlComponent implements ControlValueAccessor {\n\tonChange!: Function;\n\t@Input() public file: File | null = null;\n\t@Input() loadedImageUrl = '';\n\tuploadButtonHovered = false;\n\tshowError = false;\n\t@Input() extensions: string[] = ['.jpeg', '.png', '.jpg'];\n\t@Input() fileMaxSize: number = 90000;\n\t@HostListener('change', ['$event.target.files']) emitFiles(event: FileList) {\n\t\tconst file = event && event.item(0);\n\t\tif (file) {\n\t\t\tthis.fileDropped(file);\n\t\t}\n\t}\n\n\tfileDropped(file: File) {\n\t\tthis.showError = !this.validateFileType(file);\n\t\tif (!this.showError) {\n\t\t\tthis.onChange(file);\n\t\t\tthis.file = file;\n\t\t\tthis.readImage();\n\t\t} else {\n\t\t\tthis.onChange(null);\n\t\t\tthis.file = null;\n\t\t}\n\t}\n\n\twriteValue(file: File) {\n\t\tthis.file = file;\n\t}\n\n\tregisterOnChange(fn: Function) {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: Function) {}\n\n\tvalidateFileType(file: File) {\n\t\tif (file) {\n\t\t\tlet parts = file.name.split('.');\n\t\t\tif (parts.length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst extension = '.' + parts[parts.length - 1].toLowerCase();\n\t\t\tif (\n\t\t\t\t!this.extensions.find(allowedExtension => allowedExtension.toLocaleLowerCase() == extension.toLocaleLowerCase())\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn file.size <= this.fileMaxSize;\n\t\t}\n\t\treturn false;\n\t}\n\n\treadImage() {\n\t\tconst reader = new FileReader();\n\t\treader.onload = () => {\n\t\t\tthis.loadedImageUrl = reader.result as string;\n\t\t};\n\t\tif (this.file) reader.readAsDataURL(this.file);\n\t}\n\n\tget cloudSvgClass() {\n\t\tif (this.uploadButtonHovered) {\n\t\t\treturn 'cloud-svg cloud-svg-hover';\n\t\t} else {\n\t\t\treturn 'cloud-svg';\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input-container {\r\n  background: #fafafa;\r\n  color: #8c8c8c;\r\n  padding: 15px;\r\n  border: 1px dashed #c2c9d1;\r\n  border-radius: 5px;\r\n  transition: all 0.5s ease;\r\n}\r\n\r\n.red-border {\r\n  border-color: #dc3545;\r\n}\r\n\r\n.cloud-image {\r\n  height: 40px;\r\n  width: 40px;\r\n  background-color: grey;\r\n}\r\n\r\n.uploaded-image-container {\r\n  height: 40px;\r\n  width: 40px;\r\n  text-align: center;\r\n}\r\n\r\n.uploaded-image {\r\n  height: 40px;\r\n  width: 40px;\r\n}\r\n\r\n.upload-text {\r\n  overflow-wrap: break-word;\r\n  transition: all 0.5s ease;\r\n  word-wrap: break-word;\r\n  color: #8c8c8c;\r\n  -webkit-touch-callout: none;\r\n  /* iOS Safari */\r\n  -webkit-user-select: none;\r\n  /* Safari */\r\n  -khtml-user-select: none;\r\n  /* Konqueror HTML */\r\n  -moz-user-select: none;\r\n  /* Old versions of Firefox */\r\n  -ms-user-select: none;\r\n  /* Internet Explorer/Edge */\r\n  user-select: none;\r\n}\r\n\r\n.image-container {\r\n  margin-right: 15px;\r\n}\r\n\r\n.uploaded-image-name {\r\n  width: 215px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.file-input {\r\n  display: none;\r\n}\r\n\r\n.cloud-svg {\r\n  fill: #c8c8c8;\r\n  transition: all 0.5s ease;\r\n}\r\n.cloud-svg-hover {\r\n  fill: #8c8c8c;\r\n}\r\n\r\n.upload-svg {\r\n  fill: transparent;\r\n  stroke: #4f4f4f;\r\n  width: 15px;\r\n  height: 15px;\r\n  margin-right: 2px;\r\n}\r\n\r\n.upload-btn {\r\n  padding: 9px 9px;\r\n  transition: all 0.5s ease;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #e6e6e6;\r\n    border-radius: 4px;\r\n  }\r\n}\r\n.replace-btn {\r\n  padding: 8px 9px;\r\n  transition: all 0.5s ease;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #e6e6e6;\r\n    border-radius: 4px;\r\n  }\r\n}\r\n\r\n.replace-img-svg {\r\n  fill: transparent;\r\n  stroke: #4f4f4f;\r\n  width: 18px;\r\n  height: 18px;\r\n  margin-bottom: 3px;\r\n}\r\n\r\n.error-msg {\r\n  margin-top: 10px;\r\n  color: #dc3545;\r\n}\r\n",
                    "styleUrl": "./upload-image-control.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "cloudSvgClass": {
                    "name": "cloudSvgClass",
                    "getSignature": {
                        "name": "cloudSvgClass",
                        "type": "",
                        "returnType": "",
                        "line": 78
                    }
                }
            },
            "templateData": "<input\r\n  #fileInput\r\n  class=\"file-input\"\r\n  type=\"file\"\r\n  [accept]=\"extensions.join(',')\"\r\n/>\r\n<div\r\n  class=\"input-container d-flex align-items-center\"\r\n  appDragDrop\r\n  (fileDropped)=\"fileDropped($event)\"\r\n  [class.red-border]=\"showError\"\r\n>\r\n  <div\r\n    class=\"d-flex flex-column justify-content-center align-items-center image-container\"\r\n  >\r\n    <div *ngIf=\"!file\" class=\"d-flex justify-content-center align-items-center\">\r\n      <svg-icon\r\n        [svgClass]=\"cloudSvgClass\"\r\n        src=\"assets/img/custom/cloud.svg\"\r\n      ></svg-icon>\r\n    </div>\r\n    <div *ngIf=\"file\" class=\"uploaded-image-container\">\r\n      <img [src]=\"loadedImageUrl\" class=\"uploaded-image\" />\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"file\" class=\"uploaded-image-name\">\r\n    {{ file.name }}\r\n  </div>\r\n  <div *ngIf=\"!file\" class=\"upload-text\">\r\n    Click to upload the icon or drop it here\r\n  </div>\r\n  <div class=\"flex-grow-1\"></div>\r\n  <div class=\"d-flex justify-content-center align-items-center\">\r\n    <div\r\n      class=\"d-flex justify-content-center align-items-center upload-btn\"\r\n      *ngIf=\"!file\"\r\n      (mouseenter)=\"uploadButtonHovered = true\"\r\n      (mouseleave)=\"uploadButtonHovered = false\"\r\n      (click)=\"fileInput.click()\"\r\n    >\r\n      <svg-icon\r\n        [class]=\"'upload-svg'\"\r\n        src=\"assets/img/custom/upload.svg\"\r\n      ></svg-icon>\r\n    </div>\r\n    <div\r\n      class=\"d-flex justify-content-center align-items-center replace-btn\"\r\n      (mouseenter)=\"uploadButtonHovered = true\"\r\n      (mouseleave)=\"uploadButtonHovered = false\"\r\n      (click)=\"fileInput.click()\"\r\n      *ngIf=\"file\"\r\n      matTooltip=\"Change\"\r\n    >\r\n      <svg-icon\r\n        [class]=\"'replace-img-svg'\"\r\n        src=\"assets/img/custom/replace-file.svg\"\r\n      ></svg-icon>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"error-msg\" *ngIf=\"showError\">\r\n  Allowed extensions are: ({{ extensions.join(\" | \") }}), and the file size\r\n  limit is {{ fileMaxSize / 1000 }} kbs.\r\n</div>\r\n"
        },
        {
            "name": "UserAvatarComponent",
            "id": "component-UserAvatarComponent-d41222e5ffbd1fffd4f926d1e18bc6e3fdb3bde6730b36408fed5f0e165324d123ab061772dc9a6aab3e14f2560f7f9100a172990ea68009e99597a43d49cd08",
            "file": "src/app/layout/dashboard-layout/components/user-avatar/user-avatar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-avatar",
            "styleUrls": [
                "./user-avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showAvatarOuterCircle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "getDropDownLeftOffset",
                    "args": [
                        {
                            "name": "toggleElement",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dropDownElement",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "toggleElement",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dropDownElement",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/layout/common-layout/service/authentication.service';\n\n@Component({\n\tselector: 'app-user-avatar',\n\ttemplateUrl: './user-avatar.component.html',\n\tstyleUrls: ['./user-avatar.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserAvatarComponent {\n\tshowAvatarOuterCircle = false;\n\n\tconstructor(private authenticationService: AuthenticationService, private router: Router) {}\n\n\tgetDropDownLeftOffset(toggleElement: HTMLElement, dropDownElement: HTMLElement) {\n\t\tconst leftOffset = toggleElement.clientWidth - dropDownElement.clientWidth - 5;\n\t\treturn `${leftOffset}px`;\n\t}\n\n\tlogout() {\n\t\tthis.router.navigate(['sign-in']);\n\t\tthis.authenticationService.logout();\n\t}\n\n\tget username() {\n\t\treturn `${this.authenticationService.currentUser?.firstName} ${this.authenticationService.currentUser?.lastName}`;\n\t}\n\n\tget userFirstLetter() {\n\t\tif (\n\t\t\tthis.authenticationService.currentUser == undefined ||\n\t\t\tthis.authenticationService.currentUser.firstName == undefined\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.authenticationService.currentUser?.firstName[0];\n\t}\n\n\tget companyName() {\n\t\tif (\n\t\t\tthis.authenticationService.currentUser == undefined ||\n\t\t\tthis.authenticationService.currentUser.company == undefined\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.authenticationService.currentUser?.company;\n\t}\n\n\tget email() {\n\t\tif (\n\t\t\tthis.authenticationService.currentUser == undefined ||\n\t\t\tthis.authenticationService.currentUser.email == undefined\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.authenticationService.currentUser?.email;\n\t}\n\n\tget isInTrial() {\n\t\tif (\n\t\t\tthis.authenticationService.currentUser == undefined ||\n\t\t\tthis.authenticationService.currentUser.epochExpirationTime == undefined\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this.authenticationService.currentUser?.epochExpirationTime;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/scss/custom/variables\";\r\n.avatar-container {\r\n  position: relative;\r\n}\r\n\r\n.avatar {\r\n  font-weight: 600;\r\n  font-size: 0.875rem;\r\n  line-height: 1.375rem;\r\n  background-color: $avatar;\r\n  border-radius: 50%;\r\n  height: 32px;\r\n  width: 32px;\r\n  position: relative;\r\n  cursor: pointer;\r\n}\r\n\r\n.dropdown-menu{\r\n  min-width: 15rem;\r\n}\r\n.avatar-outer-circle {\r\n  position: absolute;\r\n  border: 0px $primary solid;\r\n  height: 36px;\r\n  width: 36px;\r\n  transition: all 0.1s ease-in-out;\r\n  border-radius: 50%;\r\n}\r\n\r\n.avatar-outer-circle-show {\r\n  height: 40px;\r\n  width: 40px;\r\n  border-width: 1px;\r\n}\r\n\r\n.dropdown-item {\r\n  padding: 0.3125rem;\r\n  font-weight: 400;\r\n  font-size: 0.813rem;\r\n  line-height: 1.375rem;\r\n}\r\n\r\n.logout-icon {\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.user-avatar-dropdown {\r\n  top: 38px !important;\r\n  font-weight: 600;\r\n  font-size: 0.875rem;\r\n  padding: 0.5rem;\r\n}\r\n\r\n.main-text {\r\n  color: $body !important;\r\n}\r\n.sub-text {\r\n  color: $description !important;\r\n  font-weight: 400;\r\n}\r\n.upgrade {\r\n  color: $primary !important;\r\n}\r\n.log-out {\r\n  color: $danger !important;\r\n}\r\n\r\n.user-info {\r\n  padding: 0.3125rem;\r\n  cursor: default;\r\n}\r\n.separator-line {\r\n  border-top: 1px solid $line;\r\n  margin: 0.625rem 0rem;\r\n}\r\n",
                    "styleUrl": "./user-avatar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "username": {
                    "name": "username",
                    "getSignature": {
                        "name": "username",
                        "type": "",
                        "returnType": "",
                        "line": 26
                    }
                },
                "userFirstLetter": {
                    "name": "userFirstLetter",
                    "getSignature": {
                        "name": "userFirstLetter",
                        "type": "",
                        "returnType": "",
                        "line": 30
                    }
                },
                "companyName": {
                    "name": "companyName",
                    "getSignature": {
                        "name": "companyName",
                        "type": "",
                        "returnType": "",
                        "line": 40
                    }
                },
                "email": {
                    "name": "email",
                    "getSignature": {
                        "name": "email",
                        "type": "",
                        "returnType": "",
                        "line": 50
                    }
                },
                "isInTrial": {
                    "name": "isInTrial",
                    "getSignature": {
                        "name": "isInTrial",
                        "type": "",
                        "returnType": "",
                        "line": 60
                    }
                }
            },
            "templateData": "<div\r\n  class=\"avatar-container align-items-center justify-content-center d-flex\"\r\n  dropdown\r\n  #dropdown=\"bs-dropdown\"\r\n  placement=\"bottom left\"\r\n  (onShown)=\"showAvatarOuterCircle = true\"\r\n  (onHidden)=\"showAvatarOuterCircle = false\"\r\n>\r\n  <div\r\n    class=\"avatar d-flex justify-content-center align-items-center\"\r\n    dropdownToggle\r\n    #dropdownToggleElement\r\n  >\r\n    <div\r\n      class=\"avatar-outer-circle\"\r\n      [class.avatar-outer-circle-show]=\"showAvatarOuterCircle\"\r\n    ></div>\r\n    {{ userFirstLetter | uppercase }}\r\n  </div>\r\n  <div\r\n    *dropdownMenu\r\n    #dropdownElment\r\n    class=\"dropdown-menu user-avatar-dropdown\"\r\n    [style.left]=\"getDropDownLeftOffset(dropdownToggleElement, dropdownElment)\"\r\n    role=\"menu\"\r\n  >\r\n    <div class=\"d-flex flex-column user-info\">\r\n      <div class=\"main-text d-flex flex-wrap\">\r\n        {{ username | titlecase }} &nbsp;\r\n        <span class=\"sub-text\">({{ companyName }})</span>\r\n      </div>\r\n      <div class=\"sub-text\">{{ email }}</div>\r\n    </div>\r\n    <div class=\"separator-line\"></div>\r\n    <div>\r\n      <a\r\n        class=\"dropdown-item upgrade\"\r\n        *ngIf=\"isInTrial\"\r\n        routerLink=\"/trial-status\"\r\n      >\r\n        Upgrade</a\r\n      >\r\n      <a (click)=\"logout()\" class=\"dropdown-item log-out\"> Logout</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "VariableListComponent",
            "id": "component-VariableListComponent-4ec10fc093c4565c7d82414d81eae6aa39f94f806654bf63539ff52c005a1fa7446a812a8c405dc8b553e7c27d9d9e6f8a421343fa07b957868de8290bd46096",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/configs-sidebar/configs-list/configs-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-configs-list",
            "styleUrls": [
                "./configs-list.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./configs-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "configsListScope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "ConfigScope",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedVariable",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<literal type>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "variables$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Config[]>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "viewMode$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteVariable",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { BuilderSelectors } from '../../../../../store/selector/flow-builder.selector';\nimport { PieceAction } from '../../../../../store/action/piece.action';\nimport { FlowsActions } from '../../../../../store/action/flows.action';\nimport { Config } from '../../../../../../common-layout/model/fields/variable/config';\nimport { ConfigScope } from '../../../../../../common-layout/model/enum/config-scope-type.enum';\n\n@Component({\n\tselector: 'app-configs-list',\n\ttemplateUrl: './configs-list.component.html',\n\tstyleUrls: ['./configs-list.component.css'],\n})\nexport class VariableListComponent implements OnInit {\n\t@Output() selectedVariable: EventEmitter<{ value: Config; index: number }> = new EventEmitter<any>();\n\t@Input() configsListScope: ConfigScope;\n\n\tvariables$: Observable<Config[]>;\n\tviewMode$: Observable<boolean>;\n\n\tconstructor(private store: Store) {}\n\n\tngOnInit(): void {\n\t\tthis.viewMode$ = this.store.select(BuilderSelectors.selectReadOnly);\n\t\tif (this.configsListScope === ConfigScope.FLOW) {\n\t\t\tthis.variables$ = this.store.select(BuilderSelectors.selectCurrentFlowConfigs);\n\t\t} else if (this.configsListScope === ConfigScope.COLLECTION) {\n\t\t\tthis.variables$ = this.store.select(BuilderSelectors.selectCurrentCollectionConfigs);\n\t\t}\n\t}\n\n\tdeleteVariable(index: number) {\n\t\tif (this.configsListScope === ConfigScope.FLOW) {\n\t\t\tthis.store.dispatch(FlowsActions.deleteConfig({ configIndex: index }));\n\t\t} else if (this.configsListScope === ConfigScope.COLLECTION) {\n\t\t\tthis.store.dispatch(PieceAction.deleteConfig({ configIndex: index }));\n\t\t}\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".variable-list-margin {\r\n  margin: 20px;\r\n}\r\n",
                    "styleUrl": "./configs-list.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"variable-list-margin\" *ngIf=\"(variables$ | async)!.length > 0\">\r\n  <app-variable-content\r\n    *ngFor=\"let v of variables$ | async; let i = index\"\r\n    [variable]=\"v\"\r\n    [viewMode]=\"viewMode$ | async | defaultFalse\"\r\n    (deleteEvent)=\"deleteVariable(i)\"\r\n    (click)=\"selectedVariable.emit({ value: v, index: i })\"\r\n  >\r\n  </app-variable-content>\r\n</div>\r\n\r\n<div\r\n  *ngIf=\"(variables$ | async)?.length === 0\"\r\n  class=\"d-column justify-content-center align-items-center\"\r\n>\r\n  <svg-icon src=\"assets/img/custom/variables-list.svg\"></svg-icon>\r\n  <p class=\"text-description\">No variables yet!</p>\r\n</div>\r\n"
        },
        {
            "name": "VariableSidebarComponent",
            "id": "component-VariableSidebarComponent-8eeaa94313060fd6ed0678f0519b50ffea27c566d706fc45eac10cb4968d6edf55b372fa29a74b6bcea77174d625eddbb7264d62e4dba5457a61a2f3ef8d3acd",
            "file": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/configs-sidebar/configs-sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-configs-sidebar",
            "styleUrls": [
                "./configs-sidebar.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./configs-sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "createEditConfigModalRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BsModalRef",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "currentTab",
                    "defaultValue": "ConfigScope.COLLECTION",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigScope",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "viewMode$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "changeTab",
                    "args": [
                        {
                            "name": "selectedIndex",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "selectedIndex",
                            "type": "number | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openConfigVariableModal",
                    "args": [
                        {
                            "name": "$event",
                            "type": "literal type | undefined",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configScope",
                            "type": "ConfigScope",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "literal type | undefined",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configScope",
                            "type": "ConfigScope",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { LeftSideBarType } from 'src/app/layout/common-layout/model/enum/left-side-bar-type.enum';\nimport { BuilderSelectors } from '../../../../store/selector/flow-builder.selector';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\nimport { FlowsActions } from '../../../../store/action/flows.action';\nimport { ConfigScope } from '../../../../../common-layout/model/enum/config-scope-type.enum';\nimport { Config } from '../../../../../common-layout/model/fields/variable/config';\nimport { CreateEditConfigModalComponent } from '../create-or-edit-config-modal/create-or-edit-config-modal.component';\n\n@Component({\n\tselector: 'app-configs-sidebar',\n\ttemplateUrl: './configs-sidebar.component.html',\n\tstyleUrls: ['./configs-sidebar.component.css'],\n})\nexport class VariableSidebarComponent {\n\tcurrentTab: ConfigScope = ConfigScope.COLLECTION;\n\n\tviewMode$: Observable<boolean>;\n\tcreateEditConfigModalRef: BsModalRef;\n\n\tconstructor(private modalService: BsModalService, private store: Store) {\n\t\tthis.viewMode$ = this.store.select(BuilderSelectors.selectReadOnly);\n\t}\n\n\tcloseSidebar() {\n\t\tthis.store.dispatch(\n\t\t\tFlowsActions.setLeftSidebar({\n\t\t\t\tsidebarType: LeftSideBarType.NONE,\n\t\t\t\tprops: {},\n\t\t\t})\n\t\t);\n\t}\n\n\topenConfigVariableModal($event: { value: Config; index: number } | undefined, configScope: ConfigScope) {\n\t\tthis.createEditConfigModalRef = this.modalService.show(CreateEditConfigModalComponent, {\n\t\t\tignoreBackdropClick: true,\n\t\t\tclass: 'modal-dialog-centered',\n\t\t\tinitialState: {\n\t\t\t\tconfigScopeUserSelectedInList: configScope,\n\t\t\t\tconfigIndexInConfigsList: $event == undefined ? undefined : $event.index,\n\t\t\t\tconfigToUpdate: $event == undefined ? undefined : $event.value,\n\t\t\t},\n\t\t});\n\t}\n\n\tget pieceConfigEnumType() {\n\t\treturn ConfigScope;\n\t}\n\n\tchangeTab(selectedIndex: number | null) {\n\t\tthis.currentTab = selectedIndex === 1 ? ConfigScope.FLOW : ConfigScope.COLLECTION;\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".column {\r\n  height: 100%;\r\n  /* allows both columns to span the full height of the browser window */\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* places the left and right headers above the bottom content */\r\n}\r\n\r\n\r\n.bottom {\r\n  flex-grow: 1;\r\n  /* ensures that the container will take up the full height of the parent container */\r\n  overflow-y: auto;\r\n  /* adds scroll to this container */\r\n}\r\n\r\n.tab-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  justify-content: space-around;\r\n  padding: 0px;\r\n}\r\n\r\n.tab-title {\r\n  width: 100px;\r\n}\r\n\r\n.tab {\r\n  display: flex;\r\n  flex-direction: row;\r\n  cursor: pointer;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n\r\n.tab-active {\r\n  box-shadow: inset 0px -1px 0px #262626;\r\n}\r\n",
                    "styleUrl": "./configs-sidebar.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "modalService",
                        "type": "BsModalService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "pieceConfigEnumType": {
                    "name": "pieceConfigEnumType",
                    "getSignature": {
                        "name": "pieceConfigEnumType",
                        "type": "",
                        "returnType": "",
                        "line": 49
                    }
                }
            },
            "templateData": "<div class=\"column config-variables\" >\r\n  <div class=\"top p-3\">\r\n    <app-sidebar-header\r\n      [backArrow]=\"false\"\r\n      (closeClicked)=\"closeSidebar()\"\r\n      [title]=\"'Config variables'\"\r\n    ></app-sidebar-header>\r\n    <app-button\r\n    btnColor=\"primary\"\r\n    btnStyle=\"basic\"\r\n    btnSize=\"medium\"\r\n    *ngIf=\"!(viewMode$ | async | defaultTrue)\"\r\n    (buttonClicked)=\"openConfigVariableModal(undefined, currentTab)\"\r\n\r\n  >    + New Variable\r\n  </app-button>\r\n  </div>\r\n  <div class=\"bottom\">\r\n    <div class=\"column\">\r\n      <div>\r\n        <mat-tab-group\r\n          #tabGroup\r\n          (selectedTabChange)=\"changeTab(tabGroup.selectedIndex)\"\r\n          [selectedIndex]=\"currentTab === pieceConfigEnumType.COLLECTION ? 0 : 1\"\r\n        >\r\n          <mat-tab>\r\n            <ng-template mat-tab-label>\r\n              <div\r\n                class=\"category-label\"\r\n                [class.category-label-active]=\"tabGroup.selectedIndex === 0\"\r\n              >\r\n                Collection\r\n              </div>\r\n            </ng-template>\r\n            <app-configs-list\r\n              [configsListScope]=\"pieceConfigEnumType.COLLECTION\"\r\n              (selectedVariable)=\"\r\n                openConfigVariableModal($event, pieceConfigEnumType.COLLECTION)\r\n              \"\r\n            ></app-configs-list>\r\n          </mat-tab>\r\n          <mat-tab>\r\n            <ng-template mat-tab-label>\r\n              <div\r\n                class=\"category-label\"\r\n                [class.category-label-active]=\"tabGroup.selectedIndex === 1\"\r\n              >\r\n                Current Flow\r\n              </div>\r\n            </ng-template>\r\n            <app-configs-list\r\n              [configsListScope]=\"pieceConfigEnumType.FLOW\"\r\n              (selectedVariable)=\"\r\n                openConfigVariableModal($event, pieceConfigEnumType.FLOW)\r\n              \"\r\n            ></app-configs-list>\r\n          </mat-tab>\r\n        </mat-tab-group>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-e6663f338f984c5af1c992690f7b0f1c93bea73688a5e17a1b1b6969dcdd8ca10fe7aaf8fda46d3fd90f99f6d8f792722d9321329740eb3c1136e3dbef7630d4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { CUSTOM_ELEMENTS_SCHEMA, ErrorHandler, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlowLayoutModule } from './layout/flow-builder/flow-layout.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { environment } from '../environments/environment';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { tokenGetter } from './layout/common-layout/helper/helpers';\nimport { NotFoundComponent } from './layout/not-found/not-found.component';\nimport { RedirectUrlComponent } from './layout/redirect-url/redirect-url.component';\nimport { ActionReducer, StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport LogRocket from 'logrocket';\nimport { HttpInterceptorProvider } from './service/http-interceptor.service';\nimport { AngularSvgIconModule } from 'angular-svg-icon';\nimport { CommonModule } from '@angular/common';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { RollbarErrorHandler, rollbarFactory, RollbarService } from './rollbar';\n\nconst reduxMiddleware = LogRocket.reduxMiddleware();\n\nexport function logrocketMiddleware(reducer): ActionReducer<any, any> {\n\tlet currentState;\n\tconst fakeDispatch = reduxMiddleware({\n\t\tgetState: () => currentState,\n\t})(() => {});\n\n\treturn function (state, action) {\n\t\tconst newState = reducer(state, action);\n\t\tcurrentState = state;\n\t\tfakeDispatch(action);\n\t\treturn newState;\n\t};\n}\n\n@NgModule({\n\tdeclarations: [AppComponent, NotFoundComponent, RedirectUrlComponent],\n\timports: [\n\t\tCommonModule,\n\t\tBrowserModule,\n\t\tFlowLayoutModule,\n\t\tAppRoutingModule,\n\t\tBrowserAnimationsModule,\n\t\tStoreModule.forRoot(\n\t\t\t{},\n\t\t\t{\n\t\t\t\tmetaReducers: [logrocketMiddleware],\n\t\t\t}\n\t\t),\n\t\tStoreDevtoolsModule.instrument({\n\t\t\tmaxAge: 25, // Retains last 25 states\n\t\t\tautoPause: true, // Pauses recording actions and state changes when the extension window is not open\n\t\t}),\n\t\tEffectsModule.forRoot(),\n\t\tHttpClientModule,\n\t\tFontAwesomeModule,\n\t\tJwtModule.forRoot({\n\t\t\tconfig: {\n\t\t\t\ttokenGetter,\n\t\t\t\tallowedDomains: [environment.apiDomainUrl],\n\t\t\t\tdisallowedRoutes: [environment.apiDomainUrl + '/authentication/*'],\n\t\t\t},\n\t\t}),\n\t\tAngularSvgIconModule,\n\t],\n\tproviders: [\n\t\tHttpInterceptorProvider,\n\t\t{ provide: ErrorHandler, useClass: RollbarErrorHandler },\n\t\t{ provide: RollbarService, useFactory: rollbarFactory },\n\t],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [],\n\tbootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "NotFoundComponent"
                        },
                        {
                            "name": "RedirectUrlComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "FlowLayoutModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-b5e21d2d584ea71b3508c89798ca54bcc41576f33c85419ab8f432aacc8e8a0a797db0d33c5a366ff84eafb608d5fbc3809b87e451d9e1315b0f1279dbe2cbe4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserLoggedIn } from './guards/user-logged-in.guard';\nimport { DashboardLayoutComponent } from './layout/dashboard-layout/dashboard-layout.component';\nimport { NotFoundComponent } from './layout/not-found/not-found.component';\nimport { RedirectUrlComponent } from './layout/redirect-url/redirect-url.component';\nimport { AuthLayoutComponent } from './layout/auth-layout/auth-layout.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: DashboardLayoutComponent,\n\t\tcanActivate: [UserLoggedIn],\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tloadChildren: () =>\n\t\t\t\t\t\"import('./layout/dashboard-layout/dashboard-layout.module').then(m => m.DashboardLayoutModule)\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tpath: '',\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tloadChildren: () => \"import('./layout/flow-builder/flow-layout.module').then(m => m.FlowLayoutModule)\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tpath: '',\n\t\tcomponent: AuthLayoutComponent,\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tloadChildren: () => \"import('./layout/auth-layout/auth-layout.module').then(m => m.AuthLayoutModule)\",\n\t\t\t},\n\t\t],\n\t},\n\t{\n\t\tpath: 'redirect',\n\t\tcomponent: RedirectUrlComponent,\n\t},\n\t{\n\t\tpath: '**',\n\t\tcomponent: NotFoundComponent,\n\t},\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forRoot(routes, {\n\t\t\turlUpdateStrategy: 'eager',\n\t\t}),\n\t],\n\texports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthLayoutModule",
            "id": "module-AuthLayoutModule-a66d2fa6a9b0b0d7f9b2565496aeb5ca46e0f343ecf86fc076046f74e67bd89f1b0c2623b7ece7a28b979249b51634941ffecaaa0ea731879fec424193b633e9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/layout/auth-layout/auth-layout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthLayoutRoutes } from './auth-layout.routing';\nimport { SignInComponent } from './pages/sign-in/sign-in.component';\nimport { ForgetPasswordComponent } from './pages/forget-password/forget-password.component';\nimport { AuthCheckboxComponent } from './pages/check-box/auth-checkbox.component';\nimport { EmailRegistrationComponent } from './pages/email-registration/email-registration.component';\nimport { SignUpComponent } from './pages/sign-up/sign-up.component';\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\nimport { CommonLayoutModule } from '../common-layout/common-layout.module';\nimport { ClosedBetaComponent } from './pages/closed-beta/closed-beta.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { OnBoardingFormComponent } from './pages/email-registration/on-boarding-form/on-boarding-form.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { AuthLayoutComponent } from './auth-layout.component';\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(AuthLayoutRoutes),\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tCommonLayoutModule,\n\t\tMatTabsModule,\n\t\tNgSelectModule,\n\t],\n\tdeclarations: [\n\t\tAuthLayoutComponent,\n\t\tSignInComponent,\n\t\tForgetPasswordComponent,\n\t\tAuthCheckboxComponent,\n\t\tEmailRegistrationComponent,\n\t\tSignUpComponent,\n\t\tResetPasswordComponent,\n\t\tClosedBetaComponent,\n\t\tOnBoardingFormComponent,\n\t],\n})\nexport class AuthLayoutModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AuthCheckboxComponent"
                        },
                        {
                            "name": "AuthLayoutComponent"
                        },
                        {
                            "name": "ClosedBetaComponent"
                        },
                        {
                            "name": "EmailRegistrationComponent"
                        },
                        {
                            "name": "ForgetPasswordComponent"
                        },
                        {
                            "name": "OnBoardingFormComponent"
                        },
                        {
                            "name": "ResetPasswordComponent"
                        },
                        {
                            "name": "SignInComponent"
                        },
                        {
                            "name": "SignUpComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CommonLayoutModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CommonLayoutModule",
            "id": "module-CommonLayoutModule-a7e586e6ce854b3b01b2d9eb3b4af911e094cbab251ce43d04c09d7403404fed0e7597494b4e522a7fd3e4d143d3f34696d612b0993fe1455e6067796f3736c0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/layout/common-layout/common-layout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EditableTextComponent } from './components/editable-text/editable-text.component';\nimport { ConfirmDeleteModalComponent } from './components/confirm-delete-modal/confirm-delete-modal.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BasicSelectComponent } from './components/dynamic-form/dynamic-field-input-only/basic-select/basic-select.component';\nimport { IconButtonComponent } from './components/trash-icon-button/icon-button.component';\nimport { CreateNewEventModalComponent } from './components/create-new-event-modal/create-new-event-modal.component';\nimport { CreateNewEnvironmentModalComponent } from './components/create-new-environment-modal/create-new-environment-modal.component';\nimport { CreateAccountModalComponent } from './components/create-account-modal/create-account-modal.component';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { HighlightService } from './service/highlightservice';\nimport { DeployModalComponent } from './components/deploy-modal/deploy-modal.component';\nimport { StateIconComponent } from './components/status-icon/state-icon.component';\nimport { JsonViewComponent } from './components/json-view/json-view.component';\nimport { PaginationComponent } from './components/pagination/pagination.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { SelectDeploymentEnvironmentStepComponent } from './components/deploy-modal/select-targeted-environment-step/select-deployment-environment-step.component';\nimport { DeployStepGlobalConfigComponent } from './components/deploy-modal/deploy-step-collection-configs/deploy-step-collection-configs.component';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { ClickStopPropagationDirective } from './click-stop-propgation.directive';\nimport { ApButtonComponent } from './components/ap-button/ap-button.component';\nimport { ApImgComponent } from './components/ap-img/ap-img.component';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { ResponsiveTableComponent } from './components/responsive-table/responsive-table.component';\nimport { LoadingSkeletonComponent } from './components/loading-skeleton/loading-skeleton.component';\nimport { DynamicFieldInputOnlyComponent } from './components/dynamic-form/dynamic-field-input-only/dynamic-field-input-only.component';\nimport { DictionaryFormComponent } from './components/dynamic-form/dynamic-field-input-only/dictionary-form/dictionary-form.component';\nimport { DynamicFormComponent } from './components/dynamic-form/dynamic-form.component';\nimport { CreateNewPieceModalComponent } from './components/create-new-piece-modal/create-new-piece-modal.component';\nimport { MultiDropdownComponent } from './components/dynamic-form/dynamic-field-input-only/multi-dropdown/multi-dropdown.component';\nimport { ApInputComponent } from './components/ap-input/ap-input.component';\nimport { ConnectOauth2Component } from './components/dynamic-form/dynamic-field-input-only/connect-oauth2/connect-oauth2.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { LoadingIconComponent } from './components/loading-icon/loading-icon.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { UploadImageControlComponent } from './components/upload-image-control/upload-image-control.component';\nimport { DragDropDirective } from './components/upload-image-control/drag-drop.directive';\nimport { SaveCancelPanelSectionComponent } from './components/save-cancel-panel-section/save-cancel-panel-section.component';\nimport { DefaultFalsePipe } from './pipe/default-false.pipe';\nimport { DefaultTruePipe } from './pipe/default-true.pipe';\nimport { OutputLogPipe } from './pipe/output-log';\nimport { DefaultZeroPipe } from './pipe/default-zero.pipe';\nimport { CodeEmbeddedEditorComponent } from './components/dynamic-form/dynamic-field-input-only/code-embeddedEditor/code-embedded-editor.component';\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\nimport { SelectOauth2Component } from './components/dynamic-form/dynamic-field-input-only/select-oauth2/select-oauth2.component';\nimport { SelectEventComponent } from './components/dynamic-form/dynamic-field-input-only/select-event/select-event.component';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { EventsEffect } from './store/effect/events.effect';\nimport { eventsReducer } from './store/reducer/events.reducer';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BsDropdownConfig, BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AngularSvgIconModule } from 'angular-svg-icon';\nimport { DocumentationLinkComponent } from './components/dynamic-form/dynamic-field-input-only/documentation-link/documentation-link.component';\nimport { JsonViewModalComponent } from './components/json-view-modal/json-view-modal.component';\nimport { MatTooltipDefaultOptions, MatTooltipModule, MAT_TOOLTIP_DEFAULT_OPTIONS } from '@angular/material/tooltip';\nimport { MonacoEditorModule } from '@materia-ui/ngx-monaco-editor';\nimport { RawOutputLogPipe } from './pipe/raw-output-log';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { TableComponent } from './components/table/table.component';\nimport { LongTextFormControlComponent } from './components/form-controls/long-text-form-control/long-text-form-control.component';\nimport { DictionaryFormControlComponent } from './components/form-controls/dictionary-form-control/dictionary-form-control.component';\nimport { OAuth2ConnectControlComponent } from './components/form-controls/o-auth2-connect-control/o-auth2-connect-control.component';\nimport { ConfigsFormComponent } from './components/configs-form/configs-form.component';\nimport { NgSelectItemTemplateComponent } from './components/form-controls/ng-select-item-template/ng-select-item-template.component';\nimport { NgSelectLoadingSpinnerTemplateComponent } from './components/form-controls/ng-select-loading-spinner-template/ng-select-loading-spinner-template.component';\nimport { CodeArtifactFormControlComponent } from './components/form-controls/code-artifact-form-control/code-artifact-form-control.component';\nimport { CodeArtifactControlFullscreenComponent } from './components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/code-artifact-control-fullscreen.component';\nimport { TestCodeFormModalComponent } from './components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/test-code-form-modal/test-code-form-modal.component';\nimport { NewAddNpmPackageModalComponent } from './components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/add-npm-package-modal/add-npm-package-modal.component';\nimport { NgSelectTagValueTemplateComponent } from './components/form-controls/ng-select-tag-value-template/ng-select-tag-value-template.component';\nimport { organizationReducer } from './store/reducer/organization.reducer';\nimport { projectReducer } from './store/reducer/project.reducer';\nimport { OrganizationsEffect } from './store/effect/organizations.effect';\nimport { ProjectsEffect } from './store/effect/projects.effect';\nimport { environmentReducer } from './store/reducer/environments.reducer';\nimport { EnvironmentsEffect } from './store/effect/environments.effect';\nimport { ItemTextPipe } from './components/form-controls/ng-select-tag-value-template/item-text.pipe';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nexport const materialTooltipDefaults: MatTooltipDefaultOptions = {\n\tshowDelay: 0,\n\thideDelay: 0,\n\ttouchendHideDelay: 0,\n};\n\n@NgModule({\n\tdeclarations: [\n\t\tEditableTextComponent,\n\t\tConfirmDeleteModalComponent,\n\t\tBasicSelectComponent,\n\t\tIconButtonComponent,\n\t\tDictionaryFormComponent,\n\t\tCreateNewEventModalComponent,\n\t\tCreateNewEnvironmentModalComponent,\n\t\tCreateAccountModalComponent,\n\t\tDeployModalComponent,\n\t\tStateIconComponent,\n\t\tJsonViewComponent,\n\t\tPaginationComponent,\n\t\tSelectDeploymentEnvironmentStepComponent,\n\t\tDeployStepGlobalConfigComponent,\n\t\tClickStopPropagationDirective,\n\t\tApButtonComponent,\n\t\tApImgComponent,\n\t\tResponsiveTableComponent,\n\t\tLoadingSkeletonComponent,\n\t\tDynamicFieldInputOnlyComponent,\n\t\tDynamicFormComponent,\n\t\tCreateNewPieceModalComponent,\n\t\tApInputComponent,\n\t\tMultiDropdownComponent,\n\t\tConnectOauth2Component,\n\t\tLoadingIconComponent,\n\t\tCodeEmbeddedEditorComponent,\n\t\tSaveCancelPanelSectionComponent,\n\t\tUploadImageControlComponent,\n\t\tDragDropDirective,\n\t\tDefaultFalsePipe,\n\t\tDefaultTruePipe,\n\t\tOutputLogPipe,\n\t\tRawOutputLogPipe,\n\t\tDefaultZeroPipe,\n\t\tSelectOauth2Component,\n\t\tSelectEventComponent,\n\t\tDocumentationLinkComponent,\n\t\tJsonViewModalComponent,\n\t\tLongTextFormControlComponent,\n\t\tCheckboxComponent,\n\t\tTableComponent,\n\t\tDictionaryFormControlComponent,\n\t\tOAuth2ConnectControlComponent,\n\t\tConfigsFormComponent,\n\t\tNgSelectItemTemplateComponent,\n\t\tNgSelectLoadingSpinnerTemplateComponent,\n\t\tCodeArtifactFormControlComponent,\n\t\tCodeArtifactControlFullscreenComponent,\n\t\tTestCodeFormModalComponent,\n\t\tNewAddNpmPackageModalComponent,\n\t\tNgSelectTagValueTemplateComponent,\n\t\tItemTextPipe,\n\t],\n\timports: [\n\t\tTimeagoModule,\n\t\tFontAwesomeModule,\n\t\tBsDropdownModule.forRoot(),\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tAccordionModule,\n\t\tNgxSkeletonLoaderModule,\n\t\tTooltipModule,\n\t\tMatExpansionModule,\n\t\tMatTabsModule,\n\t\tCodemirrorModule,\n\t\tFormsModule,\n\t\tEffectsModule.forFeature([EventsEffect, OrganizationsEffect, ProjectsEffect, EnvironmentsEffect]),\n\t\tStoreModule.forFeature('commonState', {\n\t\t\teventsState: eventsReducer,\n\t\t\torganizationsState: organizationReducer,\n\t\t\tprojectsState: projectReducer,\n\t\t\tenvironmentsState: environmentReducer,\n\t\t}),\n\t\tAngularSvgIconModule,\n\t\tMatTooltipModule,\n\t\tMonacoEditorModule,\n\t\tNgSelectModule,\n\t\tMatSnackBarModule,\n\t\tMatButtonModule,\n\t\tPopoverModule,\n\t],\n\texports: [\n\t\tEditableTextComponent,\n\t\tPopoverModule,\n\t\tConfirmDeleteModalComponent,\n\t\tBasicSelectComponent,\n\t\tIconButtonComponent,\n\t\tCreateNewEnvironmentModalComponent,\n\t\tCreateAccountModalComponent,\n\t\tCreateNewEventModalComponent,\n\t\tDictionaryFormComponent,\n\t\tDeployModalComponent,\n\t\tStateIconComponent,\n\t\tJsonViewComponent,\n\t\tPaginationComponent,\n\t\tApButtonComponent,\n\t\tApImgComponent,\n\t\tResponsiveTableComponent,\n\t\tLoadingSkeletonComponent,\n\t\tDynamicFormComponent,\n\t\tCreateNewPieceModalComponent,\n\t\tMultiDropdownComponent,\n\t\tApInputComponent,\n\t\tDynamicFieldInputOnlyComponent,\n\t\tLoadingIconComponent,\n\t\tDragDropDirective,\n\t\tUploadImageControlComponent,\n\t\tSaveCancelPanelSectionComponent,\n\t\tDefaultFalsePipe,\n\t\tDefaultTruePipe,\n\t\tDefaultZeroPipe,\n\t\tBsDropdownModule,\n\t\tTooltipModule,\n\t\tAngularSvgIconModule,\n\t\tFontAwesomeModule,\n\t\tClickStopPropagationDirective,\n\t\tMatSnackBarModule,\n\t\tMatButtonModule,\n\t\tNgSelectModule,\n\t\tLongTextFormControlComponent,\n\t\tCheckboxComponent,\n\t\tTableComponent,\n\t\tCodeEmbeddedEditorComponent,\n\t\tOAuth2ConnectControlComponent,\n\t\tDictionaryFormControlComponent,\n\t\tConfigsFormComponent,\n\t\tNgSelectItemTemplateComponent,\n\t\tCodeArtifactFormControlComponent,\n\t\tNgSelectTagValueTemplateComponent,\n\t\tNgSelectLoadingSpinnerTemplateComponent,\n\t\tMatTooltipModule,\n\t],\n\tproviders: [\n\t\tHighlightService,\n\t\tBsDropdownConfig,\n\t\t{ provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { duration: 3000 } },\n\t\t{ provide: MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: materialTooltipDefaults },\n\t],\n})\nexport class CommonLayoutModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "HighlightService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ApButtonComponent"
                        },
                        {
                            "name": "ApImgComponent"
                        },
                        {
                            "name": "ApInputComponent"
                        },
                        {
                            "name": "BasicSelectComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ClickStopPropagationDirective"
                        },
                        {
                            "name": "CodeArtifactControlFullscreenComponent"
                        },
                        {
                            "name": "CodeArtifactFormControlComponent"
                        },
                        {
                            "name": "CodeEmbeddedEditorComponent"
                        },
                        {
                            "name": "ConfigsFormComponent"
                        },
                        {
                            "name": "ConfirmDeleteModalComponent"
                        },
                        {
                            "name": "ConnectOauth2Component"
                        },
                        {
                            "name": "CreateAccountModalComponent"
                        },
                        {
                            "name": "CreateNewEnvironmentModalComponent"
                        },
                        {
                            "name": "CreateNewEventModalComponent"
                        },
                        {
                            "name": "CreateNewPieceModalComponent"
                        },
                        {
                            "name": "DefaultFalsePipe"
                        },
                        {
                            "name": "DefaultTruePipe"
                        },
                        {
                            "name": "DefaultZeroPipe"
                        },
                        {
                            "name": "DeployModalComponent"
                        },
                        {
                            "name": "DeployStepGlobalConfigComponent"
                        },
                        {
                            "name": "DictionaryFormComponent"
                        },
                        {
                            "name": "DictionaryFormControlComponent"
                        },
                        {
                            "name": "DocumentationLinkComponent"
                        },
                        {
                            "name": "DragDropDirective"
                        },
                        {
                            "name": "DynamicFieldInputOnlyComponent"
                        },
                        {
                            "name": "DynamicFormComponent"
                        },
                        {
                            "name": "EditableTextComponent"
                        },
                        {
                            "name": "IconButtonComponent"
                        },
                        {
                            "name": "ItemTextPipe"
                        },
                        {
                            "name": "JsonViewComponent"
                        },
                        {
                            "name": "JsonViewModalComponent"
                        },
                        {
                            "name": "LoadingIconComponent"
                        },
                        {
                            "name": "LoadingSkeletonComponent"
                        },
                        {
                            "name": "LongTextFormControlComponent"
                        },
                        {
                            "name": "MultiDropdownComponent"
                        },
                        {
                            "name": "NewAddNpmPackageModalComponent"
                        },
                        {
                            "name": "NgSelectItemTemplateComponent"
                        },
                        {
                            "name": "NgSelectLoadingSpinnerTemplateComponent"
                        },
                        {
                            "name": "NgSelectTagValueTemplateComponent"
                        },
                        {
                            "name": "OAuth2ConnectControlComponent"
                        },
                        {
                            "name": "OutputLogPipe"
                        },
                        {
                            "name": "PaginationComponent"
                        },
                        {
                            "name": "RawOutputLogPipe"
                        },
                        {
                            "name": "ResponsiveTableComponent"
                        },
                        {
                            "name": "SaveCancelPanelSectionComponent"
                        },
                        {
                            "name": "SelectDeploymentEnvironmentStepComponent"
                        },
                        {
                            "name": "SelectEventComponent"
                        },
                        {
                            "name": "SelectOauth2Component"
                        },
                        {
                            "name": "StateIconComponent"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TestCodeFormModalComponent"
                        },
                        {
                            "name": "UploadImageControlComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ApButtonComponent"
                        },
                        {
                            "name": "ApImgComponent"
                        },
                        {
                            "name": "ApInputComponent"
                        },
                        {
                            "name": "BasicSelectComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ClickStopPropagationDirective"
                        },
                        {
                            "name": "CodeArtifactFormControlComponent"
                        },
                        {
                            "name": "CodeEmbeddedEditorComponent"
                        },
                        {
                            "name": "ConfigsFormComponent"
                        },
                        {
                            "name": "ConfirmDeleteModalComponent"
                        },
                        {
                            "name": "CreateAccountModalComponent"
                        },
                        {
                            "name": "CreateNewEnvironmentModalComponent"
                        },
                        {
                            "name": "CreateNewEventModalComponent"
                        },
                        {
                            "name": "CreateNewPieceModalComponent"
                        },
                        {
                            "name": "DefaultFalsePipe"
                        },
                        {
                            "name": "DefaultTruePipe"
                        },
                        {
                            "name": "DefaultZeroPipe"
                        },
                        {
                            "name": "DeployModalComponent"
                        },
                        {
                            "name": "DictionaryFormComponent"
                        },
                        {
                            "name": "DictionaryFormControlComponent"
                        },
                        {
                            "name": "DragDropDirective"
                        },
                        {
                            "name": "DynamicFieldInputOnlyComponent"
                        },
                        {
                            "name": "DynamicFormComponent"
                        },
                        {
                            "name": "EditableTextComponent"
                        },
                        {
                            "name": "IconButtonComponent"
                        },
                        {
                            "name": "JsonViewComponent"
                        },
                        {
                            "name": "LoadingIconComponent"
                        },
                        {
                            "name": "LoadingSkeletonComponent"
                        },
                        {
                            "name": "LongTextFormControlComponent"
                        },
                        {
                            "name": "MultiDropdownComponent"
                        },
                        {
                            "name": "NgSelectItemTemplateComponent"
                        },
                        {
                            "name": "NgSelectLoadingSpinnerTemplateComponent"
                        },
                        {
                            "name": "NgSelectTagValueTemplateComponent"
                        },
                        {
                            "name": "OAuth2ConnectControlComponent"
                        },
                        {
                            "name": "PaginationComponent"
                        },
                        {
                            "name": "ResponsiveTableComponent"
                        },
                        {
                            "name": "SaveCancelPanelSectionComponent"
                        },
                        {
                            "name": "StateIconComponent"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "UploadImageControlComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardLayoutModule",
            "id": "module-DashboardLayoutModule-04e5742ea2ace40527b68363239eb1a1c7d2067a4116db09262a40ba9fc359089b621cef6813582ff0b5b1ad2cac6bb8f1632e9589a6cc252f9ccb7cef8d9c3c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/layout/dashboard-layout/dashboard-layout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DashboardLayoutComponent } from './dashboard-layout.component';\nimport { RouterModule } from '@angular/router';\nimport { DashboardLayoutRouting } from './dashboard-layout.routing';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { RunsComponent } from './pages/runs/runs.component';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { AccountsComponent } from './pages/accounts/accounts.component';\nimport { InstancesComponent } from './pages/instances/instances.component';\nimport { EnvironmentsComponent } from './pages/environments/environments.component';\nimport { EventsComponent } from './pages/events/events.component';\nimport { CommonLayoutModule } from '../common-layout/common-layout.module';\nimport { EnvironmentFilterComponent } from './components/environment-filter/environment-filter.component';\nimport { CollectionComponents } from './pages/collections/collection-components.component';\nimport { ListPiecesResolver } from './resolvers/list-pieces-resolver.service';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { ApiKeysComponent } from './pages/api-keys/api-keys.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { AccountsFilterComponent } from './components/accounts-filter/accounts-filter.component';\nimport { FilterBarComponent } from './components/filter-bar/filter-bar.component';\nimport { InstancesFilterComponent } from './components/instances-filter/instances-filter.component';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\nimport { EmptyCollectionsTableComponent } from './pages/collections/empty-collections-table/empty-collections-table.component';\nimport { UserAvatarComponent } from './components/user-avatar/user-avatar.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TrialCountdownComponent } from './components/trial-countdown/trial-countdown.component';\nimport { TrialStatusComponent } from './pages/trial-status/trial-status.component';\nimport { AuthenticationComponent } from './pages/authentication/authentication.component';\nimport { FirebaseProjectIdModalComponent } from './pages/authentication/firebase-project-id-modal/firebase-project-id-modal.component';\nimport { SigningKeyModalComponent } from './pages/authentication/signing-key-modal/signing-key-modal.component';\nimport { ActionReducerMap, StoreModule } from '@ngrx/store';\nimport { authenticationReducer, AuthenticationState } from './store/reducer/authentication.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthenticationEffects } from './store/effect/authentication.effects';\nimport { CreateApiKeyModalComponent } from './components/create-api-key-modal/create-api-key-modal.component';\nimport { ApiKeysEffects } from './store/effect/api-keys.effects';\nimport { apiKeysReducer, ApiKeysState } from './store/reducer/api-keys.reducer';\n\nexport interface State {\n\tauthenticationState: AuthenticationState;\n\tapiKeys: ApiKeysState;\n}\nconst DASHBOARD_FEATURE_NAME = 'dashboard';\n\nconst reducers: ActionReducerMap<State> = {\n\tauthenticationState: authenticationReducer,\n\tapiKeys: apiKeysReducer,\n};\n\n@NgModule({\n\tdeclarations: [\n\t\tDashboardLayoutComponent,\n\t\tSidebarComponent,\n\t\tRunsComponent,\n\t\tAccountsComponent,\n\t\tInstancesComponent,\n\t\tEnvironmentsComponent,\n\t\tEventsComponent,\n\t\tEnvironmentFilterComponent,\n\t\tCollectionComponents,\n\t\tApiKeysComponent,\n\t\tAccountsFilterComponent,\n\t\tFilterBarComponent,\n\t\tInstancesFilterComponent,\n\t\tEmptyCollectionsTableComponent,\n\t\tUserAvatarComponent,\n\t\tTrialCountdownComponent,\n\t\tTrialStatusComponent,\n\t\tAuthenticationComponent,\n\t\tFirebaseProjectIdModalComponent,\n\t\tSigningKeyModalComponent,\n\t\tCreateApiKeyModalComponent,\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tCommonLayoutModule,\n\t\tRouterModule.forChild(DashboardLayoutRouting),\n\t\tReactiveFormsModule,\n\t\tMatProgressSpinnerModule,\n\t\tProgressbarModule,\n\t\tMatProgressBarModule,\n\t\tFontAwesomeModule,\n\t\tTimeagoModule.forChild(),\n\t\tNgxSkeletonLoaderModule,\n\t\tEffectsModule.forFeature([AuthenticationEffects, ApiKeysEffects]),\n\t\tStoreModule.forFeature(DASHBOARD_FEATURE_NAME, reducers),\n\t],\n\texports: [],\n\tproviders: [ListPiecesResolver],\n})\nexport class DashboardLayoutModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AccountsComponent"
                        },
                        {
                            "name": "AccountsFilterComponent"
                        },
                        {
                            "name": "ApiKeysComponent"
                        },
                        {
                            "name": "AuthenticationComponent"
                        },
                        {
                            "name": "CollectionComponents"
                        },
                        {
                            "name": "CreateApiKeyModalComponent"
                        },
                        {
                            "name": "DashboardLayoutComponent"
                        },
                        {
                            "name": "EmptyCollectionsTableComponent"
                        },
                        {
                            "name": "EnvironmentFilterComponent"
                        },
                        {
                            "name": "EnvironmentsComponent"
                        },
                        {
                            "name": "EventsComponent"
                        },
                        {
                            "name": "FilterBarComponent"
                        },
                        {
                            "name": "FirebaseProjectIdModalComponent"
                        },
                        {
                            "name": "InstancesComponent"
                        },
                        {
                            "name": "InstancesFilterComponent"
                        },
                        {
                            "name": "RunsComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        },
                        {
                            "name": "SigningKeyModalComponent"
                        },
                        {
                            "name": "TrialCountdownComponent"
                        },
                        {
                            "name": "TrialStatusComponent"
                        },
                        {
                            "name": "UserAvatarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CommonLayoutModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FlowLayoutModule",
            "id": "module-FlowLayoutModule-f65d4cd84388695e325c1718aa8c2fa542069da60159c03ba1aac611dc37f49ee8fced936b0d3d1f586b25ef1783dad1bc1b044c3578c750387177984ba0fbb3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/layout/flow-builder/flow-layout.module.ts",
            "methods": [],
            "sourceCode": "import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlowLayoutRouting } from './flow-layout.routing';\r\nimport { PieceBuilderComponent } from './page/flow-builder/piece-builder.component';\r\nimport { FlowBuilderHeaderComponent } from './page/flow-builder/flow-builder-header/flow-builder-header.component';\r\nimport { FlowItemComponent } from './page/flow-builder/flow-item-tree/flow-item/flow-item.component';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { FlowRightSidebarComponent } from './page/flow-builder/flow-right-sidebar/flow-right-sidebar.component';\r\nimport { FlowBuilderTabsComponent } from './page/flow-builder/flow-builder-tabs/flow-builder-tabs.component';\r\nimport { CommonLayoutModule } from '../common-layout/common-layout.module';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { BsModalService, ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ChevronDropdownMenuComponent } from './components/chevron-dropdown-menu/chevron-dropdown-menu.component';\r\nimport { FlowBuilderTabComponent } from './page/flow-builder/flow-builder-tabs/flow-builder-tab/flow-builder-tab.component';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { FlowItemTreeComponent } from './page/flow-builder/flow-item-tree/flow-item-tree.component';\r\nimport { SimpleLineConnectionComponent } from './page/flow-builder/flow-item-tree/flow-item/flow-item-connection/simple-line-connection/simple-line-connection.component';\r\nimport { LoopLineConnectionComponent } from './page/flow-builder/flow-item-tree/flow-item/flow-item-connection/loop-line-connection/loop-line-connection.component';\r\nimport { StepResultComponent } from './page/flow-builder/flow-left-sidebar/run-details/steps-results-list/step-result.component';\r\nimport { SelectedStepResultComponent } from './page/flow-builder/flow-left-sidebar/run-details/selected-step-result/selected-step-result.component';\r\nimport { IterationAccordionComponent } from './page/flow-builder/flow-left-sidebar/run-details/steps-results-list/iteration-accordion/iteration-accordion.component';\r\nimport { NewEditPieceSidebarComponent } from './page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/new-edit-piece-sidebar.component';\r\nimport { StepTypeSidebarComponent } from './page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-sidebar.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { StepTypItemComponent } from './page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-item/step-type-item.component';\r\nimport { StepTypeListComponent } from './page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-list/step-type-list.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\r\nimport { PieceSettingsComponent } from './page/flow-builder/flow-left-sidebar/piece-settings/piece-settings.component';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { pieceReducer } from './store/reducer/piece.reducer';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { PieceEffects } from './store/effect/piece.effects';\r\nimport { flowsReducer } from './store/reducer/flows.reducer';\r\nimport { FlowsEffects } from './store/effect/flow.effects';\r\nimport { viewModeReducer } from './store/reducer/view-mode.reducer';\r\nimport { CreateNewFlowModalComponent } from './page/flow-builder/flow-right-sidebar/create-new-flow-modal/create-new-flow-modal.component';\r\nimport { AddNpmPackageModalComponent } from './page/flow-builder/code-editor/add-npm-package-modal/add-npm-package-modal.component';\r\nimport { MonacoEditorModule } from '@materia-ui/ngx-monaco-editor';\r\nimport { VariableSidebarComponent } from './page/flow-builder/flow-left-sidebar/configs-sidebar/configs-sidebar.component';\r\nimport { ViewModeEffects } from './store/effect/viewMode.effects';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\r\nimport { TimepickerModule } from 'ngx-bootstrap/timepicker';\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { AngularSvgIconModule } from 'angular-svg-icon';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { FlowItemConnectionComponent } from './page/flow-builder/flow-item-tree/flow-item/flow-item-connection/flow-item-connection.component';\r\nimport { FlowItemContentComponent } from './page/flow-builder/flow-item-tree/flow-item/flow-item-content/flow-item-content.component';\r\nimport { RunDetailsComponent } from './page/flow-builder/flow-left-sidebar/run-details/run-details.component';\r\nimport { TestFlowModalComponent } from './components/test-flow-modal/test-flow-modal.component';\r\nimport { FlowLeftSidebarComponent } from './page/flow-builder/flow-left-sidebar/flow-left-sidebar.component';\r\nimport { TestRunBarComponent } from './page/flow-builder/test-run-bar/test-run-bar.component';\r\nimport { SidebarHeaderComponent } from './components/sidebar-header/sidebar-header.component';\r\nimport { CodeEditorComponent } from './page/flow-builder/code-editor/code-editor.component';\r\nimport { CollectionVersionSidebarComponent } from './page/flow-builder/flow-right-sidebar/collection-version-sidebar/collection-version-sidebar.component';\r\nimport { TestCodeModalComponent } from './page/flow-builder/code-editor/test-code-modal/test-code-modal.component';\r\nimport { FlowVersionSidebarComponent } from './page/flow-builder/flow-right-sidebar/flow-version-sidebar/flow-version-sidebar.component';\r\nimport { flowItemsDetailsReducer } from './store/reducer/flow-items-details.reducer';\r\nimport { FlowItemsDetailsEffects } from './store/effect/flow-items-details.effects';\r\nimport { EditStepAccordionComponent } from './page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/edit-step-accodion.component';\r\nimport { DescribeFormComponent } from './page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/describe-form/describe-form.component';\r\nimport { CodeStepInputFormComponent } from './page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/code-step-input-form/code-step-input-form.component';\r\nimport { StorageStepInputFormComponent } from './page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/storage-step-input-form/storage-step-input-form.component';\r\nimport { LoopStepInputFormComponent } from './page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/loop-step-input-form/loop-step-input-form.component';\r\nimport { ResponseStepInputFormComponent } from './page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/response-step-input-form/response-step-input-form.component';\r\nimport { ScheduleTriggerInputFormComponent } from './page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/schedule-trigger-input-form/schedule-trigger-input-form.component';\r\nimport { EventTriggerInputFormComponent } from './page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/event-trigger-input-form/event-trigger-input-form.component';\r\nimport { RemoteFlowInputFormComponent } from './page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/remote-flow-input-form/remote-flow-input-form.component';\r\nimport { ConfigCardComponent } from './page/flow-builder/flow-left-sidebar/configs-sidebar/config-card/config-card.component';\r\nimport { VariableListComponent } from './page/flow-builder/flow-left-sidebar/configs-sidebar/configs-list/configs-list.component';\r\nimport { CreateEditConfigModalComponent } from './page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/create-or-edit-config-modal.component';\r\nimport { DefaultConfigTypeSettingsComponent } from './page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/default-config-type-settings/default-config-type-settings.component';\r\nimport { DropdownConfigSettingsComponent } from './page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/dropdown-config-settings/dropdown-config-settings.component';\r\nimport { OAuth2ConfigSettingsComponent } from './page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/o-auth2-config-settings/o-auth2-config-settings.component';\r\nimport { StaticDropDownOptionsComponent } from './page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/dropdown-config-settings/static-drop-down-options/static-drop-down-options.component';\r\nimport { ConnectorAuthConfigsFinder } from './page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/remote-flow-input-form/connector-auth-config-finder.pipe';\r\nimport { NewAuthenticationModalComponent } from './page/flow-builder/flow-right-sidebar/new-authentication-modal/new-authentication-modal.component';\r\nimport { PublishPopoverComponent } from './page/flow-builder/flow-builder-header/publish-popover/publish-popover.component';\r\nimport { EmbedModalComponent } from './page/flow-builder/flow-builder-header/embed-modal/embed-modal.component';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tHttpClientModule,\r\n\t\tRouterModule.forChild(FlowLayoutRouting),\r\n\t\tFormsModule,\r\n\t\tReactiveFormsModule,\r\n\t\tMatSidenavModule,\r\n\t\tCommonLayoutModule,\r\n\t\tCodemirrorModule,\r\n\t\tMatChipsModule,\r\n\t\tMatAutocompleteModule,\r\n\t\tMatFormFieldModule,\r\n\t\tMatIconModule,\r\n\t\tMatSelectModule,\r\n\t\tDragDropModule,\r\n\t\tModalModule.forRoot(),\r\n\t\tTimepickerModule.forRoot(),\r\n\t\tFlatpickrModule.forRoot(),\r\n\t\tAngularSvgIconModule.forRoot(),\r\n\t\tEffectsModule.forFeature([PieceEffects, FlowsEffects, ViewModeEffects, FlowItemsDetailsEffects]),\r\n\t\tStoreModule.forFeature('builderState', {\r\n\t\t\tpieceState: pieceReducer,\r\n\t\t\tflowsState: flowsReducer,\r\n\t\t\tviewMode: viewModeReducer,\r\n\t\t\tflowItemsDetailsState: flowItemsDetailsReducer,\r\n\t\t}),\r\n\t\tTabsModule,\r\n\t\tFontAwesomeModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatTabsModule,\r\n\t\tMatTooltipModule,\r\n\t\tTooltipModule,\r\n\t\tMonacoEditorModule,\r\n\t],\r\n\tproviders: [BsModalService],\r\n\tdeclarations: [\r\n\t\tPieceBuilderComponent,\r\n\t\tFlowBuilderHeaderComponent,\r\n\t\tFlowItemComponent,\r\n\t\tChevronDropdownMenuComponent,\r\n\t\tFlowRightSidebarComponent,\r\n\t\tFlowBuilderTabsComponent,\r\n\t\tFlowBuilderTabComponent,\r\n\t\tFlowItemTreeComponent,\r\n\t\tFlowItemConnectionComponent,\r\n\t\tFlowItemContentComponent,\r\n\t\tFlowLeftSidebarComponent,\r\n\t\tVariableListComponent,\r\n\t\tTestFlowModalComponent,\r\n\t\tRunDetailsComponent,\r\n\t\tTestRunBarComponent,\r\n\t\tSidebarHeaderComponent,\r\n\t\tFlowVersionSidebarComponent,\r\n\t\tCodeEditorComponent,\r\n\t\tTestCodeModalComponent,\r\n\t\tCollectionVersionSidebarComponent,\r\n\t\tNewEditPieceSidebarComponent,\r\n\t\tStepTypItemComponent,\r\n\t\tStepTypeListComponent,\r\n\t\tStepTypeSidebarComponent,\r\n\t\tPieceSettingsComponent,\r\n\t\tCreateEditConfigModalComponent,\r\n\t\tCreateNewFlowModalComponent,\r\n\t\tAddNpmPackageModalComponent,\r\n\t\tVariableSidebarComponent,\r\n\t\tStepResultComponent,\r\n\t\tSimpleLineConnectionComponent,\r\n\t\tLoopLineConnectionComponent,\r\n\t\tSelectedStepResultComponent,\r\n\t\tIterationAccordionComponent,\r\n\t\tEditStepAccordionComponent,\r\n\t\tDescribeFormComponent,\r\n\t\tResponseStepInputFormComponent,\r\n\t\tLoopStepInputFormComponent,\r\n\t\tStorageStepInputFormComponent,\r\n\t\tCodeStepInputFormComponent,\r\n\t\tScheduleTriggerInputFormComponent,\r\n\t\tEventTriggerInputFormComponent,\r\n\t\tConfigCardComponent,\r\n\t\tRemoteFlowInputFormComponent,\r\n\t\tDefaultConfigTypeSettingsComponent,\r\n\t\tDropdownConfigSettingsComponent,\r\n\t\tOAuth2ConfigSettingsComponent,\r\n\t\tStaticDropDownOptionsComponent,\r\n\t\tConnectorAuthConfigsFinder,\r\n\t\tNewAuthenticationModalComponent,\r\n\t\tPublishPopoverComponent,\r\n\t\tEmbedModalComponent,\r\n\t],\r\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n\texports: [FlowBuilderHeaderComponent],\r\n})\r\nexport class FlowLayoutModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddNpmPackageModalComponent"
                        },
                        {
                            "name": "ChevronDropdownMenuComponent"
                        },
                        {
                            "name": "CodeEditorComponent"
                        },
                        {
                            "name": "CodeStepInputFormComponent"
                        },
                        {
                            "name": "CollectionVersionSidebarComponent"
                        },
                        {
                            "name": "ConfigCardComponent"
                        },
                        {
                            "name": "ConnectorAuthConfigsFinder"
                        },
                        {
                            "name": "CreateEditConfigModalComponent"
                        },
                        {
                            "name": "CreateNewFlowModalComponent"
                        },
                        {
                            "name": "DefaultConfigTypeSettingsComponent"
                        },
                        {
                            "name": "DescribeFormComponent"
                        },
                        {
                            "name": "DropdownConfigSettingsComponent"
                        },
                        {
                            "name": "EditStepAccordionComponent"
                        },
                        {
                            "name": "EmbedModalComponent"
                        },
                        {
                            "name": "EventTriggerInputFormComponent"
                        },
                        {
                            "name": "FlowBuilderHeaderComponent"
                        },
                        {
                            "name": "FlowBuilderTabComponent"
                        },
                        {
                            "name": "FlowBuilderTabsComponent"
                        },
                        {
                            "name": "FlowItemComponent"
                        },
                        {
                            "name": "FlowItemConnectionComponent"
                        },
                        {
                            "name": "FlowItemContentComponent"
                        },
                        {
                            "name": "FlowItemTreeComponent"
                        },
                        {
                            "name": "FlowLeftSidebarComponent"
                        },
                        {
                            "name": "FlowRightSidebarComponent"
                        },
                        {
                            "name": "FlowVersionSidebarComponent"
                        },
                        {
                            "name": "IterationAccordionComponent"
                        },
                        {
                            "name": "LoopLineConnectionComponent"
                        },
                        {
                            "name": "LoopStepInputFormComponent"
                        },
                        {
                            "name": "NewAuthenticationModalComponent"
                        },
                        {
                            "name": "NewEditPieceSidebarComponent"
                        },
                        {
                            "name": "OAuth2ConfigSettingsComponent"
                        },
                        {
                            "name": "PieceBuilderComponent"
                        },
                        {
                            "name": "PieceSettingsComponent"
                        },
                        {
                            "name": "PublishPopoverComponent"
                        },
                        {
                            "name": "RemoteFlowInputFormComponent"
                        },
                        {
                            "name": "ResponseStepInputFormComponent"
                        },
                        {
                            "name": "RunDetailsComponent"
                        },
                        {
                            "name": "ScheduleTriggerInputFormComponent"
                        },
                        {
                            "name": "SelectedStepResultComponent"
                        },
                        {
                            "name": "SidebarHeaderComponent"
                        },
                        {
                            "name": "SimpleLineConnectionComponent"
                        },
                        {
                            "name": "StaticDropDownOptionsComponent"
                        },
                        {
                            "name": "StepResultComponent"
                        },
                        {
                            "name": "StepTypItemComponent"
                        },
                        {
                            "name": "StepTypeListComponent"
                        },
                        {
                            "name": "StepTypeSidebarComponent"
                        },
                        {
                            "name": "StorageStepInputFormComponent"
                        },
                        {
                            "name": "TestCodeModalComponent"
                        },
                        {
                            "name": "TestFlowModalComponent"
                        },
                        {
                            "name": "TestRunBarComponent"
                        },
                        {
                            "name": "VariableListComponent"
                        },
                        {
                            "name": "VariableSidebarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CommonLayoutModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FlowBuilderHeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "_environmentReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/reducer/environments.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n\tinitialState,\n\ton(EnvironmentActions.setEnvironments, (state, { environments }): EnvironmentsState => {\n\t\treturn { loaded: true, environments: environments };\n\t}),\n\ton(EnvironmentActions.clearEnvironments, (state, {}): EnvironmentsState => {\n\t\treturn { loaded: false, environments: [] };\n\t}),\n\ton(EnvironmentActions.addEnvironment, (state, { environment }): EnvironmentsState => {\n\t\tlet clonedState: EnvironmentsState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.environments.push(environment);\n\t\treturn { loaded: true, environments: clonedState.environments };\n\t}),\n\ton(PieceAction.publishCollectionSuccess, (state, { environmentIds, collection }): EnvironmentsState => {\n\t\tlet environments: ProjectEnvironment[] = JSON.parse(JSON.stringify(state.environments));\n\t\tenvironmentIds.forEach(environmentId => {\n\t\t\tlet environment: ProjectEnvironment | undefined = environments.find(env => env.id === environmentId);\n\t\t\tif (environment !== undefined) {\n\t\t\t\tenvironment.deployedCollections = environment.deployedCollections.filter(\n\t\t\t\t\tdc => dc.collectionId !== collection.id\n\t\t\t\t);\n\t\t\t\tenvironment.deployedCollections.push({\n\t\t\t\t\tcollectionId: collection.id,\n\t\t\t\t\tcollectionVersionsId: [collection.lastVersion.id],\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn { loaded: true, environments: environments };\n\t})\n)"
            },
            {
                "name": "_eventsReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/reducer/events.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n\tinitialState,\n\ton(EventActions.addEvent, (state, { eventDefinition }): EventsState => {\n\t\tlet clonedState: EventsState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.events.push(eventDefinition);\n\t\treturn clonedState;\n\t}),\n\ton(EventActions.setEvents, (state, { events }): EventsState => {\n\t\tlet clonedState: EventsState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.events = events;\n\t\tclonedState.loaded = true;\n\t\treturn { ...clonedState };\n\t}),\n\ton(EventActions.clearEvents, (state, {}): EventsState => {\n\t\treturn { loaded: false, events: [] };\n\t})\n)"
            },
            {
                "name": "_flowsReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n\tinitialState,\n\ton(FlowsActions.setInitial, (state, { flows, run }): FlowsState => {\n\t\tlet clonedFlows: Flow[] = JSON.parse(JSON.stringify(flows));\n\t\tlet selectedFlowId: UUID | null = null;\n\t\tif (clonedFlows.length > 0) {\n\t\t\tselectedFlowId = clonedFlows[0].id;\n\t\t}\n\t\tlet tabsState = {};\n\t\tclonedFlows.forEach(f => {\n\t\t\ttabsState[f.id.toString()] = JSON.parse(JSON.stringify(initialTabState));\n\t\t});\n\t\tif (run !== undefined && run !== null) {\n\t\t\ttabsState[flows[0].id.toString()].selectedRun = run;\n\t\t}\n\t\treturn {\n\t\t\tflows: clonedFlows,\n\t\t\tlastSaveId: UUID.UUID(),\n\t\t\tstate: FlowsStateEnum.INITIALIZED,\n\t\t\ttabsState: tabsState,\n\t\t\tselectedFlowId: selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.selectFlow, (state, { flowId }): FlowsState => {\n\t\treturn { ...state, selectedFlowId: flowId };\n\t}),\n\ton(FlowsActions.deleteConfigSucceeded, (state, { configIndex }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion.configs.splice(configIndex, 1);\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.updateConfig, (state, { configIndex, config }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion.configs[configIndex] = config;\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.replaceTrigger, (state, { newTrigger }): FlowsState => {\n\t\tif (state.selectedFlowId === null) {\n\t\t\tthrow new Error('Selected flow id is null');\n\t\t}\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion = FlowVersion.clone(clonedFlows[flowIndex].lastVersion).replaceTrigger(\n\t\t\t\tnewTrigger\n\t\t\t);\n\t\t}\n\t\tclonedState.tabsState[state.selectedFlowId.toString()].focusedStep = newTrigger;\n\t\treturn {\n\t\t\t...state,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.dropPiece, (state, { draggedPieceName, newParentName }): FlowsState => {\n\t\tlet clonedFlows: Flow[] = JSON.parse(JSON.stringify(state)).flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion = FlowVersion.clone(clonedFlows[flowIndex].lastVersion);\n\t\t\tclonedFlows[flowIndex].lastVersion.dropPiece(draggedPieceName, newParentName);\n\t\t}\n\t\tclonedFlows[flowIndex].lastVersion.valid = false;\n\t\treturn {\n\t\t\t...state,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.addStep, (state, { newAction }): FlowsState => {\n\t\tif (state.selectedFlowId === null) {\n\t\t\tthrow new Error('Selected flow id is null');\n\t\t}\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tlet tabeState = state.tabsState[state.selectedFlowId.toString()];\n\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion = FlowVersion.clone(clonedFlows[flowIndex].lastVersion).addNewChild(\n\t\t\t\ttabeState.rightSidebar.props.stepName,\n\t\t\t\tnewAction,\n\t\t\t\ttabeState.rightSidebar.props.buttonType\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.updateStep, (state, { stepName, newStep }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion = FlowVersion.clone(clonedFlows[flowIndex].lastVersion).updateStep(\n\t\t\t\tstepName,\n\t\t\t\tnewStep\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\ttabsState: clonedState.tabsState,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.deleteStep, (state, { stepName }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion = FlowVersion.clone(clonedFlows[flowIndex].lastVersion).deleteStep(stepName);\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\ttabsState: clonedState.tabsState,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.addConfig, (state, { config }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion.configs.push(config);\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\ttabsState: clonedState.tabsState,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.changeName, (state, { flowId, displayName }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === flowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion.displayName = displayName;\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\ttabsState: clonedState.tabsState,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.deleteFlow, (state, { flowId }: { flowId: UUID }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet index = clonedState.flows.findIndex(f => f.id == flowId);\n\t\tif (index != -1) {\n\t\t\tclonedState.flows.splice(index, 1);\n\t\t}\n\t\tlet deletedFlowHasNext: boolean = index < clonedState.flows.length;\n\t\tif (deletedFlowHasNext) {\n\t\t\tclonedState.selectedFlowId = clonedState.flows[index].id;\n\t\t} else {\n\t\t\tlet notEmpty: boolean = clonedState.flows.length > 0;\n\t\t\tif (notEmpty) {\n\t\t\t\tclonedState.selectedFlowId = clonedState.flows[clonedState.flows.length - 1].id;\n\t\t\t} else {\n\t\t\t\tclonedState.selectedFlowId = null;\n\t\t\t}\n\t\t}\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.addFlow, (state, { flow }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.flows.push(flow);\n\t\tclonedState.selectedFlowId = flow.id;\n\t\tclonedState.tabsState[clonedState.selectedFlowId.toString()] = JSON.parse(JSON.stringify(initialTabState));\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.deleteSuccess, (state, { saveId }): FlowsState => {\n\t\treturn { ...state, state: state.lastSaveId === saveId ? FlowsStateEnum.SAVED : FlowsStateEnum.SAVING };\n\t}),\n\ton(FlowsActions.savedSuccess, (state, { saveId, flow }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\t//in case a new version was created after the former one was locked.\n\t\tconst flowSaved = clonedState.flows.find(f => f.id == flow.id)!;\n\t\tflowSaved.lastVersion.id = flow.lastVersion.id;\n\t\tflowSaved.lastVersion.state = flow.lastVersion.state;\n\t\treturn { ...clonedState, state: state.lastSaveId === saveId ? FlowsStateEnum.SAVED : FlowsStateEnum.SAVING };\n\t}),\n\ton(FlowsActions.saveFlowStarted, (state, { flow, saveId }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\treturn { ...clonedState, state: FlowsStateEnum.SAVING, lastSaveId: saveId };\n\t}),\n\ton(FlowsActions.deleteFlowStarted, (state, { flowId, saveId }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\treturn { ...clonedState, state: FlowsStateEnum.SAVING, lastSaveId: saveId };\n\t}),\n\ton(FlowsActions.savedFailed, (state, {}): FlowsState => {\n\t\treturn { ...state, state: FlowsStateEnum.FAILED };\n\t}),\n\ton(FlowsActions.setLeftSidebar, (state, { sidebarType, props }): FlowsState => {\n\t\tif (state.selectedFlowId === null) {\n\t\t\tthrow new Error('Flow id is not selected');\n\t\t}\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet tabState: TabState = clonedState.tabsState[state.selectedFlowId.toString()];\n\t\ttabState.leftSidebar = {\n\t\t\ttype: sidebarType,\n\t\t\tprops: props,\n\t\t};\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.setRun, (state, { flowId, run }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet tabState: TabState = clonedState.tabsState[flowId.toString()];\n\t\ttabState.selectedRun = run;\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.exitRun, (state, { flowId }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet tabState: TabState = clonedState.tabsState[flowId.toString()];\n\t\ttabState.selectedRun = undefined;\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.selectStep, (state, { step }): FlowsState => {\n\t\tif (state.selectedFlowId === undefined || state.selectedFlowId === null) {\n\t\t\tthrow new Error('Flow id is not selected');\n\t\t}\n\n\t\tconst clonedState = { ...state };\n\t\tconst updatedTabState = {\n\t\t\t...clonedState.tabsState[state.selectedFlowId.toString()],\n\t\t\tfocusedStep: { ...step },\n\t\t};\n\t\tconst updatedTabStateWrapper = {};\n\t\tupdatedTabStateWrapper[state.selectedFlowId.toString()] = updatedTabState;\n\t\tclonedState.tabsState = { ...clonedState.tabsState, ...updatedTabStateWrapper };\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.deselectStep, (state, {}): FlowsState => {\n\t\tif (state.selectedFlowId === undefined || state.selectedFlowId === null) {\n\t\t\tthrow new Error('Flow id is not selected');\n\t\t}\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet tabState: TabState = clonedState.tabsState[state.selectedFlowId.toString()];\n\t\ttabState.focusedStep = null;\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.setRightSidebar, (state, { sidebarType, props }): FlowsState => {\n\t\tif (state.selectedFlowId === null || state.selectedFlowId === undefined) {\n\t\t\tthrow new Error('Flow id is not selected');\n\t\t}\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet tabState: TabState = clonedState.tabsState[state.selectedFlowId.toString()];\n\t\ttabState.rightSidebar = {\n\t\t\ttype: sidebarType,\n\t\t\tprops: props,\n\t\t};\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.selectStepByName, (flowsState, { stepName }) => {\n\t\tconst flow: Flow | undefined = flowsState.flows.find(f => f.id === flowsState.selectedFlowId);\n\t\tconst clonedState: FlowsState = JSON.parse(JSON.stringify(flowsState));\n\t\tif (flow) {\n\t\t\tconst step = FlowStructureUtil.findStep(flow.lastVersion.trigger!, stepName!);\n\t\t\tconst updatedTabState = {\n\t\t\t\t...clonedState.tabsState[flow.id.toString()],\n\t\t\t\tfocusedStep: { ...step },\n\t\t\t};\n\t\t\tconst updatedTabStateWrapper = {};\n\t\t\tupdatedTabStateWrapper[flow.id.toString()] = updatedTabState;\n\t\t\tclonedState.tabsState = { ...clonedState.tabsState, ...updatedTabStateWrapper };\n\t\t}\n\t\treturn clonedState;\n\t})\n)"
            },
            {
                "name": "_organizationReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/reducer/organization.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n\tinitialState,\n\ton(OrganizationActions.setOrganizations, (state, { organizations }): OrganizationsState => {\n\t\treturn { organizations: organizations, loaded: true, selectedIndex: organizations.length > 0 ? 0 : undefined };\n\t}),\n\ton(OrganizationActions.clearOrganizations, (state, {}): OrganizationsState => {\n\t\treturn { organizations: [], loaded: false, selectedIndex: undefined };\n\t})\n)"
            },
            {
                "name": "_pieceReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/reducer/piece.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n\tinitialState,\n\ton(PieceAction.setInitial, (state, { collection: piece }): CollectionState => {\n\t\tlet clonedPiece: Collection = JSON.parse(JSON.stringify(piece));\n\t\treturn { collection: clonedPiece, state: PieceStateEnum.INITIALIZED };\n\t}),\n\ton(PieceAction.changeName, (state, { displayName }): CollectionState => {\n\t\tlet clonedState: CollectionState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.collection.lastVersion.displayName = displayName;\n\t\tclonedState.state = PieceStateEnum.SAVING;\n\t\treturn clonedState;\n\t}),\n\ton(PieceAction.savedSuccess, (state, { collection: piece }): CollectionState => {\n\t\tlet clonedPiece: Collection = JSON.parse(JSON.stringify(piece));\n\t\treturn { collection: clonedPiece, state: PieceStateEnum.SAVED };\n\t}),\n\ton(PieceAction.savedFailed, (state, { error }): CollectionState => {\n\t\tlet clonedPiece: Collection = JSON.parse(JSON.stringify(state.collection));\n\t\tconsole.error(error);\n\t\treturn { collection: clonedPiece, state: PieceStateEnum.FAILED };\n\t}),\n\n\ton(PieceAction.addConfig, (state, { config }): CollectionState => {\n\t\tlet clonedState: CollectionState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.collection.lastVersion.configs.push(config);\n\t\tclonedState.state = PieceStateEnum.SAVING;\n\t\treturn clonedState;\n\t}),\n\ton(PieceAction.deleteConfigSucceeded, (state, { configIndex: index }): CollectionState => {\n\t\tlet clonedState: CollectionState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.collection.lastVersion.configs.splice(index, 1);\n\t\tclonedState.state = PieceStateEnum.SAVING;\n\t\treturn clonedState;\n\t}),\n\ton(PieceAction.updateConfig, (state, { configIndex, config }): CollectionState => {\n\t\tlet clonedState: CollectionState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.collection.lastVersion.configs[configIndex] = config;\n\t\tclonedState.state = PieceStateEnum.SAVING;\n\t\treturn clonedState;\n\t}),\n\ton(PieceAction.updateSettings, (state, ChangeLogoProps): CollectionState => {\n\t\tlet clonedState: CollectionState = JSON.parse(JSON.stringify(state));\n\t\tif (ChangeLogoProps.logoEncodedUrl != undefined) {\n\t\t\tclonedState.collection.lastVersion.logoUrl = ChangeLogoProps.logoEncodedUrl;\n\t\t}\n\t\tclonedState.collection.lastVersion.description = ChangeLogoProps.description;\n\t\tclonedState.state = PieceStateEnum.SAVING;\n\t\treturn clonedState;\n\t})\n)"
            },
            {
                "name": "_projectReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/reducer/project.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n\tinitialState,\n\ton(ProjectActions.setProjects, (state, { projects }): ProjectsState => {\n\t\treturn { projects: projects, loaded: true, selectedIndex: projects.length > 0 ? 0 : undefined };\n\t}),\n\ton(ProjectActions.clearProjects, (state, {}): ProjectsState => {\n\t\treturn { projects: [], loaded: false, selectedIndex: undefined };\n\t})\n)"
            },
            {
                "name": "_viewModeReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/reducer/view-mode.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n\tinitialState,\n\ton(ViewModeActions.setViewMode, (state, { viewMode }): ViewModeEnum => {\n\t\treturn viewMode;\n\t})\n)"
            },
            {
                "name": "ACCEPTED_DISTANCE_BETWEEN_DROP_POINT_AND_ADD_BUTTON",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/service/flowRenderUtil.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "250"
            },
            {
                "name": "ADD_BUTTON_SIZE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ width: 16, height: 16 }"
            },
            {
                "name": "addConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.ADD_CONFIG, props<{ config: Config }>())"
            },
            {
                "name": "addConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(CollectionActionType.ADD_CONFIG, props<{ config: Config }>())"
            },
            {
                "name": "addEnvironment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/environment.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tEnvironmentActionType.ADD_ENVIRONMENT,\n\tprops<{ environment: ProjectEnvironment }>()\n)"
            },
            {
                "name": "addEvent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/events.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(EventActionModeType.ADD_EVENT, props<{ eventDefinition: EventDefinition }>())"
            },
            {
                "name": "addFlow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.ADD_FLOW, props<{ flow: Flow }>())"
            },
            {
                "name": "addStep",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowsActionType.ADD_STEP,\n\tprops<{\n\t\tnewAction: Action;\n\t}>()\n)"
            },
            {
                "name": "ApiKeysActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tcreateApiKey,\n\tcreateApiKeySuccess,\n\tcreateApiKeyFailed,\n\tloadApiKeys,\n\tloadApiKeysFinished,\n\tdeleteApiKey,\n}"
            },
            {
                "name": "apiKeysReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/reducer/api-keys.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n\tinitialState,\n\ton(ApiKeysActions.loadApiKeysFinished, (state, { apiKeys }: { apiKeys: SeekPage<ApiKey> }): ApiKeysState => {\n\t\treturn { apiKeys: apiKeys, loaded: true };\n\t}),\n\ton(ApiKeysActions.loadApiKeys, (): ApiKeysState => {\n\t\treturn { apiKeys: null, loaded: false };\n\t}),\n\ton(ApiKeysActions.deleteApiKey, (state, { id }: { id: UUID }): ApiKeysState => {\n\t\tlet apiKeys: SeekPage<ApiKey> = JSON.parse(JSON.stringify(state.apiKeys));\n\t\tlet index = apiKeys.data.findIndex(f => f.id === id);\n\t\tif (index != -1) {\n\t\t\tapiKeys.data.splice(index, 1);\n\t\t}\n\t\treturn { ...state, apiKeys };\n\t}),\n\ton(ApiKeysActions.createApiKeySuccess, (state, action): ApiKeysState => {\n\t\tlet apiKeys: SeekPage<ApiKey> = JSON.parse(JSON.stringify(state.apiKeys));\n\t\tapiKeys.data.push(action.apiKey);\n\t\treturn { ...state, loaded: true, apiKeys };\n\t}),\n\ton(ApiKeysActions.createApiKeyFailed, (state, action): ApiKeysState => {\n\t\treturn { ...state, loaded: true };\n\t})\n)"
            },
            {
                "name": "ApiKeysSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tselectApiKeysLoaded,\n\tselectApiKeys,\n}"
            },
            {
                "name": "ARC_LENGTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "15"
            },
            {
                "name": "ARROW_HEAD_SIZE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{ width: 13, height: 7 }"
            },
            {
                "name": "authenticationReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/reducer/authentication.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n\tinitialState,\n\ton(AuthenticationActions.fetchAuthenticationsSuccessful, (state, action): AuthenticationState => {\n\t\treturn { ...state, authentications: action.authentications };\n\t}),\n\ton(AuthenticationActions.updateFirebaseProjectIdSuccessful, (state, action) => {\n\t\tconst authenticationIndex = state.authentications.findIndex(\n\t\t\ta => a.environmentId == action.project.environmentId && a.type == AuthenticationType.FIREBASE\n\t\t);\n\t\tconst newState: AuthenticationState = {\n\t\t\tauthentications: [...state.authentications],\n\t\t};\n\t\tif (authenticationIndex === -1) {\n\t\t\tnewState.authentications.push(action.project);\n\t\t} else {\n\t\t\tnewState.authentications[authenticationIndex] = action.project;\n\t\t}\n\t\treturn newState;\n\t}),\n\ton(AuthenticationActions.generateSigningKeySuccessful, (state, action) => {\n\t\tconst authenticationIndex = state.authentications.findIndex(\n\t\t\ta => a.environmentId == action.signingKey.environmentId && a.type == AuthenticationType.SIGNING_KEY\n\t\t);\n\t\tconst newState: AuthenticationState = {\n\t\t\tauthentications: [...state.authentications],\n\t\t};\n\t\tif (authenticationIndex === -1) {\n\t\t\tnewState.authentications.push(action.signingKey);\n\t\t} else {\n\t\t\tnewState.authentications[authenticationIndex] = action.signingKey;\n\t\t}\n\t\treturn newState;\n\t}),\n\ton(AuthenticationActions.clearSigningKeyCredentials, (state, action) => {\n\t\tconst cleanKey = { ...action.key };\n\t\tdelete cleanKey.privateKey;\n\t\tconst keyIndex = state.authentications.findIndex(a => a.environmentId === action.key.environmentId);\n\t\tconst cleanState: AuthenticationState = {\n\t\t\tauthentications: [...state.authentications],\n\t\t};\n\t\tcleanState.authentications[keyIndex] = cleanKey;\n\t\treturn { ...cleanState };\n\t})\n)"
            },
            {
                "name": "autoSaveDebounceTime",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "600"
            },
            {
                "name": "BUILDER_STATE_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'builderState'"
            },
            {
                "name": "BuilderActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/builder.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tloadInitial,\n}"
            },
            {
                "name": "BuilderSelectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n\tselectCurrentCollection,\r\n\tselectCurrentCollectionId,\r\n\tselectReadOnly,\r\n\tselectViewMode,\r\n\tselectCurrentFlowId,\r\n\tselectCurrentFlowRun,\r\n\tselectFlows,\r\n\tselectCurrentTabState,\r\n\tselectFlowSelectedId,\r\n\tselectCurrentFlow,\r\n\tselectCurrentRightSideBar,\r\n\tselectCurrentStep,\r\n\tselectCurrentCollectionName,\r\n\tselectCanPublish,\r\n\tselectCurrentFlowConfigs,\r\n\tselectCurrentLeftSidebar,\r\n\tselectCurrentLeftSidebarType,\r\n\tselectFlowsCount,\r\n\tselectConfigTabTypeFromProps,\r\n\tselectBuilderSaveState,\r\n\tselectCurrentStepName,\r\n\tselectCurrentCollectionConfigs,\r\n\tselectCurrentRightSideBarType,\r\n\tselectDynamicDropdownReference,\r\n\tselectCurrentFlowRunStatus,\r\n\tselectCurrentDisplayName,\r\n\tselectUserDefinedCollectionConfigs,\r\n\tselectUserDefinedFlowConfigs,\r\n\tselectAuth2Configs,\r\n\tselectInstanceRunView,\r\n\tselectCollectionState,\r\n\tselectFlow,\r\n\tselectTabState,\r\n\tselectFlowState,\r\n\tselectCurrentFlowSaved,\r\n\tselectSavingChangeState,\r\n\tselectAllFlowItemsDetails,\r\n\tselectFlowItemDetails,\r\n\tselectRemoteFlowItemDetails,\r\n\tselectAllFlowItemsDetailsLoadedState,\r\n\tselectCoreFlowItemsDetails,\r\n\tselectFlowItemsDetailsForConnectors,\r\n\tselectFlowItemsDetialsForUserCollections,\r\n\tselectFlowItemDetailsForTriggers,\r\n\tselectCurrentFlowValidity,\r\n\tselectAllConfigs,\r\n\tselectConfig,\r\n\tselectFlowsValidity,\r\n}"
            },
            {
                "name": "cacheArtifactDebounceTime",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "200"
            },
            {
                "name": "Calendly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/pages/trial-status/trial-status.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "changeDescription",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(CollectionActionType.CHANGE_NAME, props<{ description: string }>())"
            },
            {
                "name": "changeName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.CHANGE_NAME, props<{ flowId: UUID; displayName: string }>())"
            },
            {
                "name": "changeName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(CollectionActionType.CHANGE_NAME, props<{ displayName: string }>())"
            },
            {
                "name": "clearEnvironments",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/environment.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(EnvironmentActionType.CLEAR_ENVIRONMENTS)"
            },
            {
                "name": "clearEvents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/events.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(EventActionModeType.CLEAR_EVENTS)"
            },
            {
                "name": "clearFlowItemsDetails",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowItemDetailsActionType.CLEAR)"
            },
            {
                "name": "clearOrganizations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/organizations.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(OrganizationsActionType.CLEAR_ORGANIZATIONS)"
            },
            {
                "name": "clearProjects",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/project.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ProjectActionType.CLEAR_PROJECTS)"
            },
            {
                "name": "clearSigningKeyCredentials",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tAuthenticationActionType.CLEAR_STAGING_KEY_CREDENTIALS,\n\tprops<{ key: ProjectAuthentication }>()\n)"
            },
            {
                "name": "clearState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/common.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(CommonActionType.CLEAR_STATE)"
            },
            {
                "name": "CollectionModifyingState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\tCollectionActionType.CHANGE_NAME,\n\tCollectionActionType.UPDATE_CONFIG,\n\tCollectionActionType.ADD_CONFIG,\n\tCollectionActionType.DELETE_CONFIG_SUCCEEDED,\n\tCollectionActionType.UPDATE_SETTINGS,\n]"
            },
            {
                "name": "COMMON_STATE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'commonState'"
            },
            {
                "name": "COMMON_STATE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'commonState'"
            },
            {
                "name": "COMMON_STATE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'commonState'"
            },
            {
                "name": "COMMON_STATE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/project.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'commonState'"
            },
            {
                "name": "CommonActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/common.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tloadInitial,\n\tclearState,\n}"
            },
            {
                "name": "CommonSelectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tselectEvents,\n\tselectEventsDropdownOptions,\n}"
            },
            {
                "name": "configTypesDropdownOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/model/enum/config-type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{\n\t\tlabel: 'Short Text',\n\t\tvalue: ConfigType.SHORT_TEXT,\n\t\ticon: 'short-text.svg',\n\t\tgroup: 'Text',\n\t},\n\t{\n\t\tlabel: 'Multiline Text',\n\t\tvalue: ConfigType.LONG_TEXT,\n\t\ticon: 'multiline-text.svg',\n\t\tgroup: 'Text',\n\t},\n\n\t{\n\t\tlabel: 'OAuth 2.0',\n\t\tvalue: 'OAUTH2',\n\t\ticon: 'wire.svg',\n\t\tgroup: 'Authentication',\n\t},\n\n\t{ label: 'Integer', value: ConfigType.INTEGER, icon: 'number.svg', group: 'Number' },\n\t{\n\t\tlabel: 'Dictionary',\n\t\tvalue: ConfigType.DICTIONARY,\n\t\ticon: 'key-value.svg',\n\t\tgroup: 'Others',\n\t},\n\t{\n\t\tlabel: 'Dropdown',\n\t\tvalue: ConfigType.DROPDOWN,\n\t\ticon: 'dropdown.svg',\n\t\tgroup: 'Others',\n\t},\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "createApiKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ApiKeysActionType.CREATE_API_KEY, props<{ name: string }>())"
            },
            {
                "name": "createApiKeyFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ApiKeysActionType.CREATE_API_KEY_FAILED, props<{ error: Error }>())"
            },
            {
                "name": "createApiKeySuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ApiKeysActionType.CREATE_API_KEY_SUCCESS, props<{ apiKey: ApiKey }>())"
            },
            {
                "name": "DASHBOARD_FEATURE_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/dashboard-layout.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'dashboard'"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<StoryType>",
                "defaultValue": "{\n\targs: {\n\t\tlabel: 'test',\n\t},\n\tparameters: { controls: { exclude: ['btnClassesMap', 'btnSizeClass'] } },\n}"
            },
            {
                "name": "defaultCronJobForScheduleTrigger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'0 */5 * ? * *'"
            },
            {
                "name": "deleteApiKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tApiKeysActionType.DELETE_API_KEY,\n\tprops<{\n\t\tid: UUID;\n\t}>()\n)"
            },
            {
                "name": "deleteConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.DELETE_CONFIG, props<{ configIndex: number }>())"
            },
            {
                "name": "deleteConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(CollectionActionType.DELETE_CONFIG, props<{ configIndex: number }>())"
            },
            {
                "name": "deleteConfigFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowsActionType.DELETE_CONFIG_FAILED,\n\tprops<{ referenceKey: string; refreshedKey: string }>()\n)"
            },
            {
                "name": "deleteConfigFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tCollectionActionType.DELETE_CONFIG_FAILED,\n\tprops<{ referenceKey: string; refreshedKey: string }>()\n)"
            },
            {
                "name": "deleteConfigSucceeded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowsActionType.DELETE_CONFIG_SUCCEEDED,\n\tprops<{ configIndex: number }>()\n)"
            },
            {
                "name": "deleteConfigSucceeded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tCollectionActionType.DELETE_CONFIG_SUCCEEDED,\n\tprops<{ configIndex: number }>()\n)"
            },
            {
                "name": "deleteFlow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.DELETE_FLOW, props<{ flowId: UUID }>())"
            },
            {
                "name": "deleteFlowStarted",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowsActionType.DELETE_FLOW_STARTED,\n\tprops<{ flowId: UUID; saveId: UUID }>()\n)"
            },
            {
                "name": "deleteStep",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.DELETE_STEP, props<{ stepName: string }>())"
            },
            {
                "name": "deleteSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.DELETE_SUCCESS, props<{ saveId: UUID }>())"
            },
            {
                "name": "deselectStep",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.DESELECT_STEP)"
            },
            {
                "name": "devAppConnectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/connectors/dev-connectors.lexicon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{\n\t\tpieceVersionId: '73159c4a-b816-4539-8779-05e71fab1dfa',\n\t\tflowId: '87965f74-6814-4275-a5b9-7e11b23fd1b2',\n\t\tdocUrl: 'https://api.slack.com/web',\n\t\tconnectorName: 'slack',\n\t},\n\t{\n\t\tpieceVersionId: '2845f022-a905-4fcb-8bba-521ea4bb136c',\n\t\tflowId: 'b30491fc-832b-4b27-ae6a-c59194b31659',\n\t\tdocUrl: 'https://developers.asana.com/docs',\n\t\tconnectorName: 'asana',\n\t},\n\t{\n\t\tpieceVersionId: '79b7dfda-c97f-4f72-b605-aa7340fd435f',\n\t\tflowId: 'a319f432-82cc-44dd-9805-807d3c254a3b',\n\t\tdocUrl: 'https://developers.hubspot.com/docs/api/overview',\n\t\tconnectorName: 'hubspot',\n\t},\n\t{\n\t\tpieceVersionId: '40df0cdb-7bb9-4eff-9895-b3850ad23fa5',\n\t\tflowId: '526c84af-4595-4521-9089-b40f8baf8e3d',\n\t\tdocUrl: 'https://developers.google.com/analytics/',\n\t\tconnectorName: 'googleAnalytics',\n\t},\n\t{\n\t\tpieceVersionId: 'f1178af6-d71f-497c-8a73-e907e46a9377',\n\t\tflowId: '977e64f8-80f8-48f2-a96c-5af1c4bad0e6',\n\t\tdocUrl: 'https://developers.google.com/forms/api',\n\t\tconnectorName: 'googleForm',\n\t},\n\t{\n\t\tpieceVersionId: '51ae1769-df38-458a-8d71-1fd928027797',\n\t\tflowId: '581baddb-efad-4bf5-b10c-3f3c3e7dac89',\n\t\tdocUrl: 'https://developers.google.com/sheets/',\n\t\tconnectorName: 'googleSheets',\n\t},\n\t{\n\t\tpieceVersionId: 'dcd34d9d-6922-4aec-997a-94db767529dc',\n\t\tflowId: '21a37b2e-d458-42d2-baee-3ee3b018a7d6',\n\t\tdocUrl: 'https://developers.google.com/google-apps/calendar/firstapp',\n\t\tconnectorName: 'googleCalender',\n\t},\n\t{\n\t\tpieceVersionId: '609d8aaf-175a-44f1-88c9-107b32174338',\n\t\tflowId: 'a6a6ebe5-c133-44b8-97c6-dde1e5a065c6',\n\t\tdocUrl: 'https://developers.google.com/drive/',\n\t\tconnectorName: 'googleDrive',\n\t},\n\t{\n\t\tpieceVersionId: '6d4a12c1-9220-4ddc-8a9f-b44836e2f857',\n\t\tflowId: 'fe210195-c63c-43c4-9d74-fcee4a8c4603',\n\t\tdocUrl: 'https://bitbucket.org/api',\n\t\tconnectorName: 'bitBucket',\n\t},\n\t{\n\t\tpieceVersionId: 'aeffb479-d9c8-4ebd-847f-37a548efdb1c',\n\t\tflowId: 'be3a4379-235c-46c1-a706-4a7cb745fb27',\n\t\tdocUrl: 'https://www.figma.com/developers/api',\n\t\tconnectorName: 'figma',\n\t},\n\t{\n\t\tpieceVersionId: 'a0690be6-a133-4961-aada-d3e14a4cf2e4',\n\t\tflowId: 'e83fd801-360c-4054-9894-6e513cf54265',\n\t\tdocUrl: 'https://developer.intuit.com/app/developer/qbo/docs/develop',\n\t\tconnectorName: 'quickbooks',\n\t},\n\t{\n\t\tpieceVersionId: 'c39c390d-b6b2-4224-8fff-c7e0cfbe9972',\n\t\tflowId: '281bf9d4-8657-4814-bcb4-feb1b455b5d9',\n\t\tdocUrl: 'https://docs.sendgrid.com/api-reference/',\n\t\tconnectorName: 'sendgrid',\n\t},\n\t{\n\t\tpieceVersionId: '36cf6197-6d26-479c-8d81-9776eece08e0',\n\t\tflowId: '84c6c609-2df2-4cff-a33d-1d9d97b0b87f',\n\t\tdocUrl: 'https://docs.salla.dev/',\n\t\tconnectorName: 'salla',\n\t},\n]"
            },
            {
                "name": "devConnectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/connectors/dev-connectors.lexicon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[]"
            },
            {
                "name": "dropPiece",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowsActionType.DROP_PIECE,\n\tprops<{ draggedPieceName: string; newParentName: string }>()\n)"
            },
            {
                "name": "EMPTY_LOOP_ADD_BUTTON_HEIGHT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "40"
            },
            {
                "name": "EMPTY_LOOP_ADD_BUTTON_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "40"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tproduction: true,\n\tapiDomainUrl: 'api.activepieces.com',\n\tapiUrl: 'https://api.activepieces.com',\n\tjwtTokenName: 'token',\n\tstageName: 'prod',\n\tredirectUrl: 'https://app.activepieces.com/redirect',\n\tappConnectors: 'https://cdn.activepieces.com/connectors/app_connectors.json',\n\tuserPropertyNameInLocalStorage: 'currentUser',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.stg.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tproduction: true,\n\tapiDomainUrl: 'stg-api.activepieces.com',\n\tapiUrl: 'https://stg-api.activepieces.com',\n\tjwtTokenName: 'token',\n\tstageName: 'stg',\n\tredirectUrl: 'https://stg-app.activepieces.com/redirect',\n\tappConnectors: 'https://cdn.activepieces.com/stg/connectors/app_connectors.json',\n\tuserPropertyNameInLocalStorage: 'currentUser',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tproduction: true,\n\tapiDomainUrl: 'stg-api.activepieces.com',\n\tapiUrl: 'https://stg-api.activepieces.com',\n\tjwtTokenName: 'token',\n\tstageName: 'stg',\n\tredirectUrl: 'https://stg-app.activepieces.com/redirect',\n\tappConnectors: 'https://cdn.activepieces.com/stg/connectors/app_connectors.json',\n\tuserPropertyNameInLocalStorage: 'currentUser',\n}"
            },
            {
                "name": "EnvironmentActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/environment.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tsetEnvironments,\n\taddEnvironment,\n\tclearEnvironments,\n}"
            },
            {
                "name": "EnvironmentSelectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tselectEnvironments,\n\tselectEnvironmentsLoadState,\n}"
            },
            {
                "name": "EventActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/events.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\taddEvent,\n\tsetEvents,\n\tclearEvents,\n}"
            },
            {
                "name": "exitRun",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.EXIT_RUN, props<{ flowId: UUID }>())"
            },
            {
                "name": "fadeIn400ms",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/animation/fade-in.animations.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "fadeInnimation(400)"
            },
            {
                "name": "fadeInUp400ms",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/animation/fade-in-up.animation.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "fadeInUpAnimation(400)"
            },
            {
                "name": "fetchAuthenticationsSuccessful",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tAuthenticationActionType.FETCH_AUTHENTICATION_SUCCESSFUL,\n\tprops<{ authentications: ProjectAuthentication[] }>()\n)"
            },
            {
                "name": "FLOW_ITEM_HEIGHT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "92"
            },
            {
                "name": "FLOW_ITEM_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "300"
            },
            {
                "name": "FlowItemDetailsActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tclearFlowItemsDetails,\n\tloadFlowItemsDetails,\n\tflowItemsDetailsLoadedSuccessfully,\n\tloadOldRemoteFlowItemDetails,\n\toldRemoteFlowItemDetailsLoadedSuccessfully,\n}"
            },
            {
                "name": "flowItemsDetailsLoadedSuccessfully",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowItemDetailsActionType.LOADED_SUCCESSFULLY,\n\tprops<{ flowItemsDetailsLoaded: FlowItemsDetailsState }>()\n)"
            },
            {
                "name": "flowItemsDetailsReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/reducer/flow-items-details.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n\tinitialState,\n\ton(FlowItemDetailsActions.clearFlowItemsDetails, (): FlowItemsDetailsState => {\n\t\treturn initialState;\n\t}),\n\ton(\n\t\tFlowItemDetailsActions.flowItemsDetailsLoadedSuccessfully,\n\t\t(state, { flowItemsDetailsLoaded }): FlowItemsDetailsState => {\n\t\t\treturn flowItemsDetailsLoaded;\n\t\t}\n\t),\n\ton(\n\t\tFlowItemDetailsActions.oldRemoteFlowItemDetailsLoadedSuccessfully,\n\t\t(state, { oldRemoteFlowItemDetails }): FlowItemsDetailsState => {\n\t\t\tconst clonedState: FlowItemsDetailsState = JSON.parse(JSON.stringify(state));\n\t\t\tclonedState.userCollectionsFlowItemsDetails.push(oldRemoteFlowItemDetails);\n\t\t\treturn clonedState;\n\t\t}\n\t)\n)"
            },
            {
                "name": "FlowsActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tsetInitial,\n\tsavedSuccess,\n\taddStep,\n\tdropPiece,\n\tsavedFailed,\n\tdeleteFlow,\n\taddFlow,\n\tdeleteStep,\n\tupdateConfig,\n\taddConfig,\n\treplaceTrigger,\n\tdeleteConfig,\n\tdeleteConfigFailed,\n\tdeleteConfigSucceeded,\n\tselectFlow,\n\tupdateStep,\n\tchangeName,\n\tsaveFlowStarted,\n\tdeleteFlowStarted,\n\tsetLeftSidebar,\n\tselectStep,\n\tsetRightSidebar,\n\tsetRun,\n\tdeselectStep,\n\texitRun,\n\tselectStepByName,\n\tdeleteSuccess,\n}"
            },
            {
                "name": "freeMailProviders",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/auth-layout/pages/consts.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t'hitmail.com',\n\t'rxdoc.biz',\n\t'cox.com',\n\t'126.net',\n\t'126.com',\n\t'comast.com',\n\t'comast.net',\n\t'yandex.com',\n\t'wegas.ru',\n\t'twc.com',\n\t'charter.com',\n\t'outlook.com',\n\t'gmx.com',\n\t'.ddns.org',\n\t'.findhere.com',\n\t'.freeservers.com',\n\t'.zzn.com',\n\t'1033edge.com',\n\t'11mail.com',\n\t'123.com',\n\t'123box.net',\n\t'123india.com',\n\t'123mail.cl',\n\t'123qwe.co.uk',\n\t'150ml.com',\n\t'15meg4free.com',\n\t'163.com',\n\t'1coolplace.com',\n\t'1freeemail.com',\n\t'1funplace.com',\n\t'1internetdrive.com',\n\t'1mail.net',\n\t'1me.net',\n\t'1mum.com',\n\t'1musicrow.com',\n\t'1netdrive.com',\n\t'1nsyncfan.com',\n\t'1under.com',\n\t'1webave.com',\n\t'1webhighway.com',\n\t'212.com',\n\t'24horas.com',\n\t'2911.net',\n\t'2bmail.co.uk',\n\t'2d2i.com',\n\t'2die4.com',\n\t'3000.it',\n\t'321media.com',\n\t'37.com',\n\t'3ammagazine.com',\n\t'3dmail.com',\n\t'3email.com',\n\t'3xl.net',\n\t'444.net',\n\t'4email.com',\n\t'4email.net',\n\t'4mg.com',\n\t'4newyork.com',\n\t'4x4man.com',\n\t'5iron.com',\n\t'5star.com',\n\t'88.am',\n\t'8848.net',\n\t'888.nu',\n\t'97rock.com',\n\t'aaamail.zzn.com',\n\t'aamail.net',\n\t'aaronkwok.net',\n\t'abbeyroadlondon.co.uk',\n\t'abcflash.net',\n\t'abdulnour.com',\n\t'aberystwyth.com',\n\t'abolition-now.com',\n\t'about.com',\n\t'academycougars.com',\n\t'acceso.or.cr',\n\t'access4less.net',\n\t'accessgcc.com',\n\t'ace-of-base.com',\n\t'acmecity.com',\n\t'acmemail.net',\n\t'acninc.net',\n\t'activatormail.com',\n\t'address.com',\n\t'adelphia.net',\n\t'adexec.com',\n\t'adfarrow.com',\n\t'adios.net',\n\t'adoption.com',\n\t'ados.fr',\n\t'adrenalinefreak.com',\n\t'advalvas.be',\n\t'aeiou.pt',\n\t'aemail4u.com',\n\t'aeneasmail.com',\n\t'afreeinternet.com',\n\t'africamail.com',\n\t'agoodmail.com',\n\t'ahaa.dk',\n\t'aichi.com',\n\t'aim.com',\n\t'airforce.net',\n\t'AirForceEmail.com',\n\t'airforceemail.com',\n\t'airpost.net',\n\t'ajacied.com',\n\t'ak47.hu',\n\t'aknet.kg',\n\t'albawaba.com',\n\t'alecsmail.com',\n\t'alex4all.com',\n\t'alexandria.cc',\n\t'algeria.com',\n\t'alhilal.net',\n\t'alibaba.com',\n\t'alive.cz',\n\t'allmail.net',\n\t'alloymail.com',\n\t'allracing.com',\n\t'allsaintsfan.com',\n\t'alltel.net',\n\t'alskens.dk',\n\t'altavista.com',\n\t'altavista.net',\n\t'altavista.se',\n\t'alternativagratis.com',\n\t'alumnidirector.com',\n\t'alvilag.hu',\n\t'amele.com',\n\t'america.hm',\n\t'ameritech.net',\n\t'amnetsal.com',\n\t'amrer.net',\n\t'amuro.net',\n\t'amuromail.com',\n\t'ananzi.co.za',\n\t'ancestry.com',\n\t'andylau.net',\n\t'anfmail.com',\n\t'angelfan.com',\n\t'angelfire.com',\n\t'animail.net',\n\t'animal.net',\n\t'animalhouse.com',\n\t'animalwoman.net',\n\t'anjungcafe.com',\n\t'annsmail.com',\n\t'anote.com',\n\t'another.com',\n\t'anotherwin95.com',\n\t'anti-social.com',\n\t'antisocial.com',\n\t'antongijsen.com',\n\t'antwerpen.com',\n\t'anymoment.com',\n\t'anytimenow.com',\n\t'aol.com',\n\t'apexmail.com',\n\t'apmail.com',\n\t'apollo.lv',\n\t'approvers.net',\n\t'arabia.com',\n\t'arabtop.net',\n\t'arcademaster.com',\n\t'archaeologist.com',\n\t'arcor.de',\n\t'arcotronics.bg',\n\t'argentina.com',\n\t'aristotle.org',\n\t'army.net',\n\t'arnet.com.ar',\n\t'artlover.com',\n\t'artlover.com.au',\n\t'as-if.com',\n\t'asean-mail',\n\t'asean-mail.com',\n\t'asheville.com',\n\t'asia-links.com',\n\t'asia.com',\n\t'asiafind.com',\n\t'asianavenue.com',\n\t'asiancityweb.com',\n\t'asiansonly.net',\n\t'asianwired.net',\n\t'asiapoint.net',\n\t'assala.com',\n\t'assamesemail.com',\n\t'astroboymail.com',\n\t'astrolover.com',\n\t'astrosfan.com',\n\t'astrosfan.net',\n\t'asurfer.com',\n\t'athenachu.net',\n\t'atina.cl',\n\t'atl.lv',\n\t'atlaswebmail.com',\n\t'atlink.com',\n\t'ato.check.com',\n\t'atozasia.com',\n\t'att.net',\n\t'attglobal.net',\n\t'attymail.com',\n\t'au.ru',\n\t'ausi.com',\n\t'aussiemail.com.au',\n\t'austin.rr.com',\n\t'australia.edu',\n\t'australiamail.com',\n\t'austrosearch.net',\n\t'autoescuelanerja.com',\n\t'automotiveauthority.com',\n\t'avh.hu',\n\t'awsom.net',\n\t'axoskate.com',\n\t'ayna.com',\n\t'azimiweb.com',\n\t'bachelorboy.com',\n\t'bachelorgal.com',\n\t'backpackers.com',\n\t'backstreet-boys.com',\n\t'backstreetboysclub.com',\n\t'backwards.com',\n\t'bagherpour.com',\n\t'bahrainmail.com',\n\t'bangkok.com',\n\t'bangkok2000.com',\n\t'bannertown.net',\n\t'baptistmail.com',\n\t'baptized.com',\n\t'barcelona.com',\n\t'baseballmail.com',\n\t'basketballmail.com',\n\t'batuta.net',\n\t'baudoinconsulting.com',\n\t'bboy.zzn.com',\n\t'bcvibes.com',\n\t'beeebank.com',\n\t'beenhad.com',\n\t'beep.ru',\n\t'beer.com',\n\t'beethoven.com',\n\t'belice.com',\n\t'belizehome.com',\n\t'bellsouth.net',\n\t'berkscounty.com',\n\t'berlin.com',\n\t'berlin.de',\n\t'berlinexpo.de',\n\t'bestmail.us',\n\t'bettergolf.net',\n\t'bharatmail.com',\n\t'bigassweb.com',\n\t'bigblue.net.au',\n\t'bigboab.com',\n\t'bigfoot.com',\n\t'bigfoot.de',\n\t'bigger.com',\n\t'biggerbadder.com',\n\t'bigmailbox.com',\n\t'bigpond.com',\n\t'bigpond.com.au',\n\t'bigpond.net.au',\n\t'bigramp.com',\n\t'bikemechanics.com',\n\t'bikeracer.com',\n\t'bikeracers.net',\n\t'bikerider.com',\n\t'billsfan.com',\n\t'billsfan.net',\n\t'bimamail.com',\n\t'bimla.net',\n\t'birdowner.net',\n\t'bisons.com',\n\t'bitmail.com',\n\t'bitpage.net',\n\t'bizhosting.com',\n\t'bla-bla.com',\n\t'blackburnmail.com',\n\t'blackplanet.com',\n\t'blazemail.com',\n\t'bluehyppo.com',\n\t'bluemail.ch',\n\t'bluemail.dk',\n\t'bluesfan.com',\n\t'blushmail.com',\n\t'bmlsports.net',\n\t'boardermail.com',\n\t'boatracers.com',\n\t'bol.com.br',\n\t'bolando.com',\n\t'bollywoodz.com',\n\t'bolt.com',\n\t'boltonfans.com',\n\t'bombdiggity.com',\n\t'bonbon.net',\n\t'BonBon.net',\n\t'boom.com',\n\t'bootmail.com',\n\t'bornnaked.com',\n\t'bossofthemoss.com',\n\t'bostonoffice.com',\n\t'bounce.net',\n\t'box.az',\n\t'boxbg.com',\n\t'boxemail.com',\n\t'boxfrog.com',\n\t'boyzoneclub.com',\n\t'bradfordfans.com',\n\t'brasilia.net',\n\t'brazilmail.com.br',\n\t'breathe.com',\n\t'bresnan.net',\n\t'brfree.com.br',\n\t'bright.net',\n\t'britneyclub.com',\n\t'brittonsign.com',\n\t'broadcast.net',\n\t'btopenworld.co.uk',\n\t'buffymail.com',\n\t'bullsfan.com',\n\t'bullsgame.com',\n\t'bumerang.ro',\n\t'bumrap.com',\n\t'bunko.com',\n\t'buryfans.com',\n\t'business-man.com',\n\t'businessman.net',\n\t'businessweekmail.com',\n\t'busta-rhymes.com',\n\t'busymail.com',\n\t'busymail.comhomeart.com',\n\t'buyersusa.com',\n\t'bvimailbox.com',\n\t'byteme.com',\n\t'c2i.net',\n\t'c3.hu',\n\t'c4.com',\n\t'cabacabana.com',\n\t'cableone.net',\n\t'caere.it',\n\t'cairomail.com',\n\t'callnetuk.com',\n\t'callsign.net',\n\t'caltanet.it',\n\t'camidge.com',\n\t'canada-11.com',\n\t'canada.com',\n\t'canadianmail.com',\n\t'canoemail.com',\n\t'canwetalk.com',\n\t'caramail.com',\n\t'care2.com',\n\t'careerbuildermail.com',\n\t'carioca.net',\n\t'cartestraina.ro',\n\t'casablancaresort.com',\n\t'casino.com',\n\t'catcha.com',\n\t'catchamail.com',\n\t'catholic.org',\n\t'catlover.com',\n\t'catsrule.garfield.com',\n\t'ccnmail.com',\n\t'cd2.com',\n\t'celineclub.com',\n\t'celtic.com',\n\t'centoper.it',\n\t'centralpets.com',\n\t'centrum.cz',\n\t'centrum.sk',\n\t'centurytel.net',\n\t'certifiedmail.com',\n\t'cfl.rr.com',\n\t'cgac.es',\n\t'chaiyomail.com',\n\t'chance2mail.com',\n\t'chandrasekar.net',\n\t'charmedmail.com',\n\t'charter.net',\n\t'chat.ru',\n\t'chattown.com',\n\t'chauhanweb.com',\n\t'check.com',\n\t'check.com12',\n\t'check1check.com',\n\t'cheerful.com',\n\t'chek.com',\n\t'chemist.com',\n\t'chequemail.com',\n\t'cheyenneweb.com',\n\t'chez.com',\n\t'chickmail.com',\n\t'childrens.md',\n\t'china.net.vg',\n\t'chinalook.com',\n\t'chirk.com',\n\t'chocaholic.com.au',\n\t'christianmail.net',\n\t'churchusa.com',\n\t'cia-agent.com',\n\t'cia.hu',\n\t'ciaoweb.it',\n\t'cicciociccio.com',\n\t'cincinow.net',\n\t'citeweb.net',\n\t'citlink.net',\n\t'city-of-bath.org',\n\t'city-of-birmingham.com',\n\t'city-of-brighton.org',\n\t'city-of-cambridge.com',\n\t'city-of-coventry.com',\n\t'city-of-edinburgh.com',\n\t'city-of-lichfield.com',\n\t'city-of-lincoln.com',\n\t'city-of-liverpool.com',\n\t'city-of-manchester.com',\n\t'city-of-nottingham.com',\n\t'city-of-oxford.com',\n\t'city-of-swansea.com',\n\t'city-of-westminster.com',\n\t'city-of-westminster.net',\n\t'city-of-york.net',\n\t'city2city.com',\n\t'cityofcardiff.net',\n\t'cityoflondon.org',\n\t'claramail.com',\n\t'classicalfan.com',\n\t'classicmail.co.za',\n\t'clerk.com',\n\t'cliffhanger.com',\n\t'close2you.ne',\n\t'close2you.net',\n\t'club4x4.net',\n\t'clubalfa.com',\n\t'clubbers.net',\n\t'clubducati.com',\n\t'clubhonda.net',\n\t'clubnetnoir.com',\n\t'clubvdo.net',\n\t'cluemail.com',\n\t'cmpmail.com',\n\t'cnnsimail.com',\n\t'codec.ro',\n\t'codec.roemail.ro',\n\t'coder.hu',\n\t'coid.biz',\n\t'coldmail.com',\n\t'collectiblesuperstore.com',\n\t'collegebeat.com',\n\t'collegeclub.com',\n\t'collegemail.com',\n\t'colleges.com',\n\t'columbus.rr.com',\n\t'columbusrr.com',\n\t'columnist.com',\n\t'comcast.net',\n\t'comic.com',\n\t'communityconnect.com',\n\t'comprendemail.com',\n\t'compuserve.com',\n\t'computer-freak.com',\n\t'computermail.net',\n\t'conexcol.com',\n\t'conk.com',\n\t'connect4free.net',\n\t'connectbox.com',\n\t'conok.com',\n\t'consultant.com',\n\t'cookiemonster.com',\n\t'cool.br',\n\t'coolgoose.ca',\n\t'coolgoose.com',\n\t'coolkiwi.com',\n\t'coollist.com',\n\t'coolmail.com',\n\t'coolmail.net',\n\t'coolsend.com',\n\t'cooooool.com',\n\t'cooperation.net',\n\t'cooperationtogo.net',\n\t'copacabana.com',\n\t'cornells.com',\n\t'cornerpub.com',\n\t'corporatedirtbag.com',\n\t'correo.terra.com.gt',\n\t'cortinet.com',\n\t'cotas.net',\n\t'counsellor.com',\n\t'countrylover.com',\n\t'cox.net',\n\t'coxinet.net',\n\t'CPAonline.net',\n\t'cpaonline.net',\n\t'cracker.hu',\n\t'crazedanddazed.com',\n\t'crazysexycool.com',\n\t'cristianemail.com',\n\t'critterpost.com',\n\t'croeso.com',\n\t'crosshairs.com',\n\t'crosswinds.net',\n\t'crwmail.com',\n\t'cry4helponline.com',\n\t'cs.com',\n\t'csinibaba.hu',\n\t'cuemail.com',\n\t'curio-city.com',\n\t'curtsmail.com',\n\t'cute-girl.com',\n\t'cuteandcuddly.com',\n\t'cutey.com',\n\t'cww.de',\n\t'cyber-africa.net',\n\t'cyber4all.com',\n\t'cyberbabies.com',\n\t'CyberCafeMaui.com',\n\t'cybercafemaui.com',\n\t'cyberdude.com',\n\t'cyberforeplay.net',\n\t'cybergal.com',\n\t'cybergrrl.com',\n\t'cyberinbox.com',\n\t'cyberleports.com',\n\t'cybermail.net',\n\t'cybernet.it',\n\t'cyberspace-asia.com',\n\t'cybertrains.org',\n\t'cyclefanz.com',\n\t'cynetcity.com',\n\t'dabsol.net',\n\t'dadacasa.com',\n\t'daha.com',\n\t'dailypioneer.com',\n\t'dallas.theboys.com',\n\t'dangerous-minds.com',\n\t'dansegulvet.com',\n\t'data54.com',\n\t'davegracey.com',\n\t'dawnsonmail.com',\n\t'dawsonmail.com',\n\t'dazedandconfused.com',\n\t'dbzmail.com',\n\t'DCemail.com',\n\t'dcemail.com',\n\t'deadlymob.org',\n\t'deal-maker.com',\n\t'dearriba.com',\n\t'death-star.com',\n\t'dejanews.com',\n\t'deliveryman.com',\n\t'deneg.net',\n\t'depechemode.com',\n\t'deseretmail.com',\n\t'desertmail.com',\n\t'desilota.com',\n\t'deskmail.com',\n\t'deskpilot.com',\n\t'destin.com',\n\t'detik.com',\n\t'deutschland-net.com',\n\t'devotedcouples.com',\n\t'dfwatson.com',\n\t'di-ve.com',\n\t'digibel.be',\n\t'diplomats.com',\n\t'dirtracer.com',\n\t'dirtracers.com',\n\t'discofan.com',\n\t'discovery.com',\n\t'discoverymail.com',\n\t'disinfo.net',\n\t'dmailman.com',\n\t'dnsmadeeasy.com',\n\t'doctor.com',\n\t'dog.com',\n\t'doglover.com',\n\t'dogmail.co.uk',\n\t'dogsnob.net',\n\t'doityourself.com',\n\t'doneasy.com',\n\t'donjuan.com',\n\t'dontgotmail.com',\n\t'dontmesswithtexas.com',\n\t'doramail.com',\n\t'dostmail.com',\n\t'dotcom.fr',\n\t'dott.it',\n\t'dplanet.ch',\n\t'dr.com',\n\t'dragoncon.net',\n\t'dragracer.com',\n\t'dropzone.com',\n\t'drotposta.hu',\n\t'dubaimail.com',\n\t'dublin.com',\n\t'dublin.ie',\n\t'dunlopdriver.com',\n\t'dunloprider.com',\n\t'duno.com',\n\t'dwp.net',\n\t'dygo.com',\n\t'dynamitemail.com',\n\t'e-apollo.lv',\n\t'e-mail.dk',\n\t'e-mail.ru',\n\t'e-mailanywhere.com',\n\t'e-mails.ru',\n\t'e-tapaal.com',\n\t'earthalliance.com',\n\t'earthcam.net',\n\t'EarthCam.net',\n\t'earthdome.com',\n\t'earthling.net',\n\t'earthlink.net',\n\t'earthonline.net',\n\t'eastcoast.co.za',\n\t'eastmail.com',\n\t'easy.to',\n\t'easypost.com',\n\t'eatmydirt.com',\n\t'ecardmail.com',\n\t'ecbsolutions.net',\n\t'echina.com',\n\t'ecompare.com',\n\t'edmail.com',\n\t'ednatx.com',\n\t'edtnmail.com',\n\t'educacao.te.pt',\n\t'educastmail.com',\n\t'ehmail.com',\n\t'eircom.net',\n\t'ekidz.com.au',\n\t'elsitio.com',\n\t'elvis.com',\n\t'email-london.co.uk',\n\t'email.biz',\n\t'email.com',\n\t'email.cz',\n\t'email.ee',\n\t'email.it',\n\t'email.nu',\n\t'email.ro',\n\t'email.ru',\n\t'email.si',\n\t'email.women.com',\n\t'email2me.net',\n\t'emailacc.com',\n\t'emailaccount.com',\n\t'emailchoice.com',\n\t'emailcorner.net',\n\t'emailem.com',\n\t'emailengine.net',\n\t'emailforyou.net',\n\t'emailgroups.net',\n\t'emailit.com',\n\t'emailpinoy.com',\n\t'emailplanet.com',\n\t'emails.ru',\n\t'emailuser.net',\n\t'emailx.net',\n\t'ematic.com',\n\t'embarqmail.com',\n\t'eml.cc',\n\t'emumail.com',\n\t'end-war.com',\n\t'enel.net',\n\t'engineer.com',\n\t'england.com',\n\t'england.edu',\n\t'epatra.com',\n\t'epix.net',\n\t'epost.de',\n\t'eposta.hu',\n\t'eqqu.com',\n\t'eramail.co.za',\n\t'eresmas.com',\n\t'eriga.lv',\n\t'estranet.it',\n\t'ethos.st',\n\t'etoast.com',\n\t'etrademail.com',\n\t'eudoramail.com',\n\t'europe.com',\n\t'euroseek.com',\n\t'eurosport.com',\n\t'every1.net',\n\t'everyday.com.kh',\n\t'everyone.net',\n\t'examnotes.net',\n\t'excite.co.jp',\n\t'excite.com',\n\t'excite.it',\n\t'execs.com',\n\t'expressasia.com',\n\t'extenda.net',\n\t'extended.com',\n\t'eyou.com',\n\t'ezcybersearch.com',\n\t'ezmail.egine.com',\n\t'ezmail.ru',\n\t'ezrs.com',\n\t'f1fans.net',\n\t'fan.com',\n\t'fan.theboys.com',\n\t'fansonlymail.com',\n\t'fantasticmail.com',\n\t'farang.net',\n\t'faroweb.com',\n\t'fastem.com',\n\t'fastemail.us',\n\t'fastemailer.com',\n\t'fastermail.com',\n\t'fastimap.com',\n\t'fastmail.ca',\n\t'fastmail.fm',\n\t'fastmailbox.net',\n\t'fastmessaging.com',\n\t'fatcock.net',\n\t'fathersrightsne.org',\n\t'fbi-agent.com',\n\t'fbi.hu',\n\t'federalcontractors.com',\n\t'felicity.com',\n\t'felicitymail.com',\n\t'femenino.com',\n\t'fetchmail.co.uk',\n\t'fetchmail.com',\n\t'feyenoorder.com',\n\t'ffanet.com',\n\t'fiberia.com',\n\t'filipinolinks.com',\n\t'financemail.net',\n\t'financier.com',\n\t'findmail.com',\n\t'finebody.com',\n\t'finfin.com',\n\t'fire-brigade.com',\n\t'fishburne.org',\n\t'flashemail.com',\n\t'flashmail.com',\n\t'flashmail.net',\n\t'flipcode.com',\n\t'fmail.co.uk',\n\t'fmailbox.com',\n\t'fmgirl.com',\n\t'fmguy.com',\n\t'fnbmail.co.za',\n\t'fnmail.com',\n\t'folkfan.com',\n\t'foodmail.com',\n\t'football.theboys.com',\n\t'footballmail.com',\n\t'for-president.com',\n\t'forfree.at',\n\t'forpresident.com',\n\t'fortuncity.com',\n\t'fortunecity.com',\n\t'forum.dk',\n\t'free-org.com',\n\t'free.com.pe',\n\t'free.fr',\n\t'freeaccess.nl',\n\t'freeaccount.com',\n\t'freeandsingle.com',\n\t'freebox.com',\n\t'freedom.usa.com',\n\t'freedomlover.com',\n\t'freegates.be',\n\t'freeghana.com',\n\t'freeler.nl',\n\t'freemail.c3.hu',\n\t'freemail.com.au',\n\t'freemail.com.pk',\n\t'freemail.de',\n\t'freemail.et',\n\t'freemail.gr',\n\t'freemail.hu',\n\t'freemail.it',\n\t'freemail.lt',\n\t'freemail.nl',\n\t'freemail.org.mk',\n\t'freenet.de',\n\t'freenet.kg',\n\t'freeola.com',\n\t'freeola.net',\n\t'freeserve.co.uk',\n\t'freestamp.com',\n\t'freestart.hu',\n\t'freesurf.fr',\n\t'freesurf.nl',\n\t'freeuk.com',\n\t'freeuk.net',\n\t'freeukisp.co.uk',\n\t'freeweb.org',\n\t'freewebemail.com',\n\t'freeyellow.com',\n\t'freezone.co.uk',\n\t'fresnomail.com',\n\t'friends-cafe.com',\n\t'friendsfan.com',\n\t'from-africa.com',\n\t'from-america.com',\n\t'from-argentina.com',\n\t'from-asia.com',\n\t'from-australia.com',\n\t'from-belgium.com',\n\t'from-brazil.com',\n\t'from-canada.com',\n\t'from-china.net',\n\t'from-england.com',\n\t'from-europe.com',\n\t'from-france.net',\n\t'from-germany.net',\n\t'from-holland.com',\n\t'from-israel.com',\n\t'from-italy.net',\n\t'from-japan.net',\n\t'from-korea.com',\n\t'from-mexico.com',\n\t'from-outerspace.com',\n\t'from-russia.com',\n\t'from-spain.net',\n\t'fromalabama.com',\n\t'fromalaska.com',\n\t'fromarizona.com',\n\t'fromarkansas.com',\n\t'fromcalifornia.com',\n\t'fromcolorado.com',\n\t'fromconnecticut.com',\n\t'fromdelaware.com',\n\t'fromflorida.net',\n\t'fromgeorgia.com',\n\t'fromhawaii.net',\n\t'fromidaho.com',\n\t'fromillinois.com',\n\t'fromindiana.com',\n\t'fromiowa.com',\n\t'fromjupiter.com',\n\t'fromkansas.com',\n\t'fromkentucky.com',\n\t'fromlouisiana.com',\n\t'frommaine.net',\n\t'frommaryland.com',\n\t'frommassachusetts.com',\n\t'frommiami.com',\n\t'frommichigan.com',\n\t'fromminnesota.com',\n\t'frommississippi.com',\n\t'frommissouri.com',\n\t'frommontana.com',\n\t'fromnebraska.com',\n\t'fromnevada.com',\n\t'fromnewhampshire.com',\n\t'fromnewjersey.com',\n\t'fromnewmexico.com',\n\t'fromnewyork.net',\n\t'fromnorthcarolina.com',\n\t'fromnorthdakota.com',\n\t'fromohio.com',\n\t'fromoklahoma.com',\n\t'fromoregon.net',\n\t'frompennsylvania.com',\n\t'fromrhodeisland.com',\n\t'fromru.com',\n\t'fromsouthcarolina.com',\n\t'fromsouthdakota.com',\n\t'fromtennessee.com',\n\t'fromtexas.com',\n\t'fromthestates.com',\n\t'fromutah.com',\n\t'fromvermont.com',\n\t'fromvirginia.com',\n\t'fromwashington.com',\n\t'fromwashingtondc.com',\n\t'fromwestvirginia.com',\n\t'fromwisconsin.com',\n\t'fromwyoming.com',\n\t'front.ru',\n\t'frontier.com',\n\t'frontiernet.net',\n\t'frostbyte.uk.net',\n\t'fsmail.net',\n\t'ftml.net',\n\t'fullmail.com',\n\t'funkfan.com',\n\t'funky4.com',\n\t'fuorissimo.com',\n\t'furnitureprovider.com',\n\t'fuse.net',\n\t'fut.es',\n\t'fwnb.com',\n\t'fxsmails.com',\n\t'galamb.net',\n\t'galaxy5.com',\n\t'gamebox.net',\n\t'gamegeek.com',\n\t'gamespotmail.com',\n\t'garbage.com',\n\t'gardener.com',\n\t'gawab.com',\n\t'gaybrighton.co.uk',\n\t'gaza.net',\n\t'gazeta.pl',\n\t'gazibooks.com',\n\t'gci.net',\n\t'gee-wiz.com',\n\t'geecities.com',\n\t'geek.com',\n\t'geek.hu',\n\t'geeklife.com',\n\t'general-hospital.com',\n\t'geocities.com',\n\t'geography.net',\n\t'geologist.com',\n\t'geopia.com',\n\t'gh2000.com',\n\t'ghanamail.com',\n\t'ghostmail.com',\n\t'giantsfan.com',\n\t'giga4u.de',\n\t'gigileung.org',\n\t'girl4god.com',\n\t'givepeaceachance.com',\n\t'glay.org',\n\t'glendale.net',\n\t'globalfree.it',\n\t'globalpagan.com',\n\t'globalsite.com.br',\n\t'gmail.com',\n\t'gmx.at',\n\t'gmx.de',\n\t'gmx.li',\n\t'gmx.net',\n\t'gnwmail.com',\n\t'go.com',\n\t'go.ro',\n\t'go.ru',\n\t'go2.com.py',\n\t'go2net.com',\n\t'gocollege.com',\n\t'gocubs.com',\n\t'gofree.co.uk',\n\t'goldenmail.ru',\n\t'goldmail.ru',\n\t'golfemail.com',\n\t'golfmail.be',\n\t'gonavy.net',\n\t'goodnewsmail.com',\n\t'goodstick.com',\n\t'googlemail.com',\n\t'goplay.com',\n\t'gorontalo.net',\n\t'gospelfan.com',\n\t'gothere.uk.com',\n\t'gotmail.com',\n\t'gotomy.com',\n\t'govolsfan.com',\n\t'gportal.hu',\n\t'grabmail.com',\n\t'graffiti.net',\n\t'gramszu.net',\n\t'grapplers.com',\n\t'gratisweb.com',\n\t'grungecafe.com',\n\t'gtemail.net',\n\t'gtmc.net',\n\t'gua.net',\n\t'guessmail.com',\n\t'guju.net',\n\t'gurlmail.com',\n\t'guy.com',\n\t'guy2.com',\n\t'guyanafriends.com',\n\t'gyorsposta.com',\n\t'gyorsposta.hu',\n\t'hackermail.net',\n\t'hailmail.net',\n\t'hairdresser.net',\n\t'hamptonroads.com',\n\t'handbag.com',\n\t'handleit.com',\n\t'hang-ten.com',\n\t'hanmail.net',\n\t'happemail.com',\n\t'happycounsel.com',\n\t'happypuppy.com',\n\t'hardcorefreak.com',\n\t'hawaii.rr.com',\n\t'hawaiiantel.net',\n\t'headbone.com',\n\t'heartthrob.com',\n\t'heerschap.com',\n\t'heesun.net',\n\t'hehe.com',\n\t'hello.hu',\n\t'hello.net.au',\n\t'hello.to',\n\t'helter-skelter.com',\n\t'hempseed.com',\n\t'herediano.com',\n\t'heremail.com',\n\t'herono1.com',\n\t'hey.to',\n\t'hhdevel.com',\n\t'highmilton.com',\n\t'highquality.com',\n\t'highveldmail.co.za',\n\t'hiphopfan.com',\n\t'hispavista.com',\n\t'hitthe.net',\n\t'hkg.net',\n\t'hkstarphoto.com',\n\t'hockeymail.com',\n\t'hollywoodkids.com',\n\t'home-email.com',\n\t'home.no.net',\n\t'home.ro',\n\t'home.se',\n\t'homeart.com',\n\t'homelocator.com',\n\t'homemail.com',\n\t'homestead.com',\n\t'homeworkcentral.com',\n\t'honduras.com',\n\t'hongkong.com',\n\t'hookup.net',\n\t'hoopsmail.com',\n\t'horrormail.com',\n\t'host-it.com.sg',\n\t'hot-shot.com',\n\t'hot.ee',\n\t'hotbot.com',\n\t'hotbrev.com',\n\t'hotepmail.com',\n\t'hotfire.net',\n\t'hotletter.com',\n\t'hotmail.co.il',\n\t'hotmail.co.uk',\n\t'hotmail.com',\n\t'hotmail.fr',\n\t'hotmail.kg',\n\t'hotmail.kz',\n\t'hotmail.roor',\n\t'hotmail.ru',\n\t'hotpop.com',\n\t'HotPOP.com',\n\t'hotpop3.com',\n\t'hotvoice.com',\n\t'housefancom',\n\t'housemail.com',\n\t'hsuchi.net',\n\t'html.tou.com',\n\t'hughes.net',\n\t'hunsa.com',\n\t'hurting.com',\n\t'hushmail.com',\n\t'hypernautica.com',\n\t'i-connect.com',\n\t'i-france.com',\n\t'i-mail.com.au',\n\t'i-mailbox.net',\n\t'i-p.com',\n\t'i.am',\n\t'i.amhey.to',\n\t'i12.com',\n\t'iamawoman.com',\n\t'iamwaiting.com',\n\t'iamwasted.com',\n\t'iamyours.com',\n\t'icestorm.com',\n\t'icloud.com',\n\t'icmsconsultants.com',\n\t'icq.com',\n\t'icqmail.com',\n\t'icrazy.com',\n\t'icu.md',\n\t'ID-base.com',\n\t'id-base.com',\n\t'ididitmyway.com',\n\t'idigjesus.com',\n\t'idirect.com',\n\t'iespana.es',\n\t'ifoward.com',\n\t'ig.com.br',\n\t'ignazio.it',\n\t'ignmail.com',\n\t'ihateclowns.com',\n\t'iinet.net.au',\n\t'ijustdontcare.com',\n\t'ilovechocolate.com',\n\t'ilovejesus.com',\n\t'ilovethemovies.com',\n\t'ilovetocollect.net',\n\t'ilse.nl',\n\t'imaginemail.com',\n\t'imail.org',\n\t'imail.ru',\n\t'imailbox.com',\n\t'imel.org',\n\t'imneverwrong.com',\n\t'imposter.co.uk',\n\t'imstressed.com',\n\t'imtoosexy.com',\n\t'in-box.net',\n\t'in2jesus.com',\n\t'iname.com',\n\t'inbox.net',\n\t'inbox.ru',\n\t'incamail.com',\n\t'includingarabia.com',\n\t'incredimail.com',\n\t'indexa.fr',\n\t'india.com',\n\t'indiatimes.com',\n\t'indo-mail.com',\n\t'indocities.com',\n\t'indomail.com',\n\t'indyracers.com',\n\t'info-media.de',\n\t'info66.com',\n\t'infohq.com',\n\t'infomail.es',\n\t'infomart.or.jp',\n\t'infospacemail.com',\n\t'infovia.com.ar',\n\t'inicia.es',\n\t'inmail.sk',\n\t'innocent.com',\n\t'inorbit.com',\n\t'insidebaltimore.net',\n\t'insight.rr.com',\n\t'insurer.com',\n\t'interburp.com',\n\t'interfree.it',\n\t'interia.pl',\n\t'interlap.com.ar',\n\t'intermail.co.il',\n\t'internet-club.com',\n\t'internet-police.com',\n\t'internetbiz.com',\n\t'internetdrive.com',\n\t'internetegypt.com',\n\t'internetemails.net',\n\t'internetmailing.net',\n\t'investormail.com',\n\t'inwind.it',\n\t'iobox.com',\n\t'iobox.fi',\n\t'iol.it',\n\t'iowaemail.com',\n\t'ip3.com',\n\t'iprimus.com.au',\n\t'iqemail.com',\n\t'irangate.net',\n\t'iraqmail.com',\n\t'ireland.com',\n\t'irj.hu',\n\t'isellcars.com',\n\t'iservejesus.com',\n\t'islamonline.net',\n\t'isleuthmail.com',\n\t'ismart.net',\n\t'isonfire.com',\n\t'isp9.net',\n\t'itloox.com',\n\t'itmom.com',\n\t'ivebeenframed.com',\n\t'ivillage.com',\n\t'iwan-fals.com',\n\t'iwmail.com',\n\t'iwon.com',\n\t'izadpanah.com',\n\t'jahoopa.com',\n\t'jakuza.hu',\n\t'japan.com',\n\t'jaydemail.com',\n\t'jazzandjava.com',\n\t'jazzfan.com',\n\t'jazzgame.com',\n\t'jerusalemmail.com',\n\t'jetemail.net',\n\t'jewishmail.com',\n\t'jippii.fi',\n\t'jmail.co.za',\n\t'joinme.com',\n\t'jokes.com',\n\t'jordanmail.com',\n\t'journalist.com',\n\t'jovem.te.pt',\n\t'joymail.com',\n\t'jpopmail.com',\n\t'jubiimail.dk',\n\t'jump.com',\n\t'jumpy.it',\n\t'juniormail.com',\n\t'juno.com',\n\t'justemail.net',\n\t'justicemail.com',\n\t'kaazoo.com',\n\t'kaixo.com',\n\t'kalpoint.com',\n\t'kansascity.com',\n\t'kapoorweb.com',\n\t'karachian.com',\n\t'karachioye.com',\n\t'karbasi.com',\n\t'katamail.com',\n\t'kayafmmail.co.za',\n\t'kbjrmail.com',\n\t'kcks.com',\n\t'keftamail.com',\n\t'keg-party.com',\n\t'keko.com.ar',\n\t'kellychen.com',\n\t'keromail.com',\n\t'keyemail.com',\n\t'kgb.hu',\n\t'khosropour.com',\n\t'kickassmail.com',\n\t'killermail.com',\n\t'kimo.com',\n\t'kinki-kids.com',\n\t'kittymail.com',\n\t'kitznet.at',\n\t'kiwibox.com',\n\t'kiwitown.com',\n\t'kmail.com.au',\n\t'konx.com',\n\t'korea.com',\n\t'kozmail.com',\n\t'krongthip.com',\n\t'krunis.com',\n\t'ksanmail.com',\n\t'ksee24mail.com',\n\t'kube93mail.com',\n\t'kukamail.com',\n\t'kumarweb.com',\n\t'kuwait-mail.com',\n\t'la.com',\n\t'ladymail.cz',\n\t'lagerlouts.com',\n\t'lahoreoye.com',\n\t'lakmail.com',\n\t'lamer.hu',\n\t'land.ru',\n\t'lankamail.com',\n\t'laposte.net',\n\t'latemodels.com',\n\t'latinmail.com',\n\t'latino.com',\n\t'law.com',\n\t'lawyer.com',\n\t'leehom.net',\n\t'legalactions.com',\n\t'legislator.com',\n\t'leonlai.net',\n\t'letsgomets.net',\n\t'letterbox.com',\n\t'levele.com',\n\t'levele.hu',\n\t'lex.bg',\n\t'lexis-nexis-mail.com',\n\t'liberomail.com',\n\t'lick101.com',\n\t'linkmaster.com',\n\t'linktrader.com',\n\t'linuxfreemail.com',\n\t'linuxmail.org',\n\t'lionsfan.com.au',\n\t'liontrucks.com',\n\t'liquidinformation.net',\n\t'list.ru',\n\t'littleapple.com',\n\t'littleblueroom.com',\n\t'live.com',\n\t'liverpoolfans.com',\n\t'llandudno.com',\n\t'llangollen.com',\n\t'lmxmail.sk',\n\t'lobbyist.com',\n\t'localbar.com',\n\t'locos.com',\n\t'london.com',\n\t'loobie.com',\n\t'looksmart.co.uk',\n\t'looksmart.com',\n\t'looksmart.com.au',\n\t'lopezclub.com',\n\t'louiskoo.com',\n\t'love.cz',\n\t'loveable.com',\n\t'lovefootball.com',\n\t'lovelygirl.net',\n\t'lovemail.com',\n\t'lover-boy.com',\n\t'lovergirl.com',\n\t'lovethebroncos.com',\n\t'lovethecowboys.com',\n\t'lovingjesus.com',\n\t'lowandslow.com',\n\t'luso.pt',\n\t'luukku.com',\n\t'lycos.co.uk',\n\t'lycos.com',\n\t'lycos.es',\n\t'lycos.it',\n\t'lycos.ne.jp',\n\t'lycosemail.com',\n\t'lycosmail.com',\n\t'm-a-i-l.com',\n\t'm-hmail.com',\n\t'm4.org',\n\t'mac.com',\n\t'macbox.com',\n\t'macfreak.com',\n\t'machinecandy.com',\n\t'macmail.com',\n\t'madcreations.com',\n\t'madrid.com',\n\t'maffia.hu',\n\t'magicmail.co.za',\n\t'mahmoodweb.com',\n\t'mail-awu.de',\n\t'mail-box.cz',\n\t'mail-center.com',\n\t'mail-central.com',\n\t'mail-page.com',\n\t'mail.austria.com',\n\t'mail.az',\n\t'mail.be',\n\t'mail.bulgaria.com',\n\t'mail.byte.it',\n\t'mail.co.za',\n\t'mail.com',\n\t'mail.ee',\n\t'mail.entrepeneurmag.com',\n\t'mail.freetown.com',\n\t'mail.gr',\n\t'mail.hitthebeach.com',\n\t'mail.kmsp.com',\n\t'mail.md',\n\t'mail.nu',\n\t'mail.org.uk',\n\t'mail.pf',\n\t'mail.pharmacy.com',\n\t'mail.pt',\n\t'mail.r-o-o-t.com',\n\t'mail.ru',\n\t'mail.salu.net',\n\t'mail.sisna.com',\n\t'mail.spaceports.com',\n\t'mail.theboys.com',\n\t'mail.usa.com',\n\t'mail.vasarhely.hu',\n\t'mail15.com',\n\t'mail1st.com',\n\t'mail2007.com',\n\t'mail2aaron.com',\n\t'mail2abby.com',\n\t'mail2abc.com',\n\t'mail2actor.com',\n\t'mail2admiral.com',\n\t'mail2adorable.com',\n\t'mail2adoration.com',\n\t'mail2adore.com',\n\t'mail2adventure.com',\n\t'mail2aeolus.com',\n\t'mail2aether.com',\n\t'mail2affection.com',\n\t'mail2afghanistan.com',\n\t'mail2africa.com',\n\t'mail2agent.com',\n\t'mail2aha.com',\n\t'mail2ahoy.com',\n\t'mail2aim.com',\n\t'mail2air.com',\n\t'mail2airbag.com',\n\t'mail2airforce.com',\n\t'mail2airport.com',\n\t'mail2alabama.com',\n\t'mail2alan.com',\n\t'mail2alaska.com',\n\t'mail2albania.com',\n\t'mail2alcoholic.com',\n\t'mail2alec.com',\n\t'mail2alexa.com',\n\t'mail2algeria.com',\n\t'mail2alicia.com',\n\t'mail2alien.com',\n\t'mail2allan.com',\n\t'mail2allen.com',\n\t'mail2allison.com',\n\t'mail2alpha.com',\n\t'mail2alyssa.com',\n\t'mail2amanda.com',\n\t'mail2amazing.com',\n\t'mail2amber.com',\n\t'mail2america.com',\n\t'mail2american.com',\n\t'mail2andorra.com',\n\t'mail2andrea.com',\n\t'mail2andy.com',\n\t'mail2anesthesiologist.com',\n\t'mail2angela.com',\n\t'mail2angola.com',\n\t'mail2ann.com',\n\t'mail2anna.com',\n\t'mail2anne.com',\n\t'mail2anthony.com',\n\t'mail2anything.com',\n\t'mail2aphrodite.com',\n\t'mail2apollo.com',\n\t'mail2april.com',\n\t'mail2aquarius.com',\n\t'mail2arabia.com',\n\t'mail2arabic.com',\n\t'mail2architect.com',\n\t'mail2ares.com',\n\t'mail2argentina.com',\n\t'mail2aries.com',\n\t'mail2arizona.com',\n\t'mail2arkansas.com',\n\t'mail2armenia.com',\n\t'mail2army.com',\n\t'mail2arnold.com',\n\t'mail2art.com',\n\t'mail2artemus.com',\n\t'mail2arthur.com',\n\t'mail2artist.com',\n\t'mail2ashley.com',\n\t'mail2ask.com',\n\t'mail2astronomer.com',\n\t'mail2athena.com',\n\t'mail2athlete.com',\n\t'mail2atlas.com',\n\t'mail2atom.com',\n\t'mail2attitude.com',\n\t'mail2auction.com',\n\t'mail2aunt.com',\n\t'mail2australia.com',\n\t'mail2austria.com',\n\t'mail2azerbaijan.com',\n\t'mail2baby.com',\n\t'mail2bahamas.com',\n\t'mail2bahrain.com',\n\t'mail2ballerina.com',\n\t'mail2ballplayer.com',\n\t'mail2band.com',\n\t'mail2bangladesh.com',\n\t'mail2bank.com',\n\t'mail2banker.com',\n\t'mail2bankrupt.com',\n\t'mail2baptist.com',\n\t'mail2bar.com',\n\t'mail2barbados.com',\n\t'mail2barbara.com',\n\t'mail2barter.com',\n\t'mail2basketball.com',\n\t'mail2batter.com',\n\t'mail2beach.com',\n\t'mail2beast.com',\n\t'mail2beatles.com',\n\t'mail2beauty.com',\n\t'mail2becky.com',\n\t'mail2beijing.com',\n\t'mail2belgium.com',\n\t'mail2belize.com',\n\t'mail2ben.com',\n\t'mail2bernard.com',\n\t'mail2beth.com',\n\t'mail2betty.com',\n\t'mail2beverly.com',\n\t'mail2beyond.com',\n\t'mail2biker.com',\n\t'mail2bill.com',\n\t'mail2billionaire.com',\n\t'mail2billy.com',\n\t'mail2bio.com',\n\t'mail2biologist.com',\n\t'mail2black.com',\n\t'mail2blackbelt.com',\n\t'mail2blake.com',\n\t'mail2blind.com',\n\t'mail2blonde.com',\n\t'mail2blues.com',\n\t'mail2bob.com',\n\t'mail2bobby.com',\n\t'mail2bolivia.com',\n\t'mail2bombay.com',\n\t'mail2bonn.com',\n\t'mail2bookmark.com',\n\t'mail2boreas.com',\n\t'mail2bosnia.com',\n\t'mail2boston.com',\n\t'mail2botswana.com',\n\t'mail2bradley.com',\n\t'mail2brazil.com',\n\t'mail2breakfast.com',\n\t'mail2brian.com',\n\t'mail2bride.com',\n\t'mail2brittany.com',\n\t'mail2broker.com',\n\t'mail2brook.com',\n\t'mail2bruce.com',\n\t'mail2brunei.com',\n\t'mail2brunette.com',\n\t'mail2brussels.com',\n\t'mail2bryan.com',\n\t'mail2bug.com',\n\t'mail2bulgaria.com',\n\t'mail2business.com',\n\t'mail2buy.com',\n\t'mail2ca.com',\n\t'mail2california.com',\n\t'mail2calvin.com',\n\t'mail2cambodia.com',\n\t'mail2cameroon.com',\n\t'mail2canada.com',\n\t'mail2cancer.com',\n\t'mail2capeverde.com',\n\t'mail2capricorn.com',\n\t'mail2cardinal.com',\n\t'mail2cardiologist.com',\n\t'mail2care.com',\n\t'mail2caroline.com',\n\t'mail2carolyn.com',\n\t'mail2casey.com',\n\t'mail2cat.com',\n\t'mail2caterer.com',\n\t'mail2cathy.com',\n\t'mail2catlover.com',\n\t'mail2catwalk.com',\n\t'mail2cell.com',\n\t'mail2chad.com',\n\t'mail2champaign.com',\n\t'mail2charles.com',\n\t'mail2chef.com',\n\t'mail2chemist.com',\n\t'mail2cherry.com',\n\t'mail2chicago.com',\n\t'mail2chile.com',\n\t'mail2china.com',\n\t'mail2chinese.com',\n\t'mail2chocolate.com',\n\t'mail2christian.com',\n\t'mail2christie.com',\n\t'mail2christmas.com',\n\t'mail2christy.com',\n\t'mail2chuck.com',\n\t'mail2cindy.com',\n\t'mail2clark.com',\n\t'mail2classifieds.com',\n\t'mail2claude.com',\n\t'mail2cliff.com',\n\t'mail2clinic.com',\n\t'mail2clint.com',\n\t'mail2close.com',\n\t'mail2club.com',\n\t'mail2coach.com',\n\t'mail2coastguard.com',\n\t'mail2colin.com',\n\t'mail2college.com',\n\t'mail2colombia.com',\n\t'mail2color.com',\n\t'mail2colorado.com',\n\t'mail2columbia.com',\n\t'mail2comedian.com',\n\t'mail2composer.com',\n\t'mail2computer.com',\n\t'mail2computers.com',\n\t'mail2concert.com',\n\t'mail2congo.com',\n\t'mail2connect.com',\n\t'mail2connecticut.com',\n\t'mail2consultant.com',\n\t'mail2convict.com',\n\t'mail2cook.com',\n\t'mail2cool.com',\n\t'mail2cory.com',\n\t'mail2costarica.com',\n\t'mail2country.com',\n\t'mail2courtney.com',\n\t'mail2cowboy.com',\n\t'mail2cowgirl.com',\n\t'mail2craig.com',\n\t'mail2crave.com',\n\t'mail2crazy.com',\n\t'mail2create.com',\n\t'mail2croatia.com',\n\t'mail2cry.com',\n\t'mail2crystal.com',\n\t'mail2cuba.com',\n\t'mail2culture.com',\n\t'mail2curt.com',\n\t'mail2customs.com',\n\t'mail2cute.com',\n\t'mail2cutey.com',\n\t'mail2cynthia.com',\n\t'mail2cyprus.com',\n\t'mail2czechrepublic.com',\n\t'mail2dad.com',\n\t'mail2dale.com',\n\t'mail2dallas.com',\n\t'mail2dan.com',\n\t'mail2dana.com',\n\t'mail2dance.com',\n\t'mail2dancer.com',\n\t'mail2danielle.com',\n\t'mail2danny.com',\n\t'mail2darlene.com',\n\t'mail2darling.com',\n\t'mail2darren.com',\n\t'mail2daughter.com',\n\t'mail2dave.com',\n\t'mail2dawn.com',\n\t'mail2dc.com',\n\t'mail2dealer.com',\n\t'mail2deanna.com',\n\t'mail2dearest.com',\n\t'mail2debbie.com',\n\t'mail2debby.com',\n\t'mail2deer.com',\n\t'mail2delaware.com',\n\t'mail2delicious.com',\n\t'mail2demeter.com',\n\t'mail2democrat.com',\n\t'mail2denise.com',\n\t'mail2denmark.com',\n\t'mail2dennis.com',\n\t'mail2dentist.com',\n\t'mail2derek.com',\n\t'mail2desert.com',\n\t'mail2devoted.com',\n\t'mail2devotion.com',\n\t'mail2diamond.com',\n\t'mail2diana.com',\n\t'mail2diane.com',\n\t'mail2diehard.com',\n\t'mail2dilemma.com',\n\t'mail2dillon.com',\n\t'mail2dinner.com',\n\t'mail2dinosaur.com',\n\t'mail2dionysos.com',\n\t'mail2diplomat.com',\n\t'mail2director.com',\n\t'mail2dirk.com',\n\t'mail2disco.com',\n\t'mail2dive.com',\n\t'mail2diver.com',\n\t'mail2divorced.com',\n\t'mail2djibouti.com',\n\t'mail2doctor.com',\n\t'mail2doglover.com',\n\t'mail2dominic.com',\n\t'mail2dominica.com',\n\t'mail2dominicanrepublic.com',\n\t'mail2don.com',\n\t'mail2donald.com',\n\t'mail2donna.com',\n\t'mail2doris.com',\n\t'mail2dorothy.com',\n\t'mail2doug.com',\n\t'mail2dough.com',\n\t'mail2douglas.com',\n\t'mail2dow.com',\n\t'mail2downtown.com',\n\t'mail2dream.com',\n\t'mail2dreamer.com',\n\t'mail2dude.com',\n\t'mail2dustin.com',\n\t'mail2dyke.com',\n\t'mail2dylan.com',\n\t'mail2earl.com',\n\t'mail2earth.com',\n\t'mail2eastend.com',\n\t'mail2eat.com',\n\t'mail2economist.com',\n\t'mail2ecuador.com',\n\t'mail2eddie.com',\n\t'mail2edgar.com',\n\t'mail2edwin.com',\n\t'mail2egypt.com',\n\t'mail2electron.com',\n\t'mail2eli.com',\n\t'mail2elizabeth.com',\n\t'mail2ellen.com',\n\t'mail2elliot.com',\n\t'mail2elsalvador.com',\n\t'mail2elvis.com',\n\t'mail2emergency.com',\n\t'mail2emily.com',\n\t'mail2engineer.com',\n\t'mail2english.com',\n\t'mail2environmentalist.com',\n\t'mail2eos.com',\n\t'mail2eric.com',\n\t'mail2erica.com',\n\t'mail2erin.com',\n\t'mail2erinyes.com',\n\t'mail2eris.com',\n\t'mail2eritrea.com',\n\t'mail2ernie.com',\n\t'mail2eros.com',\n\t'mail2estonia.com',\n\t'mail2ethan.com',\n\t'mail2ethiopia.com',\n\t'mail2eu.com',\n\t'mail2europe.com',\n\t'mail2eurus.com',\n\t'mail2eva.com',\n\t'mail2evan.com',\n\t'mail2evelyn.com',\n\t'mail2everything.com',\n\t'mail2exciting.com',\n\t'mail2expert.com',\n\t'mail2fairy.com',\n\t'mail2faith.com',\n\t'mail2fanatic.com',\n\t'mail2fancy.com',\n\t'mail2fantasy.com',\n\t'mail2farm.com',\n\t'mail2farmer.com',\n\t'mail2fashion.com',\n\t'mail2fat.com',\n\t'mail2feeling.com',\n\t'mail2female.com',\n\t'mail2fever.com',\n\t'mail2fighter.com',\n\t'mail2fiji.com',\n\t'mail2filmfestival.com',\n\t'mail2films.com',\n\t'mail2finance.com',\n\t'mail2finland.com',\n\t'mail2fireman.com',\n\t'mail2firm.com',\n\t'mail2fisherman.com',\n\t'mail2flexible.com',\n\t'mail2florence.com',\n\t'mail2florida.com',\n\t'mail2floyd.com',\n\t'mail2fly.com',\n\t'mail2fond.com',\n\t'mail2fondness.com',\n\t'mail2football.com',\n\t'mail2footballfan.com',\n\t'mail2found.com',\n\t'mail2france.com',\n\t'mail2frank.com',\n\t'mail2frankfurt.com',\n\t'mail2franklin.com',\n\t'mail2fred.com',\n\t'mail2freddie.com',\n\t'mail2free.com',\n\t'mail2freedom.com',\n\t'mail2french.com',\n\t'mail2freudian.com',\n\t'mail2friendship.com',\n\t'mail2from.com',\n\t'mail2fun.com',\n\t'mail2gabon.com',\n\t'mail2gabriel.com',\n\t'mail2gail.com',\n\t'mail2galaxy.com',\n\t'mail2gambia.com',\n\t'mail2games.com',\n\t'mail2gary.com',\n\t'mail2gavin.com',\n\t'mail2gemini.com',\n\t'mail2gene.com',\n\t'mail2genes.com',\n\t'mail2geneva.com',\n\t'mail2george.com',\n\t'mail2georgia.com',\n\t'mail2gerald.com',\n\t'mail2german.com',\n\t'mail2germany.com',\n\t'mail2ghana.com',\n\t'mail2gilbert.com',\n\t'mail2gina.com',\n\t'mail2girl.com',\n\t'mail2glen.com',\n\t'mail2gloria.com',\n\t'mail2goddess.com',\n\t'mail2gold.com',\n\t'mail2golfclub.com',\n\t'mail2golfer.com',\n\t'mail2gordon.com',\n\t'mail2government.com',\n\t'mail2grab.com',\n\t'mail2grace.com',\n\t'mail2graham.com',\n\t'mail2grandma.com',\n\t'mail2grandpa.com',\n\t'mail2grant.com',\n\t'mail2greece.com',\n\t'mail2green.com',\n\t'mail2greg.com',\n\t'mail2grenada.com',\n\t'mail2gsm.com',\n\t'mail2guard.com',\n\t'mail2guatemala.com',\n\t'mail2guy.com',\n\t'mail2hades.com',\n\t'mail2haiti.com',\n\t'mail2hal.com',\n\t'mail2handhelds.com',\n\t'mail2hank.com',\n\t'mail2hannah.com',\n\t'mail2harold.com',\n\t'mail2harry.com',\n\t'mail2hawaii.com',\n\t'mail2headhunter.com',\n\t'mail2heal.com',\n\t'mail2heather.com',\n\t'mail2heaven.com',\n\t'mail2hebe.com',\n\t'mail2hecate.com',\n\t'mail2heidi.com',\n\t'mail2helen.com',\n\t'mail2hell.com',\n\t'mail2help.com',\n\t'mail2helpdesk.com',\n\t'mail2henry.com',\n\t'mail2hephaestus.com',\n\t'mail2hera.com',\n\t'mail2hercules.com',\n\t'mail2herman.com',\n\t'mail2hermes.com',\n\t'mail2hespera.com',\n\t'mail2hestia.com',\n\t'mail2highschool.com',\n\t'mail2hindu.com',\n\t'mail2hip.com',\n\t'mail2hiphop.com',\n\t'mail2holland.com',\n\t'mail2holly.com',\n\t'mail2hollywood.com',\n\t'mail2homer.com',\n\t'mail2honduras.com',\n\t'mail2honey.com',\n\t'mail2hongkong.com',\n\t'mail2hope.com',\n\t'mail2horse.com',\n\t'mail2hot.com',\n\t'mail2hotel.com',\n\t'mail2houston.com',\n\t'mail2howard.com',\n\t'mail2hugh.com',\n\t'mail2human.com',\n\t'mail2hungary.com',\n\t'mail2hungry.com',\n\t'mail2hygeia.com',\n\t'mail2hyperspace.com',\n\t'mail2hypnos.com',\n\t'mail2ian.com',\n\t'mail2ice-cream.com',\n\t'mail2iceland.com',\n\t'mail2idaho.com',\n\t'mail2idontknow.com',\n\t'mail2illinois.com',\n\t'mail2imam.com',\n\t'mail2in.com',\n\t'mail2india.com',\n\t'mail2indian.com',\n\t'mail2indiana.com',\n\t'mail2indonesia.com',\n\t'mail2infinity.com',\n\t'mail2intense.com',\n\t'mail2iowa.com',\n\t'mail2iran.com',\n\t'mail2iraq.com',\n\t'mail2ireland.com',\n\t'mail2irene.com',\n\t'mail2iris.com',\n\t'mail2irresistible.com',\n\t'mail2irving.com',\n\t'mail2irwin.com',\n\t'mail2isaac.com',\n\t'mail2israel.com',\n\t'mail2italian.com',\n\t'mail2italy.com',\n\t'mail2jackie.com',\n\t'mail2jacob.com',\n\t'mail2jail.com',\n\t'mail2jaime.com',\n\t'mail2jake.com',\n\t'mail2jamaica.com',\n\t'mail2james.com',\n\t'mail2jamie.com',\n\t'mail2jan.com',\n\t'mail2jane.com',\n\t'mail2janet.com',\n\t'mail2janice.com',\n\t'mail2japan.com',\n\t'mail2japanese.com',\n\t'mail2jasmine.com',\n\t'mail2jason.com',\n\t'mail2java.com',\n\t'mail2jay.com',\n\t'mail2jazz.com',\n\t'mail2jed.com',\n\t'mail2jeffrey.com',\n\t'mail2jennifer.com',\n\t'mail2jenny.com',\n\t'mail2jeremy.com',\n\t'mail2jerry.com',\n\t'mail2jessica.com',\n\t'mail2jessie.com',\n\t'mail2jesus.com',\n\t'mail2jew.com',\n\t'mail2jeweler.com',\n\t'mail2jim.com',\n\t'mail2jimmy.com',\n\t'mail2joan.com',\n\t'mail2joann.com',\n\t'mail2joanna.com',\n\t'mail2jody.com',\n\t'mail2joe.com',\n\t'mail2joel.com',\n\t'mail2joey.com',\n\t'mail2john.com',\n\t'mail2join.com',\n\t'mail2jon.com',\n\t'mail2jonathan.com',\n\t'mail2jones.com',\n\t'mail2jordan.com',\n\t'mail2joseph.com',\n\t'mail2josh.com',\n\t'mail2joy.com',\n\t'mail2juan.com',\n\t'mail2judge.com',\n\t'mail2judy.com',\n\t'mail2juggler.com',\n\t'mail2julian.com',\n\t'mail2julie.com',\n\t'mail2jumbo.com',\n\t'mail2junk.com',\n\t'mail2justin.com',\n\t'mail2justme.com',\n\t'mail2kansas.com',\n\t'mail2karate.com',\n\t'mail2karen.com',\n\t'mail2karl.com',\n\t'mail2karma.com',\n\t'mail2kathleen.com',\n\t'mail2kathy.com',\n\t'mail2katie.com',\n\t'mail2kay.com',\n\t'mail2kazakhstan.com',\n\t'mail2keen.com',\n\t'mail2keith.com',\n\t'mail2kelly.com',\n\t'mail2kelsey.com',\n\t'mail2ken.com',\n\t'mail2kendall.com',\n\t'mail2kennedy.com',\n\t'mail2kenneth.com',\n\t'mail2kenny.com',\n\t'mail2kentucky.com',\n\t'mail2kenya.com',\n\t'mail2kerry.com',\n\t'mail2kevin.com',\n\t'mail2kim.com',\n\t'mail2kimberly.com',\n\t'mail2king.com',\n\t'mail2kirk.com',\n\t'mail2kiss.com',\n\t'mail2kosher.com',\n\t'mail2kristin.com',\n\t'mail2kurt.com',\n\t'mail2kuwait.com',\n\t'mail2kyle.com',\n\t'mail2kyrgyzstan.com',\n\t'mail2la.com',\n\t'mail2lacrosse.com',\n\t'mail2lance.com',\n\t'mail2lao.com',\n\t'mail2larry.com',\n\t'mail2latvia.com',\n\t'mail2laugh.com',\n\t'mail2laura.com',\n\t'mail2lauren.com',\n\t'mail2laurie.com',\n\t'mail2lawrence.com',\n\t'mail2lawyer.com',\n\t'mail2lebanon.com',\n\t'mail2lee.com',\n\t'mail2leo.com',\n\t'mail2leon.com',\n\t'mail2leonard.com',\n\t'mail2leone.com',\n\t'mail2leslie.com',\n\t'mail2letter.com',\n\t'mail2liberia.com',\n\t'mail2libertarian.com',\n\t'mail2libra.com',\n\t'mail2libya.com',\n\t'mail2liechtenstein.com',\n\t'mail2life.com',\n\t'mail2linda.com',\n\t'mail2linux.com',\n\t'mail2lionel.com',\n\t'mail2lipstick.com',\n\t'mail2liquid.com',\n\t'mail2lisa.com',\n\t'mail2lithuania.com',\n\t'mail2litigator.com',\n\t'mail2liz.com',\n\t'mail2lloyd.com',\n\t'mail2lois.com',\n\t'mail2lola.com',\n\t'mail2london.com',\n\t'mail2looking.com',\n\t'mail2lori.com',\n\t'mail2lost.com',\n\t'mail2lou.com',\n\t'mail2louis.com',\n\t'mail2louisiana.com',\n\t'mail2lovable.com',\n\t'mail2love.com',\n\t'mail2lucky.com',\n\t'mail2lucy.com',\n\t'mail2lunch.com',\n\t'mail2lust.com',\n\t'mail2luxembourg.com',\n\t'mail2luxury.com',\n\t'mail2lyle.com',\n\t'mail2lynn.com',\n\t'mail2madagascar.com',\n\t'mail2madison.com',\n\t'mail2madrid.com',\n\t'mail2maggie.com',\n\t'mail2mail4.com',\n\t'mail2maine.com',\n\t'mail2malawi.com',\n\t'mail2malaysia.com',\n\t'mail2maldives.com',\n\t'mail2mali.com',\n\t'mail2malta.com',\n\t'mail2mambo.com',\n\t'mail2man.com',\n\t'mail2mandy.com',\n\t'mail2manhunter.com',\n\t'mail2mankind.com',\n\t'mail2many.com',\n\t'mail2marc.com',\n\t'mail2marcia.com',\n\t'mail2margaret.com',\n\t'mail2margie.com',\n\t'mail2marhaba.com',\n\t'mail2maria.com',\n\t'mail2marilyn.com',\n\t'mail2marines.com',\n\t'mail2mark.com',\n\t'mail2marriage.com',\n\t'mail2married.com',\n\t'mail2marries.com',\n\t'mail2mars.com',\n\t'mail2marsha.com',\n\t'mail2marshallislands.com',\n\t'mail2martha.com',\n\t'mail2martin.com',\n\t'mail2marty.com',\n\t'mail2marvin.com',\n\t'mail2mary.com',\n\t'mail2maryland.com',\n\t'mail2mason.com',\n\t'mail2massachusetts.com',\n\t'mail2matt.com',\n\t'mail2matthew.com',\n\t'mail2maurice.com',\n\t'mail2mauritania.com',\n\t'mail2mauritius.com',\n\t'mail2max.com',\n\t'mail2maxwell.com',\n\t'mail2maybe.com',\n\t'mail2mba.com',\n\t'mail2me4u.com',\n\t'mail2mechanic.com',\n\t'mail2medieval.com',\n\t'mail2megan.com',\n\t'mail2mel.com',\n\t'mail2melanie.com',\n\t'mail2melissa.com',\n\t'mail2melody.com',\n\t'mail2member.com',\n\t'mail2memphis.com',\n\t'mail2methodist.com',\n\t'mail2mexican.com',\n\t'mail2mexico.com',\n\t'mail2mgz.com',\n\t'mail2miami.com',\n\t'mail2michael.com',\n\t'mail2michelle.com',\n\t'mail2michigan.com',\n\t'mail2mike.com',\n\t'mail2milan.com',\n\t'mail2milano.com',\n\t'mail2mildred.com',\n\t'mail2milkyway.com',\n\t'mail2millennium.com',\n\t'mail2millionaire.com',\n\t'mail2milton.com',\n\t'mail2mime.com',\n\t'mail2mindreader.com',\n\t'mail2mini.com',\n\t'mail2minister.com',\n\t'mail2minneapolis.com',\n\t'mail2minnesota.com',\n\t'mail2miracle.com',\n\t'mail2missionary.com',\n\t'mail2mississippi.com',\n\t'mail2missouri.com',\n\t'mail2mitch.com',\n\t'mail2model.com',\n\t'mail2moldova.commail2molly.com',\n\t'mail2mom.com',\n\t'mail2monaco.com',\n\t'mail2money.com',\n\t'mail2mongolia.com',\n\t'mail2monica.com',\n\t'mail2montana.com',\n\t'mail2monty.com',\n\t'mail2moon.com',\n\t'mail2morocco.com',\n\t'mail2morpheus.com',\n\t'mail2mors.com',\n\t'mail2moscow.com',\n\t'mail2moslem.com',\n\t'mail2mouseketeer.com',\n\t'mail2movies.com',\n\t'mail2mozambique.com',\n\t'mail2mp3.com',\n\t'mail2mrright.com',\n\t'mail2msright.com',\n\t'mail2museum.com',\n\t'mail2music.com',\n\t'mail2musician.com',\n\t'mail2muslim.com',\n\t'mail2my.com',\n\t'mail2myboat.com',\n\t'mail2mycar.com',\n\t'mail2mycell.com',\n\t'mail2mygsm.com',\n\t'mail2mylaptop.com',\n\t'mail2mymac.com',\n\t'mail2mypager.com',\n\t'mail2mypalm.com',\n\t'mail2mypc.com',\n\t'mail2myphone.com',\n\t'mail2myplane.com',\n\t'mail2namibia.com',\n\t'mail2nancy.com',\n\t'mail2nasdaq.com',\n\t'mail2nathan.com',\n\t'mail2nauru.com',\n\t'mail2navy.com',\n\t'mail2neal.com',\n\t'mail2nebraska.com',\n\t'mail2ned.com',\n\t'mail2neil.com',\n\t'mail2nelson.com',\n\t'mail2nemesis.com',\n\t'mail2nepal.com',\n\t'mail2netherlands.com',\n\t'mail2network.com',\n\t'mail2nevada.com',\n\t'mail2newhampshire.com',\n\t'mail2newjersey.com',\n\t'mail2newmexico.com',\n\t'mail2newyork.com',\n\t'mail2newzealand.com',\n\t'mail2nicaragua.com',\n\t'mail2nick.com',\n\t'mail2nicole.com',\n\t'mail2niger.com',\n\t'mail2nigeria.com',\n\t'mail2nike.com',\n\t'mail2no.com',\n\t'mail2noah.com',\n\t'mail2noel.com',\n\t'mail2noelle.com',\n\t'mail2normal.com',\n\t'mail2norman.com',\n\t'mail2northamerica.com',\n\t'mail2northcarolina.com',\n\t'mail2northdakota.com',\n\t'mail2northpole.com',\n\t'mail2norway.com',\n\t'mail2notus.com',\n\t'mail2noway.com',\n\t'mail2nowhere.com',\n\t'mail2nuclear.com',\n\t'mail2nun.com',\n\t'mail2ny.com',\n\t'mail2oasis.com',\n\t'mail2oceanographer.com',\n\t'mail2ohio.com',\n\t'mail2ok.com',\n\t'mail2oklahoma.com',\n\t'mail2oliver.com',\n\t'mail2oman.com',\n\t'mail2one.com',\n\t'mail2onfire.com',\n\t'mail2online.com',\n\t'mail2oops.com',\n\t'mail2open.com',\n\t'mail2ophthalmologist.com',\n\t'mail2optometrist.com',\n\t'mail2oregon.com',\n\t'mail2oscars.com',\n\t'mail2oslo.com',\n\t'mail2painter.com',\n\t'mail2pakistan.com',\n\t'mail2palau.com',\n\t'mail2pan.com',\n\t'mail2panama.com',\n\t'mail2paraguay.com',\n\t'mail2paralegal.com',\n\t'mail2paris.com',\n\t'mail2park.com',\n\t'mail2parker.com',\n\t'mail2party.com',\n\t'mail2passion.com',\n\t'mail2pat.com',\n\t'mail2patricia.com',\n\t'mail2patrick.com',\n\t'mail2patty.com',\n\t'mail2paul.com',\n\t'mail2paula.com',\n\t'mail2pay.com',\n\t'mail2peace.com',\n\t'mail2pediatrician.com',\n\t'mail2peggy.com',\n\t'mail2pennsylvania.com',\n\t'mail2perry.com',\n\t'mail2persephone.com',\n\t'mail2persian.com',\n\t'mail2peru.com',\n\t'mail2pete.com',\n\t'mail2peter.com',\n\t'mail2pharmacist.com',\n\t'mail2phil.com',\n\t'mail2philippines.com',\n\t'mail2phoenix.com',\n\t'mail2phonecall.com',\n\t'mail2phyllis.com',\n\t'mail2pickup.com',\n\t'mail2pilot.com',\n\t'mail2pisces.com',\n\t'mail2planet.com',\n\t'mail2platinum.com',\n\t'mail2plato.com',\n\t'mail2pluto.com',\n\t'mail2pm.com',\n\t'mail2podiatrist.com',\n\t'mail2poet.com',\n\t'mail2poland.com',\n\t'mail2policeman.com',\n\t'mail2policewoman.com',\n\t'mail2politician.com',\n\t'mail2pop.com',\n\t'mail2pope.com',\n\t'mail2popular.com',\n\t'mail2portugal.com',\n\t'mail2poseidon.com',\n\t'mail2potatohead.com',\n\t'mail2power.com',\n\t'mail2presbyterian.com',\n\t'mail2president.com',\n\t'mail2priest.com',\n\t'mail2prince.com',\n\t'mail2princess.com',\n\t'mail2producer.com',\n\t'mail2professor.com',\n\t'mail2protect.com',\n\t'mail2psychiatrist.com',\n\t'mail2psycho.com',\n\t'mail2psychologist.com',\n\t'mail2qatar.com',\n\t'mail2queen.com',\n\t'mail2rabbi.com',\n\t'mail2race.com',\n\t'mail2racer.com',\n\t'mail2rachel.com',\n\t'mail2rage.com',\n\t'mail2rainmaker.com',\n\t'mail2ralph.com',\n\t'mail2randy.com',\n\t'mail2rap.com',\n\t'mail2rare.com',\n\t'mail2rave.com',\n\t'mail2ray.com',\n\t'mail2raymond.com',\n\t'mail2realtor.com',\n\t'mail2rebecca.com',\n\t'mail2recruiter.com',\n\t'mail2recycle.com',\n\t'mail2redhead.com',\n\t'mail2reed.com',\n\t'mail2reggie.com',\n\t'mail2register.com',\n\t'mail2rent.com',\n\t'mail2republican.com',\n\t'mail2resort.com',\n\t'mail2rex.com',\n\t'mail2rhodeisland.com',\n\t'mail2rich.com',\n\t'mail2richard.com',\n\t'mail2ricky.com',\n\t'mail2ride.com',\n\t'mail2riley.com',\n\t'mail2rita.com',\n\t'mail2rob.com',\n\t'mail2robert.com',\n\t'mail2roberta.com',\n\t'mail2robin.com',\n\t'mail2rock.com',\n\t'mail2rocker.com',\n\t'mail2rod.com',\n\t'mail2rodney.com',\n\t'mail2romania.com',\n\t'mail2rome.com',\n\t'mail2ron.com',\n\t'mail2ronald.com',\n\t'mail2ronnie.com',\n\t'mail2rose.com',\n\t'mail2rosie.com',\n\t'mail2roy.com',\n\t'mail2rudy.com',\n\t'mail2rugby.com',\n\t'mail2runner.com',\n\t'mail2russell.com',\n\t'mail2russia.com',\n\t'mail2russian.com',\n\t'mail2rusty.com',\n\t'mail2ruth.com',\n\t'mail2rwanda.com',\n\t'mail2ryan.com',\n\t'mail2sa.com',\n\t'mail2sabrina.com',\n\t'mail2safe.com',\n\t'mail2sagittarius.com',\n\t'mail2sail.com',\n\t'mail2sailor.com',\n\t'mail2sal.com',\n\t'mail2salaam.com',\n\t'mail2sam.com',\n\t'mail2samantha.com',\n\t'mail2samoa.com',\n\t'mail2samurai.com',\n\t'mail2sandra.com',\n\t'mail2sandy.com',\n\t'mail2sanfrancisco.com',\n\t'mail2sanmarino.com',\n\t'mail2santa.com',\n\t'mail2sara.com',\n\t'mail2sarah.com',\n\t'mail2sat.com',\n\t'mail2saturn.com',\n\t'mail2saudi.com',\n\t'mail2saudiarabia.com',\n\t'mail2save.com',\n\t'mail2savings.com',\n\t'mail2school.com',\n\t'mail2scientist.com',\n\t'mail2scorpio.com',\n\t'mail2scott.com',\n\t'mail2sean.com',\n\t'mail2search.com',\n\t'mail2seattle.com',\n\t'mail2secretagent.com',\n\t'mail2senate.com',\n\t'mail2senegal.com',\n\t'mail2sensual.com',\n\t'mail2seth.com',\n\t'mail2sevenseas.com',\n\t'mail2sexy.com',\n\t'mail2seychelles.com',\n\t'mail2shane.com',\n\t'mail2sharon.com',\n\t'mail2shawn.com',\n\t'mail2ship.com',\n\t'mail2shirley.com',\n\t'mail2shoot.com',\n\t'mail2shuttle.com',\n\t'mail2sierraleone.com',\n\t'mail2simon.com',\n\t'mail2singapore.com',\n\t'mail2single.com',\n\t'mail2site.com',\n\t'mail2skater.com',\n\t'mail2skier.com',\n\t'mail2sky.com',\n\t'mail2sleek.com',\n\t'mail2slim.com',\n\t'mail2slovakia.com',\n\t'mail2slovenia.com',\n\t'mail2smile.com',\n\t'mail2smith.com',\n\t'mail2smooth.com',\n\t'mail2soccer.com',\n\t'mail2soccerfan.com',\n\t'mail2socialist.com',\n\t'mail2soldier.com',\n\t'mail2somalia.com',\n\t'mail2son.com',\n\t'mail2song.com',\n\t'mail2sos.com',\n\t'mail2sound.com',\n\t'mail2southafrica.com',\n\t'mail2southamerica.com',\n\t'mail2southcarolina.com',\n\t'mail2southdakota.com',\n\t'mail2southkorea.com',\n\t'mail2southpole.com',\n\t'mail2spain.com',\n\t'mail2spanish.com',\n\t'mail2spare.com',\n\t'mail2spectrum.com',\n\t'mail2splash.com',\n\t'mail2sponsor.com',\n\t'mail2sports.com',\n\t'mail2srilanka.com',\n\t'mail2stacy.com',\n\t'mail2stan.com',\n\t'mail2stanley.com',\n\t'mail2star.com',\n\t'mail2state.com',\n\t'mail2stephanie.com',\n\t'mail2steve.com',\n\t'mail2steven.com',\n\t'mail2stewart.com',\n\t'mail2stlouis.com',\n\t'mail2stock.com',\n\t'mail2stockholm.com',\n\t'mail2stockmarket.com',\n\t'mail2storage.com',\n\t'mail2store.com',\n\t'mail2strong.com',\n\t'mail2student.com',\n\t'mail2studio.com',\n\t'mail2studio54.com',\n\t'mail2stuntman.com',\n\t'mail2subscribe.com',\n\t'mail2sudan.com',\n\t'mail2superstar.com',\n\t'mail2surfer.com',\n\t'mail2suriname.com',\n\t'mail2susan.com',\n\t'mail2suzie.com',\n\t'mail2swaziland.com',\n\t'mail2sweden.com',\n\t'mail2sweetheart.com',\n\t'mail2swim.com',\n\t'mail2swimmer.com',\n\t'mail2swiss.com',\n\t'mail2switzerland.com',\n\t'mail2sydney.com',\n\t'mail2sylvia.com',\n\t'mail2syria.com',\n\t'mail2taboo.com',\n\t'mail2taiwan.com',\n\t'mail2tajikistan.com',\n\t'mail2tammy.com',\n\t'mail2tango.com',\n\t'mail2tanya.com',\n\t'mail2tanzania.com',\n\t'mail2tara.com',\n\t'mail2taurus.com',\n\t'mail2taxi.com',\n\t'mail2taxidermist.com',\n\t'mail2taylor.com',\n\t'mail2taz.com',\n\t'mail2teacher.com',\n\t'mail2technician.com',\n\t'mail2ted.com',\n\t'mail2telephone.com',\n\t'mail2teletubbie.com',\n\t'mail2tenderness.com',\n\t'mail2tennessee.com',\n\t'mail2tennis.com',\n\t'mail2tennisfan.com',\n\t'mail2terri.com',\n\t'mail2terry.com',\n\t'mail2test.com',\n\t'mail2texas.com',\n\t'mail2thailand.com',\n\t'mail2therapy.com',\n\t'mail2think.com',\n\t'mail2tickets.com',\n\t'mail2tiffany.com',\n\t'mail2tim.com',\n\t'mail2time.com',\n\t'mail2timothy.com',\n\t'mail2tina.com',\n\t'mail2titanic.com',\n\t'mail2toby.com',\n\t'mail2todd.com',\n\t'mail2togo.com',\n\t'mail2tom.com',\n\t'mail2tommy.com',\n\t'mail2tonga.com',\n\t'mail2tony.com',\n\t'mail2touch.com',\n\t'mail2tourist.com',\n\t'mail2tracey.com',\n\t'mail2tracy.com',\n\t'mail2tramp.com',\n\t'mail2travel.com',\n\t'mail2traveler.com',\n\t'mail2travis.com',\n\t'mail2trekkie.com',\n\t'mail2trex.com',\n\t'mail2triallawyer.com',\n\t'mail2trick.com',\n\t'mail2trillionaire.com',\n\t'mail2troy.com',\n\t'mail2truck.com',\n\t'mail2trump.com',\n\t'mail2try.com',\n\t'mail2tunisia.com',\n\t'mail2turbo.com',\n\t'mail2turkey.com',\n\t'mail2turkmenistan.com',\n\t'mail2tv.com',\n\t'mail2tycoon.com',\n\t'mail2tyler.com',\n\t'mail2u4me.com',\n\t'mail2uae.com',\n\t'mail2uganda.com',\n\t'mail2uk.com',\n\t'mail2ukraine.com',\n\t'mail2uncle.com',\n\t'mail2unsubscribe.com',\n\t'mail2uptown.com',\n\t'mail2uruguay.com',\n\t'mail2usa.com',\n\t'mail2utah.com',\n\t'mail2uzbekistan.com',\n\t'mail2v.com',\n\t'mail2vacation.com',\n\t'mail2valentines.com',\n\t'mail2valerie.com',\n\t'mail2valley.com',\n\t'mail2vamoose.com',\n\t'mail2vanessa.com',\n\t'mail2vanuatu.com',\n\t'mail2venezuela.com',\n\t'mail2venous.com',\n\t'mail2venus.com',\n\t'mail2vermont.com',\n\t'mail2vickie.com',\n\t'mail2victor.com',\n\t'mail2victoria.com',\n\t'mail2vienna.com',\n\t'mail2vietnam.com',\n\t'mail2vince.com',\n\t'mail2virginia.com',\n\t'mail2virgo.com',\n\t'mail2visionary.com',\n\t'mail2vodka.com',\n\t'mail2volleyball.com',\n\t'mail2waiter.com',\n\t'mail2wallstreet.com',\n\t'mail2wally.com',\n\t'mail2walter.com',\n\t'mail2warren.com',\n\t'mail2washington.com',\n\t'mail2wave.com',\n\t'mail2way.com',\n\t'mail2waycool.com',\n\t'mail2wayne.com',\n\t'mail2webmaster.com',\n\t'mail2webtop.com',\n\t'mail2webtv.com',\n\t'mail2weird.com',\n\t'mail2wendell.com',\n\t'mail2wendy.com',\n\t'mail2westend.com',\n\t'mail2westvirginia.com',\n\t'mail2whether.com',\n\t'mail2whip.com',\n\t'mail2white.com',\n\t'mail2whitehouse.com',\n\t'mail2whitney.com',\n\t'mail2why.com',\n\t'mail2wilbur.com',\n\t'mail2wild.com',\n\t'mail2willard.com',\n\t'mail2willie.com',\n\t'mail2wine.com',\n\t'mail2winner.com',\n\t'mail2wired.com',\n\t'mail2wisconsin.com',\n\t'mail2woman.com',\n\t'mail2wonder.com',\n\t'mail2world.com',\n\t'mail2worship.com',\n\t'mail2wow.com',\n\t'mail2www.com',\n\t'mail2wyoming.com',\n\t'mail2xfiles.com',\n\t'mail2xox.com',\n\t'mail2yachtclub.com',\n\t'mail2yahalla.com',\n\t'mail2yemen.com',\n\t'mail2yes.com',\n\t'mail2yugoslavia.com',\n\t'mail2zack.com',\n\t'mail2zambia.com',\n\t'mail2zenith.com',\n\t'mail2zephir.com',\n\t'mail2zeus.com',\n\t'mail2zipper.com',\n\t'mail2zoo.com',\n\t'mail2zoologist.com',\n\t'mail2zurich.com',\n\t'mail3000.com',\n\t'mail333.com',\n\t'mailandftp.com',\n\t'MailandNews.com',\n\t'mailandnews.com',\n\t'mailas.com',\n\t'mailasia.com',\n\t'mailbolt.com',\n\t'mailbomb.net',\n\t'mailboom.com',\n\t'mailbox.as',\n\t'mailbox.co.za',\n\t'mailbox.gr',\n\t'mailbox.hu',\n\t'mailbr.com.br',\n\t'mailc.net',\n\t'mailcan.com',\n\t'mailcc.com',\n\t'mailchoose.co',\n\t'mailcity.com',\n\t'mailclub.fr',\n\t'mailclub.net',\n\t'mailexcite.com',\n\t'mailforce.net',\n\t'mailftp.com',\n\t'mailgate.gr',\n\t'mailgenie.net',\n\t'mailhaven.com',\n\t'mailhood.com',\n\t'mailingweb.com',\n\t'mailisent.com',\n\t'mailite.com',\n\t'mailme.dk',\n\t'mailmight.com',\n\t'mailmij.nl',\n\t'mailnew.com',\n\t'mailops.com',\n\t'mailoye.com',\n\t'mailpanda.com',\n\t'mailpokemon.com',\n\t'mailpost.zzn.com',\n\t'mailpride.com',\n\t'mailpuppy.com',\n\t'mailroom.com',\n\t'mailru.com',\n\t'mailsent.net',\n\t'mailshuttle.com',\n\t'mailstart.com',\n\t'mailstartplus.com',\n\t'mailsurf.com',\n\t'mailtag.com',\n\t'mailto.de',\n\t'mailup.net',\n\t'mailwire.com',\n\t'maktoob.com',\n\t'malayalamtelevision.net',\n\t'maltesemail.com',\n\t'manager.de',\n\t'mancity.net',\n\t'mantrafreenet.com',\n\t'mantramail.com',\n\t'mantraonline.com',\n\t'marchmail.com',\n\t'mariah-carey.ml.org',\n\t'mariahc.com',\n\t'marijuana.com',\n\t'marijuana.nl',\n\t'marketing.lu',\n\t'married-not.com',\n\t'marsattack.com',\n\t'martindalemail.com',\n\t'mash4077.com',\n\t'masrawy.com',\n\t'matmail.com',\n\t'mauimail.com',\n\t'mauritius.com',\n\t'maxleft.com',\n\t'maxmail.co.uk',\n\t'mbox.com.au',\n\t'me-mail.hu',\n\t'me.com',\n\t'medical.net.au',\n\t'medmail.com',\n\t'medscape.com',\n\t'meetingmall.com',\n\t'megago.com',\n\t'megamail.pt',\n\t'megapoint.com',\n\t'mehrani.com',\n\t'mehtaweb.com',\n\t'mekhong.com',\n\t'melodymail.com',\n\t'meloo.com',\n\t'members.student.com',\n\t'message.hu',\n\t'messages.to',\n\t'metacrawler.com',\n\t'metalfan.com',\n\t'metta.lk',\n\t'miatadriver.com',\n\t'miesto.sk',\n\t'mighty.co.za',\n\t'miho-nakayama.com',\n\t'mikrotamanet.com',\n\t'millionaireintraining.com',\n\t'millionairemail.com',\n\t'milmail.com',\n\t'milmail.com15',\n\t'mindless.com',\n\t'mindspring.com',\n\t'mini-mail.com',\n\t'misery.net',\n\t'mittalweb.com',\n\t'mixmail.com',\n\t'mjfrogmail.com',\n\t'ml1.net',\n\t'mobilbatam.com',\n\t'mochamail.com',\n\t'mohammed.com',\n\t'moldova.cc',\n\t'moldova.com',\n\t'moldovacc.com',\n\t'momslife.com',\n\t'money.net',\n\t'montevideo.com.uy',\n\t'moonman.com',\n\t'moose-mail.com',\n\t'mortaza.com',\n\t'mosaicfx.com',\n\t'most-wanted.com',\n\t'mostlysunny.com',\n\t'motormania.com',\n\t'movemail.com',\n\t'movieluver.com',\n\t'mp4.it',\n\t'mr-potatohead.com',\n\t'mrpost.com',\n\t'mscold.com',\n\t'msgbox.com',\n\t'msn.com',\n\t'mttestdriver.com',\n\t'MTtestdriver.com',\n\t'MultipleChoices',\n\t'mundomail.net',\n\t'munich.com',\n\t'music.com',\n\t'music.com19',\n\t'musician.org',\n\t'musicscene.org',\n\t'muslimemail.com',\n\t'muslimsonline.com',\n\t'mutantweb.com',\n\t'mybox.it',\n\t'mycabin.com',\n\t'mycampus.com',\n\t'mycity.com',\n\t'mycool.com',\n\t'mydomain.com',\n\t'mydotcomaddress.com',\n\t'myfamily.com',\n\t'myfastmail.com',\n\t'mygo.com',\n\t'myiris.com',\n\t'mynamedot.com',\n\t'mynetaddress.com',\n\t'myownemail.com',\n\t'myownfriends.com',\n\t'mypad.com',\n\t'mypersonalemail.com',\n\t'myplace.com',\n\t'myrealbox.com',\n\t'myremarq.com',\n\t'myself.com',\n\t'mystupidjob.com',\n\t'mythirdage.com',\n\t'myway.com',\n\t'myworldmail.com',\n\t'n2.com',\n\t'n2baseball.com',\n\t'n2business.com',\n\t'n2mail.com',\n\t'n2soccer.com',\n\t'n2software.com',\n\t'nabc.biz',\n\t'nafe.com',\n\t'nagpal.net',\n\t'nakedgreens.com',\n\t'name.com',\n\t'nameplanet.com',\n\t'nandomail.com',\n\t'naplesnews.net',\n\t'naseej.com',\n\t'nativestar.net',\n\t'nativeweb.net',\n\t'naui.net',\n\t'navigator.lv',\n\t'navy.org',\n\t'naz.com',\n\t'nchoicemail.com',\n\t'neeva.net',\n\t'nemra1.com',\n\t'nenter.com',\n\t'neo.rr.com',\n\t'nervhq.org',\n\t'net-pager.net',\n\t'net4b.pt',\n\t'net4you.at',\n\t'netbounce.com',\n\t'netbroadcaster.com',\n\t'netby.dk',\n\t'netcenter-vn.net',\n\t'netcourrier.com',\n\t'netexecutive.com',\n\t'netexpressway.com',\n\t'netgenie.com',\n\t'netian.com',\n\t'netizen.com.ar',\n\t'netlane.com',\n\t'netlimit.com',\n\t'netmanor.com',\n\t'netmongol.com',\n\t'netnet.com.sg',\n\t'netnoir.net',\n\t'netpiper.com',\n\t'netposta.net',\n\t'netradiomail.com',\n\t'netralink.com',\n\t'netscape.net',\n\t'netscapeonline.co.uk',\n\t'netspeedway.com',\n\t'netsquare.com',\n\t'netster.com',\n\t'nettaxi.com',\n\t'netzero.com',\n\t'netzero.net',\n\t'neuro.md',\n\t'newmail.com',\n\t'newmail.net',\n\t'newmail.ru',\n\t'newsboysmail.com',\n\t'newyork.com',\n\t'nexxmail.com',\n\t'nfmail.com',\n\t'nhmail.com',\n\t'nicebush.com',\n\t'nicegal.com',\n\t'nicholastse.net',\n\t'nicolastse.com',\n\t'nightmail.com',\n\t'nikopage.com',\n\t'nimail.com',\n\t'nirvanafan.com',\n\t'noavar.com',\n\t'norika-fujiwara.com',\n\t'norikomail.com',\n\t'northgates.net',\n\t'nospammail.net',\n\t'ntscan.com',\n\t'ny.com',\n\t'nyc.com',\n\t'nycmail.com',\n\t'nzoomail.com',\n\t'o-tay.com',\n\t'o2.co.uk',\n\t'OaklandAs-fan.com',\n\t'oaklandas-fan.com',\n\t'oceanfree.net',\n\t'oddpost.com',\n\t'odmail.com',\n\t'office-email.com',\n\t'officedomain.com',\n\t'offroadwarrior.com',\n\t'oicexchange.com',\n\t'okbank.com',\n\t'okhuman.com',\n\t'okmad.com',\n\t'okmagic.com',\n\t'okname.net',\n\t'okuk.com',\n\t'oldies1041.com',\n\t'oldies104mail.com',\n\t'ole.com',\n\t'olemail.com',\n\t'olympist.net',\n\t'omaninfo.com',\n\t'onebox.com',\n\t'onenet.com.ar',\n\t'onet.pl',\n\t'oninet.pt',\n\t'online.ie',\n\t'onlinewiz.com',\n\t'onmilwaukee.com',\n\t'onobox.com',\n\t'onvillage.com',\n\t'operafan.com',\n\t'operamail.com',\n\t'optician.com',\n\t'optonline.net',\n\t'optusnet.com.au',\n\t'orbitel.bg',\n\t'orgmail.net',\n\t'osite.com.br',\n\t'oso.com',\n\t'otakumail.com',\n\t'our-computer.com',\n\t'our-office.com',\n\t'our.st',\n\t'ourbrisbane.com',\n\t'ournet.md',\n\t'outel.com',\n\t'outgun.com',\n\t'over-the-rainbow.com',\n\t'ownmail.net',\n\t'ozbytes.net.au',\n\t'ozemail.com.au',\n\t'pacbell.net',\n\t'pacific-re.com',\n\t'packersfan.com',\n\t'pagina.de',\n\t'pagons.org',\n\t'pakistanmail.com',\n\t'pakistanoye.com',\n\t'palestinemail.com',\n\t'parkjiyoon.com',\n\t'parrot.com',\n\t'ParsMail.com',\n\t'parsmail.com',\n\t'partlycloudy.com',\n\t'partynight.at',\n\t'parvazi.com',\n\t'passwordmail.com',\n\t'pathfindermail.com',\n\t'pconnections.net',\n\t'pcpostal.com',\n\t'pcsrock.com',\n\t'peachworld.com',\n\t'pediatrician.com',\n\t'pemail.net',\n\t'penpen.com',\n\t'peoplepc.com',\n\t'peopleweb.com',\n\t'perfectmail.com',\n\t'personal.ro',\n\t'personales.com',\n\t'petml.com',\n\t'pettypool.com',\n\t'pezeshkpour.com',\n\t'phayze.com',\n\t'phone.net',\n\t'phreaker.net',\n\t'Phreaker.net',\n\t'pianomail.com',\n\t'pickupman.com',\n\t'picusnet.com',\n\t'pigpig.net',\n\t'pinoymail.com',\n\t'piracha.net',\n\t'pisem.net',\n\t'planet-mail.com',\n\t'planetaccess.com',\n\t'planetall.com',\n\t'planetarymotion.net',\n\t'planetdirect.com',\n\t'planetearthinter.net',\n\t'planetout.com',\n\t'plasa.com',\n\t'playersodds.com',\n\t'playful.com',\n\t'plusmail.com.br',\n\t'pmail.net',\n\t'pobox.hu',\n\t'pobox.sk',\n\t'pochta.ru',\n\t'poczta.fm',\n\t'poetic.com',\n\t'pokemonpost.com',\n\t'pokepost.com',\n\t'polbox.com',\n\t'policeoffice.com',\n\t'pool-sharks.com',\n\t'poond.com',\n\t'popaccount.com',\n\t'popmail.com',\n\t'popsmail.com',\n\t'popstar.com',\n\t'populus.net',\n\t'portableoffice.com',\n\t'portugalmail.com',\n\t'portugalmail.pt',\n\t'portugalnet.com',\n\t'positive-thinking.com',\n\t'post.com',\n\t'post.cz',\n\t'post.sk',\n\t'posta.net',\n\t'posta.ro',\n\t'posta.rosativa.ro.org',\n\t'postaccesslite.com',\n\t'postafree.com',\n\t'postaweb.com',\n\t'postinbox.com',\n\t'postino.ch',\n\t'postmark.net',\n\t'postmaster.co.uk',\n\t'postpro.net',\n\t'pousa.com',\n\t'powerfan.com',\n\t'praize.com',\n\t'pray247.com',\n\t'premiumservice.com',\n\t'presidency.com',\n\t'press.co.jp',\n\t'priest.com',\n\t'primposta.com',\n\t'primposta.hu',\n\t'pro.hu',\n\t'probemail.com',\n\t'prodigy.net',\n\t'progetplus.it',\n\t'programmer.net',\n\t'programozo.hu',\n\t'proinbox.com',\n\t'project2k.com',\n\t'prolaunch.com',\n\t'promessage.com',\n\t'prontomail.com',\n\t'prontomail.compopulus.net',\n\t'psv-supporter.com',\n\t'ptd.net',\n\t'public.usa.com',\n\t'publicist.com',\n\t'pulp-fiction.com',\n\t'punkass.com',\n\t'PunkAss.com',\n\t'purpleturtle.com',\n\t'qatarmail.com',\n\t'qprfans.com',\n\t'qrio.com',\n\t'quackquack.com',\n\t'quakemail.com',\n\t'qudsmail.com',\n\t'quepasa.com',\n\t'quickhosts.com',\n\t'quickwebmail.com',\n\t'quiklinks.com',\n\t'quikmail.com',\n\t'qwest.net',\n\t'qwestoffice.net',\n\t'r-o-o-t.com',\n\t'raakim.com',\n\t'racedriver.com',\n\t'racefanz.com',\n\t'racingfan.com.au',\n\t'racingmail.com',\n\t'radicalz.com',\n\t'ragingbull.com',\n\t'ranmamail.com',\n\t'rastogi.net',\n\t'ratt-n-roll.com',\n\t'rattle-snake.com',\n\t'ravearena.com',\n\t'ravemail.com',\n\t'razormail.com',\n\t'rccgmail.org',\n\t'realemail.net',\n\t'reallyfast.biz',\n\t'realradiomail.com',\n\t'recycler.com',\n\t'recyclermail.com',\n\t'rediffmail.com',\n\t'rediffmailpro.com',\n\t'rednecks.com',\n\t'redseven.de',\n\t'redsfans.com',\n\t'reggafan.com',\n\t'regiononline.com',\n\t'registerednurses.com',\n\t'repairman.com',\n\t'reply.hu',\n\t'representative.com',\n\t'rescueteam.com',\n\t'resumemail.com',\n\t'rezai.com',\n\t'richmondhill.com',\n\t'rickymail.com',\n\t'rin.ru',\n\t'riopreto.com.br',\n\t'rn.com',\n\t'roadrunner.com',\n\t'roanokemail.com',\n\t'rock.com',\n\t'rocketmail.com',\n\t'rockfan.com',\n\t'rodrun.com',\n\t'rome.com',\n\t'romymichele.com',\n\t'roosh.com',\n\t'rotfl.com',\n\t'roughnet.com',\n\t'rr.com',\n\t'rrohio.com',\n\t'rsub.com',\n\t'rubyridge.com',\n\t'runbox.com',\n\t'rushpost.com',\n\t'ruttolibero.com',\n\t'rvshop.com',\n\t's-mail.com',\n\t'sabreshockey.com',\n\t'sacbeemail.com',\n\t'safarimail.com',\n\t'safe-mail.net',\n\t'sagra.lu',\n\t'sagra.lumarketing.lu',\n\t'sailormoon.com',\n\t'saintly.com',\n\t'saintmail.net',\n\t'sale-sale-sale.com',\n\t'salehi.net',\n\t'samerica.com',\n\t'samilan.net',\n\t'sammimail.com',\n\t'sanfranmail.com',\n\t'sanook.com',\n\t'sapo.pt',\n\t'sativa.ro.org',\n\t'saudia.com',\n\t'sayhi.net',\n\t'sbcglobal.net',\n\t'scandalmail.com',\n\t'schizo.com',\n\t'schoolemail.com',\n\t'schoolmail.com',\n\t'schoolsucks.com',\n\t'schweiz.org',\n\t'sci.fi',\n\t'science.com.au',\n\t'scientist.com',\n\t'scifianime.com',\n\t'scotland.com',\n\t'scottishmail.co.uk',\n\t'scubadiving.com',\n\t'seanet.com',\n\t'searchwales.com',\n\t'sebil.com',\n\t'secret-police.com',\n\t'secretservices.net',\n\t'seductive.com',\n\t'seekstoyboy.com',\n\t'seguros.com.br',\n\t'send.hu',\n\t'sendme.cz',\n\t'sent.com',\n\t'sentrismail.com',\n\t'serga.com.ar',\n\t'servemymail.com',\n\t'sesmail.com',\n\t'sexmagnet.com',\n\t'SexMagnet.com',\n\t'seznam.cz',\n\t'shahweb.net',\n\t'shaniastuff.com',\n\t'sharewaredevelopers.com',\n\t'sharmaweb.com',\n\t'she.com',\n\t'shootmail.com',\n\t'shotgun.hu',\n\t'shuf.com',\n\t'sialkotcity.com',\n\t'sialkotian.com',\n\t'sialkotoye.com',\n\t'sify.com',\n\t'silkroad.net',\n\t'sinamail.com',\n\t'singapore.com',\n\t'singles4jesus.com',\n\t'singmail.com',\n\t'singnet.com.sg',\n\t'singpost.com',\n\t'skafan.com',\n\t'skim.com',\n\t'skizo.hu',\n\t'slamdunkfan.com',\n\t'slingshot.com',\n\t'slo.net',\n\t'slotter.com',\n\t'sm.westchestergov.com',\n\t'smapxsmap.net',\n\t'smileyface.comsmithemail.net',\n\t'smoothmail.com',\n\t'snail-mail.net',\n\t'snail-mail.ney',\n\t'snakemail.com',\n\t'sndt.net',\n\t'sneakemail.com',\n\t'snet.net',\n\t'sniper.hu',\n\t'snoopymail.com',\n\t'snowboarding.com',\n\t'snowdonia.net',\n\t'socamail.com',\n\t'soccerAmerica.net',\n\t'socceramerica.net',\n\t'soccermail.com',\n\t'soccermomz.com',\n\t'sociologist.com',\n\t'softhome.net',\n\t'sol.dk',\n\t'soldier.hu',\n\t'soon.com',\n\t'soulfoodcookbook.com',\n\t'sp.nl',\n\t'space-bank.com',\n\t'space-man.com',\n\t'space-ship.com',\n\t'space-travel.com',\n\t'space.com',\n\t'spaceart.com',\n\t'spacebank.com',\n\t'spacemart.com',\n\t'spacetowns.com',\n\t'spacewar.com',\n\t'spamex.com',\n\t'spartapiet.com',\n\t'spazmail.com',\n\t'speedemail.net',\n\t'speedpost.net',\n\t'speedrules.com',\n\t'speedrulz.com',\n\t'spils.com',\n\t'spinfinder.com',\n\t'spl.at',\n\t'sportemail.com',\n\t'sportsmail.com',\n\t'sporttruckdriver.com',\n\t'spray.no',\n\t'spray.se',\n\t'spymac.com',\n\t'srilankan.net',\n\t'st-davids.net',\n\t'stade.fr',\n\t'stalag13.com',\n\t'stargateradio.com',\n\t'starmail.com',\n\t'starmail.org',\n\t'starmedia.com',\n\t'starplace.com',\n\t'starspath.com',\n\t'start.com.au',\n\t'starting-point.com',\n\t'StarTrekMail.com',\n\t'startrekmail.com',\n\t'stealthmail.com',\n\t'stockracer.com',\n\t'stoned.com',\n\t'stones.com',\n\t'stopdropandroll.com',\n\t'storksite.com',\n\t'stribmail.com',\n\t'strompost.com',\n\t'strongguy.com',\n\t'studentcenter.org',\n\t'subnetwork.com',\n\t'subram.com',\n\t'sudanmail.net',\n\t'suhabi.com',\n\t'suisse.org',\n\t'sukhumvit.net',\n\t'sunpoint.net',\n\t'sunrise-sunset.com',\n\t'sunsgame.com',\n\t'sunumail.sn',\n\t'superdada.com',\n\t'supereva.it',\n\t'supermail.ru',\n\t'surat.com',\n\t'surf3.net',\n\t'surfree.com',\n\t'surfy.net',\n\t'surimail.com',\n\t'survivormail.com',\n\t'swbell.net',\n\t'sweb.cz',\n\t'swiftdesk.com',\n\t'swingeasyhithard.com',\n\t'swingfan.com',\n\t'swipermail.zzn.com',\n\t'swirve.com',\n\t'swissinfo.org',\n\t'swissmail.net',\n\t'switchboardmail.com',\n\t'switzerland.org',\n\t'sx172.com',\n\t'syom.com',\n\t'syriamail.com',\n\t't2mail.com',\n\t'takuyakimura.com',\n\t'talk21.com',\n\t'talkcity.com',\n\t'tamil.com',\n\t'tampabay.rr.com',\n\t'tankpolice.com',\n\t'tatanova.com',\n\t'tbwt.com',\n\t'tds.net',\n\t'teachermail.net',\n\t'teamdiscovery.com',\n\t'teamtulsa.net',\n\t'tech4peace.org',\n\t'techemail.com',\n\t'techie.com',\n\t'technisamail.co.za',\n\t'technologist.com',\n\t'techpointer.com',\n\t'techscout.com',\n\t'techseek.com',\n\t'techspot.com',\n\t'teenagedirtbag.com',\n\t'telebot.com',\n\t'telebot.net',\n\t'teleline.es',\n\t'telerymd.com',\n\t'teleserve.dynip.com',\n\t'telinco.net',\n\t'telkom.net',\n\t'telpage.net',\n\t'temtulsa.net',\n\t'tenchiclub.com',\n\t'tenderkiss.com',\n\t'tennismail.com',\n\t'terra.cl',\n\t'terra.com',\n\t'terra.com.ar',\n\t'terra.com.br',\n\t'terra.es',\n\t'tfanus.com.er',\n\t'tfz.net',\n\t'thai.com',\n\t'thaimail.com',\n\t'thaimail.net',\n\t'the-african.com',\n\t'the-airforce.com',\n\t'the-aliens.com',\n\t'the-american.com',\n\t'the-animal.com',\n\t'the-army.com',\n\t'the-astronaut.com',\n\t'the-beauty.com',\n\t'the-big-apple.com',\n\t'the-biker.com',\n\t'the-boss.com',\n\t'the-brazilian.com',\n\t'the-canadian.com',\n\t'the-canuck.com',\n\t'the-captain.com',\n\t'the-chinese.com',\n\t'the-country.com',\n\t'the-cowboy.com',\n\t'the-davis-home.com',\n\t'the-dutchman.com',\n\t'the-eagles.com',\n\t'the-englishman.com',\n\t'the-fastest.net',\n\t'the-fool.com',\n\t'the-frenchman.com',\n\t'the-galaxy.net',\n\t'the-genius.com',\n\t'the-gentleman.com',\n\t'the-german.com',\n\t'the-gremlin.com',\n\t'the-hooligan.com',\n\t'the-italian.com',\n\t'the-japanese.com',\n\t'the-lair.com',\n\t'the-madman.com',\n\t'the-mailinglist.com',\n\t'the-marine.com',\n\t'the-master.com',\n\t'the-mexican.com',\n\t'the-ministry.com',\n\t'the-monkey.com',\n\t'the-newsletter.net',\n\t'the-pentagon.com',\n\t'the-police.com',\n\t'the-prayer.com',\n\t'the-professional.com',\n\t'the-quickest.com',\n\t'the-russian.com',\n\t'the-snake.com',\n\t'the-spaceman.com',\n\t'the-stock-market.com',\n\t'the-student.net',\n\t'the-whitehouse.net',\n\t'the-wild-west.com',\n\t'the18th.com',\n\t'thecoolguy.com',\n\t'thecriminals.com',\n\t'thedoghousemail.com',\n\t'thedorm.com',\n\t'theend.hu',\n\t'theglobe.com',\n\t'thegolfcourse.com',\n\t'thegooner.com',\n\t'theheadoffice.com',\n\t'thelanddownunder.com',\n\t'themail.com',\n\t'themillionare.net',\n\t'theoffice.net',\n\t'thepokerface.com',\n\t'thepostmaster.net',\n\t'theraces.com',\n\t'theracetrack.com',\n\t'thestreetfighter.com',\n\t'theteebox.com',\n\t'thewatercooler.com',\n\t'thewebpros.co.uk',\n\t'thewizzard.com',\n\t'thewizzkid.com',\n\t'thezhangs.net',\n\t'thirdage.com',\n\t'thisgirl.com',\n\t'thoic.com',\n\t'thundermail.com',\n\t'tidni.com',\n\t'timein.net',\n\t'tiscali.at',\n\t'tiscali.be',\n\t'tiscali.co.uk',\n\t'tiscali.lu',\n\t'tiscali.se',\n\t'tkcity.com',\n\t'toast.com',\n\t'toolsource.com',\n\t'topchat.com',\n\t'topgamers.co.uk',\n\t'topletter.com',\n\t'topmail.com.ar',\n\t'topsurf.com',\n\t'topteam.bg',\n\t'torchmail.com',\n\t'totalmusic.net',\n\t'ToughGuy.net',\n\t'toughguy.net',\n\t'tpg.com.au',\n\t'travel.li',\n\t'trialbytrivia.com',\n\t'tritium.net',\n\t'trmailbox.com',\n\t'tropicalstorm.com',\n\t'truckers.com',\n\t'truckerz.com',\n\t'truckracer.com',\n\t'truckracers.com',\n\t'trust-me.com',\n\t'truth247.com',\n\t'truthmail.com',\n\t'tsamail.co.za',\n\t'ttml.co.in',\n\t'tunisiamail.com',\n\t'turkey.com',\n\t'twinstarsmail.com',\n\t'tycoonmail.com',\n\t'typemail.com',\n\t'u2club.com',\n\t'uae.ac',\n\t'uaemail.com',\n\t'ubbi.com',\n\t'ubbi.com.br',\n\t'uboot.com',\n\t'uk2k.com',\n\t'uk2net.com',\n\t'uk7.net',\n\t'uk8.net',\n\t'ukbuilder.com',\n\t'ukcool.com',\n\t'ukdreamcast.com',\n\t'ukmail.org',\n\t'ukmax.com',\n\t'ukr.net',\n\t'uku.co.uk',\n\t'ultapulta.com',\n\t'ultrapostman.com',\n\t'ummah.org',\n\t'umpire.com',\n\t'unbounded.com',\n\t'unforgettable.com',\n\t'uni.de',\n\t'uni.demailto.de',\n\t'unican.es',\n\t'unihome.com',\n\t'universal.pt',\n\t'uno.ee',\n\t'uno.it',\n\t'unofree.it',\n\t'unomail.com',\n\t'uol.com.ar',\n\t'uol.com.br',\n\t'uol.com.co',\n\t'uol.com.mx',\n\t'uol.com.ve',\n\t'uole.com',\n\t'uole.com.ve',\n\t'uolmail.com',\n\t'uomail.com',\n\t'upf.org',\n\t'ureach.com',\n\t'urgentmail.biz',\n\t'usa.com',\n\t'usa.net',\n\t'usaaccess.net',\n\t'usanetmail.com',\n\t'usermail.com',\n\t'usma.net',\n\t'usmc.net',\n\t'uswestmail.net',\n\t'uymail.com',\n\t'uyuyuy.com',\n\t'v-sexi.com',\n\t'vahoo.com',\n\t'vampirehunter.com',\n\t'varbizmail.com',\n\t'vcmail.com',\n\t'velnet.co.uk',\n\t'velocall.com',\n\t'verizon.net',\n\t'verizonmail.com',\n\t'veryfast.biz',\n\t'veryspeedy.net',\n\t'violinmakers.co.uk',\n\t'vip.gr',\n\t'vipmail.ru',\n\t'virgilio.it',\n\t'virgin.net',\n\t'virtual-mail.com',\n\t'virtualactive.com',\n\t'virtualmail.com',\n\t'visitmail.com',\n\t'visitweb.com',\n\t'visto.com',\n\t'visualcities.com',\n\t'vivavelocity.com',\n\t'vivianhsu.net',\n\t'vjmail.com',\n\t'vjtimail.com',\n\t'vlmail.com',\n\t'vnn.vn',\n\t'volcanomail.com',\n\t'vote-democrats.com',\n\t'vote-hillary.com',\n\t'vote-republicans.com',\n\t'vote4gop.org',\n\t'votenet.com',\n\t'vr9.com',\n\t'w3.to',\n\t'wahoye.com',\n\t'wales2000.net',\n\t'wam.co.za',\n\t'wanadoo.es',\n\t'warmmail.com',\n\t'warpmail.net',\n\t'warrior.hu',\n\t'waumail.com',\n\t'wbdet.com',\n\t'wearab.net',\n\t'web-mail.com.ar',\n\t'web-police.com',\n\t'web.de',\n\t'webave.com',\n\t'WebCamMail.com',\n\t'webcammail.com',\n\t'webcity.ca',\n\t'webdream.com',\n\t'webinbox.com',\n\t'webindia123.com',\n\t'webjump.com',\n\t'webmail.bellsouth.net',\n\t'webmail.co.yu',\n\t'webmail.co.za',\n\t'webmail.hu',\n\t'webmails.com',\n\t'webprogramming.com',\n\t'webstation.com',\n\t'websurfer.co.za',\n\t'webtopmail.com',\n\t'weedmail.com',\n\t'weekmail.com',\n\t'weekonline.com',\n\t'wehshee.com',\n\t'welsh-lady.com',\n\t'whale-mail.com',\n\t'whartontx.com',\n\t'wheelweb.com',\n\t'whipmail.com',\n\t'whoever.com',\n\t'whoopymail.com',\n\t'wickedmail.com',\n\t'wideopenwest.com',\n\t'wildmail.com',\n\t'windrivers.net',\n\t'windstream.net',\n\t'wingnutz.com',\n\t'winmail.com.au',\n\t'winning.com',\n\t'witty.com',\n\t'wiz.cc',\n\t'wkbwmail.com',\n\t'woh.rr.com',\n\t'wolf-web.com',\n\t'wombles.com',\n\t'wonder-net.com',\n\t'wongfaye.com',\n\t'wooow.it',\n\t'workmail.com',\n\t'worldemail.com',\n\t'worldmailer.com',\n\t'worldnet.att.net',\n\t'wosaddict.com',\n\t'wouldilie.com',\n\t'wowgirl.com',\n\t'wowmail.com',\n\t'wowway.com',\n\t'wp.pl',\n\t'wptamail.com',\n\t'wrestlingpages.com',\n\t'wrexham.net',\n\t'writeme.com',\n\t'writemeback.com',\n\t'wrongmail.com',\n\t'wtvhmail.com',\n\t'wwdg.com',\n\t'www.com',\n\t'www2000.net',\n\t'wx88.net',\n\t'wxs.net',\n\t'wyrm.supernews.com',\n\t'x-mail.net',\n\t'x-networks.net',\n\t'x5g.com',\n\t'xmail.com',\n\t'xmastime.com',\n\t'xmsg.com',\n\t'xoom.com',\n\t'xoommail.com',\n\t'xpressmail.zzn.com',\n\t'xsmail.com',\n\t'xuno.com',\n\t'xzapmail.com',\n\t'yada-yada.com',\n\t'yaho.com',\n\t'yahoo.ca',\n\t'yahoo.co.in',\n\t'yahoo.co.jp',\n\t'yahoo.co.kr',\n\t'yahoo.co.nz',\n\t'yahoo.co.uk',\n\t'yahoo.com',\n\t'yahoo.com.ar',\n\t'yahoo.com.au',\n\t'yahoo.com.br',\n\t'yahoo.com.cn',\n\t'yahoo.com.hk',\n\t'yahoo.com.is',\n\t'yahoo.com.mx',\n\t'yahoo.com.ru',\n\t'yahoo.com.sg',\n\t'yahoo.de',\n\t'yahoo.dk',\n\t'yahoo.es',\n\t'yahoo.fr',\n\t'yahoo.ie',\n\t'yahoo.it',\n\t'yahoo.jp',\n\t'yahoo.ru',\n\t'yahoo.se',\n\t'yahoofs.com',\n\t'yalla.com',\n\t'yalla.com.lb',\n\t'yalook.com',\n\t'yam.com',\n\t'yandex.ru',\n\t'yapost.com',\n\t'yawmail.com',\n\t'yclub.com',\n\t'yebox.com',\n\t'yehaa.com',\n\t'yehey.com',\n\t'yemenmail.com',\n\t'yepmail.net',\n\t'yesbox.net',\n\t'yifan.net',\n\t'ymail.com',\n\t'ynnmail.com',\n\t'yogotemail.com',\n\t'yopolis.com',\n\t'youareadork.com',\n\t'youpy.com',\n\t'your-house.com',\n\t'yourinbox.com',\n\t'yourlover.net',\n\t'yournightmare.com',\n\t'yours.com',\n\t'yourssincerely.com',\n\t'yourteacher.net',\n\t'yourwap.com',\n\t'youvegotmail.net',\n\t'yuuhuu.net',\n\t'yyhmail.com',\n\t'zahadum.com',\n\t'zcities.com',\n\t'zdnetmail.com',\n\t'zeeks.com',\n\t'zeepost.nl',\n\t'zensearch.net',\n\t'zhaowei.net',\n\t'zionweb.org',\n\t'zip.net',\n\t'zipido.com',\n\t'ziplip.com',\n\t'zipmail.com',\n\t'zipmail.com.br',\n\t'zipmax.com',\n\t'zmail.ru',\n\t'zonnet.nl',\n\t'zoominternet.net',\n\t'zubee.com',\n\t'zuvio.com',\n\t'zuzzurello.com',\n\t'zwallet.com',\n\t'zybermail.com',\n\t'zydecofan.com',\n\t'zzn.com',\n\t'zzom.co.uk',\n]"
            },
            {
                "name": "generateSigningKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tAuthenticationActionType.GENERATE_STAGING_KEY,\n\tprops<{ environmentId: string }>()\n)"
            },
            {
                "name": "generateSigningKeyFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tAuthenticationActionType.GENERATE_STAGING_KEY_FAILED,\n\tprops<{ error: any }>()\n)"
            },
            {
                "name": "generateSigningKeySuccessful",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tAuthenticationActionType.GENERATE_STAGING_KEY_SUCCESSFUL,\n\tprops<{ signingKey: ProjectAuthentication }>()\n)"
            },
            {
                "name": "HORZIONTAL_LINE_LENGTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "95"
            },
            {
                "name": "HttpInterceptorProvider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/service/http-interceptor.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tprovide: HTTP_INTERCEPTORS,\n\tuseClass: HttpInterceptorService,\n\tmulti: true,\n\tdeps: [Router],\n}"
            },
            {
                "name": "initializedRun",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/model/instance-run.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "InstanceRun",
                "defaultValue": "{\r\n\tid: '',\r\n\tenvironmentId: '',\r\n\taccountId: '',\r\n\tflowVersionId: '',\r\n\tstatus: InstanceRunStatus.RUNNING,\r\n\tepochFinishTime: 0,\r\n\tepochStartTime: 0,\r\n\tflowDisplayName: '',\r\n\tinstanceId: '',\r\n\tstate: { steps: {}, variables: null },\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/reducer/environments.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EnvironmentsState",
                "defaultValue": "{\n\tloaded: false,\n\tenvironments: [],\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/reducer/events.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "EventsState",
                "defaultValue": "{\n\tloaded: false,\n\tevents: [],\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/reducer/organization.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "OrganizationsState",
                "defaultValue": "{\n\tloaded: false,\n\tselectedIndex: 0,\n\torganizations: [],\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/reducer/project.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ProjectsState",
                "defaultValue": "{\n\tloaded: false,\n\tselectedIndex: 0,\n\tprojects: [],\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/reducer/api-keys.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApiKeysState",
                "defaultValue": "{\n\tapiKeys: null,\n\tloaded: false,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/reducer/authentication.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AuthenticationState",
                "defaultValue": "{\n\tauthentications: [],\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/reducer/flow-items-details.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FlowItemsDetailsState",
                "defaultValue": "{\n\tconnectorsFlowItemsDetails: [],\n\tcoreFlowItemsDetails: [],\n\ttriggerFlowItemsDetails: [],\n\tuserCollectionsFlowItemsDetails: [],\n\tloaded: false,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FlowsState",
                "defaultValue": "{\n\tstate: FlowsStateEnum.INITIALIZED,\n\tflows: [],\n\tlastSaveId: UUID.UUID(),\n\ttabsState: {},\n\tselectedFlowId: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/reducer/piece.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CollectionState",
                "defaultValue": "{\n\tstate: PieceStateEnum.INITIALIZED,\n\tcollection: {\n\t\tlastVersion: {\n\t\t\tid: UUID,\n\t\t\tdisplayName: 'dummy',\n\t\t\tstate: VersionEditState.DRAFT,\n\t\t\tconfigs: [],\n\t\t\tlogoUrl: 'dummy',\n\t\t\taccess: 'string',\n\t\t\tdescription: 'string',\n\t\t\tflowsVersionId: [],\n\t\t\tepochCreationTime: 0,\n\t\t\tepochUpdateTime: 0,\n\t\t},\n\t\tepochCreationTime: 0,\n\t\tepochUpdateTime: 0,\n\t\tid: UUID.UUID(),\n\t\tname: 'dummy',\n\t\tprojectId: 'dummy',\n\t\tversionsList: [],\n\t},\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/reducer/view-mode.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "ViewModeEnum.BUILDING"
            },
            {
                "name": "initialTabState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TabState",
                "defaultValue": "{\n\tselectedRun: undefined,\n\tleftSidebar: {\n\t\ttype: LeftSideBarType.NONE,\n\t\tprops: {},\n\t},\n\trightSidebar: {\n\t\ttype: RightSideBarType.NONE,\n\t\tprops: {},\n\t},\n\tfocusedStep: null,\n\tselectedStepName: 'initialVal',\n}"
            },
            {
                "name": "LINES_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "2"
            },
            {
                "name": "loadApiKeys",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ApiKeysActionType.LOAD_API_KEYS_STARTED)"
            },
            {
                "name": "loadApiKeysFinished",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tApiKeysActionType.LOAD_API_KEYS_FINISHED,\n\tprops<{ apiKeys: SeekPage<ApiKey> }>()\n)"
            },
            {
                "name": "loadFlowItemsDetails",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowItemDetailsActionType.LOAD)"
            },
            {
                "name": "loadInitial",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/common.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(CommonActionType.LOAD_INITIAL, props<{ user: User }>())"
            },
            {
                "name": "loadInitial",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/builder.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tBuilderActionType.LOAD_INITIAL,\n\tprops<{ piece: Collection; flows: Flow[]; viewMode: ViewModeEnum; run: InstanceRun | undefined }>()\n)"
            },
            {
                "name": "loadOldRemoteFlowItemDetails",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowItemDetailsActionType.LOAD_OLD_REMOTE_FLOW_ITEM_DETAILS,\n\tprops<{ collectionVersionId: UUID }>()\n)"
            },
            {
                "name": "materialTooltipDefaults",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/common-layout.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MatTooltipDefaultOptions",
                "defaultValue": "{\n\tshowDelay: 0,\n\thideDelay: 0,\n\ttouchendHideDelay: 0,\n}"
            },
            {
                "name": "OAuth2UserInputTypeDropdownOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/model/fields/variable/subfields/oauth2-user-input.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "DropdownItemOption[]",
                "defaultValue": "[\n\t{ label: 'Ask for login', value: Oauth2UserInputType.LOGIN },\n\t{ label: 'Ask for everything', value: Oauth2UserInputType.EVERYTHING },\n\t{ label: 'Ask for app details', value: Oauth2UserInputType.APP_DETAILS },\n]"
            },
            {
                "name": "oldRemoteFlowItemDetailsLoadedSuccessfully",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowItemDetailsActionType.OLD_REMOTE_FLOW_ITEM_DETAILS_LOADED_SUCESSFULLY,\n\tprops<{ oldRemoteFlowItemDetails: FlowItemDetails }>()\n)"
            },
            {
                "name": "OrganizationActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/organizations.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tsetOrganizations,\n\tclearOrganizations,\n}"
            },
            {
                "name": "OrganizationSelectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tselectOrganizations,\n}"
            },
            {
                "name": "PieceAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tchangeName,\n\tsetInitial,\n\tupdateConfig,\n\taddConfig,\n\tdeleteConfigSucceeded,\n\tupdateSettings,\n\tsavedSuccess,\n\tsavedFailed,\n\tpublishCollection,\n\tpublishCollectionSuccess,\n\tdeleteConfigFailed,\n\tdeleteConfig,\n\tpublishCollectionFailed,\n}"
            },
            {
                "name": "Prism",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/service/highlightservice.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "prodConnectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/connectors/prod-connectors.lexicon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{\n\t\tpieceVersionId: '9236ce88-b7f4-4ed5-8785-deb81698bb09',\n\t\tflowVersionId: '003905ab-bd34-482f-b26c-7caad22c7aae',\n\t},\n]"
            },
            {
                "name": "ProjectActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/project.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tsetProjects,\n\tclearProjects,\n}"
            },
            {
                "name": "ProjectSelectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/project.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tselectProject,\n}"
            },
            {
                "name": "publishCollection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tCollectionActionType.PUBLISH_COLLECTION,\n\tprops<{ environmentIds: UUID[]; collection: Collection }>()\n)"
            },
            {
                "name": "publishCollectionFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tCollectionActionType.PUBLISH_COLLECTION_FAILED,\n\tprops<{ error: Error }>()\n)"
            },
            {
                "name": "publishCollectionSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tCollectionActionType.PUBLISH_COLLECTION_SUCCESS,\n\tprops<{ environmentIds: UUID[]; collection: Collection }>()\n)"
            },
            {
                "name": "reducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/dashboard-layout.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<State>",
                "defaultValue": "{\n\tauthenticationState: authenticationReducer,\n\tapiKeys: apiKeysReducer,\n}"
            },
            {
                "name": "reduxMiddleware",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "LogRocket.reduxMiddleware()"
            },
            {
                "name": "replaceTrigger",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.REPLACE_TRIGGER, props<{ newTrigger: Trigger }>())"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "rollbarConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/rollbar.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n\taccessToken: 'fff0a98a8ab24448ae2529cd340df356',\r\n\tcaptureUncaught: true,\r\n\tenvironment: environment.stageName,\r\n\tcaptureUnhandledRejections: true,\r\n\tpayload: {},\r\n}"
            },
            {
                "name": "RollbarService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/rollbar.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<Rollbar>('rollbar')"
            },
            {
                "name": "savedFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.SAVED_FAILED, props<{ error: any }>())"
            },
            {
                "name": "savedFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(CollectionActionType.PIECE_SAVED_FAILED, props<{ error: any }>())"
            },
            {
                "name": "savedSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.SAVED_SUCCESS, props<{ saveId: UUID; flow: Flow }>())"
            },
            {
                "name": "savedSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(CollectionActionType.PIECE_SAVED_SUCCESS, props<{ collection: Collection }>())"
            },
            {
                "name": "saveFlowStarted",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.SAVE_FLOW_STARTED, props<{ flow: Flow; saveId: UUID }>())"
            },
            {
                "name": "selectAll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectDashboardState, state => state.apiKeys)"
            },
            {
                "name": "selectAll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectDashboardState, state => state.authenticationState.authentications)"
            },
            {
                "name": "selectAllConfigs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCurrentFlowConfigs,\r\n\tselectCurrentCollectionConfigs,\r\n\t(flowConfigs: Config[], collectionConfigs: Config[]) => {\r\n\t\treturn [...flowConfigs, ...collectionConfigs];\r\n\t}\r\n)"
            },
            {
                "name": "selectAllFlowItemsDetails",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\treturn state.flowItemsDetailsState;\r\n})"
            },
            {
                "name": "selectAllFlowItemsDetailsLoadedState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectAllFlowItemsDetails,\r\n\t(state: FlowItemsDetailsState) => {\r\n\t\treturn state.loaded;\r\n\t}\r\n)"
            },
            {
                "name": "selectApiKeys",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectAll, state => state.apiKeys)"
            },
            {
                "name": "selectApiKeysLoaded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectAll, state => state.loaded)"
            },
            {
                "name": "selectAuth2Configs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(oauth2Variable: OAuth2Variable, flowId: UUID) =>\r\n\tcreateSelector(\r\n\t\tselectCurrentFlowConfigs,\r\n\t\tselectCurrentCollectionConfigs,\r\n\t\t(flowConfigs: Config[], pieceConfigs: Config[]) => {\r\n\t\t\treturn [...flowConfigs, ...pieceConfigs].filter(\r\n\t\t\t\tf =>\r\n\t\t\t\t\tf.type == ConfigType.OAUTH2 &&\r\n\t\t\t\t\t(oauth2Variable.settings.userInputType === Oauth2UserInputType.EVERYTHING ||\r\n\t\t\t\t\t\toauth2Variable.settings.userInputType === Oauth2UserInputType.APP_DETAILS)\r\n\t\t\t);\r\n\t\t}\r\n\t)"
            },
            {
                "name": "selectBuilderSaveState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectFlowState,\r\n\tselectCollectionState,\r\n\t(flowState: FlowsStateEnum, pieceState: PieceStateEnum) => {\r\n\t\tif (pieceState === PieceStateEnum.FAILED || flowState === FlowsStateEnum.FAILED) {\r\n\t\t\treturn SaveState.FAILED;\r\n\t\t}\r\n\t\tif (pieceState === PieceStateEnum.INITIALIZED && flowState === FlowsStateEnum.INITIALIZED) {\r\n\t\t\treturn SaveState.INITIALIZED;\r\n\t\t}\r\n\t\tif (pieceState === PieceStateEnum.SAVING || flowState === FlowsStateEnum.SAVING) {\r\n\t\t\treturn SaveState.SAVING;\r\n\t\t}\r\n\t\treturn SaveState.SAVED;\r\n\t}\r\n)"
            },
            {
                "name": "selectBuilderState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<GlobalBuilderState>(BUILDER_STATE_NAME)"
            },
            {
                "name": "selectCanPublish",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectFlows, (flows: Flow[]) => {\r\n\tlet canPublish = true;\r\n\tfor (let i = 0; i < flows.length; ++i) {\r\n\t\tif (!flows[i].lastVersion?.valid) {\r\n\t\t\tcanPublish = false;\r\n\t\t}\r\n\t}\r\n\treturn flows.length > 0 && canPublish;\r\n})"
            },
            {
                "name": "selectCollectionState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.pieceState.state\r\n)"
            },
            {
                "name": "selectCommonState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<CommonStateModel>(COMMON_STATE)"
            },
            {
                "name": "selectCommonState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<CommonStateModel>(COMMON_STATE)"
            },
            {
                "name": "selectCommonState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<CommonStateModel>(COMMON_STATE)"
            },
            {
                "name": "selectCommonState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/project.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<CommonStateModel>(COMMON_STATE)"
            },
            {
                "name": "selectConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(configKey: string) =>\r\n\tcreateSelector(\r\n\t\tselectCurrentFlowConfigs,\r\n\t\tselectCurrentCollectionConfigs,\r\n\t\t(flowConfigs: Config[], collectionConfigs: Config[]) => {\r\n\t\t\tconst indexInFlowConfigsList = flowConfigs.findIndex(c => c.key === configKey);\r\n\t\t\tif (indexInFlowConfigsList > -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tindexInList: indexInFlowConfigsList,\r\n\t\t\t\t\tconfig: flowConfigs[indexInFlowConfigsList],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tconst indexInCollectionConfigsList = collectionConfigs.findIndex(c => c.key === configKey);\r\n\t\t\tif (indexInCollectionConfigsList > -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tindexInList: indexInCollectionConfigsList,\r\n\t\t\t\t\tconfig: collectionConfigs[indexInCollectionConfigsList],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t)"
            },
            {
                "name": "selectConfigTabTypeFromProps",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectCurrentLeftSidebar, (state: { props: any }) => {\r\n\treturn state.props.selectedTab;\r\n})"
            },
            {
                "name": "selectCoreFlowItemsDetails",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectAllFlowItemsDetails, (state: FlowItemsDetailsState) => {\r\n\treturn state.coreFlowItemsDetails;\r\n})"
            },
            {
                "name": "selectCurrentCollection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.pieceState.collection\r\n)"
            },
            {
                "name": "selectCurrentCollectionConfigs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectCurrentCollection, (piece: Collection) =>\r\n\tpiece.lastVersion.configs.map(c => {\r\n\t\tc.collectionVersionId = piece.lastVersion.id;\r\n\t\treturn c;\r\n\t})\r\n)"
            },
            {
                "name": "selectCurrentCollectionId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCurrentCollection,\r\n\t(collection: Collection) => collection.id\r\n)"
            },
            {
                "name": "selectCurrentCollectionName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCurrentCollection,\r\n\t(collection: Collection) => collection.name\r\n)"
            },
            {
                "name": "selectCurrentDisplayName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectCurrentStep, state => {\r\n\treturn state?.displayName;\r\n})"
            },
            {
                "name": "selectCurrentFlow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectFlowsState, (flowsState: FlowsState) => {\r\n\treturn flowsState.flows.find(f => f.id === flowsState.selectedFlowId);\r\n})"
            },
            {
                "name": "selectCurrentFlowConfigs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tlet flow = state.flowsState.flows.find(f => f.id === state.flowsState.selectedFlowId);\r\n\tif (flow === undefined) {\r\n\t\treturn [];\r\n\t}\r\n\treturn flow.lastVersion.configs.map(c => {\r\n\t\tc.flowVersionId = flow!.lastVersion.id;\r\n\t\treturn c;\r\n\t});\r\n})"
            },
            {
                "name": "selectCurrentFlowId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.flowsState.selectedFlowId\r\n)"
            },
            {
                "name": "selectCurrentFlowRun",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tif (state.flowsState.selectedFlowId == undefined) {\r\n\t\treturn undefined;\r\n\t}\r\n\tlet tabState = state.flowsState.tabsState[state.flowsState.selectedFlowId.toString()];\r\n\tif (tabState == null) {\r\n\t\treturn tabState;\r\n\t}\r\n\treturn tabState.selectedRun;\r\n})"
            },
            {
                "name": "selectCurrentFlowRunStatus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectCurrentFlowRun, (run: InstanceRun | undefined) => {\r\n\tif (run === undefined) {\r\n\t\treturn undefined;\r\n\t}\r\n\treturn run.status;\r\n})"
            },
            {
                "name": "selectCurrentFlowSaved",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) =>\r\n\t\tstate.flowsState.state === FlowsStateEnum.SAVED || state.flowsState.state === FlowsStateEnum.INITIALIZED\r\n)"
            },
            {
                "name": "selectCurrentFlowValidity",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectCurrentFlow, (flow: Flow | undefined) => {\r\n\tif (!flow) return false;\r\n\treturn flow.lastVersion.valid;\r\n})"
            },
            {
                "name": "selectCurrentLeftSidebar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tif (state.flowsState.selectedFlowId == undefined) {\r\n\t\treturn {\r\n\t\t\ttype: LeftSideBarType.NONE,\r\n\t\t\tprops: {},\r\n\t\t};\r\n\t}\r\n\tlet tabState: TabState = state.flowsState.tabsState[state.flowsState.selectedFlowId.toString()];\r\n\tif (tabState == undefined) {\r\n\t\treturn {\r\n\t\t\ttype: LeftSideBarType.NONE,\r\n\t\t\tprops: {},\r\n\t\t};\r\n\t}\r\n\treturn tabState.leftSidebar;\r\n})"
            },
            {
                "name": "selectCurrentLeftSidebarType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCurrentLeftSidebar,\r\n\t(state: { type: LeftSideBarType }) => {\r\n\t\treturn state.type;\r\n\t}\r\n)"
            },
            {
                "name": "selectCurrentRightSideBar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tif (state.flowsState.selectedFlowId == undefined) {\r\n\t\treturn {\r\n\t\t\ttype: RightSideBarType.NONE,\r\n\t\t\tprops: {},\r\n\t\t};\r\n\t}\r\n\tlet tabState: TabState = state.flowsState.tabsState[state.flowsState.selectedFlowId.toString()];\r\n\tif (tabState == undefined) {\r\n\t\treturn {\r\n\t\t\ttype: RightSideBarType.NONE,\r\n\t\t\tprops: {},\r\n\t\t};\r\n\t}\r\n\treturn tabState.rightSidebar;\r\n})"
            },
            {
                "name": "selectCurrentRightSideBarType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectCurrentRightSideBar,\r\n\t(state: { type: RightSideBarType }) => {\r\n\t\treturn state.type;\r\n\t}\r\n)"
            },
            {
                "name": "selectCurrentStep",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectFlowsState, (flowsState: FlowsState) => {\r\n\tlet selectedFlowTabsState = flowsState.tabsState[flowsState.selectedFlowId!.toString()];\r\n\tif (!selectedFlowTabsState) {\r\n\t\treturn undefined;\r\n\t}\r\n\treturn selectedFlowTabsState.focusedStep;\r\n})"
            },
            {
                "name": "selectCurrentStepName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectCurrentStep, selectedStep => {\r\n\tif (selectedStep) {\r\n\t\treturn selectedStep.name;\r\n\t}\r\n\treturn undefined;\r\n})"
            },
            {
                "name": "selectCurrentTabState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tif (state.flowsState.selectedFlowId == undefined) {\r\n\t\treturn undefined;\r\n\t}\r\n\treturn state.flowsState.tabsState[state.flowsState.selectedFlowId.toString()];\r\n})"
            },
            {
                "name": "selectDashboardState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<State>('dashboard')"
            },
            {
                "name": "selectDashboardState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<State>('dashboard')"
            },
            {
                "name": "selectDynamicDropdownReference",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() =>\r\n\tcreateSelector(\r\n\t\tselectCurrentFlowConfigs,\r\n\t\tselectCurrentCollectionConfigs,\r\n\t\t(flowConfigs: Config[], pieceConfigs: Config[]) => {\r\n\t\t\treturn [...flowConfigs, ...pieceConfigs]\r\n\t\t\t\t.filter(f => f.type == ConfigType.OAUTH2)\r\n\t\t\t\t.map(f => {\r\n\t\t\t\t\treturn { value: f.key, label: f.label } as DropdownItemOption;\r\n\t\t\t\t});\r\n\t\t}\r\n\t)"
            },
            {
                "name": "selectEnvironments",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectEnvironmentState, (state: EnvironmentsState) => {\n\treturn state.environments;\n})"
            },
            {
                "name": "selectEnvironmentsLoadState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectEnvironmentState, (state: EnvironmentsState) => {\n\treturn state.loaded;\n})"
            },
            {
                "name": "selectEnvironmentState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n\tselectCommonState,\n\t(state: CommonStateModel): EnvironmentsState => state.environmentsState\n)"
            },
            {
                "name": "selectEvents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectEventsState, (state: EventsState) => state.events)"
            },
            {
                "name": "selectEventsDropdownOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(selectedEventNames: string[]) =>\n\tcreateSelector(selectEventsState, (state: EventsState) => {\n\t\tlet options: DropdownItemOption[] = [];\n\t\tlet selectedOptions: DropdownItemOption[] = [];\n\n\t\tfor (let i = 0; i < state.events.length; ++i) {\n\t\t\tlet item = {\n\t\t\t\tvalue: state.events[i].name,\n\t\t\t\tlabel: state.events[i].displayName,\n\t\t\t};\n\t\t\tif (\n\t\t\t\tselectedEventNames !== undefined &&\n\t\t\t\tselectedEventNames !== null &&\n\t\t\t\tselectedEventNames.indexOf(state.events[i].name) !== -1\n\t\t\t) {\n\t\t\t\tselectedOptions.push(item);\n\t\t\t}\n\t\t\toptions.push(item);\n\t\t}\n\n\t\treturn { options: options, selected: selectedOptions };\n\t})"
            },
            {
                "name": "selectEventsState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectCommonState, (state: CommonStateModel) => state.eventsState)"
            },
            {
                "name": "selectFirebaseAuthentications",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectAll, authentications =>\n\tauthentications.filter(a => a.type == AuthenticationType.FIREBASE)\n)"
            },
            {
                "name": "selectFlow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.SELECT_FLOW, props<{ flowId: UUID }>())"
            },
            {
                "name": "selectFlow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(flowId: UUID) =>\r\n\tcreateSelector(selectFlowsState, (state: FlowsState): Flow | undefined => {\r\n\t\treturn state.flows.find(f => f.id === flowId);\r\n\t})"
            },
            {
                "name": "selectFlowItemDetails",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(flowItem: FlowItem) =>\r\n\tcreateSelector(selectAllFlowItemsDetails, (state: FlowItemsDetailsState) => {\r\n\t\tconst triggerItemDetails = state.triggerFlowItemsDetails.find(t => t.type === flowItem.type);\r\n\t\tif (triggerItemDetails) {\r\n\t\t\treturn triggerItemDetails;\r\n\t\t}\r\n\t\tconst remoteFlowItemDetails = [...state.connectorsFlowItemsDetails, ...state.userCollectionsFlowItemsDetails].find(\r\n\t\t\tr => r.extra?.pieceVersionId === flowItem.settings.pieceVersionId\r\n\t\t);\r\n\t\tif (remoteFlowItemDetails) {\r\n\t\t\treturn remoteFlowItemDetails;\r\n\t\t}\r\n\t\tlet coreItemDetials;\r\n\t\tif (flowItem.type === ActionType.REMOTE_FLOW) {\r\n\t\t\tcoreItemDetials = state.coreFlowItemsDetails.find(\r\n\t\t\t\tc => c.type === flowItem.type && c.extra?.pieceVersionId === flowItem.settings.pieceVersionId\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\t//Core items might contain remote flows so always have them at the end\r\n\t\t\tcoreItemDetials = state.coreFlowItemsDetails.find(c => c.type === flowItem.type);\r\n\t\t}\r\n\t\tif (!coreItemDetials) {\r\n\t\t\tconsole.warn(`Flow item details for ${flowItem.displayName} are not currently loaded`);\r\n\t\t}\r\n\t\treturn coreItemDetials;\r\n\t})"
            },
            {
                "name": "selectFlowItemDetailsForTriggers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectAllFlowItemsDetails,\r\n\t(state: FlowItemsDetailsState) => {\r\n\t\treturn state.triggerFlowItemsDetails.filter(details => details.type !== TriggerType.EMPTY);\r\n\t}\r\n)"
            },
            {
                "name": "selectFlowItemsDetailsForConnectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectAllFlowItemsDetails,\r\n\t(state: FlowItemsDetailsState) => {\r\n\t\treturn state.connectorsFlowItemsDetails;\r\n\t}\r\n)"
            },
            {
                "name": "selectFlowItemsDetialsForUserCollections",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectAllFlowItemsDetails,\r\n\t(state: FlowItemsDetailsState) => {\r\n\t\treturn state.userCollectionsFlowItemsDetails.filter(details => !details.extra!.old);\r\n\t}\r\n)"
            },
            {
                "name": "selectFlows",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => state.flowsState.flows)"
            },
            {
                "name": "selectFlowsCount",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectFlows, (flows: Flow[]) => flows.length)"
            },
            {
                "name": "selectFlowSelectedId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\treturn state.flowsState.selectedFlowId !== undefined;\r\n})"
            },
            {
                "name": "selectFlowsState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\treturn state.flowsState;\r\n})"
            },
            {
                "name": "selectFlowState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.flowsState.state\r\n)"
            },
            {
                "name": "selectFlowsValidity",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tconst allFlowsValidity = state.flowsState.flows.map(f => f.lastVersion.valid);\r\n\treturn allFlowsValidity.reduce((current, previous) => current && previous, true);\r\n})"
            },
            {
                "name": "selectInstanceRunView",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.viewMode === ViewModeEnum.VIEW_INSTANCE_RUN\r\n)"
            },
            {
                "name": "selectOrganizations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n\tselectCommonState,\n\t(state: CommonStateModel) => state.organizationsState.organizations\n)"
            },
            {
                "name": "selectProject",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/project.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectProjectState, (state: ProjectsState) => {\n\tif (state.selectedIndex === undefined) {\n\t\treturn undefined;\n\t}\n\treturn state.projects[state.selectedIndex];\n})"
            },
            {
                "name": "selectProjectState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/selector/project.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n\tselectCommonState,\n\t(state: CommonStateModel): ProjectsState => state.projectsState\n)"
            },
            {
                "name": "selectReadOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.viewMode !== ViewModeEnum.BUILDING\r\n)"
            },
            {
                "name": "selectRemoteFlowItemDetails",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(collectionVersionId: UUID) =>\r\n\tcreateSelector(selectAllFlowItemsDetails, (state: FlowItemsDetailsState) => {\r\n\t\tconst remoteFlowItemDetails = [\r\n\t\t\t...state.connectorsFlowItemsDetails,\r\n\t\t\t...state.userCollectionsFlowItemsDetails,\r\n\t\t\t...state.coreFlowItemsDetails,\r\n\t\t].find(r => r.extra?.pieceVersionId === collectionVersionId);\r\n\t\treturn remoteFlowItemDetails;\r\n\t})"
            },
            {
                "name": "selectSavingChangeState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) =>\r\n\t\tstate.pieceState.state == PieceStateEnum.SAVING || state.flowsState.state == FlowsStateEnum.SAVING\r\n)"
            },
            {
                "name": "selectSigningKeyAuthentications",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectAll, authentications =>\n\tauthentications.filter(a => a.type == AuthenticationType.SIGNING_KEY)\n)"
            },
            {
                "name": "selectStep",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.SELECT_STEP, props<{ step: FlowItem }>())"
            },
            {
                "name": "selectStepByName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.SELECT_STEP_BY_NAME, props<{ stepName: string }>())"
            },
            {
                "name": "selectTabState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(flowId: UUID) =>\r\n\tcreateSelector(selectFlowsState, (state: FlowsState): TabState => {\r\n\t\treturn state.tabsState[flowId.toString()];\r\n\t})"
            },
            {
                "name": "selectUserDefinedCollectionConfigs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectCurrentCollectionConfigs, configs =>\r\n\tconfigs.filter(c => c.source === ConfigSource.USER)\r\n)"
            },
            {
                "name": "selectUserDefinedFlowConfigs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectCurrentFlowConfigs, configs =>\r\n\tconfigs.filter(c => c.source === ConfigSource.USER)\r\n)"
            },
            {
                "name": "selectViewMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => state.viewMode)"
            },
            {
                "name": "setEnvironments",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/environment.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tEnvironmentActionType.SET_ENVIRONMENTS,\n\tprops<{ environments: ProjectEnvironment[] }>()\n)"
            },
            {
                "name": "setEvents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/events.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(EventActionModeType.SET_EVENTS, props<{ events: EventDefinition[] }>())"
            },
            {
                "name": "setInitial",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowsActionType.SET_INITIAL,\n\tprops<{ flows: Flow[]; run: InstanceRun | undefined }>()\n)"
            },
            {
                "name": "setInitial",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(CollectionActionType.SET_INITIAL, props<{ collection: Collection }>())"
            },
            {
                "name": "setLeftSidebar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowsActionType.SET_LEFT_SIDEBAR,\n\tprops<{ sidebarType: LeftSideBarType; props: any }>()\n)"
            },
            {
                "name": "setOrganizations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/organizations.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tOrganizationsActionType.SET_ORGANIZATIONS,\n\tprops<{ organizations: Organization[] }>()\n)"
            },
            {
                "name": "setProjects",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/common-layout/store/action/project.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ProjectActionType.SET_PROJECTS, props<{ projects: Project[] }>())"
            },
            {
                "name": "setRightSidebar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowsActionType.SET_RIGHT_SIDEBAR,\n\tprops<{ sidebarType: RightSideBarType; props: any }>()\n)"
            },
            {
                "name": "setRun",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(FlowsActionType.SET_RUN, props<{ flowId: UUID; run: InstanceRun }>())"
            },
            {
                "name": "setViewMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/view-mode.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(ViewModeActionType.SET_VIEW_MODE, props<{ viewMode: ViewModeEnum }>())"
            },
            {
                "name": "SingleFlowModifyingState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\tFlowsActionType.DROP_PIECE,\n\tFlowsActionType.UPDATE_CONFIG,\n\tFlowsActionType.ADD_CONFIG,\n\tFlowsActionType.DELETE_CONFIG_SUCCEEDED,\n\tFlowsActionType.CHANGE_NAME,\n\tFlowsActionType.DELETE_STEP,\n\tFlowsActionType.ADD_STEP,\n\tFlowsActionType.REPLACE_TRIGGER,\n\tFlowsActionType.UPDATE_STEP,\n]"
            },
            {
                "name": "SPACE_BETWEEN_ITEM_CONTENT_AND_LINE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "8"
            },
            {
                "name": "stgConnectors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/connectors/stg-connectors.lexicon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[]"
            },
            {
                "name": "SVG_ELEMENT_DEFAULT_HEIGHT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "150"
            },
            {
                "name": "SVG_ELEMENT_DEFAULT_WIDTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "300"
            },
            {
                "name": "updateConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowsActionType.UPDATE_CONFIG,\n\tprops<{ configIndex: number; config: Config }>()\n)"
            },
            {
                "name": "updateConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tCollectionActionType.UPDATE_CONFIG,\n\tprops<{ configIndex: number; config: Config }>()\n)"
            },
            {
                "name": "updateFirebaseProjectId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tAuthenticationActionType.UPDATE_FIREBASE_PROJECT_ID,\n\tprops<{ environmentId: string; projectId: string }>()\n)"
            },
            {
                "name": "updateFirebaseProjectIdFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tAuthenticationActionType.UPDATE_FIREBASE_PROJECT_ID_FAILED,\n\tprops<{ error: any }>()\n)"
            },
            {
                "name": "updateFirebaseProjectIdSuccessful",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tAuthenticationActionType.UPDATE_FIREBASE_PROJECT_ID_SUCCESSFUL,\n\tprops<{ project: ProjectAuthentication }>()\n)"
            },
            {
                "name": "updateSettings",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tCollectionActionType.UPDATE_SETTINGS,\n\tprops<{\n\t\tlogoFile: File | undefined;\n\t\tlogoEncodedUrl: string | undefined;\n\t\tdescription: string;\n\t}>()\n)"
            },
            {
                "name": "updateStep",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n\tFlowsActionType.UPDATE_STEP,\n\tprops<{ stepName: string; newStep: Action | Trigger }>()\n)"
            },
            {
                "name": "VERTICAL_LINE_LENGTH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "number",
                "defaultValue": "48"
            },
            {
                "name": "ViewModeActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/layout/flow-builder/store/action/view-mode.action.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n\tsetViewMode,\n}"
            }
        ],
        "functions": [
            {
                "name": "addArtifactsToFormData",
                "file": "src/app/layout/common-layout/model/helper/artifacts-zipping-helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "zippedFilesAndTheirNames",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formData",
                        "type": "FormData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "zippedFilesAndTheirNames",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formData",
                        "type": "FormData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "checkboxIsTrue",
                "file": "src/app/layout/common-layout/validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ValidatorFn"
            },
            {
                "name": "codenameValidator",
                "file": "src/app/layout/common-layout/validators/codename-validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "containsLowercaseCharacter",
                "file": "src/app/layout/common-layout/validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ValidatorFn"
            },
            {
                "name": "containsNumber",
                "file": "src/app/layout/common-layout/validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ValidatorFn"
            },
            {
                "name": "containsSpecialCharacter",
                "file": "src/app/layout/common-layout/validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ValidatorFn"
            },
            {
                "name": "containsUppercaseCharacter",
                "file": "src/app/layout/common-layout/validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ValidatorFn"
            },
            {
                "name": "cronJobValidator",
                "file": "src/app/layout/common-layout/validators/cronjob-validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "download",
                "file": "src/app/layout/common-layout/helper/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "filename",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "text",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "filename",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "text",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "environmentReducer",
                "file": "src/app/layout/common-layout/store/reducer/environments.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "eventsReducer",
                "file": "src/app/layout/common-layout/store/reducer/events.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "fadeInnimation",
                "file": "src/app/layout/common-layout/animation/fade-in.animations.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "duration",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "duration",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "fadeInUpAnimation",
                "file": "src/app/layout/common-layout/animation/fade-in-up.animation.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "duration",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "duration",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "findDefaultCollectionName",
                "file": "src/app/layout/common-layout/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "collections",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "collections",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "findDefaultFlowDisplayName",
                "file": "src/app/layout/common-layout/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "flows",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "flows",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "findRefreshedConfig",
                "file": "src/app/layout/flow-builder/store/effect/helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "allConfigs",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "configToDelete",
                        "type": "Config",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "allConfigs",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "configToDelete",
                        "type": "Config",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "flowsReducer",
                "file": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getDefaultDisplayNameForPiece",
                "file": "src/app/layout/common-layout/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "pieceType",
                        "type": "ActionType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "pieceName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "pieceType",
                        "type": "ActionType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "pieceName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getDisplayNameForTrigger",
                "file": "src/app/layout/common-layout/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "triggerType",
                        "type": "TriggerType",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "triggerType",
                        "type": "TriggerType",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isOfTypeTriggerType",
                "file": "src/app/layout/common-layout/utils.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "jsonValidator",
                "file": "src/app/layout/common-layout/validators/json-validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ValidationErrors | null",
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "AbstractControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "logrocketMiddleware",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "reducer",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ActionReducer<any, any>",
                "jsdoctags": [
                    {
                        "name": "reducer",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "organizationReducer",
                "file": "src/app/layout/common-layout/store/reducer/organization.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "phoneNumberValidation",
                "file": "src/app/layout/common-layout/validators.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ValidatorFn"
            },
            {
                "name": "pieceReducer",
                "file": "src/app/layout/flow-builder/store/reducer/piece.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "projectReducer",
                "file": "src/app/layout/common-layout/store/reducer/project.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "rollbarFactory",
                "file": "src/app/rollbar.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "tokenGetter",
                "file": "src/app/layout/common-layout/helper/helpers.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "viewModeReducer",
                "file": "src/app/layout/flow-builder/store/reducer/view-mode.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "ViewModeEnum",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "ViewModeEnum",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "zipAllArtifacts",
                "file": "src/app/layout/common-layout/model/helper/artifacts-zipping-helper.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "artifactsAndNamesInFormData",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "artifactsAndNamesInFormData",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "ApiKeysState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/layout/dashboard-layout/store/reducer/api-keys.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ArtifactAndItsNameInFormData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/layout/common-layout/model/helper/artifacts-zipping-helper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ArtifactCacheResult",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/layout/flow-builder/service/code.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ArtifactsCache",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Map<string | ArtifactCacheResult>",
                "file": "src/app/layout/flow-builder/service/code.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "AuthenticationState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/layout/dashboard-layout/store/reducer/authentication.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "CollectionConfigsFormOutput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/layout/common-layout/components/deploy-modal/deploy-modal.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ConfigKey",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/layout/common-layout/components/configs-form/configs-form.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "ConfigKey",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/remote-flow-input-form/remote-flow-input-form.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "ConfigsAndTheirValues",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ConfigsAndTheirValues",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/remote-flow-input-form/remote-flow-input-form.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "FlowId",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/layout/flow-builder/store/model/flows-state.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "FlowsState",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "InputFormsSchema",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "LoopStepInputFormSchema | ResponseStepInputFormSchema | StoragreStepInputFormSchema | CodeStepInputFormSchema | ScheduledTriggerInputFormSchema | EventTriggerInputFormSchema | RemoteFlowInputFormSchema",
                "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "NpmPkg",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/layout/flow-builder/service/code.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "PackageName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/layout/flow-builder/service/code.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "PackageName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/code-artifact-control-fullscreen.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "PackageName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/add-npm-package-modal/add-npm-package-modal.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "PackageVersion",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/layout/flow-builder/service/code.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "PackageVersion",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/code-artifact-control-fullscreen.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "PackageVersion",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "string",
                "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/add-npm-package-modal/add-npm-package-modal.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 149
            },
            {
                "name": "StoryType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            }
        ],
        "enumerations": [
            {
                "name": "ActionStatus",
                "childs": [
                    {
                        "name": "SUCCEEDED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SUCCEEDED"
                    },
                    {
                        "name": "FAILED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "FAILED"
                    },
                    {
                        "name": "RUNNING",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "RUNNING"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/action-status.ts"
            },
            {
                "name": "ActionType",
                "childs": [
                    {
                        "name": "BRANCH",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "BRANCH"
                    },
                    {
                        "name": "CODE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CODE"
                    },
                    {
                        "name": "STORAGE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "STORAGE"
                    },
                    {
                        "name": "LOCAL_FLOW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LOCAL_FLOW"
                    },
                    {
                        "name": "REMOTE_FLOW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "REMOTE_FLOW"
                    },
                    {
                        "name": "RESPONSE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "RESPONSE"
                    },
                    {
                        "name": "LOOP_ON_ITEMS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LOOP_ON_ITEMS"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/action-type.enum.ts"
            },
            {
                "name": "AddButtonType",
                "childs": [
                    {
                        "name": "NEXT_ACTION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NEXT_ACTION"
                    },
                    {
                        "name": "FIRST_LOOP_ACTION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "FIRST_LOOP_ACTION"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/add-button-type.ts"
            },
            {
                "name": "ApiKeysActionType",
                "childs": [
                    {
                        "name": "LOAD_API_KEYS_STARTED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[API_KEYS] LOAD_API_KEYS_STARTED"
                    },
                    {
                        "name": "LOAD_API_KEYS_FINISHED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[API_KEYS] LOAD_API_KEYS_FINISHED"
                    },
                    {
                        "name": "CREATE_API_KEY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[API_KEYS] CREATE_API_KES "
                    },
                    {
                        "name": "CREATE_API_KEY_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[API_KEYS] CREATE_API_KEY_SUCCESS "
                    },
                    {
                        "name": "CREATE_API_KEY_FAILED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[API_KEYS] CREATE_API_KEY_FAILED"
                    },
                    {
                        "name": "DELETE_API_KEY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[API_KEYS] DELETE_API_KEY"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts"
            },
            {
                "name": "ArtifactCachKeyPrefix",
                "childs": [
                    {
                        "name": "FLOW_CONFIG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "flow.config"
                    },
                    {
                        "name": "COLLECTION_CONFIG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "collection.config"
                    },
                    {
                        "name": "STEP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "flow.step"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/flow-builder/service/artifact-cache-key.ts"
            },
            {
                "name": "AuthenticationActionType",
                "childs": [
                    {
                        "name": "CLEAR_STAGING_KEY_CREDENTIALS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTHENTICATION] CLEAR_STAGING_KEY_CREDENTIALS "
                    },
                    {
                        "name": "GENERATE_STAGING_KEY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTHENTICATION] GENERATE_STAGING_KEY"
                    },
                    {
                        "name": "UPDATE_FIREBASE_PROJECT_ID",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTHENTICATION] UPDATE_FIREBASE_PROJECT_ID"
                    },
                    {
                        "name": "FETCH_AUTHENTICATION_SUCCESSFUL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTHENTICATION] FETCH_SUCCESSFUL"
                    },
                    {
                        "name": "GENERATE_STAGING_KEY_SUCCESSFUL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTHENTICATION] GENERATE_STAGING_KEY_SUCCESSFUL"
                    },
                    {
                        "name": "UPDATE_FIREBASE_PROJECT_ID_SUCCESSFUL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTHENTICATION] UPDATE_FIREBASE_PROJECT_ID_SUCCESSFUL"
                    },
                    {
                        "name": "GENERATE_STAGING_KEY_FAILED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTHENTICATION] GENERATE_STAGING_KEY_FAILED"
                    },
                    {
                        "name": "UPDATE_FIREBASE_PROJECT_ID_FAILED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[AUTHENTICATION] UPDATE_FIREBASE_PROJECT_ID_FAILEd"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts"
            },
            {
                "name": "AuthenticationType",
                "childs": [
                    {
                        "name": "FIREBASE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "FIREBASE"
                    },
                    {
                        "name": "SIGNING_KEY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SIGNING_KEY"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/helper/authentication-type.enum.ts"
            },
            {
                "name": "BuilderActionType",
                "childs": [
                    {
                        "name": "LOAD_INITIAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[BUILDER] LOAD_INITIAL"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/flow-builder/store/action/builder.action.ts"
            },
            {
                "name": "ChevronDropdownOptionType",
                "childs": [
                    {
                        "name": "NORMAL",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SEPARATOR",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "COPY_ID",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/flow-builder/components/chevron-dropdown-menu/chevron-dropdown-option.ts"
            },
            {
                "name": "CollectionActionType",
                "childs": [
                    {
                        "name": "CHANGE_NAME",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] CHANGE_NAME"
                    },
                    {
                        "name": "SET_INITIAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] SET_INITIAL"
                    },
                    {
                        "name": "UPDATE_CONFIG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] UPDATE_CONFIG"
                    },
                    {
                        "name": "ADD_CONFIG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] ADD_CONFIG"
                    },
                    {
                        "name": "DELETE_CONFIG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] DELETE_CONFIG"
                    },
                    {
                        "name": "DELETE_CONFIG_FAILED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] DELETE_CONFIG_FAILED"
                    },
                    {
                        "name": "DELETE_CONFIG_SUCCEEDED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] DELETE_CONFIG_SUCCEEDED"
                    },
                    {
                        "name": "UPDATE_SETTINGS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] UPDATE_SETTINGS"
                    },
                    {
                        "name": "PIECE_SAVED_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] SAVED_SUCCESS"
                    },
                    {
                        "name": "PIECE_SAVED_FAILED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] SAVED_FAILED"
                    },
                    {
                        "name": "PUBLISH_COLLECTION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] PUBLISH_COLLECTION"
                    },
                    {
                        "name": "PUBLISH_COLLECTION_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] PUBLISH_COLLECTION_SUCCESS"
                    },
                    {
                        "name": "PUBLISH_COLLECTION_FAILED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PIECE] PUBLISH_COLLECTION_FAILED"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/flow-builder/store/action/piece.action.ts"
            },
            {
                "name": "CommonActionType",
                "childs": [
                    {
                        "name": "LOAD_INITIAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[APP_STATE] LOAD_INITIAL"
                    },
                    {
                        "name": "CLEAR_STATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[APP_STATE] CLEAR_STATE"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/store/action/common.action.ts"
            },
            {
                "name": "ConfigScope",
                "childs": [
                    {
                        "name": "COLLECTION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "COLLECTION"
                    },
                    {
                        "name": "FLOW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "FLOW"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/config-scope-type.enum.ts"
            },
            {
                "name": "ConfigSource",
                "childs": [
                    {
                        "name": "USER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "USER"
                    },
                    {
                        "name": "PREDEFINED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PREDEFINED"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/config-source.ts"
            },
            {
                "name": "ConfigType",
                "childs": [
                    {
                        "name": "SHORT_TEXT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SHORT_TEXT"
                    },
                    {
                        "name": "LONG_TEXT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LONG_TEXT"
                    },
                    {
                        "name": "EMAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "EMAIL"
                    },
                    {
                        "name": "NUMBER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NUMBER"
                    },
                    {
                        "name": "INTEGER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "INTEGER"
                    },
                    {
                        "name": "DICTIONARY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DICTIONARY"
                    },
                    {
                        "name": "OAUTH2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "OAUTH2"
                    },
                    {
                        "name": "DROPDOWN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DROPDOWN"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/config-type.ts"
            },
            {
                "name": "ConfigType",
                "childs": [
                    {
                        "name": "SHORT_TEXT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SHORT_TEXT"
                    },
                    {
                        "name": "LONG_TEXT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LONG_TEXT"
                    },
                    {
                        "name": "EMAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "EMAIL"
                    },
                    {
                        "name": "NUMBER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NUMBER"
                    },
                    {
                        "name": "INTEGER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "INTEGER"
                    },
                    {
                        "name": "DICTIONARY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DICTIONARY"
                    },
                    {
                        "name": "OAUTH2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "OAUTH2"
                    },
                    {
                        "name": "DROPDOWN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DROPDOWN"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/config.enum.ts"
            },
            {
                "name": "ControlType",
                "childs": [
                    {
                        "name": "SHORT_TEXT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "LONG_TEXT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "DROPDOWN",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "MULTI_DROPDOWN",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "KEY_VALUE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "INTEGER",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "EMBEDDED_CODE_EDITOR",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "OAUTH2_LOGIN",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "OAUTH2_SELECT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CRON_EXPRESSION",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SELECT_EVENT",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "DOCUMENTATION_LINK",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/dynamic-controls/control-type.enum.ts"
            },
            {
                "name": "DeployModalStep",
                "childs": [
                    {
                        "name": "SELECT_ENVIRONMENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    },
                    {
                        "name": "COLLECTION_CONFIGS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 2
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/deploy-modal-step.enum.ts"
            },
            {
                "name": "DropdownType",
                "childs": [
                    {
                        "name": "STATIC",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "STATIC"
                    },
                    {
                        "name": "DYNAMIC",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DYNAMIC"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/config.enum.ts"
            },
            {
                "name": "EnvironmentActionType",
                "childs": [
                    {
                        "name": "SET_ENVIRONMENTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[ENVIRONMENT] SET_ENVIRONMENTS"
                    },
                    {
                        "name": "ADD_ENVIRONMENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[ENVIRONMENT] ADD_ENVIRONMENT"
                    },
                    {
                        "name": "CLEAR_ENVIRONMENTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[ENVIRONMENT] CLEAR_ENVIRONMENTS"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/store/action/environment.action.ts"
            },
            {
                "name": "ErrorCode",
                "childs": [
                    {
                        "name": "USER_TRIAL_EXPIRED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "USER_TRIAL_EXPIRED"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/model/error-message.ts"
            },
            {
                "name": "EventActionModeType",
                "childs": [
                    {
                        "name": "SET_EVENTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[EVENT] SET_EVENTS"
                    },
                    {
                        "name": "ADD_EVENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[EVENT] ADD_EVENT"
                    },
                    {
                        "name": "CLEAR_EVENTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[EVENT] CLEAR_EVENTS"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/store/action/events.action.ts"
            },
            {
                "name": "FlowItemDetailsActionType",
                "childs": [
                    {
                        "name": "CLEAR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOW_ITEMS_DETAILS] CLEAR"
                    },
                    {
                        "name": "LOAD",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOW_ITEMS_DETAILS] LOAD"
                    },
                    {
                        "name": "LOADED_SUCCESSFULLY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOW_ITEMS_DETAILS] LOADED_SUCCESSFULLY"
                    },
                    {
                        "name": "LOAD_OLD_REMOTE_FLOW_ITEM_DETAILS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOW_ITEMS_DETAILS]  LOAD_OLD_REMOTE_FLOW_ITEM_DETAILS"
                    },
                    {
                        "name": "OLD_REMOTE_FLOW_ITEM_DETAILS_LOADED_SUCESSFULLY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOW_ITEMS_DETAILS]  LOAD_OLD_REMOTE_FLOW_ITEM_DETAILS_LOADED_SUCCESSFULLY"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts"
            },
            {
                "name": "FlowItemTypeEnum",
                "childs": [
                    {
                        "name": "SIMPLE_ITEM",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "BRANCH_ITEM",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/flow-item-type.enum.ts"
            },
            {
                "name": "FlowsActionType",
                "childs": [
                    {
                        "name": "SET_INITIAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] SET_INITIAL"
                    },
                    {
                        "name": "DELETE_FLOW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] DELETE_FLOW"
                    },
                    {
                        "name": "ADD_FLOW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] ADD_FLOW"
                    },
                    {
                        "name": "UPDATE_CONFIG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] UPDATE_CONFIG"
                    },
                    {
                        "name": "ADD_CONFIG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] ADD_CONFIG"
                    },
                    {
                        "name": "CHANGE_NAME",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] CHANGE_NAME"
                    },
                    {
                        "name": "DELETE_CONFIG",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] DELETE_CONFIG"
                    },
                    {
                        "name": "DELETE_CONFIG_SUCCEEDED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] DELETE_CONFIG_SUCCEEDED"
                    },
                    {
                        "name": "DELETE_CONFIG_FAILED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] DELETE_CONFIG_FAILED"
                    },
                    {
                        "name": "SAVED_FAILED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] SAVED_FAILED"
                    },
                    {
                        "name": "SAVED_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] SAVED_SUCCESS"
                    },
                    {
                        "name": "SELECT_FLOW",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] SELECT_FLOW"
                    },
                    {
                        "name": "DELETE_STEP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] DELETE_STEP"
                    },
                    {
                        "name": "UPDATE_STEP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] UPDATE_STEP"
                    },
                    {
                        "name": "SAVE_FLOW_STARTED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] SAVE_FLOW_STARTED"
                    },
                    {
                        "name": "DELETE_FLOW_STARTED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] DELETE_FLOW_STARTED"
                    },
                    {
                        "name": "ADD_STEP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] ADD_STEP"
                    },
                    {
                        "name": "REPLACE_TRIGGER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] REPLACE_TRIGGER"
                    },
                    {
                        "name": "DROP_PIECE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] DROP_PIECE"
                    },
                    {
                        "name": "SET_LEFT_SIDEBAR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] SET_LEFT_SIDEBAR"
                    },
                    {
                        "name": "SET_RIGHT_SIDEBAR",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] SET_RIGHT_BAR"
                    },
                    {
                        "name": "SELECT_STEP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] SELECT_STEP"
                    },
                    {
                        "name": "DESELECT_STEP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] DESELECT_STEP"
                    },
                    {
                        "name": "SET_RUN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] SET_RUN"
                    },
                    {
                        "name": "EXIT_RUN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] EXIT_RUN"
                    },
                    {
                        "name": "SELECT_STEP_BY_NAME",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] SELECT_STEP_BY_NAME"
                    },
                    {
                        "name": "DELETE_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[FLOWS] DELETE_SUCCESS"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/flow-builder/store/action/flows.action.ts"
            },
            {
                "name": "FlowsStateEnum",
                "childs": [
                    {
                        "name": "INITIALIZED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SAVING",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SAVED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "FAILED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/flow-builder/store/model/enums/flows-state.enum.ts"
            },
            {
                "name": "InstanceRunStatus",
                "childs": [
                    {
                        "name": "SUCCEEDED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SUCCEEDED"
                    },
                    {
                        "name": "RUNNING",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "RUNNING"
                    },
                    {
                        "name": "FAILED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "FAILED"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/instance-run-status.ts"
            },
            {
                "name": "InstanceStatus",
                "childs": [
                    {
                        "name": "PAUSED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PAUSED"
                    },
                    {
                        "name": "RUNNING",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "RUNNING"
                    },
                    {
                        "name": "ARCHIVED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ARCHIVED"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/instance-status.ts"
            },
            {
                "name": "LeftSideBarType",
                "childs": [
                    {
                        "name": "SHOW_RUN",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CONFIGS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "PIECE_SETTINGS",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "NONE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/left-side-bar-type.enum.ts"
            },
            {
                "name": "Oauth2UserInputType",
                "childs": [
                    {
                        "name": "LOGIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LOGIN"
                    },
                    {
                        "name": "APP_DETAILS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "APP_DETAILS"
                    },
                    {
                        "name": "EVERYTHING",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "EVERYTHING"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/fields/variable/subfields/oauth2-user-input.type.ts"
            },
            {
                "name": "OnboardingTechnicalLevelEnum",
                "childs": [
                    {
                        "name": "NOT_DEVELOPER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NOT_DEVELOPER"
                    },
                    {
                        "name": "STIlL_LEARNING",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "STIlL_LEARNING"
                    },
                    {
                        "name": "LOW_CODE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LOW_CODE"
                    },
                    {
                        "name": "BEGINNER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "BEGINNER"
                    },
                    {
                        "name": "INTERMEDIATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "INTERMEDIATE"
                    },
                    {
                        "name": "EXPERT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "EXPERT"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/onboarding-technical-level.enum.ts"
            },
            {
                "name": "OnboardingUsecasesEnum",
                "childs": [
                    {
                        "name": "LOAD_DATA_INTO_WAREHOUSE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LOAD_DATA_INTO_WAREHOUSE"
                    },
                    {
                        "name": "SEND_DATA_INT_DIFFERENT_TOOLS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SEND_DATA_INT_DIFFERENT_TOOLS"
                    },
                    {
                        "name": "COLLECT_USER_DATA",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "COLLECT_USER_DATA"
                    },
                    {
                        "name": "AUTOMATE_MANUAL_WORK",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "AUTOMATE_MANUAL_WORK"
                    },
                    {
                        "name": "INTEGRATE_DIFFERENT_TOOL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "INTEGRATE_DIFFERENT_TOOL"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/onboarding-usecases.enum.ts"
            },
            {
                "name": "OnboardingUserRoleEnum",
                "childs": [
                    {
                        "name": "DEVELOPER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DEVELOPER"
                    },
                    {
                        "name": "MARKETING_MANAGER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "MARKETING_MANAGER"
                    },
                    {
                        "name": "PRODUCT_MANAGER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PRODUCT_MANAGER"
                    },
                    {
                        "name": "QUALITY_ENGINEER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "QUALITY_ENGINEER"
                    },
                    {
                        "name": "OTHER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "OTHER"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/onboarding-user-role.enum.ts"
            },
            {
                "name": "OrganizationsActionType",
                "childs": [
                    {
                        "name": "SET_ORGANIZATIONS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[ORGANIZATION] SET_ORGANIZATIONS"
                    },
                    {
                        "name": "CLEAR_ORGANIZATIONS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[ORGANIZATION] CLEAR_ORGANIZATIONS"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/store/action/organizations.action.ts"
            },
            {
                "name": "OrganizationSize",
                "childs": [
                    {
                        "name": "PERSONAL_USE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PERSONAL_USE"
                    },
                    {
                        "name": "SIZE_1_TO_5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SIZE_1_TO_5"
                    },
                    {
                        "name": "SIZE_5_TO_10",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SIZE_5_TO_10"
                    },
                    {
                        "name": "SIZE_10_TO_50",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SIZE_10_TO_50"
                    },
                    {
                        "name": "SIZE_50_TO_100",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SIZE_50_TO_100"
                    },
                    {
                        "name": "MORE_THAN_100",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "MORE_THAN_100"
                    },
                    {
                        "name": "UNKNOWN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "UNKNOWN"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/organization-size.ts"
            },
            {
                "name": "PieceAccess",
                "childs": [
                    {
                        "name": "PUBLIC",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PUBLIC"
                    },
                    {
                        "name": "PRIVATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PRIVATE"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/piece-access.ts"
            },
            {
                "name": "PieceStateEnum",
                "childs": [
                    {
                        "name": "INITIALIZED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SAVING",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SAVED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "FAILED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/flow-builder/store/model/enums/piece-state.enum.ts"
            },
            {
                "name": "ProjectActionType",
                "childs": [
                    {
                        "name": "CLEAR_PROJECTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PROJECT] CLEAR_PROJECTS"
                    },
                    {
                        "name": "SET_PROJECTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[PROJECT] SET_PROJECTS"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/store/action/project.action.ts"
            },
            {
                "name": "RightSideBarType",
                "childs": [
                    {
                        "name": "COLLECTION_VERSIONS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "COLLECTION_VERSIONS"
                    },
                    {
                        "name": "FLOW_VERSIONS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "FLOW_VERSIONS"
                    },
                    {
                        "name": "STEP_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "STEP_TYPE"
                    },
                    {
                        "name": "TRIGGER_TYPE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "TRIGGER_TYPE"
                    },
                    {
                        "name": "EDIT_STEP",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "EDIT_STEP"
                    },
                    {
                        "name": "NONE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "NONE"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/right-side-bar-type.enum.ts"
            },
            {
                "name": "SaveState",
                "childs": [
                    {
                        "name": "INITIALIZED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SAVING",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "FAILED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SAVED",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/flow-builder/store/model/enums/save-state.enum.ts"
            },
            {
                "name": "SelectedFileInFullscreenCodeEditor",
                "childs": [
                    {
                        "name": "CONTENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CONTENT"
                    },
                    {
                        "name": "PACKAGE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PACKAGE"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/selected-file-in-fullscreeen-code-editor.enum.ts"
            },
            {
                "name": "SelectedTabInFullscreenCodeEditor",
                "childs": [
                    {
                        "name": "OUTPUT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "OUTPUT"
                    },
                    {
                        "name": "CONSOLE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "CONSOLE"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/selected-tab-in-fullscreen-code-editor.enum.ts"
            },
            {
                "name": "StorageOperation",
                "childs": [
                    {
                        "name": "GET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "GET"
                    },
                    {
                        "name": "PUT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PUT"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum.ts"
            },
            {
                "name": "StorageScope",
                "childs": [
                    {
                        "name": "INSTANCE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "INSTANCE"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum.ts"
            },
            {
                "name": "TriggerType",
                "childs": [
                    {
                        "name": "SCHEDULE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SCHEDULE"
                    },
                    {
                        "name": "EVENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "EVENT"
                    },
                    {
                        "name": "MANUAL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "MANUAL"
                    },
                    {
                        "name": "EMPTY",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "EMPTY"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/trigger-type.enum.ts"
            },
            {
                "name": "UserStatus",
                "childs": [
                    {
                        "name": "VERIFIED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "VERIFIED"
                    },
                    {
                        "name": "UNVERIFIED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "UNVERIFIED"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/user-status.enum.ts"
            },
            {
                "name": "VersionEditState",
                "childs": [
                    {
                        "name": "DRAFT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DRAFT"
                    },
                    {
                        "name": "LOCKED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "LOCKED"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/version-edit-state.enum.ts"
            },
            {
                "name": "ViewModeActionType",
                "childs": [
                    {
                        "name": "SET_VIEW_MODE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[VIEW_MODE] SET_VIEW_MODE"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/flow-builder/store/action/view-mode.action.ts"
            },
            {
                "name": "ViewModeEnum",
                "childs": [
                    {
                        "name": "BUILDING",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "BUILDING"
                    },
                    {
                        "name": "VIEW_INSTANCE_RUN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "VIEW_INSTANCE_RUN"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/flow-builder/store/model/enums/view-mode.enum.ts"
            },
            {
                "name": "WorkflowState",
                "childs": [
                    {
                        "name": "ENABLED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "ENABLED"
                    },
                    {
                        "name": "DISABLED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DISABLED"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/layout/common-layout/model/enum/workflow-state.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/app/layout/common-layout/store/reducer/environments.reducer.ts": [
                {
                    "name": "_environmentReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/reducer/environments.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n\tinitialState,\n\ton(EnvironmentActions.setEnvironments, (state, { environments }): EnvironmentsState => {\n\t\treturn { loaded: true, environments: environments };\n\t}),\n\ton(EnvironmentActions.clearEnvironments, (state, {}): EnvironmentsState => {\n\t\treturn { loaded: false, environments: [] };\n\t}),\n\ton(EnvironmentActions.addEnvironment, (state, { environment }): EnvironmentsState => {\n\t\tlet clonedState: EnvironmentsState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.environments.push(environment);\n\t\treturn { loaded: true, environments: clonedState.environments };\n\t}),\n\ton(PieceAction.publishCollectionSuccess, (state, { environmentIds, collection }): EnvironmentsState => {\n\t\tlet environments: ProjectEnvironment[] = JSON.parse(JSON.stringify(state.environments));\n\t\tenvironmentIds.forEach(environmentId => {\n\t\t\tlet environment: ProjectEnvironment | undefined = environments.find(env => env.id === environmentId);\n\t\t\tif (environment !== undefined) {\n\t\t\t\tenvironment.deployedCollections = environment.deployedCollections.filter(\n\t\t\t\t\tdc => dc.collectionId !== collection.id\n\t\t\t\t);\n\t\t\t\tenvironment.deployedCollections.push({\n\t\t\t\t\tcollectionId: collection.id,\n\t\t\t\t\tcollectionVersionsId: [collection.lastVersion.id],\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn { loaded: true, environments: environments };\n\t})\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/reducer/environments.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EnvironmentsState",
                    "defaultValue": "{\n\tloaded: false,\n\tenvironments: [],\n}"
                }
            ],
            "src/app/layout/common-layout/store/reducer/events.reducer.ts": [
                {
                    "name": "_eventsReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/reducer/events.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n\tinitialState,\n\ton(EventActions.addEvent, (state, { eventDefinition }): EventsState => {\n\t\tlet clonedState: EventsState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.events.push(eventDefinition);\n\t\treturn clonedState;\n\t}),\n\ton(EventActions.setEvents, (state, { events }): EventsState => {\n\t\tlet clonedState: EventsState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.events = events;\n\t\tclonedState.loaded = true;\n\t\treturn { ...clonedState };\n\t}),\n\ton(EventActions.clearEvents, (state, {}): EventsState => {\n\t\treturn { loaded: false, events: [] };\n\t})\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/reducer/events.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventsState",
                    "defaultValue": "{\n\tloaded: false,\n\tevents: [],\n}"
                }
            ],
            "src/app/layout/flow-builder/store/reducer/flows.reducer.ts": [
                {
                    "name": "_flowsReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n\tinitialState,\n\ton(FlowsActions.setInitial, (state, { flows, run }): FlowsState => {\n\t\tlet clonedFlows: Flow[] = JSON.parse(JSON.stringify(flows));\n\t\tlet selectedFlowId: UUID | null = null;\n\t\tif (clonedFlows.length > 0) {\n\t\t\tselectedFlowId = clonedFlows[0].id;\n\t\t}\n\t\tlet tabsState = {};\n\t\tclonedFlows.forEach(f => {\n\t\t\ttabsState[f.id.toString()] = JSON.parse(JSON.stringify(initialTabState));\n\t\t});\n\t\tif (run !== undefined && run !== null) {\n\t\t\ttabsState[flows[0].id.toString()].selectedRun = run;\n\t\t}\n\t\treturn {\n\t\t\tflows: clonedFlows,\n\t\t\tlastSaveId: UUID.UUID(),\n\t\t\tstate: FlowsStateEnum.INITIALIZED,\n\t\t\ttabsState: tabsState,\n\t\t\tselectedFlowId: selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.selectFlow, (state, { flowId }): FlowsState => {\n\t\treturn { ...state, selectedFlowId: flowId };\n\t}),\n\ton(FlowsActions.deleteConfigSucceeded, (state, { configIndex }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion.configs.splice(configIndex, 1);\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.updateConfig, (state, { configIndex, config }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion.configs[configIndex] = config;\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.replaceTrigger, (state, { newTrigger }): FlowsState => {\n\t\tif (state.selectedFlowId === null) {\n\t\t\tthrow new Error('Selected flow id is null');\n\t\t}\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion = FlowVersion.clone(clonedFlows[flowIndex].lastVersion).replaceTrigger(\n\t\t\t\tnewTrigger\n\t\t\t);\n\t\t}\n\t\tclonedState.tabsState[state.selectedFlowId.toString()].focusedStep = newTrigger;\n\t\treturn {\n\t\t\t...state,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.dropPiece, (state, { draggedPieceName, newParentName }): FlowsState => {\n\t\tlet clonedFlows: Flow[] = JSON.parse(JSON.stringify(state)).flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion = FlowVersion.clone(clonedFlows[flowIndex].lastVersion);\n\t\t\tclonedFlows[flowIndex].lastVersion.dropPiece(draggedPieceName, newParentName);\n\t\t}\n\t\tclonedFlows[flowIndex].lastVersion.valid = false;\n\t\treturn {\n\t\t\t...state,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.addStep, (state, { newAction }): FlowsState => {\n\t\tif (state.selectedFlowId === null) {\n\t\t\tthrow new Error('Selected flow id is null');\n\t\t}\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tlet tabeState = state.tabsState[state.selectedFlowId.toString()];\n\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion = FlowVersion.clone(clonedFlows[flowIndex].lastVersion).addNewChild(\n\t\t\t\ttabeState.rightSidebar.props.stepName,\n\t\t\t\tnewAction,\n\t\t\t\ttabeState.rightSidebar.props.buttonType\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.updateStep, (state, { stepName, newStep }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion = FlowVersion.clone(clonedFlows[flowIndex].lastVersion).updateStep(\n\t\t\t\tstepName,\n\t\t\t\tnewStep\n\t\t\t);\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\ttabsState: clonedState.tabsState,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.deleteStep, (state, { stepName }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion = FlowVersion.clone(clonedFlows[flowIndex].lastVersion).deleteStep(stepName);\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\ttabsState: clonedState.tabsState,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.addConfig, (state, { config }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === state.selectedFlowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion.configs.push(config);\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\ttabsState: clonedState.tabsState,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.changeName, (state, { flowId, displayName }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet clonedFlows = clonedState.flows;\n\t\tlet flowIndex = clonedFlows.findIndex(f => f.id === flowId);\n\t\tif (flowIndex != -1) {\n\t\t\tclonedFlows[flowIndex].lastVersion.displayName = displayName;\n\t\t}\n\t\treturn {\n\t\t\t...state,\n\t\t\ttabsState: clonedState.tabsState,\n\t\t\tflows: clonedFlows,\n\t\t\tselectedFlowId: state.selectedFlowId,\n\t\t};\n\t}),\n\ton(FlowsActions.deleteFlow, (state, { flowId }: { flowId: UUID }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet index = clonedState.flows.findIndex(f => f.id == flowId);\n\t\tif (index != -1) {\n\t\t\tclonedState.flows.splice(index, 1);\n\t\t}\n\t\tlet deletedFlowHasNext: boolean = index < clonedState.flows.length;\n\t\tif (deletedFlowHasNext) {\n\t\t\tclonedState.selectedFlowId = clonedState.flows[index].id;\n\t\t} else {\n\t\t\tlet notEmpty: boolean = clonedState.flows.length > 0;\n\t\t\tif (notEmpty) {\n\t\t\t\tclonedState.selectedFlowId = clonedState.flows[clonedState.flows.length - 1].id;\n\t\t\t} else {\n\t\t\t\tclonedState.selectedFlowId = null;\n\t\t\t}\n\t\t}\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.addFlow, (state, { flow }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.flows.push(flow);\n\t\tclonedState.selectedFlowId = flow.id;\n\t\tclonedState.tabsState[clonedState.selectedFlowId.toString()] = JSON.parse(JSON.stringify(initialTabState));\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.deleteSuccess, (state, { saveId }): FlowsState => {\n\t\treturn { ...state, state: state.lastSaveId === saveId ? FlowsStateEnum.SAVED : FlowsStateEnum.SAVING };\n\t}),\n\ton(FlowsActions.savedSuccess, (state, { saveId, flow }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\t//in case a new version was created after the former one was locked.\n\t\tconst flowSaved = clonedState.flows.find(f => f.id == flow.id)!;\n\t\tflowSaved.lastVersion.id = flow.lastVersion.id;\n\t\tflowSaved.lastVersion.state = flow.lastVersion.state;\n\t\treturn { ...clonedState, state: state.lastSaveId === saveId ? FlowsStateEnum.SAVED : FlowsStateEnum.SAVING };\n\t}),\n\ton(FlowsActions.saveFlowStarted, (state, { flow, saveId }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\treturn { ...clonedState, state: FlowsStateEnum.SAVING, lastSaveId: saveId };\n\t}),\n\ton(FlowsActions.deleteFlowStarted, (state, { flowId, saveId }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\treturn { ...clonedState, state: FlowsStateEnum.SAVING, lastSaveId: saveId };\n\t}),\n\ton(FlowsActions.savedFailed, (state, {}): FlowsState => {\n\t\treturn { ...state, state: FlowsStateEnum.FAILED };\n\t}),\n\ton(FlowsActions.setLeftSidebar, (state, { sidebarType, props }): FlowsState => {\n\t\tif (state.selectedFlowId === null) {\n\t\t\tthrow new Error('Flow id is not selected');\n\t\t}\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet tabState: TabState = clonedState.tabsState[state.selectedFlowId.toString()];\n\t\ttabState.leftSidebar = {\n\t\t\ttype: sidebarType,\n\t\t\tprops: props,\n\t\t};\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.setRun, (state, { flowId, run }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet tabState: TabState = clonedState.tabsState[flowId.toString()];\n\t\ttabState.selectedRun = run;\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.exitRun, (state, { flowId }): FlowsState => {\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet tabState: TabState = clonedState.tabsState[flowId.toString()];\n\t\ttabState.selectedRun = undefined;\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.selectStep, (state, { step }): FlowsState => {\n\t\tif (state.selectedFlowId === undefined || state.selectedFlowId === null) {\n\t\t\tthrow new Error('Flow id is not selected');\n\t\t}\n\n\t\tconst clonedState = { ...state };\n\t\tconst updatedTabState = {\n\t\t\t...clonedState.tabsState[state.selectedFlowId.toString()],\n\t\t\tfocusedStep: { ...step },\n\t\t};\n\t\tconst updatedTabStateWrapper = {};\n\t\tupdatedTabStateWrapper[state.selectedFlowId.toString()] = updatedTabState;\n\t\tclonedState.tabsState = { ...clonedState.tabsState, ...updatedTabStateWrapper };\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.deselectStep, (state, {}): FlowsState => {\n\t\tif (state.selectedFlowId === undefined || state.selectedFlowId === null) {\n\t\t\tthrow new Error('Flow id is not selected');\n\t\t}\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet tabState: TabState = clonedState.tabsState[state.selectedFlowId.toString()];\n\t\ttabState.focusedStep = null;\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.setRightSidebar, (state, { sidebarType, props }): FlowsState => {\n\t\tif (state.selectedFlowId === null || state.selectedFlowId === undefined) {\n\t\t\tthrow new Error('Flow id is not selected');\n\t\t}\n\t\tlet clonedState: FlowsState = JSON.parse(JSON.stringify(state));\n\t\tlet tabState: TabState = clonedState.tabsState[state.selectedFlowId.toString()];\n\t\ttabState.rightSidebar = {\n\t\t\ttype: sidebarType,\n\t\t\tprops: props,\n\t\t};\n\t\treturn clonedState;\n\t}),\n\ton(FlowsActions.selectStepByName, (flowsState, { stepName }) => {\n\t\tconst flow: Flow | undefined = flowsState.flows.find(f => f.id === flowsState.selectedFlowId);\n\t\tconst clonedState: FlowsState = JSON.parse(JSON.stringify(flowsState));\n\t\tif (flow) {\n\t\t\tconst step = FlowStructureUtil.findStep(flow.lastVersion.trigger!, stepName!);\n\t\t\tconst updatedTabState = {\n\t\t\t\t...clonedState.tabsState[flow.id.toString()],\n\t\t\t\tfocusedStep: { ...step },\n\t\t\t};\n\t\t\tconst updatedTabStateWrapper = {};\n\t\t\tupdatedTabStateWrapper[flow.id.toString()] = updatedTabState;\n\t\t\tclonedState.tabsState = { ...clonedState.tabsState, ...updatedTabStateWrapper };\n\t\t}\n\t\treturn clonedState;\n\t})\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowsState",
                    "defaultValue": "{\n\tstate: FlowsStateEnum.INITIALIZED,\n\tflows: [],\n\tlastSaveId: UUID.UUID(),\n\ttabsState: {},\n\tselectedFlowId: null,\n}"
                },
                {
                    "name": "initialTabState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabState",
                    "defaultValue": "{\n\tselectedRun: undefined,\n\tleftSidebar: {\n\t\ttype: LeftSideBarType.NONE,\n\t\tprops: {},\n\t},\n\trightSidebar: {\n\t\ttype: RightSideBarType.NONE,\n\t\tprops: {},\n\t},\n\tfocusedStep: null,\n\tselectedStepName: 'initialVal',\n}"
                }
            ],
            "src/app/layout/common-layout/store/reducer/organization.reducer.ts": [
                {
                    "name": "_organizationReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/reducer/organization.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n\tinitialState,\n\ton(OrganizationActions.setOrganizations, (state, { organizations }): OrganizationsState => {\n\t\treturn { organizations: organizations, loaded: true, selectedIndex: organizations.length > 0 ? 0 : undefined };\n\t}),\n\ton(OrganizationActions.clearOrganizations, (state, {}): OrganizationsState => {\n\t\treturn { organizations: [], loaded: false, selectedIndex: undefined };\n\t})\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/reducer/organization.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrganizationsState",
                    "defaultValue": "{\n\tloaded: false,\n\tselectedIndex: 0,\n\torganizations: [],\n}"
                }
            ],
            "src/app/layout/flow-builder/store/reducer/piece.reducer.ts": [
                {
                    "name": "_pieceReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/reducer/piece.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n\tinitialState,\n\ton(PieceAction.setInitial, (state, { collection: piece }): CollectionState => {\n\t\tlet clonedPiece: Collection = JSON.parse(JSON.stringify(piece));\n\t\treturn { collection: clonedPiece, state: PieceStateEnum.INITIALIZED };\n\t}),\n\ton(PieceAction.changeName, (state, { displayName }): CollectionState => {\n\t\tlet clonedState: CollectionState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.collection.lastVersion.displayName = displayName;\n\t\tclonedState.state = PieceStateEnum.SAVING;\n\t\treturn clonedState;\n\t}),\n\ton(PieceAction.savedSuccess, (state, { collection: piece }): CollectionState => {\n\t\tlet clonedPiece: Collection = JSON.parse(JSON.stringify(piece));\n\t\treturn { collection: clonedPiece, state: PieceStateEnum.SAVED };\n\t}),\n\ton(PieceAction.savedFailed, (state, { error }): CollectionState => {\n\t\tlet clonedPiece: Collection = JSON.parse(JSON.stringify(state.collection));\n\t\tconsole.error(error);\n\t\treturn { collection: clonedPiece, state: PieceStateEnum.FAILED };\n\t}),\n\n\ton(PieceAction.addConfig, (state, { config }): CollectionState => {\n\t\tlet clonedState: CollectionState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.collection.lastVersion.configs.push(config);\n\t\tclonedState.state = PieceStateEnum.SAVING;\n\t\treturn clonedState;\n\t}),\n\ton(PieceAction.deleteConfigSucceeded, (state, { configIndex: index }): CollectionState => {\n\t\tlet clonedState: CollectionState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.collection.lastVersion.configs.splice(index, 1);\n\t\tclonedState.state = PieceStateEnum.SAVING;\n\t\treturn clonedState;\n\t}),\n\ton(PieceAction.updateConfig, (state, { configIndex, config }): CollectionState => {\n\t\tlet clonedState: CollectionState = JSON.parse(JSON.stringify(state));\n\t\tclonedState.collection.lastVersion.configs[configIndex] = config;\n\t\tclonedState.state = PieceStateEnum.SAVING;\n\t\treturn clonedState;\n\t}),\n\ton(PieceAction.updateSettings, (state, ChangeLogoProps): CollectionState => {\n\t\tlet clonedState: CollectionState = JSON.parse(JSON.stringify(state));\n\t\tif (ChangeLogoProps.logoEncodedUrl != undefined) {\n\t\t\tclonedState.collection.lastVersion.logoUrl = ChangeLogoProps.logoEncodedUrl;\n\t\t}\n\t\tclonedState.collection.lastVersion.description = ChangeLogoProps.description;\n\t\tclonedState.state = PieceStateEnum.SAVING;\n\t\treturn clonedState;\n\t})\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/reducer/piece.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CollectionState",
                    "defaultValue": "{\n\tstate: PieceStateEnum.INITIALIZED,\n\tcollection: {\n\t\tlastVersion: {\n\t\t\tid: UUID,\n\t\t\tdisplayName: 'dummy',\n\t\t\tstate: VersionEditState.DRAFT,\n\t\t\tconfigs: [],\n\t\t\tlogoUrl: 'dummy',\n\t\t\taccess: 'string',\n\t\t\tdescription: 'string',\n\t\t\tflowsVersionId: [],\n\t\t\tepochCreationTime: 0,\n\t\t\tepochUpdateTime: 0,\n\t\t},\n\t\tepochCreationTime: 0,\n\t\tepochUpdateTime: 0,\n\t\tid: UUID.UUID(),\n\t\tname: 'dummy',\n\t\tprojectId: 'dummy',\n\t\tversionsList: [],\n\t},\n}"
                }
            ],
            "src/app/layout/common-layout/store/reducer/project.reducer.ts": [
                {
                    "name": "_projectReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/reducer/project.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n\tinitialState,\n\ton(ProjectActions.setProjects, (state, { projects }): ProjectsState => {\n\t\treturn { projects: projects, loaded: true, selectedIndex: projects.length > 0 ? 0 : undefined };\n\t}),\n\ton(ProjectActions.clearProjects, (state, {}): ProjectsState => {\n\t\treturn { projects: [], loaded: false, selectedIndex: undefined };\n\t})\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/reducer/project.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ProjectsState",
                    "defaultValue": "{\n\tloaded: false,\n\tselectedIndex: 0,\n\tprojects: [],\n}"
                }
            ],
            "src/app/layout/flow-builder/store/reducer/view-mode.reducer.ts": [
                {
                    "name": "_viewModeReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/reducer/view-mode.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n\tinitialState,\n\ton(ViewModeActions.setViewMode, (state, { viewMode }): ViewModeEnum => {\n\t\treturn viewMode;\n\t})\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/reducer/view-mode.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "ViewModeEnum.BUILDING"
                }
            ],
            "src/app/layout/flow-builder/service/flowRenderUtil.ts": [
                {
                    "name": "ACCEPTED_DISTANCE_BETWEEN_DROP_POINT_AND_ADD_BUTTON",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/service/flowRenderUtil.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "250"
                }
            ],
            "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts": [
                {
                    "name": "ADD_BUTTON_SIZE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ width: 16, height: 16 }"
                },
                {
                    "name": "ARC_LENGTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "15"
                },
                {
                    "name": "ARROW_HEAD_SIZE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{ width: 13, height: 7 }"
                },
                {
                    "name": "EMPTY_LOOP_ADD_BUTTON_HEIGHT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "40"
                },
                {
                    "name": "EMPTY_LOOP_ADD_BUTTON_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "40"
                },
                {
                    "name": "FLOW_ITEM_HEIGHT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "92"
                },
                {
                    "name": "FLOW_ITEM_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "300"
                },
                {
                    "name": "HORZIONTAL_LINE_LENGTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "95"
                },
                {
                    "name": "LINES_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "2"
                },
                {
                    "name": "SPACE_BETWEEN_ITEM_CONTENT_AND_LINE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "8"
                },
                {
                    "name": "SVG_ELEMENT_DEFAULT_HEIGHT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "150"
                },
                {
                    "name": "SVG_ELEMENT_DEFAULT_WIDTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "300"
                },
                {
                    "name": "VERTICAL_LINE_LENGTH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "48"
                }
            ],
            "src/app/layout/flow-builder/store/action/flows.action.ts": [
                {
                    "name": "addConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.ADD_CONFIG, props<{ config: Config }>())"
                },
                {
                    "name": "addFlow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.ADD_FLOW, props<{ flow: Flow }>())"
                },
                {
                    "name": "addStep",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowsActionType.ADD_STEP,\n\tprops<{\n\t\tnewAction: Action;\n\t}>()\n)"
                },
                {
                    "name": "changeName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.CHANGE_NAME, props<{ flowId: UUID; displayName: string }>())"
                },
                {
                    "name": "deleteConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.DELETE_CONFIG, props<{ configIndex: number }>())"
                },
                {
                    "name": "deleteConfigFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowsActionType.DELETE_CONFIG_FAILED,\n\tprops<{ referenceKey: string; refreshedKey: string }>()\n)"
                },
                {
                    "name": "deleteConfigSucceeded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowsActionType.DELETE_CONFIG_SUCCEEDED,\n\tprops<{ configIndex: number }>()\n)"
                },
                {
                    "name": "deleteFlow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.DELETE_FLOW, props<{ flowId: UUID }>())"
                },
                {
                    "name": "deleteFlowStarted",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowsActionType.DELETE_FLOW_STARTED,\n\tprops<{ flowId: UUID; saveId: UUID }>()\n)"
                },
                {
                    "name": "deleteStep",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.DELETE_STEP, props<{ stepName: string }>())"
                },
                {
                    "name": "deleteSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.DELETE_SUCCESS, props<{ saveId: UUID }>())"
                },
                {
                    "name": "deselectStep",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.DESELECT_STEP)"
                },
                {
                    "name": "dropPiece",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowsActionType.DROP_PIECE,\n\tprops<{ draggedPieceName: string; newParentName: string }>()\n)"
                },
                {
                    "name": "exitRun",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.EXIT_RUN, props<{ flowId: UUID }>())"
                },
                {
                    "name": "FlowsActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tsetInitial,\n\tsavedSuccess,\n\taddStep,\n\tdropPiece,\n\tsavedFailed,\n\tdeleteFlow,\n\taddFlow,\n\tdeleteStep,\n\tupdateConfig,\n\taddConfig,\n\treplaceTrigger,\n\tdeleteConfig,\n\tdeleteConfigFailed,\n\tdeleteConfigSucceeded,\n\tselectFlow,\n\tupdateStep,\n\tchangeName,\n\tsaveFlowStarted,\n\tdeleteFlowStarted,\n\tsetLeftSidebar,\n\tselectStep,\n\tsetRightSidebar,\n\tsetRun,\n\tdeselectStep,\n\texitRun,\n\tselectStepByName,\n\tdeleteSuccess,\n}"
                },
                {
                    "name": "replaceTrigger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.REPLACE_TRIGGER, props<{ newTrigger: Trigger }>())"
                },
                {
                    "name": "savedFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.SAVED_FAILED, props<{ error: any }>())"
                },
                {
                    "name": "savedSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.SAVED_SUCCESS, props<{ saveId: UUID; flow: Flow }>())"
                },
                {
                    "name": "saveFlowStarted",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.SAVE_FLOW_STARTED, props<{ flow: Flow; saveId: UUID }>())"
                },
                {
                    "name": "selectFlow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.SELECT_FLOW, props<{ flowId: UUID }>())"
                },
                {
                    "name": "selectStep",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.SELECT_STEP, props<{ step: FlowItem }>())"
                },
                {
                    "name": "selectStepByName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.SELECT_STEP_BY_NAME, props<{ stepName: string }>())"
                },
                {
                    "name": "setInitial",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowsActionType.SET_INITIAL,\n\tprops<{ flows: Flow[]; run: InstanceRun | undefined }>()\n)"
                },
                {
                    "name": "setLeftSidebar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowsActionType.SET_LEFT_SIDEBAR,\n\tprops<{ sidebarType: LeftSideBarType; props: any }>()\n)"
                },
                {
                    "name": "setRightSidebar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowsActionType.SET_RIGHT_SIDEBAR,\n\tprops<{ sidebarType: RightSideBarType; props: any }>()\n)"
                },
                {
                    "name": "setRun",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowsActionType.SET_RUN, props<{ flowId: UUID; run: InstanceRun }>())"
                },
                {
                    "name": "SingleFlowModifyingState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\tFlowsActionType.DROP_PIECE,\n\tFlowsActionType.UPDATE_CONFIG,\n\tFlowsActionType.ADD_CONFIG,\n\tFlowsActionType.DELETE_CONFIG_SUCCEEDED,\n\tFlowsActionType.CHANGE_NAME,\n\tFlowsActionType.DELETE_STEP,\n\tFlowsActionType.ADD_STEP,\n\tFlowsActionType.REPLACE_TRIGGER,\n\tFlowsActionType.UPDATE_STEP,\n]"
                },
                {
                    "name": "updateConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowsActionType.UPDATE_CONFIG,\n\tprops<{ configIndex: number; config: Config }>()\n)"
                },
                {
                    "name": "updateStep",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowsActionType.UPDATE_STEP,\n\tprops<{ stepName: string; newStep: Action | Trigger }>()\n)"
                }
            ],
            "src/app/layout/flow-builder/store/action/piece.action.ts": [
                {
                    "name": "addConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(CollectionActionType.ADD_CONFIG, props<{ config: Config }>())"
                },
                {
                    "name": "changeDescription",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(CollectionActionType.CHANGE_NAME, props<{ description: string }>())"
                },
                {
                    "name": "changeName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(CollectionActionType.CHANGE_NAME, props<{ displayName: string }>())"
                },
                {
                    "name": "CollectionModifyingState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\tCollectionActionType.CHANGE_NAME,\n\tCollectionActionType.UPDATE_CONFIG,\n\tCollectionActionType.ADD_CONFIG,\n\tCollectionActionType.DELETE_CONFIG_SUCCEEDED,\n\tCollectionActionType.UPDATE_SETTINGS,\n]"
                },
                {
                    "name": "deleteConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(CollectionActionType.DELETE_CONFIG, props<{ configIndex: number }>())"
                },
                {
                    "name": "deleteConfigFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tCollectionActionType.DELETE_CONFIG_FAILED,\n\tprops<{ referenceKey: string; refreshedKey: string }>()\n)"
                },
                {
                    "name": "deleteConfigSucceeded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tCollectionActionType.DELETE_CONFIG_SUCCEEDED,\n\tprops<{ configIndex: number }>()\n)"
                },
                {
                    "name": "PieceAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tchangeName,\n\tsetInitial,\n\tupdateConfig,\n\taddConfig,\n\tdeleteConfigSucceeded,\n\tupdateSettings,\n\tsavedSuccess,\n\tsavedFailed,\n\tpublishCollection,\n\tpublishCollectionSuccess,\n\tdeleteConfigFailed,\n\tdeleteConfig,\n\tpublishCollectionFailed,\n}"
                },
                {
                    "name": "publishCollection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tCollectionActionType.PUBLISH_COLLECTION,\n\tprops<{ environmentIds: UUID[]; collection: Collection }>()\n)"
                },
                {
                    "name": "publishCollectionFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tCollectionActionType.PUBLISH_COLLECTION_FAILED,\n\tprops<{ error: Error }>()\n)"
                },
                {
                    "name": "publishCollectionSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tCollectionActionType.PUBLISH_COLLECTION_SUCCESS,\n\tprops<{ environmentIds: UUID[]; collection: Collection }>()\n)"
                },
                {
                    "name": "savedFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(CollectionActionType.PIECE_SAVED_FAILED, props<{ error: any }>())"
                },
                {
                    "name": "savedSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(CollectionActionType.PIECE_SAVED_SUCCESS, props<{ collection: Collection }>())"
                },
                {
                    "name": "setInitial",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(CollectionActionType.SET_INITIAL, props<{ collection: Collection }>())"
                },
                {
                    "name": "updateConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tCollectionActionType.UPDATE_CONFIG,\n\tprops<{ configIndex: number; config: Config }>()\n)"
                },
                {
                    "name": "updateSettings",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tCollectionActionType.UPDATE_SETTINGS,\n\tprops<{\n\t\tlogoFile: File | undefined;\n\t\tlogoEncodedUrl: string | undefined;\n\t\tdescription: string;\n\t}>()\n)"
                }
            ],
            "src/app/layout/common-layout/store/action/environment.action.ts": [
                {
                    "name": "addEnvironment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/environment.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tEnvironmentActionType.ADD_ENVIRONMENT,\n\tprops<{ environment: ProjectEnvironment }>()\n)"
                },
                {
                    "name": "clearEnvironments",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/environment.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(EnvironmentActionType.CLEAR_ENVIRONMENTS)"
                },
                {
                    "name": "EnvironmentActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/environment.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tsetEnvironments,\n\taddEnvironment,\n\tclearEnvironments,\n}"
                },
                {
                    "name": "setEnvironments",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/environment.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tEnvironmentActionType.SET_ENVIRONMENTS,\n\tprops<{ environments: ProjectEnvironment[] }>()\n)"
                }
            ],
            "src/app/layout/common-layout/store/action/events.action.ts": [
                {
                    "name": "addEvent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/events.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(EventActionModeType.ADD_EVENT, props<{ eventDefinition: EventDefinition }>())"
                },
                {
                    "name": "clearEvents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/events.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(EventActionModeType.CLEAR_EVENTS)"
                },
                {
                    "name": "EventActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/events.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\taddEvent,\n\tsetEvents,\n\tclearEvents,\n}"
                },
                {
                    "name": "setEvents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/events.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(EventActionModeType.SET_EVENTS, props<{ events: EventDefinition[] }>())"
                }
            ],
            "src/app/layout/dashboard-layout/store/action/api-keys.action.ts": [
                {
                    "name": "ApiKeysActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tcreateApiKey,\n\tcreateApiKeySuccess,\n\tcreateApiKeyFailed,\n\tloadApiKeys,\n\tloadApiKeysFinished,\n\tdeleteApiKey,\n}"
                },
                {
                    "name": "createApiKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ApiKeysActionType.CREATE_API_KEY, props<{ name: string }>())"
                },
                {
                    "name": "createApiKeyFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ApiKeysActionType.CREATE_API_KEY_FAILED, props<{ error: Error }>())"
                },
                {
                    "name": "createApiKeySuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ApiKeysActionType.CREATE_API_KEY_SUCCESS, props<{ apiKey: ApiKey }>())"
                },
                {
                    "name": "deleteApiKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tApiKeysActionType.DELETE_API_KEY,\n\tprops<{\n\t\tid: UUID;\n\t}>()\n)"
                },
                {
                    "name": "loadApiKeys",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ApiKeysActionType.LOAD_API_KEYS_STARTED)"
                },
                {
                    "name": "loadApiKeysFinished",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tApiKeysActionType.LOAD_API_KEYS_FINISHED,\n\tprops<{ apiKeys: SeekPage<ApiKey> }>()\n)"
                }
            ],
            "src/app/layout/dashboard-layout/store/reducer/api-keys.reducer.ts": [
                {
                    "name": "apiKeysReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/reducer/api-keys.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n\tinitialState,\n\ton(ApiKeysActions.loadApiKeysFinished, (state, { apiKeys }: { apiKeys: SeekPage<ApiKey> }): ApiKeysState => {\n\t\treturn { apiKeys: apiKeys, loaded: true };\n\t}),\n\ton(ApiKeysActions.loadApiKeys, (): ApiKeysState => {\n\t\treturn { apiKeys: null, loaded: false };\n\t}),\n\ton(ApiKeysActions.deleteApiKey, (state, { id }: { id: UUID }): ApiKeysState => {\n\t\tlet apiKeys: SeekPage<ApiKey> = JSON.parse(JSON.stringify(state.apiKeys));\n\t\tlet index = apiKeys.data.findIndex(f => f.id === id);\n\t\tif (index != -1) {\n\t\t\tapiKeys.data.splice(index, 1);\n\t\t}\n\t\treturn { ...state, apiKeys };\n\t}),\n\ton(ApiKeysActions.createApiKeySuccess, (state, action): ApiKeysState => {\n\t\tlet apiKeys: SeekPage<ApiKey> = JSON.parse(JSON.stringify(state.apiKeys));\n\t\tapiKeys.data.push(action.apiKey);\n\t\treturn { ...state, loaded: true, apiKeys };\n\t}),\n\ton(ApiKeysActions.createApiKeyFailed, (state, action): ApiKeysState => {\n\t\treturn { ...state, loaded: true };\n\t})\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/reducer/api-keys.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApiKeysState",
                    "defaultValue": "{\n\tapiKeys: null,\n\tloaded: false,\n}"
                }
            ],
            "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts": [
                {
                    "name": "ApiKeysSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tselectApiKeysLoaded,\n\tselectApiKeys,\n}"
                },
                {
                    "name": "selectAll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectDashboardState, state => state.apiKeys)"
                },
                {
                    "name": "selectApiKeys",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectAll, state => state.apiKeys)"
                },
                {
                    "name": "selectApiKeysLoaded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectAll, state => state.loaded)"
                },
                {
                    "name": "selectDashboardState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<State>('dashboard')"
                }
            ],
            "src/app/layout/dashboard-layout/store/reducer/authentication.reducer.ts": [
                {
                    "name": "authenticationReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/reducer/authentication.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n\tinitialState,\n\ton(AuthenticationActions.fetchAuthenticationsSuccessful, (state, action): AuthenticationState => {\n\t\treturn { ...state, authentications: action.authentications };\n\t}),\n\ton(AuthenticationActions.updateFirebaseProjectIdSuccessful, (state, action) => {\n\t\tconst authenticationIndex = state.authentications.findIndex(\n\t\t\ta => a.environmentId == action.project.environmentId && a.type == AuthenticationType.FIREBASE\n\t\t);\n\t\tconst newState: AuthenticationState = {\n\t\t\tauthentications: [...state.authentications],\n\t\t};\n\t\tif (authenticationIndex === -1) {\n\t\t\tnewState.authentications.push(action.project);\n\t\t} else {\n\t\t\tnewState.authentications[authenticationIndex] = action.project;\n\t\t}\n\t\treturn newState;\n\t}),\n\ton(AuthenticationActions.generateSigningKeySuccessful, (state, action) => {\n\t\tconst authenticationIndex = state.authentications.findIndex(\n\t\t\ta => a.environmentId == action.signingKey.environmentId && a.type == AuthenticationType.SIGNING_KEY\n\t\t);\n\t\tconst newState: AuthenticationState = {\n\t\t\tauthentications: [...state.authentications],\n\t\t};\n\t\tif (authenticationIndex === -1) {\n\t\t\tnewState.authentications.push(action.signingKey);\n\t\t} else {\n\t\t\tnewState.authentications[authenticationIndex] = action.signingKey;\n\t\t}\n\t\treturn newState;\n\t}),\n\ton(AuthenticationActions.clearSigningKeyCredentials, (state, action) => {\n\t\tconst cleanKey = { ...action.key };\n\t\tdelete cleanKey.privateKey;\n\t\tconst keyIndex = state.authentications.findIndex(a => a.environmentId === action.key.environmentId);\n\t\tconst cleanState: AuthenticationState = {\n\t\t\tauthentications: [...state.authentications],\n\t\t};\n\t\tcleanState.authentications[keyIndex] = cleanKey;\n\t\treturn { ...cleanState };\n\t})\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/reducer/authentication.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationState",
                    "defaultValue": "{\n\tauthentications: [],\n}"
                }
            ],
            "src/app/layout/common-layout/utils.ts": [
                {
                    "name": "autoSaveDebounceTime",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "600"
                },
                {
                    "name": "cacheArtifactDebounceTime",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "defaultValue": "200"
                },
                {
                    "name": "defaultCronJobForScheduleTrigger",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'0 */5 * ? * *'"
                }
            ],
            "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts": [
                {
                    "name": "BUILDER_STATE_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'builderState'"
                },
                {
                    "name": "BuilderSelectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n\tselectCurrentCollection,\r\n\tselectCurrentCollectionId,\r\n\tselectReadOnly,\r\n\tselectViewMode,\r\n\tselectCurrentFlowId,\r\n\tselectCurrentFlowRun,\r\n\tselectFlows,\r\n\tselectCurrentTabState,\r\n\tselectFlowSelectedId,\r\n\tselectCurrentFlow,\r\n\tselectCurrentRightSideBar,\r\n\tselectCurrentStep,\r\n\tselectCurrentCollectionName,\r\n\tselectCanPublish,\r\n\tselectCurrentFlowConfigs,\r\n\tselectCurrentLeftSidebar,\r\n\tselectCurrentLeftSidebarType,\r\n\tselectFlowsCount,\r\n\tselectConfigTabTypeFromProps,\r\n\tselectBuilderSaveState,\r\n\tselectCurrentStepName,\r\n\tselectCurrentCollectionConfigs,\r\n\tselectCurrentRightSideBarType,\r\n\tselectDynamicDropdownReference,\r\n\tselectCurrentFlowRunStatus,\r\n\tselectCurrentDisplayName,\r\n\tselectUserDefinedCollectionConfigs,\r\n\tselectUserDefinedFlowConfigs,\r\n\tselectAuth2Configs,\r\n\tselectInstanceRunView,\r\n\tselectCollectionState,\r\n\tselectFlow,\r\n\tselectTabState,\r\n\tselectFlowState,\r\n\tselectCurrentFlowSaved,\r\n\tselectSavingChangeState,\r\n\tselectAllFlowItemsDetails,\r\n\tselectFlowItemDetails,\r\n\tselectRemoteFlowItemDetails,\r\n\tselectAllFlowItemsDetailsLoadedState,\r\n\tselectCoreFlowItemsDetails,\r\n\tselectFlowItemsDetailsForConnectors,\r\n\tselectFlowItemsDetialsForUserCollections,\r\n\tselectFlowItemDetailsForTriggers,\r\n\tselectCurrentFlowValidity,\r\n\tselectAllConfigs,\r\n\tselectConfig,\r\n\tselectFlowsValidity,\r\n}"
                },
                {
                    "name": "selectAllConfigs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCurrentFlowConfigs,\r\n\tselectCurrentCollectionConfigs,\r\n\t(flowConfigs: Config[], collectionConfigs: Config[]) => {\r\n\t\treturn [...flowConfigs, ...collectionConfigs];\r\n\t}\r\n)"
                },
                {
                    "name": "selectAllFlowItemsDetails",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\treturn state.flowItemsDetailsState;\r\n})"
                },
                {
                    "name": "selectAllFlowItemsDetailsLoadedState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectAllFlowItemsDetails,\r\n\t(state: FlowItemsDetailsState) => {\r\n\t\treturn state.loaded;\r\n\t}\r\n)"
                },
                {
                    "name": "selectAuth2Configs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(oauth2Variable: OAuth2Variable, flowId: UUID) =>\r\n\tcreateSelector(\r\n\t\tselectCurrentFlowConfigs,\r\n\t\tselectCurrentCollectionConfigs,\r\n\t\t(flowConfigs: Config[], pieceConfigs: Config[]) => {\r\n\t\t\treturn [...flowConfigs, ...pieceConfigs].filter(\r\n\t\t\t\tf =>\r\n\t\t\t\t\tf.type == ConfigType.OAUTH2 &&\r\n\t\t\t\t\t(oauth2Variable.settings.userInputType === Oauth2UserInputType.EVERYTHING ||\r\n\t\t\t\t\t\toauth2Variable.settings.userInputType === Oauth2UserInputType.APP_DETAILS)\r\n\t\t\t);\r\n\t\t}\r\n\t)"
                },
                {
                    "name": "selectBuilderSaveState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectFlowState,\r\n\tselectCollectionState,\r\n\t(flowState: FlowsStateEnum, pieceState: PieceStateEnum) => {\r\n\t\tif (pieceState === PieceStateEnum.FAILED || flowState === FlowsStateEnum.FAILED) {\r\n\t\t\treturn SaveState.FAILED;\r\n\t\t}\r\n\t\tif (pieceState === PieceStateEnum.INITIALIZED && flowState === FlowsStateEnum.INITIALIZED) {\r\n\t\t\treturn SaveState.INITIALIZED;\r\n\t\t}\r\n\t\tif (pieceState === PieceStateEnum.SAVING || flowState === FlowsStateEnum.SAVING) {\r\n\t\t\treturn SaveState.SAVING;\r\n\t\t}\r\n\t\treturn SaveState.SAVED;\r\n\t}\r\n)"
                },
                {
                    "name": "selectBuilderState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<GlobalBuilderState>(BUILDER_STATE_NAME)"
                },
                {
                    "name": "selectCanPublish",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectFlows, (flows: Flow[]) => {\r\n\tlet canPublish = true;\r\n\tfor (let i = 0; i < flows.length; ++i) {\r\n\t\tif (!flows[i].lastVersion?.valid) {\r\n\t\t\tcanPublish = false;\r\n\t\t}\r\n\t}\r\n\treturn flows.length > 0 && canPublish;\r\n})"
                },
                {
                    "name": "selectCollectionState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.pieceState.state\r\n)"
                },
                {
                    "name": "selectConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(configKey: string) =>\r\n\tcreateSelector(\r\n\t\tselectCurrentFlowConfigs,\r\n\t\tselectCurrentCollectionConfigs,\r\n\t\t(flowConfigs: Config[], collectionConfigs: Config[]) => {\r\n\t\t\tconst indexInFlowConfigsList = flowConfigs.findIndex(c => c.key === configKey);\r\n\t\t\tif (indexInFlowConfigsList > -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tindexInList: indexInFlowConfigsList,\r\n\t\t\t\t\tconfig: flowConfigs[indexInFlowConfigsList],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tconst indexInCollectionConfigsList = collectionConfigs.findIndex(c => c.key === configKey);\r\n\t\t\tif (indexInCollectionConfigsList > -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tindexInList: indexInCollectionConfigsList,\r\n\t\t\t\t\tconfig: collectionConfigs[indexInCollectionConfigsList],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t)"
                },
                {
                    "name": "selectConfigTabTypeFromProps",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectCurrentLeftSidebar, (state: { props: any }) => {\r\n\treturn state.props.selectedTab;\r\n})"
                },
                {
                    "name": "selectCoreFlowItemsDetails",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectAllFlowItemsDetails, (state: FlowItemsDetailsState) => {\r\n\treturn state.coreFlowItemsDetails;\r\n})"
                },
                {
                    "name": "selectCurrentCollection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.pieceState.collection\r\n)"
                },
                {
                    "name": "selectCurrentCollectionConfigs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectCurrentCollection, (piece: Collection) =>\r\n\tpiece.lastVersion.configs.map(c => {\r\n\t\tc.collectionVersionId = piece.lastVersion.id;\r\n\t\treturn c;\r\n\t})\r\n)"
                },
                {
                    "name": "selectCurrentCollectionId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCurrentCollection,\r\n\t(collection: Collection) => collection.id\r\n)"
                },
                {
                    "name": "selectCurrentCollectionName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCurrentCollection,\r\n\t(collection: Collection) => collection.name\r\n)"
                },
                {
                    "name": "selectCurrentDisplayName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectCurrentStep, state => {\r\n\treturn state?.displayName;\r\n})"
                },
                {
                    "name": "selectCurrentFlow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectFlowsState, (flowsState: FlowsState) => {\r\n\treturn flowsState.flows.find(f => f.id === flowsState.selectedFlowId);\r\n})"
                },
                {
                    "name": "selectCurrentFlowConfigs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tlet flow = state.flowsState.flows.find(f => f.id === state.flowsState.selectedFlowId);\r\n\tif (flow === undefined) {\r\n\t\treturn [];\r\n\t}\r\n\treturn flow.lastVersion.configs.map(c => {\r\n\t\tc.flowVersionId = flow!.lastVersion.id;\r\n\t\treturn c;\r\n\t});\r\n})"
                },
                {
                    "name": "selectCurrentFlowId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.flowsState.selectedFlowId\r\n)"
                },
                {
                    "name": "selectCurrentFlowRun",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tif (state.flowsState.selectedFlowId == undefined) {\r\n\t\treturn undefined;\r\n\t}\r\n\tlet tabState = state.flowsState.tabsState[state.flowsState.selectedFlowId.toString()];\r\n\tif (tabState == null) {\r\n\t\treturn tabState;\r\n\t}\r\n\treturn tabState.selectedRun;\r\n})"
                },
                {
                    "name": "selectCurrentFlowRunStatus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectCurrentFlowRun, (run: InstanceRun | undefined) => {\r\n\tif (run === undefined) {\r\n\t\treturn undefined;\r\n\t}\r\n\treturn run.status;\r\n})"
                },
                {
                    "name": "selectCurrentFlowSaved",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) =>\r\n\t\tstate.flowsState.state === FlowsStateEnum.SAVED || state.flowsState.state === FlowsStateEnum.INITIALIZED\r\n)"
                },
                {
                    "name": "selectCurrentFlowValidity",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectCurrentFlow, (flow: Flow | undefined) => {\r\n\tif (!flow) return false;\r\n\treturn flow.lastVersion.valid;\r\n})"
                },
                {
                    "name": "selectCurrentLeftSidebar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tif (state.flowsState.selectedFlowId == undefined) {\r\n\t\treturn {\r\n\t\t\ttype: LeftSideBarType.NONE,\r\n\t\t\tprops: {},\r\n\t\t};\r\n\t}\r\n\tlet tabState: TabState = state.flowsState.tabsState[state.flowsState.selectedFlowId.toString()];\r\n\tif (tabState == undefined) {\r\n\t\treturn {\r\n\t\t\ttype: LeftSideBarType.NONE,\r\n\t\t\tprops: {},\r\n\t\t};\r\n\t}\r\n\treturn tabState.leftSidebar;\r\n})"
                },
                {
                    "name": "selectCurrentLeftSidebarType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCurrentLeftSidebar,\r\n\t(state: { type: LeftSideBarType }) => {\r\n\t\treturn state.type;\r\n\t}\r\n)"
                },
                {
                    "name": "selectCurrentRightSideBar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tif (state.flowsState.selectedFlowId == undefined) {\r\n\t\treturn {\r\n\t\t\ttype: RightSideBarType.NONE,\r\n\t\t\tprops: {},\r\n\t\t};\r\n\t}\r\n\tlet tabState: TabState = state.flowsState.tabsState[state.flowsState.selectedFlowId.toString()];\r\n\tif (tabState == undefined) {\r\n\t\treturn {\r\n\t\t\ttype: RightSideBarType.NONE,\r\n\t\t\tprops: {},\r\n\t\t};\r\n\t}\r\n\treturn tabState.rightSidebar;\r\n})"
                },
                {
                    "name": "selectCurrentRightSideBarType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectCurrentRightSideBar,\r\n\t(state: { type: RightSideBarType }) => {\r\n\t\treturn state.type;\r\n\t}\r\n)"
                },
                {
                    "name": "selectCurrentStep",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectFlowsState, (flowsState: FlowsState) => {\r\n\tlet selectedFlowTabsState = flowsState.tabsState[flowsState.selectedFlowId!.toString()];\r\n\tif (!selectedFlowTabsState) {\r\n\t\treturn undefined;\r\n\t}\r\n\treturn selectedFlowTabsState.focusedStep;\r\n})"
                },
                {
                    "name": "selectCurrentStepName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectCurrentStep, selectedStep => {\r\n\tif (selectedStep) {\r\n\t\treturn selectedStep.name;\r\n\t}\r\n\treturn undefined;\r\n})"
                },
                {
                    "name": "selectCurrentTabState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tif (state.flowsState.selectedFlowId == undefined) {\r\n\t\treturn undefined;\r\n\t}\r\n\treturn state.flowsState.tabsState[state.flowsState.selectedFlowId.toString()];\r\n})"
                },
                {
                    "name": "selectDynamicDropdownReference",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() =>\r\n\tcreateSelector(\r\n\t\tselectCurrentFlowConfigs,\r\n\t\tselectCurrentCollectionConfigs,\r\n\t\t(flowConfigs: Config[], pieceConfigs: Config[]) => {\r\n\t\t\treturn [...flowConfigs, ...pieceConfigs]\r\n\t\t\t\t.filter(f => f.type == ConfigType.OAUTH2)\r\n\t\t\t\t.map(f => {\r\n\t\t\t\t\treturn { value: f.key, label: f.label } as DropdownItemOption;\r\n\t\t\t\t});\r\n\t\t}\r\n\t)"
                },
                {
                    "name": "selectFlow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(flowId: UUID) =>\r\n\tcreateSelector(selectFlowsState, (state: FlowsState): Flow | undefined => {\r\n\t\treturn state.flows.find(f => f.id === flowId);\r\n\t})"
                },
                {
                    "name": "selectFlowItemDetails",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(flowItem: FlowItem) =>\r\n\tcreateSelector(selectAllFlowItemsDetails, (state: FlowItemsDetailsState) => {\r\n\t\tconst triggerItemDetails = state.triggerFlowItemsDetails.find(t => t.type === flowItem.type);\r\n\t\tif (triggerItemDetails) {\r\n\t\t\treturn triggerItemDetails;\r\n\t\t}\r\n\t\tconst remoteFlowItemDetails = [...state.connectorsFlowItemsDetails, ...state.userCollectionsFlowItemsDetails].find(\r\n\t\t\tr => r.extra?.pieceVersionId === flowItem.settings.pieceVersionId\r\n\t\t);\r\n\t\tif (remoteFlowItemDetails) {\r\n\t\t\treturn remoteFlowItemDetails;\r\n\t\t}\r\n\t\tlet coreItemDetials;\r\n\t\tif (flowItem.type === ActionType.REMOTE_FLOW) {\r\n\t\t\tcoreItemDetials = state.coreFlowItemsDetails.find(\r\n\t\t\t\tc => c.type === flowItem.type && c.extra?.pieceVersionId === flowItem.settings.pieceVersionId\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\t//Core items might contain remote flows so always have them at the end\r\n\t\t\tcoreItemDetials = state.coreFlowItemsDetails.find(c => c.type === flowItem.type);\r\n\t\t}\r\n\t\tif (!coreItemDetials) {\r\n\t\t\tconsole.warn(`Flow item details for ${flowItem.displayName} are not currently loaded`);\r\n\t\t}\r\n\t\treturn coreItemDetials;\r\n\t})"
                },
                {
                    "name": "selectFlowItemDetailsForTriggers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectAllFlowItemsDetails,\r\n\t(state: FlowItemsDetailsState) => {\r\n\t\treturn state.triggerFlowItemsDetails.filter(details => details.type !== TriggerType.EMPTY);\r\n\t}\r\n)"
                },
                {
                    "name": "selectFlowItemsDetailsForConnectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectAllFlowItemsDetails,\r\n\t(state: FlowItemsDetailsState) => {\r\n\t\treturn state.connectorsFlowItemsDetails;\r\n\t}\r\n)"
                },
                {
                    "name": "selectFlowItemsDetialsForUserCollections",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectAllFlowItemsDetails,\r\n\t(state: FlowItemsDetailsState) => {\r\n\t\treturn state.userCollectionsFlowItemsDetails.filter(details => !details.extra!.old);\r\n\t}\r\n)"
                },
                {
                    "name": "selectFlows",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => state.flowsState.flows)"
                },
                {
                    "name": "selectFlowsCount",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectFlows, (flows: Flow[]) => flows.length)"
                },
                {
                    "name": "selectFlowSelectedId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\treturn state.flowsState.selectedFlowId !== undefined;\r\n})"
                },
                {
                    "name": "selectFlowsState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\treturn state.flowsState;\r\n})"
                },
                {
                    "name": "selectFlowState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.flowsState.state\r\n)"
                },
                {
                    "name": "selectFlowsValidity",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => {\r\n\tconst allFlowsValidity = state.flowsState.flows.map(f => f.lastVersion.valid);\r\n\treturn allFlowsValidity.reduce((current, previous) => current && previous, true);\r\n})"
                },
                {
                    "name": "selectInstanceRunView",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.viewMode === ViewModeEnum.VIEW_INSTANCE_RUN\r\n)"
                },
                {
                    "name": "selectReadOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) => state.viewMode !== ViewModeEnum.BUILDING\r\n)"
                },
                {
                    "name": "selectRemoteFlowItemDetails",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(collectionVersionId: UUID) =>\r\n\tcreateSelector(selectAllFlowItemsDetails, (state: FlowItemsDetailsState) => {\r\n\t\tconst remoteFlowItemDetails = [\r\n\t\t\t...state.connectorsFlowItemsDetails,\r\n\t\t\t...state.userCollectionsFlowItemsDetails,\r\n\t\t\t...state.coreFlowItemsDetails,\r\n\t\t].find(r => r.extra?.pieceVersionId === collectionVersionId);\r\n\t\treturn remoteFlowItemDetails;\r\n\t})"
                },
                {
                    "name": "selectSavingChangeState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n\tselectBuilderState,\r\n\t(state: GlobalBuilderState) =>\r\n\t\tstate.pieceState.state == PieceStateEnum.SAVING || state.flowsState.state == FlowsStateEnum.SAVING\r\n)"
                },
                {
                    "name": "selectTabState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(flowId: UUID) =>\r\n\tcreateSelector(selectFlowsState, (state: FlowsState): TabState => {\r\n\t\treturn state.tabsState[flowId.toString()];\r\n\t})"
                },
                {
                    "name": "selectUserDefinedCollectionConfigs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectCurrentCollectionConfigs, configs =>\r\n\tconfigs.filter(c => c.source === ConfigSource.USER)\r\n)"
                },
                {
                    "name": "selectUserDefinedFlowConfigs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectCurrentFlowConfigs, configs =>\r\n\tconfigs.filter(c => c.source === ConfigSource.USER)\r\n)"
                },
                {
                    "name": "selectViewMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectBuilderState, (state: GlobalBuilderState) => state.viewMode)"
                }
            ],
            "src/app/layout/flow-builder/store/action/builder.action.ts": [
                {
                    "name": "BuilderActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/builder.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tloadInitial,\n}"
                },
                {
                    "name": "loadInitial",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/builder.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tBuilderActionType.LOAD_INITIAL,\n\tprops<{ piece: Collection; flows: Flow[]; viewMode: ViewModeEnum; run: InstanceRun | undefined }>()\n)"
                }
            ],
            "src/app/layout/dashboard-layout/pages/trial-status/trial-status.component.ts": [
                {
                    "name": "Calendly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/pages/trial-status/trial-status.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/app/layout/flow-builder/store/action/flow-items-details.action.ts": [
                {
                    "name": "clearFlowItemsDetails",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowItemDetailsActionType.CLEAR)"
                },
                {
                    "name": "FlowItemDetailsActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tclearFlowItemsDetails,\n\tloadFlowItemsDetails,\n\tflowItemsDetailsLoadedSuccessfully,\n\tloadOldRemoteFlowItemDetails,\n\toldRemoteFlowItemDetailsLoadedSuccessfully,\n}"
                },
                {
                    "name": "flowItemsDetailsLoadedSuccessfully",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowItemDetailsActionType.LOADED_SUCCESSFULLY,\n\tprops<{ flowItemsDetailsLoaded: FlowItemsDetailsState }>()\n)"
                },
                {
                    "name": "loadFlowItemsDetails",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(FlowItemDetailsActionType.LOAD)"
                },
                {
                    "name": "loadOldRemoteFlowItemDetails",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowItemDetailsActionType.LOAD_OLD_REMOTE_FLOW_ITEM_DETAILS,\n\tprops<{ collectionVersionId: UUID }>()\n)"
                },
                {
                    "name": "oldRemoteFlowItemDetailsLoadedSuccessfully",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tFlowItemDetailsActionType.OLD_REMOTE_FLOW_ITEM_DETAILS_LOADED_SUCESSFULLY,\n\tprops<{ oldRemoteFlowItemDetails: FlowItemDetails }>()\n)"
                }
            ],
            "src/app/layout/common-layout/store/action/organizations.action.ts": [
                {
                    "name": "clearOrganizations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/organizations.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(OrganizationsActionType.CLEAR_ORGANIZATIONS)"
                },
                {
                    "name": "OrganizationActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/organizations.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tsetOrganizations,\n\tclearOrganizations,\n}"
                },
                {
                    "name": "setOrganizations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/organizations.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tOrganizationsActionType.SET_ORGANIZATIONS,\n\tprops<{ organizations: Organization[] }>()\n)"
                }
            ],
            "src/app/layout/common-layout/store/action/project.action.ts": [
                {
                    "name": "clearProjects",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/project.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ProjectActionType.CLEAR_PROJECTS)"
                },
                {
                    "name": "ProjectActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/project.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tsetProjects,\n\tclearProjects,\n}"
                },
                {
                    "name": "setProjects",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/project.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ProjectActionType.SET_PROJECTS, props<{ projects: Project[] }>())"
                }
            ],
            "src/app/layout/dashboard-layout/store/action/authentication.action.ts": [
                {
                    "name": "clearSigningKeyCredentials",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tAuthenticationActionType.CLEAR_STAGING_KEY_CREDENTIALS,\n\tprops<{ key: ProjectAuthentication }>()\n)"
                },
                {
                    "name": "fetchAuthenticationsSuccessful",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tAuthenticationActionType.FETCH_AUTHENTICATION_SUCCESSFUL,\n\tprops<{ authentications: ProjectAuthentication[] }>()\n)"
                },
                {
                    "name": "generateSigningKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tAuthenticationActionType.GENERATE_STAGING_KEY,\n\tprops<{ environmentId: string }>()\n)"
                },
                {
                    "name": "generateSigningKeyFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tAuthenticationActionType.GENERATE_STAGING_KEY_FAILED,\n\tprops<{ error: any }>()\n)"
                },
                {
                    "name": "generateSigningKeySuccessful",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tAuthenticationActionType.GENERATE_STAGING_KEY_SUCCESSFUL,\n\tprops<{ signingKey: ProjectAuthentication }>()\n)"
                },
                {
                    "name": "updateFirebaseProjectId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tAuthenticationActionType.UPDATE_FIREBASE_PROJECT_ID,\n\tprops<{ environmentId: string; projectId: string }>()\n)"
                },
                {
                    "name": "updateFirebaseProjectIdFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tAuthenticationActionType.UPDATE_FIREBASE_PROJECT_ID_FAILED,\n\tprops<{ error: any }>()\n)"
                },
                {
                    "name": "updateFirebaseProjectIdSuccessful",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n\tAuthenticationActionType.UPDATE_FIREBASE_PROJECT_ID_SUCCESSFUL,\n\tprops<{ project: ProjectAuthentication }>()\n)"
                }
            ],
            "src/app/layout/common-layout/store/action/common.action.ts": [
                {
                    "name": "clearState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/common.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(CommonActionType.CLEAR_STATE)"
                },
                {
                    "name": "CommonActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/common.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tloadInitial,\n\tclearState,\n}"
                },
                {
                    "name": "loadInitial",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/action/common.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(CommonActionType.LOAD_INITIAL, props<{ user: User }>())"
                }
            ],
            "src/app/layout/common-layout/store/selector/common.selector.ts": [
                {
                    "name": "COMMON_STATE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'commonState'"
                },
                {
                    "name": "CommonSelectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tselectEvents,\n\tselectEventsDropdownOptions,\n}"
                },
                {
                    "name": "selectCommonState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<CommonStateModel>(COMMON_STATE)"
                },
                {
                    "name": "selectEvents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectEventsState, (state: EventsState) => state.events)"
                },
                {
                    "name": "selectEventsDropdownOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(selectedEventNames: string[]) =>\n\tcreateSelector(selectEventsState, (state: EventsState) => {\n\t\tlet options: DropdownItemOption[] = [];\n\t\tlet selectedOptions: DropdownItemOption[] = [];\n\n\t\tfor (let i = 0; i < state.events.length; ++i) {\n\t\t\tlet item = {\n\t\t\t\tvalue: state.events[i].name,\n\t\t\t\tlabel: state.events[i].displayName,\n\t\t\t};\n\t\t\tif (\n\t\t\t\tselectedEventNames !== undefined &&\n\t\t\t\tselectedEventNames !== null &&\n\t\t\t\tselectedEventNames.indexOf(state.events[i].name) !== -1\n\t\t\t) {\n\t\t\t\tselectedOptions.push(item);\n\t\t\t}\n\t\t\toptions.push(item);\n\t\t}\n\n\t\treturn { options: options, selected: selectedOptions };\n\t})"
                },
                {
                    "name": "selectEventsState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/common.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectCommonState, (state: CommonStateModel) => state.eventsState)"
                }
            ],
            "src/app/layout/common-layout/store/selector/environment.selector.ts": [
                {
                    "name": "COMMON_STATE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'commonState'"
                },
                {
                    "name": "EnvironmentSelectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tselectEnvironments,\n\tselectEnvironmentsLoadState,\n}"
                },
                {
                    "name": "selectCommonState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<CommonStateModel>(COMMON_STATE)"
                },
                {
                    "name": "selectEnvironments",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectEnvironmentState, (state: EnvironmentsState) => {\n\treturn state.environments;\n})"
                },
                {
                    "name": "selectEnvironmentsLoadState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectEnvironmentState, (state: EnvironmentsState) => {\n\treturn state.loaded;\n})"
                },
                {
                    "name": "selectEnvironmentState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n\tselectCommonState,\n\t(state: CommonStateModel): EnvironmentsState => state.environmentsState\n)"
                }
            ],
            "src/app/layout/common-layout/store/selector/organization.selector.ts": [
                {
                    "name": "COMMON_STATE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'commonState'"
                },
                {
                    "name": "OrganizationSelectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tselectOrganizations,\n}"
                },
                {
                    "name": "selectCommonState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<CommonStateModel>(COMMON_STATE)"
                },
                {
                    "name": "selectOrganizations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n\tselectCommonState,\n\t(state: CommonStateModel) => state.organizationsState.organizations\n)"
                }
            ],
            "src/app/layout/common-layout/store/selector/project.selector.ts": [
                {
                    "name": "COMMON_STATE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/project.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'commonState'"
                },
                {
                    "name": "ProjectSelectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/project.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tselectProject,\n}"
                },
                {
                    "name": "selectCommonState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/project.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<CommonStateModel>(COMMON_STATE)"
                },
                {
                    "name": "selectProject",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/project.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectProjectState, (state: ProjectsState) => {\n\tif (state.selectedIndex === undefined) {\n\t\treturn undefined;\n\t}\n\treturn state.projects[state.selectedIndex];\n})"
                },
                {
                    "name": "selectProjectState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/store/selector/project.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n\tselectCommonState,\n\t(state: CommonStateModel): ProjectsState => state.projectsState\n)"
                }
            ],
            "src/app/layout/common-layout/model/enum/config-type.ts": [
                {
                    "name": "configTypesDropdownOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/model/enum/config-type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{\n\t\tlabel: 'Short Text',\n\t\tvalue: ConfigType.SHORT_TEXT,\n\t\ticon: 'short-text.svg',\n\t\tgroup: 'Text',\n\t},\n\t{\n\t\tlabel: 'Multiline Text',\n\t\tvalue: ConfigType.LONG_TEXT,\n\t\ticon: 'multiline-text.svg',\n\t\tgroup: 'Text',\n\t},\n\n\t{\n\t\tlabel: 'OAuth 2.0',\n\t\tvalue: 'OAUTH2',\n\t\ticon: 'wire.svg',\n\t\tgroup: 'Authentication',\n\t},\n\n\t{ label: 'Integer', value: ConfigType.INTEGER, icon: 'number.svg', group: 'Number' },\n\t{\n\t\tlabel: 'Dictionary',\n\t\tvalue: ConfigType.DICTIONARY,\n\t\ticon: 'key-value.svg',\n\t\tgroup: 'Others',\n\t},\n\t{\n\t\tlabel: 'Dropdown',\n\t\tvalue: ConfigType.DROPDOWN,\n\t\ticon: 'dropdown.svg',\n\t\tgroup: 'Others',\n\t},\n]"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/layout/dashboard-layout/dashboard-layout.module.ts": [
                {
                    "name": "DASHBOARD_FEATURE_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/dashboard-layout.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'dashboard'"
                },
                {
                    "name": "reducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/dashboard-layout.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<State>",
                    "defaultValue": "{\n\tauthenticationState: authenticationReducer,\n\tapiKeys: apiKeysReducer,\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<StoryType>",
                    "defaultValue": "{\n\targs: {\n\t\tlabel: 'test',\n\t},\n\tparameters: { controls: { exclude: ['btnClassesMap', 'btnSizeClass'] } },\n}"
                }
            ],
            "src/connectors/dev-connectors.lexicon.ts": [
                {
                    "name": "devAppConnectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/connectors/dev-connectors.lexicon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{\n\t\tpieceVersionId: '73159c4a-b816-4539-8779-05e71fab1dfa',\n\t\tflowId: '87965f74-6814-4275-a5b9-7e11b23fd1b2',\n\t\tdocUrl: 'https://api.slack.com/web',\n\t\tconnectorName: 'slack',\n\t},\n\t{\n\t\tpieceVersionId: '2845f022-a905-4fcb-8bba-521ea4bb136c',\n\t\tflowId: 'b30491fc-832b-4b27-ae6a-c59194b31659',\n\t\tdocUrl: 'https://developers.asana.com/docs',\n\t\tconnectorName: 'asana',\n\t},\n\t{\n\t\tpieceVersionId: '79b7dfda-c97f-4f72-b605-aa7340fd435f',\n\t\tflowId: 'a319f432-82cc-44dd-9805-807d3c254a3b',\n\t\tdocUrl: 'https://developers.hubspot.com/docs/api/overview',\n\t\tconnectorName: 'hubspot',\n\t},\n\t{\n\t\tpieceVersionId: '40df0cdb-7bb9-4eff-9895-b3850ad23fa5',\n\t\tflowId: '526c84af-4595-4521-9089-b40f8baf8e3d',\n\t\tdocUrl: 'https://developers.google.com/analytics/',\n\t\tconnectorName: 'googleAnalytics',\n\t},\n\t{\n\t\tpieceVersionId: 'f1178af6-d71f-497c-8a73-e907e46a9377',\n\t\tflowId: '977e64f8-80f8-48f2-a96c-5af1c4bad0e6',\n\t\tdocUrl: 'https://developers.google.com/forms/api',\n\t\tconnectorName: 'googleForm',\n\t},\n\t{\n\t\tpieceVersionId: '51ae1769-df38-458a-8d71-1fd928027797',\n\t\tflowId: '581baddb-efad-4bf5-b10c-3f3c3e7dac89',\n\t\tdocUrl: 'https://developers.google.com/sheets/',\n\t\tconnectorName: 'googleSheets',\n\t},\n\t{\n\t\tpieceVersionId: 'dcd34d9d-6922-4aec-997a-94db767529dc',\n\t\tflowId: '21a37b2e-d458-42d2-baee-3ee3b018a7d6',\n\t\tdocUrl: 'https://developers.google.com/google-apps/calendar/firstapp',\n\t\tconnectorName: 'googleCalender',\n\t},\n\t{\n\t\tpieceVersionId: '609d8aaf-175a-44f1-88c9-107b32174338',\n\t\tflowId: 'a6a6ebe5-c133-44b8-97c6-dde1e5a065c6',\n\t\tdocUrl: 'https://developers.google.com/drive/',\n\t\tconnectorName: 'googleDrive',\n\t},\n\t{\n\t\tpieceVersionId: '6d4a12c1-9220-4ddc-8a9f-b44836e2f857',\n\t\tflowId: 'fe210195-c63c-43c4-9d74-fcee4a8c4603',\n\t\tdocUrl: 'https://bitbucket.org/api',\n\t\tconnectorName: 'bitBucket',\n\t},\n\t{\n\t\tpieceVersionId: 'aeffb479-d9c8-4ebd-847f-37a548efdb1c',\n\t\tflowId: 'be3a4379-235c-46c1-a706-4a7cb745fb27',\n\t\tdocUrl: 'https://www.figma.com/developers/api',\n\t\tconnectorName: 'figma',\n\t},\n\t{\n\t\tpieceVersionId: 'a0690be6-a133-4961-aada-d3e14a4cf2e4',\n\t\tflowId: 'e83fd801-360c-4054-9894-6e513cf54265',\n\t\tdocUrl: 'https://developer.intuit.com/app/developer/qbo/docs/develop',\n\t\tconnectorName: 'quickbooks',\n\t},\n\t{\n\t\tpieceVersionId: 'c39c390d-b6b2-4224-8fff-c7e0cfbe9972',\n\t\tflowId: '281bf9d4-8657-4814-bcb4-feb1b455b5d9',\n\t\tdocUrl: 'https://docs.sendgrid.com/api-reference/',\n\t\tconnectorName: 'sendgrid',\n\t},\n\t{\n\t\tpieceVersionId: '36cf6197-6d26-479c-8d81-9776eece08e0',\n\t\tflowId: '84c6c609-2df2-4cff-a33d-1d9d97b0b87f',\n\t\tdocUrl: 'https://docs.salla.dev/',\n\t\tconnectorName: 'salla',\n\t},\n]"
                },
                {
                    "name": "devConnectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/connectors/dev-connectors.lexicon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[]"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tproduction: true,\n\tapiDomainUrl: 'api.activepieces.com',\n\tapiUrl: 'https://api.activepieces.com',\n\tjwtTokenName: 'token',\n\tstageName: 'prod',\n\tredirectUrl: 'https://app.activepieces.com/redirect',\n\tappConnectors: 'https://cdn.activepieces.com/connectors/app_connectors.json',\n\tuserPropertyNameInLocalStorage: 'currentUser',\n}"
                }
            ],
            "src/environments/environment.stg.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.stg.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tproduction: true,\n\tapiDomainUrl: 'stg-api.activepieces.com',\n\tapiUrl: 'https://stg-api.activepieces.com',\n\tjwtTokenName: 'token',\n\tstageName: 'stg',\n\tredirectUrl: 'https://stg-app.activepieces.com/redirect',\n\tappConnectors: 'https://cdn.activepieces.com/stg/connectors/app_connectors.json',\n\tuserPropertyNameInLocalStorage: 'currentUser',\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tproduction: true,\n\tapiDomainUrl: 'stg-api.activepieces.com',\n\tapiUrl: 'https://stg-api.activepieces.com',\n\tjwtTokenName: 'token',\n\tstageName: 'stg',\n\tredirectUrl: 'https://stg-app.activepieces.com/redirect',\n\tappConnectors: 'https://cdn.activepieces.com/stg/connectors/app_connectors.json',\n\tuserPropertyNameInLocalStorage: 'currentUser',\n}"
                }
            ],
            "src/app/layout/common-layout/animation/fade-in.animations.ts": [
                {
                    "name": "fadeIn400ms",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/animation/fade-in.animations.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "fadeInnimation(400)"
                }
            ],
            "src/app/layout/common-layout/animation/fade-in-up.animation.ts": [
                {
                    "name": "fadeInUp400ms",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/animation/fade-in-up.animation.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "fadeInUpAnimation(400)"
                }
            ],
            "src/app/layout/flow-builder/store/reducer/flow-items-details.reducer.ts": [
                {
                    "name": "flowItemsDetailsReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/reducer/flow-items-details.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n\tinitialState,\n\ton(FlowItemDetailsActions.clearFlowItemsDetails, (): FlowItemsDetailsState => {\n\t\treturn initialState;\n\t}),\n\ton(\n\t\tFlowItemDetailsActions.flowItemsDetailsLoadedSuccessfully,\n\t\t(state, { flowItemsDetailsLoaded }): FlowItemsDetailsState => {\n\t\t\treturn flowItemsDetailsLoaded;\n\t\t}\n\t),\n\ton(\n\t\tFlowItemDetailsActions.oldRemoteFlowItemDetailsLoadedSuccessfully,\n\t\t(state, { oldRemoteFlowItemDetails }): FlowItemsDetailsState => {\n\t\t\tconst clonedState: FlowItemsDetailsState = JSON.parse(JSON.stringify(state));\n\t\t\tclonedState.userCollectionsFlowItemsDetails.push(oldRemoteFlowItemDetails);\n\t\t\treturn clonedState;\n\t\t}\n\t)\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/reducer/flow-items-details.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FlowItemsDetailsState",
                    "defaultValue": "{\n\tconnectorsFlowItemsDetails: [],\n\tcoreFlowItemsDetails: [],\n\ttriggerFlowItemsDetails: [],\n\tuserCollectionsFlowItemsDetails: [],\n\tloaded: false,\n}"
                }
            ],
            "src/app/layout/auth-layout/pages/consts.ts": [
                {
                    "name": "freeMailProviders",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/auth-layout/pages/consts.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t'hitmail.com',\n\t'rxdoc.biz',\n\t'cox.com',\n\t'126.net',\n\t'126.com',\n\t'comast.com',\n\t'comast.net',\n\t'yandex.com',\n\t'wegas.ru',\n\t'twc.com',\n\t'charter.com',\n\t'outlook.com',\n\t'gmx.com',\n\t'.ddns.org',\n\t'.findhere.com',\n\t'.freeservers.com',\n\t'.zzn.com',\n\t'1033edge.com',\n\t'11mail.com',\n\t'123.com',\n\t'123box.net',\n\t'123india.com',\n\t'123mail.cl',\n\t'123qwe.co.uk',\n\t'150ml.com',\n\t'15meg4free.com',\n\t'163.com',\n\t'1coolplace.com',\n\t'1freeemail.com',\n\t'1funplace.com',\n\t'1internetdrive.com',\n\t'1mail.net',\n\t'1me.net',\n\t'1mum.com',\n\t'1musicrow.com',\n\t'1netdrive.com',\n\t'1nsyncfan.com',\n\t'1under.com',\n\t'1webave.com',\n\t'1webhighway.com',\n\t'212.com',\n\t'24horas.com',\n\t'2911.net',\n\t'2bmail.co.uk',\n\t'2d2i.com',\n\t'2die4.com',\n\t'3000.it',\n\t'321media.com',\n\t'37.com',\n\t'3ammagazine.com',\n\t'3dmail.com',\n\t'3email.com',\n\t'3xl.net',\n\t'444.net',\n\t'4email.com',\n\t'4email.net',\n\t'4mg.com',\n\t'4newyork.com',\n\t'4x4man.com',\n\t'5iron.com',\n\t'5star.com',\n\t'88.am',\n\t'8848.net',\n\t'888.nu',\n\t'97rock.com',\n\t'aaamail.zzn.com',\n\t'aamail.net',\n\t'aaronkwok.net',\n\t'abbeyroadlondon.co.uk',\n\t'abcflash.net',\n\t'abdulnour.com',\n\t'aberystwyth.com',\n\t'abolition-now.com',\n\t'about.com',\n\t'academycougars.com',\n\t'acceso.or.cr',\n\t'access4less.net',\n\t'accessgcc.com',\n\t'ace-of-base.com',\n\t'acmecity.com',\n\t'acmemail.net',\n\t'acninc.net',\n\t'activatormail.com',\n\t'address.com',\n\t'adelphia.net',\n\t'adexec.com',\n\t'adfarrow.com',\n\t'adios.net',\n\t'adoption.com',\n\t'ados.fr',\n\t'adrenalinefreak.com',\n\t'advalvas.be',\n\t'aeiou.pt',\n\t'aemail4u.com',\n\t'aeneasmail.com',\n\t'afreeinternet.com',\n\t'africamail.com',\n\t'agoodmail.com',\n\t'ahaa.dk',\n\t'aichi.com',\n\t'aim.com',\n\t'airforce.net',\n\t'AirForceEmail.com',\n\t'airforceemail.com',\n\t'airpost.net',\n\t'ajacied.com',\n\t'ak47.hu',\n\t'aknet.kg',\n\t'albawaba.com',\n\t'alecsmail.com',\n\t'alex4all.com',\n\t'alexandria.cc',\n\t'algeria.com',\n\t'alhilal.net',\n\t'alibaba.com',\n\t'alive.cz',\n\t'allmail.net',\n\t'alloymail.com',\n\t'allracing.com',\n\t'allsaintsfan.com',\n\t'alltel.net',\n\t'alskens.dk',\n\t'altavista.com',\n\t'altavista.net',\n\t'altavista.se',\n\t'alternativagratis.com',\n\t'alumnidirector.com',\n\t'alvilag.hu',\n\t'amele.com',\n\t'america.hm',\n\t'ameritech.net',\n\t'amnetsal.com',\n\t'amrer.net',\n\t'amuro.net',\n\t'amuromail.com',\n\t'ananzi.co.za',\n\t'ancestry.com',\n\t'andylau.net',\n\t'anfmail.com',\n\t'angelfan.com',\n\t'angelfire.com',\n\t'animail.net',\n\t'animal.net',\n\t'animalhouse.com',\n\t'animalwoman.net',\n\t'anjungcafe.com',\n\t'annsmail.com',\n\t'anote.com',\n\t'another.com',\n\t'anotherwin95.com',\n\t'anti-social.com',\n\t'antisocial.com',\n\t'antongijsen.com',\n\t'antwerpen.com',\n\t'anymoment.com',\n\t'anytimenow.com',\n\t'aol.com',\n\t'apexmail.com',\n\t'apmail.com',\n\t'apollo.lv',\n\t'approvers.net',\n\t'arabia.com',\n\t'arabtop.net',\n\t'arcademaster.com',\n\t'archaeologist.com',\n\t'arcor.de',\n\t'arcotronics.bg',\n\t'argentina.com',\n\t'aristotle.org',\n\t'army.net',\n\t'arnet.com.ar',\n\t'artlover.com',\n\t'artlover.com.au',\n\t'as-if.com',\n\t'asean-mail',\n\t'asean-mail.com',\n\t'asheville.com',\n\t'asia-links.com',\n\t'asia.com',\n\t'asiafind.com',\n\t'asianavenue.com',\n\t'asiancityweb.com',\n\t'asiansonly.net',\n\t'asianwired.net',\n\t'asiapoint.net',\n\t'assala.com',\n\t'assamesemail.com',\n\t'astroboymail.com',\n\t'astrolover.com',\n\t'astrosfan.com',\n\t'astrosfan.net',\n\t'asurfer.com',\n\t'athenachu.net',\n\t'atina.cl',\n\t'atl.lv',\n\t'atlaswebmail.com',\n\t'atlink.com',\n\t'ato.check.com',\n\t'atozasia.com',\n\t'att.net',\n\t'attglobal.net',\n\t'attymail.com',\n\t'au.ru',\n\t'ausi.com',\n\t'aussiemail.com.au',\n\t'austin.rr.com',\n\t'australia.edu',\n\t'australiamail.com',\n\t'austrosearch.net',\n\t'autoescuelanerja.com',\n\t'automotiveauthority.com',\n\t'avh.hu',\n\t'awsom.net',\n\t'axoskate.com',\n\t'ayna.com',\n\t'azimiweb.com',\n\t'bachelorboy.com',\n\t'bachelorgal.com',\n\t'backpackers.com',\n\t'backstreet-boys.com',\n\t'backstreetboysclub.com',\n\t'backwards.com',\n\t'bagherpour.com',\n\t'bahrainmail.com',\n\t'bangkok.com',\n\t'bangkok2000.com',\n\t'bannertown.net',\n\t'baptistmail.com',\n\t'baptized.com',\n\t'barcelona.com',\n\t'baseballmail.com',\n\t'basketballmail.com',\n\t'batuta.net',\n\t'baudoinconsulting.com',\n\t'bboy.zzn.com',\n\t'bcvibes.com',\n\t'beeebank.com',\n\t'beenhad.com',\n\t'beep.ru',\n\t'beer.com',\n\t'beethoven.com',\n\t'belice.com',\n\t'belizehome.com',\n\t'bellsouth.net',\n\t'berkscounty.com',\n\t'berlin.com',\n\t'berlin.de',\n\t'berlinexpo.de',\n\t'bestmail.us',\n\t'bettergolf.net',\n\t'bharatmail.com',\n\t'bigassweb.com',\n\t'bigblue.net.au',\n\t'bigboab.com',\n\t'bigfoot.com',\n\t'bigfoot.de',\n\t'bigger.com',\n\t'biggerbadder.com',\n\t'bigmailbox.com',\n\t'bigpond.com',\n\t'bigpond.com.au',\n\t'bigpond.net.au',\n\t'bigramp.com',\n\t'bikemechanics.com',\n\t'bikeracer.com',\n\t'bikeracers.net',\n\t'bikerider.com',\n\t'billsfan.com',\n\t'billsfan.net',\n\t'bimamail.com',\n\t'bimla.net',\n\t'birdowner.net',\n\t'bisons.com',\n\t'bitmail.com',\n\t'bitpage.net',\n\t'bizhosting.com',\n\t'bla-bla.com',\n\t'blackburnmail.com',\n\t'blackplanet.com',\n\t'blazemail.com',\n\t'bluehyppo.com',\n\t'bluemail.ch',\n\t'bluemail.dk',\n\t'bluesfan.com',\n\t'blushmail.com',\n\t'bmlsports.net',\n\t'boardermail.com',\n\t'boatracers.com',\n\t'bol.com.br',\n\t'bolando.com',\n\t'bollywoodz.com',\n\t'bolt.com',\n\t'boltonfans.com',\n\t'bombdiggity.com',\n\t'bonbon.net',\n\t'BonBon.net',\n\t'boom.com',\n\t'bootmail.com',\n\t'bornnaked.com',\n\t'bossofthemoss.com',\n\t'bostonoffice.com',\n\t'bounce.net',\n\t'box.az',\n\t'boxbg.com',\n\t'boxemail.com',\n\t'boxfrog.com',\n\t'boyzoneclub.com',\n\t'bradfordfans.com',\n\t'brasilia.net',\n\t'brazilmail.com.br',\n\t'breathe.com',\n\t'bresnan.net',\n\t'brfree.com.br',\n\t'bright.net',\n\t'britneyclub.com',\n\t'brittonsign.com',\n\t'broadcast.net',\n\t'btopenworld.co.uk',\n\t'buffymail.com',\n\t'bullsfan.com',\n\t'bullsgame.com',\n\t'bumerang.ro',\n\t'bumrap.com',\n\t'bunko.com',\n\t'buryfans.com',\n\t'business-man.com',\n\t'businessman.net',\n\t'businessweekmail.com',\n\t'busta-rhymes.com',\n\t'busymail.com',\n\t'busymail.comhomeart.com',\n\t'buyersusa.com',\n\t'bvimailbox.com',\n\t'byteme.com',\n\t'c2i.net',\n\t'c3.hu',\n\t'c4.com',\n\t'cabacabana.com',\n\t'cableone.net',\n\t'caere.it',\n\t'cairomail.com',\n\t'callnetuk.com',\n\t'callsign.net',\n\t'caltanet.it',\n\t'camidge.com',\n\t'canada-11.com',\n\t'canada.com',\n\t'canadianmail.com',\n\t'canoemail.com',\n\t'canwetalk.com',\n\t'caramail.com',\n\t'care2.com',\n\t'careerbuildermail.com',\n\t'carioca.net',\n\t'cartestraina.ro',\n\t'casablancaresort.com',\n\t'casino.com',\n\t'catcha.com',\n\t'catchamail.com',\n\t'catholic.org',\n\t'catlover.com',\n\t'catsrule.garfield.com',\n\t'ccnmail.com',\n\t'cd2.com',\n\t'celineclub.com',\n\t'celtic.com',\n\t'centoper.it',\n\t'centralpets.com',\n\t'centrum.cz',\n\t'centrum.sk',\n\t'centurytel.net',\n\t'certifiedmail.com',\n\t'cfl.rr.com',\n\t'cgac.es',\n\t'chaiyomail.com',\n\t'chance2mail.com',\n\t'chandrasekar.net',\n\t'charmedmail.com',\n\t'charter.net',\n\t'chat.ru',\n\t'chattown.com',\n\t'chauhanweb.com',\n\t'check.com',\n\t'check.com12',\n\t'check1check.com',\n\t'cheerful.com',\n\t'chek.com',\n\t'chemist.com',\n\t'chequemail.com',\n\t'cheyenneweb.com',\n\t'chez.com',\n\t'chickmail.com',\n\t'childrens.md',\n\t'china.net.vg',\n\t'chinalook.com',\n\t'chirk.com',\n\t'chocaholic.com.au',\n\t'christianmail.net',\n\t'churchusa.com',\n\t'cia-agent.com',\n\t'cia.hu',\n\t'ciaoweb.it',\n\t'cicciociccio.com',\n\t'cincinow.net',\n\t'citeweb.net',\n\t'citlink.net',\n\t'city-of-bath.org',\n\t'city-of-birmingham.com',\n\t'city-of-brighton.org',\n\t'city-of-cambridge.com',\n\t'city-of-coventry.com',\n\t'city-of-edinburgh.com',\n\t'city-of-lichfield.com',\n\t'city-of-lincoln.com',\n\t'city-of-liverpool.com',\n\t'city-of-manchester.com',\n\t'city-of-nottingham.com',\n\t'city-of-oxford.com',\n\t'city-of-swansea.com',\n\t'city-of-westminster.com',\n\t'city-of-westminster.net',\n\t'city-of-york.net',\n\t'city2city.com',\n\t'cityofcardiff.net',\n\t'cityoflondon.org',\n\t'claramail.com',\n\t'classicalfan.com',\n\t'classicmail.co.za',\n\t'clerk.com',\n\t'cliffhanger.com',\n\t'close2you.ne',\n\t'close2you.net',\n\t'club4x4.net',\n\t'clubalfa.com',\n\t'clubbers.net',\n\t'clubducati.com',\n\t'clubhonda.net',\n\t'clubnetnoir.com',\n\t'clubvdo.net',\n\t'cluemail.com',\n\t'cmpmail.com',\n\t'cnnsimail.com',\n\t'codec.ro',\n\t'codec.roemail.ro',\n\t'coder.hu',\n\t'coid.biz',\n\t'coldmail.com',\n\t'collectiblesuperstore.com',\n\t'collegebeat.com',\n\t'collegeclub.com',\n\t'collegemail.com',\n\t'colleges.com',\n\t'columbus.rr.com',\n\t'columbusrr.com',\n\t'columnist.com',\n\t'comcast.net',\n\t'comic.com',\n\t'communityconnect.com',\n\t'comprendemail.com',\n\t'compuserve.com',\n\t'computer-freak.com',\n\t'computermail.net',\n\t'conexcol.com',\n\t'conk.com',\n\t'connect4free.net',\n\t'connectbox.com',\n\t'conok.com',\n\t'consultant.com',\n\t'cookiemonster.com',\n\t'cool.br',\n\t'coolgoose.ca',\n\t'coolgoose.com',\n\t'coolkiwi.com',\n\t'coollist.com',\n\t'coolmail.com',\n\t'coolmail.net',\n\t'coolsend.com',\n\t'cooooool.com',\n\t'cooperation.net',\n\t'cooperationtogo.net',\n\t'copacabana.com',\n\t'cornells.com',\n\t'cornerpub.com',\n\t'corporatedirtbag.com',\n\t'correo.terra.com.gt',\n\t'cortinet.com',\n\t'cotas.net',\n\t'counsellor.com',\n\t'countrylover.com',\n\t'cox.net',\n\t'coxinet.net',\n\t'CPAonline.net',\n\t'cpaonline.net',\n\t'cracker.hu',\n\t'crazedanddazed.com',\n\t'crazysexycool.com',\n\t'cristianemail.com',\n\t'critterpost.com',\n\t'croeso.com',\n\t'crosshairs.com',\n\t'crosswinds.net',\n\t'crwmail.com',\n\t'cry4helponline.com',\n\t'cs.com',\n\t'csinibaba.hu',\n\t'cuemail.com',\n\t'curio-city.com',\n\t'curtsmail.com',\n\t'cute-girl.com',\n\t'cuteandcuddly.com',\n\t'cutey.com',\n\t'cww.de',\n\t'cyber-africa.net',\n\t'cyber4all.com',\n\t'cyberbabies.com',\n\t'CyberCafeMaui.com',\n\t'cybercafemaui.com',\n\t'cyberdude.com',\n\t'cyberforeplay.net',\n\t'cybergal.com',\n\t'cybergrrl.com',\n\t'cyberinbox.com',\n\t'cyberleports.com',\n\t'cybermail.net',\n\t'cybernet.it',\n\t'cyberspace-asia.com',\n\t'cybertrains.org',\n\t'cyclefanz.com',\n\t'cynetcity.com',\n\t'dabsol.net',\n\t'dadacasa.com',\n\t'daha.com',\n\t'dailypioneer.com',\n\t'dallas.theboys.com',\n\t'dangerous-minds.com',\n\t'dansegulvet.com',\n\t'data54.com',\n\t'davegracey.com',\n\t'dawnsonmail.com',\n\t'dawsonmail.com',\n\t'dazedandconfused.com',\n\t'dbzmail.com',\n\t'DCemail.com',\n\t'dcemail.com',\n\t'deadlymob.org',\n\t'deal-maker.com',\n\t'dearriba.com',\n\t'death-star.com',\n\t'dejanews.com',\n\t'deliveryman.com',\n\t'deneg.net',\n\t'depechemode.com',\n\t'deseretmail.com',\n\t'desertmail.com',\n\t'desilota.com',\n\t'deskmail.com',\n\t'deskpilot.com',\n\t'destin.com',\n\t'detik.com',\n\t'deutschland-net.com',\n\t'devotedcouples.com',\n\t'dfwatson.com',\n\t'di-ve.com',\n\t'digibel.be',\n\t'diplomats.com',\n\t'dirtracer.com',\n\t'dirtracers.com',\n\t'discofan.com',\n\t'discovery.com',\n\t'discoverymail.com',\n\t'disinfo.net',\n\t'dmailman.com',\n\t'dnsmadeeasy.com',\n\t'doctor.com',\n\t'dog.com',\n\t'doglover.com',\n\t'dogmail.co.uk',\n\t'dogsnob.net',\n\t'doityourself.com',\n\t'doneasy.com',\n\t'donjuan.com',\n\t'dontgotmail.com',\n\t'dontmesswithtexas.com',\n\t'doramail.com',\n\t'dostmail.com',\n\t'dotcom.fr',\n\t'dott.it',\n\t'dplanet.ch',\n\t'dr.com',\n\t'dragoncon.net',\n\t'dragracer.com',\n\t'dropzone.com',\n\t'drotposta.hu',\n\t'dubaimail.com',\n\t'dublin.com',\n\t'dublin.ie',\n\t'dunlopdriver.com',\n\t'dunloprider.com',\n\t'duno.com',\n\t'dwp.net',\n\t'dygo.com',\n\t'dynamitemail.com',\n\t'e-apollo.lv',\n\t'e-mail.dk',\n\t'e-mail.ru',\n\t'e-mailanywhere.com',\n\t'e-mails.ru',\n\t'e-tapaal.com',\n\t'earthalliance.com',\n\t'earthcam.net',\n\t'EarthCam.net',\n\t'earthdome.com',\n\t'earthling.net',\n\t'earthlink.net',\n\t'earthonline.net',\n\t'eastcoast.co.za',\n\t'eastmail.com',\n\t'easy.to',\n\t'easypost.com',\n\t'eatmydirt.com',\n\t'ecardmail.com',\n\t'ecbsolutions.net',\n\t'echina.com',\n\t'ecompare.com',\n\t'edmail.com',\n\t'ednatx.com',\n\t'edtnmail.com',\n\t'educacao.te.pt',\n\t'educastmail.com',\n\t'ehmail.com',\n\t'eircom.net',\n\t'ekidz.com.au',\n\t'elsitio.com',\n\t'elvis.com',\n\t'email-london.co.uk',\n\t'email.biz',\n\t'email.com',\n\t'email.cz',\n\t'email.ee',\n\t'email.it',\n\t'email.nu',\n\t'email.ro',\n\t'email.ru',\n\t'email.si',\n\t'email.women.com',\n\t'email2me.net',\n\t'emailacc.com',\n\t'emailaccount.com',\n\t'emailchoice.com',\n\t'emailcorner.net',\n\t'emailem.com',\n\t'emailengine.net',\n\t'emailforyou.net',\n\t'emailgroups.net',\n\t'emailit.com',\n\t'emailpinoy.com',\n\t'emailplanet.com',\n\t'emails.ru',\n\t'emailuser.net',\n\t'emailx.net',\n\t'ematic.com',\n\t'embarqmail.com',\n\t'eml.cc',\n\t'emumail.com',\n\t'end-war.com',\n\t'enel.net',\n\t'engineer.com',\n\t'england.com',\n\t'england.edu',\n\t'epatra.com',\n\t'epix.net',\n\t'epost.de',\n\t'eposta.hu',\n\t'eqqu.com',\n\t'eramail.co.za',\n\t'eresmas.com',\n\t'eriga.lv',\n\t'estranet.it',\n\t'ethos.st',\n\t'etoast.com',\n\t'etrademail.com',\n\t'eudoramail.com',\n\t'europe.com',\n\t'euroseek.com',\n\t'eurosport.com',\n\t'every1.net',\n\t'everyday.com.kh',\n\t'everyone.net',\n\t'examnotes.net',\n\t'excite.co.jp',\n\t'excite.com',\n\t'excite.it',\n\t'execs.com',\n\t'expressasia.com',\n\t'extenda.net',\n\t'extended.com',\n\t'eyou.com',\n\t'ezcybersearch.com',\n\t'ezmail.egine.com',\n\t'ezmail.ru',\n\t'ezrs.com',\n\t'f1fans.net',\n\t'fan.com',\n\t'fan.theboys.com',\n\t'fansonlymail.com',\n\t'fantasticmail.com',\n\t'farang.net',\n\t'faroweb.com',\n\t'fastem.com',\n\t'fastemail.us',\n\t'fastemailer.com',\n\t'fastermail.com',\n\t'fastimap.com',\n\t'fastmail.ca',\n\t'fastmail.fm',\n\t'fastmailbox.net',\n\t'fastmessaging.com',\n\t'fatcock.net',\n\t'fathersrightsne.org',\n\t'fbi-agent.com',\n\t'fbi.hu',\n\t'federalcontractors.com',\n\t'felicity.com',\n\t'felicitymail.com',\n\t'femenino.com',\n\t'fetchmail.co.uk',\n\t'fetchmail.com',\n\t'feyenoorder.com',\n\t'ffanet.com',\n\t'fiberia.com',\n\t'filipinolinks.com',\n\t'financemail.net',\n\t'financier.com',\n\t'findmail.com',\n\t'finebody.com',\n\t'finfin.com',\n\t'fire-brigade.com',\n\t'fishburne.org',\n\t'flashemail.com',\n\t'flashmail.com',\n\t'flashmail.net',\n\t'flipcode.com',\n\t'fmail.co.uk',\n\t'fmailbox.com',\n\t'fmgirl.com',\n\t'fmguy.com',\n\t'fnbmail.co.za',\n\t'fnmail.com',\n\t'folkfan.com',\n\t'foodmail.com',\n\t'football.theboys.com',\n\t'footballmail.com',\n\t'for-president.com',\n\t'forfree.at',\n\t'forpresident.com',\n\t'fortuncity.com',\n\t'fortunecity.com',\n\t'forum.dk',\n\t'free-org.com',\n\t'free.com.pe',\n\t'free.fr',\n\t'freeaccess.nl',\n\t'freeaccount.com',\n\t'freeandsingle.com',\n\t'freebox.com',\n\t'freedom.usa.com',\n\t'freedomlover.com',\n\t'freegates.be',\n\t'freeghana.com',\n\t'freeler.nl',\n\t'freemail.c3.hu',\n\t'freemail.com.au',\n\t'freemail.com.pk',\n\t'freemail.de',\n\t'freemail.et',\n\t'freemail.gr',\n\t'freemail.hu',\n\t'freemail.it',\n\t'freemail.lt',\n\t'freemail.nl',\n\t'freemail.org.mk',\n\t'freenet.de',\n\t'freenet.kg',\n\t'freeola.com',\n\t'freeola.net',\n\t'freeserve.co.uk',\n\t'freestamp.com',\n\t'freestart.hu',\n\t'freesurf.fr',\n\t'freesurf.nl',\n\t'freeuk.com',\n\t'freeuk.net',\n\t'freeukisp.co.uk',\n\t'freeweb.org',\n\t'freewebemail.com',\n\t'freeyellow.com',\n\t'freezone.co.uk',\n\t'fresnomail.com',\n\t'friends-cafe.com',\n\t'friendsfan.com',\n\t'from-africa.com',\n\t'from-america.com',\n\t'from-argentina.com',\n\t'from-asia.com',\n\t'from-australia.com',\n\t'from-belgium.com',\n\t'from-brazil.com',\n\t'from-canada.com',\n\t'from-china.net',\n\t'from-england.com',\n\t'from-europe.com',\n\t'from-france.net',\n\t'from-germany.net',\n\t'from-holland.com',\n\t'from-israel.com',\n\t'from-italy.net',\n\t'from-japan.net',\n\t'from-korea.com',\n\t'from-mexico.com',\n\t'from-outerspace.com',\n\t'from-russia.com',\n\t'from-spain.net',\n\t'fromalabama.com',\n\t'fromalaska.com',\n\t'fromarizona.com',\n\t'fromarkansas.com',\n\t'fromcalifornia.com',\n\t'fromcolorado.com',\n\t'fromconnecticut.com',\n\t'fromdelaware.com',\n\t'fromflorida.net',\n\t'fromgeorgia.com',\n\t'fromhawaii.net',\n\t'fromidaho.com',\n\t'fromillinois.com',\n\t'fromindiana.com',\n\t'fromiowa.com',\n\t'fromjupiter.com',\n\t'fromkansas.com',\n\t'fromkentucky.com',\n\t'fromlouisiana.com',\n\t'frommaine.net',\n\t'frommaryland.com',\n\t'frommassachusetts.com',\n\t'frommiami.com',\n\t'frommichigan.com',\n\t'fromminnesota.com',\n\t'frommississippi.com',\n\t'frommissouri.com',\n\t'frommontana.com',\n\t'fromnebraska.com',\n\t'fromnevada.com',\n\t'fromnewhampshire.com',\n\t'fromnewjersey.com',\n\t'fromnewmexico.com',\n\t'fromnewyork.net',\n\t'fromnorthcarolina.com',\n\t'fromnorthdakota.com',\n\t'fromohio.com',\n\t'fromoklahoma.com',\n\t'fromoregon.net',\n\t'frompennsylvania.com',\n\t'fromrhodeisland.com',\n\t'fromru.com',\n\t'fromsouthcarolina.com',\n\t'fromsouthdakota.com',\n\t'fromtennessee.com',\n\t'fromtexas.com',\n\t'fromthestates.com',\n\t'fromutah.com',\n\t'fromvermont.com',\n\t'fromvirginia.com',\n\t'fromwashington.com',\n\t'fromwashingtondc.com',\n\t'fromwestvirginia.com',\n\t'fromwisconsin.com',\n\t'fromwyoming.com',\n\t'front.ru',\n\t'frontier.com',\n\t'frontiernet.net',\n\t'frostbyte.uk.net',\n\t'fsmail.net',\n\t'ftml.net',\n\t'fullmail.com',\n\t'funkfan.com',\n\t'funky4.com',\n\t'fuorissimo.com',\n\t'furnitureprovider.com',\n\t'fuse.net',\n\t'fut.es',\n\t'fwnb.com',\n\t'fxsmails.com',\n\t'galamb.net',\n\t'galaxy5.com',\n\t'gamebox.net',\n\t'gamegeek.com',\n\t'gamespotmail.com',\n\t'garbage.com',\n\t'gardener.com',\n\t'gawab.com',\n\t'gaybrighton.co.uk',\n\t'gaza.net',\n\t'gazeta.pl',\n\t'gazibooks.com',\n\t'gci.net',\n\t'gee-wiz.com',\n\t'geecities.com',\n\t'geek.com',\n\t'geek.hu',\n\t'geeklife.com',\n\t'general-hospital.com',\n\t'geocities.com',\n\t'geography.net',\n\t'geologist.com',\n\t'geopia.com',\n\t'gh2000.com',\n\t'ghanamail.com',\n\t'ghostmail.com',\n\t'giantsfan.com',\n\t'giga4u.de',\n\t'gigileung.org',\n\t'girl4god.com',\n\t'givepeaceachance.com',\n\t'glay.org',\n\t'glendale.net',\n\t'globalfree.it',\n\t'globalpagan.com',\n\t'globalsite.com.br',\n\t'gmail.com',\n\t'gmx.at',\n\t'gmx.de',\n\t'gmx.li',\n\t'gmx.net',\n\t'gnwmail.com',\n\t'go.com',\n\t'go.ro',\n\t'go.ru',\n\t'go2.com.py',\n\t'go2net.com',\n\t'gocollege.com',\n\t'gocubs.com',\n\t'gofree.co.uk',\n\t'goldenmail.ru',\n\t'goldmail.ru',\n\t'golfemail.com',\n\t'golfmail.be',\n\t'gonavy.net',\n\t'goodnewsmail.com',\n\t'goodstick.com',\n\t'googlemail.com',\n\t'goplay.com',\n\t'gorontalo.net',\n\t'gospelfan.com',\n\t'gothere.uk.com',\n\t'gotmail.com',\n\t'gotomy.com',\n\t'govolsfan.com',\n\t'gportal.hu',\n\t'grabmail.com',\n\t'graffiti.net',\n\t'gramszu.net',\n\t'grapplers.com',\n\t'gratisweb.com',\n\t'grungecafe.com',\n\t'gtemail.net',\n\t'gtmc.net',\n\t'gua.net',\n\t'guessmail.com',\n\t'guju.net',\n\t'gurlmail.com',\n\t'guy.com',\n\t'guy2.com',\n\t'guyanafriends.com',\n\t'gyorsposta.com',\n\t'gyorsposta.hu',\n\t'hackermail.net',\n\t'hailmail.net',\n\t'hairdresser.net',\n\t'hamptonroads.com',\n\t'handbag.com',\n\t'handleit.com',\n\t'hang-ten.com',\n\t'hanmail.net',\n\t'happemail.com',\n\t'happycounsel.com',\n\t'happypuppy.com',\n\t'hardcorefreak.com',\n\t'hawaii.rr.com',\n\t'hawaiiantel.net',\n\t'headbone.com',\n\t'heartthrob.com',\n\t'heerschap.com',\n\t'heesun.net',\n\t'hehe.com',\n\t'hello.hu',\n\t'hello.net.au',\n\t'hello.to',\n\t'helter-skelter.com',\n\t'hempseed.com',\n\t'herediano.com',\n\t'heremail.com',\n\t'herono1.com',\n\t'hey.to',\n\t'hhdevel.com',\n\t'highmilton.com',\n\t'highquality.com',\n\t'highveldmail.co.za',\n\t'hiphopfan.com',\n\t'hispavista.com',\n\t'hitthe.net',\n\t'hkg.net',\n\t'hkstarphoto.com',\n\t'hockeymail.com',\n\t'hollywoodkids.com',\n\t'home-email.com',\n\t'home.no.net',\n\t'home.ro',\n\t'home.se',\n\t'homeart.com',\n\t'homelocator.com',\n\t'homemail.com',\n\t'homestead.com',\n\t'homeworkcentral.com',\n\t'honduras.com',\n\t'hongkong.com',\n\t'hookup.net',\n\t'hoopsmail.com',\n\t'horrormail.com',\n\t'host-it.com.sg',\n\t'hot-shot.com',\n\t'hot.ee',\n\t'hotbot.com',\n\t'hotbrev.com',\n\t'hotepmail.com',\n\t'hotfire.net',\n\t'hotletter.com',\n\t'hotmail.co.il',\n\t'hotmail.co.uk',\n\t'hotmail.com',\n\t'hotmail.fr',\n\t'hotmail.kg',\n\t'hotmail.kz',\n\t'hotmail.roor',\n\t'hotmail.ru',\n\t'hotpop.com',\n\t'HotPOP.com',\n\t'hotpop3.com',\n\t'hotvoice.com',\n\t'housefancom',\n\t'housemail.com',\n\t'hsuchi.net',\n\t'html.tou.com',\n\t'hughes.net',\n\t'hunsa.com',\n\t'hurting.com',\n\t'hushmail.com',\n\t'hypernautica.com',\n\t'i-connect.com',\n\t'i-france.com',\n\t'i-mail.com.au',\n\t'i-mailbox.net',\n\t'i-p.com',\n\t'i.am',\n\t'i.amhey.to',\n\t'i12.com',\n\t'iamawoman.com',\n\t'iamwaiting.com',\n\t'iamwasted.com',\n\t'iamyours.com',\n\t'icestorm.com',\n\t'icloud.com',\n\t'icmsconsultants.com',\n\t'icq.com',\n\t'icqmail.com',\n\t'icrazy.com',\n\t'icu.md',\n\t'ID-base.com',\n\t'id-base.com',\n\t'ididitmyway.com',\n\t'idigjesus.com',\n\t'idirect.com',\n\t'iespana.es',\n\t'ifoward.com',\n\t'ig.com.br',\n\t'ignazio.it',\n\t'ignmail.com',\n\t'ihateclowns.com',\n\t'iinet.net.au',\n\t'ijustdontcare.com',\n\t'ilovechocolate.com',\n\t'ilovejesus.com',\n\t'ilovethemovies.com',\n\t'ilovetocollect.net',\n\t'ilse.nl',\n\t'imaginemail.com',\n\t'imail.org',\n\t'imail.ru',\n\t'imailbox.com',\n\t'imel.org',\n\t'imneverwrong.com',\n\t'imposter.co.uk',\n\t'imstressed.com',\n\t'imtoosexy.com',\n\t'in-box.net',\n\t'in2jesus.com',\n\t'iname.com',\n\t'inbox.net',\n\t'inbox.ru',\n\t'incamail.com',\n\t'includingarabia.com',\n\t'incredimail.com',\n\t'indexa.fr',\n\t'india.com',\n\t'indiatimes.com',\n\t'indo-mail.com',\n\t'indocities.com',\n\t'indomail.com',\n\t'indyracers.com',\n\t'info-media.de',\n\t'info66.com',\n\t'infohq.com',\n\t'infomail.es',\n\t'infomart.or.jp',\n\t'infospacemail.com',\n\t'infovia.com.ar',\n\t'inicia.es',\n\t'inmail.sk',\n\t'innocent.com',\n\t'inorbit.com',\n\t'insidebaltimore.net',\n\t'insight.rr.com',\n\t'insurer.com',\n\t'interburp.com',\n\t'interfree.it',\n\t'interia.pl',\n\t'interlap.com.ar',\n\t'intermail.co.il',\n\t'internet-club.com',\n\t'internet-police.com',\n\t'internetbiz.com',\n\t'internetdrive.com',\n\t'internetegypt.com',\n\t'internetemails.net',\n\t'internetmailing.net',\n\t'investormail.com',\n\t'inwind.it',\n\t'iobox.com',\n\t'iobox.fi',\n\t'iol.it',\n\t'iowaemail.com',\n\t'ip3.com',\n\t'iprimus.com.au',\n\t'iqemail.com',\n\t'irangate.net',\n\t'iraqmail.com',\n\t'ireland.com',\n\t'irj.hu',\n\t'isellcars.com',\n\t'iservejesus.com',\n\t'islamonline.net',\n\t'isleuthmail.com',\n\t'ismart.net',\n\t'isonfire.com',\n\t'isp9.net',\n\t'itloox.com',\n\t'itmom.com',\n\t'ivebeenframed.com',\n\t'ivillage.com',\n\t'iwan-fals.com',\n\t'iwmail.com',\n\t'iwon.com',\n\t'izadpanah.com',\n\t'jahoopa.com',\n\t'jakuza.hu',\n\t'japan.com',\n\t'jaydemail.com',\n\t'jazzandjava.com',\n\t'jazzfan.com',\n\t'jazzgame.com',\n\t'jerusalemmail.com',\n\t'jetemail.net',\n\t'jewishmail.com',\n\t'jippii.fi',\n\t'jmail.co.za',\n\t'joinme.com',\n\t'jokes.com',\n\t'jordanmail.com',\n\t'journalist.com',\n\t'jovem.te.pt',\n\t'joymail.com',\n\t'jpopmail.com',\n\t'jubiimail.dk',\n\t'jump.com',\n\t'jumpy.it',\n\t'juniormail.com',\n\t'juno.com',\n\t'justemail.net',\n\t'justicemail.com',\n\t'kaazoo.com',\n\t'kaixo.com',\n\t'kalpoint.com',\n\t'kansascity.com',\n\t'kapoorweb.com',\n\t'karachian.com',\n\t'karachioye.com',\n\t'karbasi.com',\n\t'katamail.com',\n\t'kayafmmail.co.za',\n\t'kbjrmail.com',\n\t'kcks.com',\n\t'keftamail.com',\n\t'keg-party.com',\n\t'keko.com.ar',\n\t'kellychen.com',\n\t'keromail.com',\n\t'keyemail.com',\n\t'kgb.hu',\n\t'khosropour.com',\n\t'kickassmail.com',\n\t'killermail.com',\n\t'kimo.com',\n\t'kinki-kids.com',\n\t'kittymail.com',\n\t'kitznet.at',\n\t'kiwibox.com',\n\t'kiwitown.com',\n\t'kmail.com.au',\n\t'konx.com',\n\t'korea.com',\n\t'kozmail.com',\n\t'krongthip.com',\n\t'krunis.com',\n\t'ksanmail.com',\n\t'ksee24mail.com',\n\t'kube93mail.com',\n\t'kukamail.com',\n\t'kumarweb.com',\n\t'kuwait-mail.com',\n\t'la.com',\n\t'ladymail.cz',\n\t'lagerlouts.com',\n\t'lahoreoye.com',\n\t'lakmail.com',\n\t'lamer.hu',\n\t'land.ru',\n\t'lankamail.com',\n\t'laposte.net',\n\t'latemodels.com',\n\t'latinmail.com',\n\t'latino.com',\n\t'law.com',\n\t'lawyer.com',\n\t'leehom.net',\n\t'legalactions.com',\n\t'legislator.com',\n\t'leonlai.net',\n\t'letsgomets.net',\n\t'letterbox.com',\n\t'levele.com',\n\t'levele.hu',\n\t'lex.bg',\n\t'lexis-nexis-mail.com',\n\t'liberomail.com',\n\t'lick101.com',\n\t'linkmaster.com',\n\t'linktrader.com',\n\t'linuxfreemail.com',\n\t'linuxmail.org',\n\t'lionsfan.com.au',\n\t'liontrucks.com',\n\t'liquidinformation.net',\n\t'list.ru',\n\t'littleapple.com',\n\t'littleblueroom.com',\n\t'live.com',\n\t'liverpoolfans.com',\n\t'llandudno.com',\n\t'llangollen.com',\n\t'lmxmail.sk',\n\t'lobbyist.com',\n\t'localbar.com',\n\t'locos.com',\n\t'london.com',\n\t'loobie.com',\n\t'looksmart.co.uk',\n\t'looksmart.com',\n\t'looksmart.com.au',\n\t'lopezclub.com',\n\t'louiskoo.com',\n\t'love.cz',\n\t'loveable.com',\n\t'lovefootball.com',\n\t'lovelygirl.net',\n\t'lovemail.com',\n\t'lover-boy.com',\n\t'lovergirl.com',\n\t'lovethebroncos.com',\n\t'lovethecowboys.com',\n\t'lovingjesus.com',\n\t'lowandslow.com',\n\t'luso.pt',\n\t'luukku.com',\n\t'lycos.co.uk',\n\t'lycos.com',\n\t'lycos.es',\n\t'lycos.it',\n\t'lycos.ne.jp',\n\t'lycosemail.com',\n\t'lycosmail.com',\n\t'm-a-i-l.com',\n\t'm-hmail.com',\n\t'm4.org',\n\t'mac.com',\n\t'macbox.com',\n\t'macfreak.com',\n\t'machinecandy.com',\n\t'macmail.com',\n\t'madcreations.com',\n\t'madrid.com',\n\t'maffia.hu',\n\t'magicmail.co.za',\n\t'mahmoodweb.com',\n\t'mail-awu.de',\n\t'mail-box.cz',\n\t'mail-center.com',\n\t'mail-central.com',\n\t'mail-page.com',\n\t'mail.austria.com',\n\t'mail.az',\n\t'mail.be',\n\t'mail.bulgaria.com',\n\t'mail.byte.it',\n\t'mail.co.za',\n\t'mail.com',\n\t'mail.ee',\n\t'mail.entrepeneurmag.com',\n\t'mail.freetown.com',\n\t'mail.gr',\n\t'mail.hitthebeach.com',\n\t'mail.kmsp.com',\n\t'mail.md',\n\t'mail.nu',\n\t'mail.org.uk',\n\t'mail.pf',\n\t'mail.pharmacy.com',\n\t'mail.pt',\n\t'mail.r-o-o-t.com',\n\t'mail.ru',\n\t'mail.salu.net',\n\t'mail.sisna.com',\n\t'mail.spaceports.com',\n\t'mail.theboys.com',\n\t'mail.usa.com',\n\t'mail.vasarhely.hu',\n\t'mail15.com',\n\t'mail1st.com',\n\t'mail2007.com',\n\t'mail2aaron.com',\n\t'mail2abby.com',\n\t'mail2abc.com',\n\t'mail2actor.com',\n\t'mail2admiral.com',\n\t'mail2adorable.com',\n\t'mail2adoration.com',\n\t'mail2adore.com',\n\t'mail2adventure.com',\n\t'mail2aeolus.com',\n\t'mail2aether.com',\n\t'mail2affection.com',\n\t'mail2afghanistan.com',\n\t'mail2africa.com',\n\t'mail2agent.com',\n\t'mail2aha.com',\n\t'mail2ahoy.com',\n\t'mail2aim.com',\n\t'mail2air.com',\n\t'mail2airbag.com',\n\t'mail2airforce.com',\n\t'mail2airport.com',\n\t'mail2alabama.com',\n\t'mail2alan.com',\n\t'mail2alaska.com',\n\t'mail2albania.com',\n\t'mail2alcoholic.com',\n\t'mail2alec.com',\n\t'mail2alexa.com',\n\t'mail2algeria.com',\n\t'mail2alicia.com',\n\t'mail2alien.com',\n\t'mail2allan.com',\n\t'mail2allen.com',\n\t'mail2allison.com',\n\t'mail2alpha.com',\n\t'mail2alyssa.com',\n\t'mail2amanda.com',\n\t'mail2amazing.com',\n\t'mail2amber.com',\n\t'mail2america.com',\n\t'mail2american.com',\n\t'mail2andorra.com',\n\t'mail2andrea.com',\n\t'mail2andy.com',\n\t'mail2anesthesiologist.com',\n\t'mail2angela.com',\n\t'mail2angola.com',\n\t'mail2ann.com',\n\t'mail2anna.com',\n\t'mail2anne.com',\n\t'mail2anthony.com',\n\t'mail2anything.com',\n\t'mail2aphrodite.com',\n\t'mail2apollo.com',\n\t'mail2april.com',\n\t'mail2aquarius.com',\n\t'mail2arabia.com',\n\t'mail2arabic.com',\n\t'mail2architect.com',\n\t'mail2ares.com',\n\t'mail2argentina.com',\n\t'mail2aries.com',\n\t'mail2arizona.com',\n\t'mail2arkansas.com',\n\t'mail2armenia.com',\n\t'mail2army.com',\n\t'mail2arnold.com',\n\t'mail2art.com',\n\t'mail2artemus.com',\n\t'mail2arthur.com',\n\t'mail2artist.com',\n\t'mail2ashley.com',\n\t'mail2ask.com',\n\t'mail2astronomer.com',\n\t'mail2athena.com',\n\t'mail2athlete.com',\n\t'mail2atlas.com',\n\t'mail2atom.com',\n\t'mail2attitude.com',\n\t'mail2auction.com',\n\t'mail2aunt.com',\n\t'mail2australia.com',\n\t'mail2austria.com',\n\t'mail2azerbaijan.com',\n\t'mail2baby.com',\n\t'mail2bahamas.com',\n\t'mail2bahrain.com',\n\t'mail2ballerina.com',\n\t'mail2ballplayer.com',\n\t'mail2band.com',\n\t'mail2bangladesh.com',\n\t'mail2bank.com',\n\t'mail2banker.com',\n\t'mail2bankrupt.com',\n\t'mail2baptist.com',\n\t'mail2bar.com',\n\t'mail2barbados.com',\n\t'mail2barbara.com',\n\t'mail2barter.com',\n\t'mail2basketball.com',\n\t'mail2batter.com',\n\t'mail2beach.com',\n\t'mail2beast.com',\n\t'mail2beatles.com',\n\t'mail2beauty.com',\n\t'mail2becky.com',\n\t'mail2beijing.com',\n\t'mail2belgium.com',\n\t'mail2belize.com',\n\t'mail2ben.com',\n\t'mail2bernard.com',\n\t'mail2beth.com',\n\t'mail2betty.com',\n\t'mail2beverly.com',\n\t'mail2beyond.com',\n\t'mail2biker.com',\n\t'mail2bill.com',\n\t'mail2billionaire.com',\n\t'mail2billy.com',\n\t'mail2bio.com',\n\t'mail2biologist.com',\n\t'mail2black.com',\n\t'mail2blackbelt.com',\n\t'mail2blake.com',\n\t'mail2blind.com',\n\t'mail2blonde.com',\n\t'mail2blues.com',\n\t'mail2bob.com',\n\t'mail2bobby.com',\n\t'mail2bolivia.com',\n\t'mail2bombay.com',\n\t'mail2bonn.com',\n\t'mail2bookmark.com',\n\t'mail2boreas.com',\n\t'mail2bosnia.com',\n\t'mail2boston.com',\n\t'mail2botswana.com',\n\t'mail2bradley.com',\n\t'mail2brazil.com',\n\t'mail2breakfast.com',\n\t'mail2brian.com',\n\t'mail2bride.com',\n\t'mail2brittany.com',\n\t'mail2broker.com',\n\t'mail2brook.com',\n\t'mail2bruce.com',\n\t'mail2brunei.com',\n\t'mail2brunette.com',\n\t'mail2brussels.com',\n\t'mail2bryan.com',\n\t'mail2bug.com',\n\t'mail2bulgaria.com',\n\t'mail2business.com',\n\t'mail2buy.com',\n\t'mail2ca.com',\n\t'mail2california.com',\n\t'mail2calvin.com',\n\t'mail2cambodia.com',\n\t'mail2cameroon.com',\n\t'mail2canada.com',\n\t'mail2cancer.com',\n\t'mail2capeverde.com',\n\t'mail2capricorn.com',\n\t'mail2cardinal.com',\n\t'mail2cardiologist.com',\n\t'mail2care.com',\n\t'mail2caroline.com',\n\t'mail2carolyn.com',\n\t'mail2casey.com',\n\t'mail2cat.com',\n\t'mail2caterer.com',\n\t'mail2cathy.com',\n\t'mail2catlover.com',\n\t'mail2catwalk.com',\n\t'mail2cell.com',\n\t'mail2chad.com',\n\t'mail2champaign.com',\n\t'mail2charles.com',\n\t'mail2chef.com',\n\t'mail2chemist.com',\n\t'mail2cherry.com',\n\t'mail2chicago.com',\n\t'mail2chile.com',\n\t'mail2china.com',\n\t'mail2chinese.com',\n\t'mail2chocolate.com',\n\t'mail2christian.com',\n\t'mail2christie.com',\n\t'mail2christmas.com',\n\t'mail2christy.com',\n\t'mail2chuck.com',\n\t'mail2cindy.com',\n\t'mail2clark.com',\n\t'mail2classifieds.com',\n\t'mail2claude.com',\n\t'mail2cliff.com',\n\t'mail2clinic.com',\n\t'mail2clint.com',\n\t'mail2close.com',\n\t'mail2club.com',\n\t'mail2coach.com',\n\t'mail2coastguard.com',\n\t'mail2colin.com',\n\t'mail2college.com',\n\t'mail2colombia.com',\n\t'mail2color.com',\n\t'mail2colorado.com',\n\t'mail2columbia.com',\n\t'mail2comedian.com',\n\t'mail2composer.com',\n\t'mail2computer.com',\n\t'mail2computers.com',\n\t'mail2concert.com',\n\t'mail2congo.com',\n\t'mail2connect.com',\n\t'mail2connecticut.com',\n\t'mail2consultant.com',\n\t'mail2convict.com',\n\t'mail2cook.com',\n\t'mail2cool.com',\n\t'mail2cory.com',\n\t'mail2costarica.com',\n\t'mail2country.com',\n\t'mail2courtney.com',\n\t'mail2cowboy.com',\n\t'mail2cowgirl.com',\n\t'mail2craig.com',\n\t'mail2crave.com',\n\t'mail2crazy.com',\n\t'mail2create.com',\n\t'mail2croatia.com',\n\t'mail2cry.com',\n\t'mail2crystal.com',\n\t'mail2cuba.com',\n\t'mail2culture.com',\n\t'mail2curt.com',\n\t'mail2customs.com',\n\t'mail2cute.com',\n\t'mail2cutey.com',\n\t'mail2cynthia.com',\n\t'mail2cyprus.com',\n\t'mail2czechrepublic.com',\n\t'mail2dad.com',\n\t'mail2dale.com',\n\t'mail2dallas.com',\n\t'mail2dan.com',\n\t'mail2dana.com',\n\t'mail2dance.com',\n\t'mail2dancer.com',\n\t'mail2danielle.com',\n\t'mail2danny.com',\n\t'mail2darlene.com',\n\t'mail2darling.com',\n\t'mail2darren.com',\n\t'mail2daughter.com',\n\t'mail2dave.com',\n\t'mail2dawn.com',\n\t'mail2dc.com',\n\t'mail2dealer.com',\n\t'mail2deanna.com',\n\t'mail2dearest.com',\n\t'mail2debbie.com',\n\t'mail2debby.com',\n\t'mail2deer.com',\n\t'mail2delaware.com',\n\t'mail2delicious.com',\n\t'mail2demeter.com',\n\t'mail2democrat.com',\n\t'mail2denise.com',\n\t'mail2denmark.com',\n\t'mail2dennis.com',\n\t'mail2dentist.com',\n\t'mail2derek.com',\n\t'mail2desert.com',\n\t'mail2devoted.com',\n\t'mail2devotion.com',\n\t'mail2diamond.com',\n\t'mail2diana.com',\n\t'mail2diane.com',\n\t'mail2diehard.com',\n\t'mail2dilemma.com',\n\t'mail2dillon.com',\n\t'mail2dinner.com',\n\t'mail2dinosaur.com',\n\t'mail2dionysos.com',\n\t'mail2diplomat.com',\n\t'mail2director.com',\n\t'mail2dirk.com',\n\t'mail2disco.com',\n\t'mail2dive.com',\n\t'mail2diver.com',\n\t'mail2divorced.com',\n\t'mail2djibouti.com',\n\t'mail2doctor.com',\n\t'mail2doglover.com',\n\t'mail2dominic.com',\n\t'mail2dominica.com',\n\t'mail2dominicanrepublic.com',\n\t'mail2don.com',\n\t'mail2donald.com',\n\t'mail2donna.com',\n\t'mail2doris.com',\n\t'mail2dorothy.com',\n\t'mail2doug.com',\n\t'mail2dough.com',\n\t'mail2douglas.com',\n\t'mail2dow.com',\n\t'mail2downtown.com',\n\t'mail2dream.com',\n\t'mail2dreamer.com',\n\t'mail2dude.com',\n\t'mail2dustin.com',\n\t'mail2dyke.com',\n\t'mail2dylan.com',\n\t'mail2earl.com',\n\t'mail2earth.com',\n\t'mail2eastend.com',\n\t'mail2eat.com',\n\t'mail2economist.com',\n\t'mail2ecuador.com',\n\t'mail2eddie.com',\n\t'mail2edgar.com',\n\t'mail2edwin.com',\n\t'mail2egypt.com',\n\t'mail2electron.com',\n\t'mail2eli.com',\n\t'mail2elizabeth.com',\n\t'mail2ellen.com',\n\t'mail2elliot.com',\n\t'mail2elsalvador.com',\n\t'mail2elvis.com',\n\t'mail2emergency.com',\n\t'mail2emily.com',\n\t'mail2engineer.com',\n\t'mail2english.com',\n\t'mail2environmentalist.com',\n\t'mail2eos.com',\n\t'mail2eric.com',\n\t'mail2erica.com',\n\t'mail2erin.com',\n\t'mail2erinyes.com',\n\t'mail2eris.com',\n\t'mail2eritrea.com',\n\t'mail2ernie.com',\n\t'mail2eros.com',\n\t'mail2estonia.com',\n\t'mail2ethan.com',\n\t'mail2ethiopia.com',\n\t'mail2eu.com',\n\t'mail2europe.com',\n\t'mail2eurus.com',\n\t'mail2eva.com',\n\t'mail2evan.com',\n\t'mail2evelyn.com',\n\t'mail2everything.com',\n\t'mail2exciting.com',\n\t'mail2expert.com',\n\t'mail2fairy.com',\n\t'mail2faith.com',\n\t'mail2fanatic.com',\n\t'mail2fancy.com',\n\t'mail2fantasy.com',\n\t'mail2farm.com',\n\t'mail2farmer.com',\n\t'mail2fashion.com',\n\t'mail2fat.com',\n\t'mail2feeling.com',\n\t'mail2female.com',\n\t'mail2fever.com',\n\t'mail2fighter.com',\n\t'mail2fiji.com',\n\t'mail2filmfestival.com',\n\t'mail2films.com',\n\t'mail2finance.com',\n\t'mail2finland.com',\n\t'mail2fireman.com',\n\t'mail2firm.com',\n\t'mail2fisherman.com',\n\t'mail2flexible.com',\n\t'mail2florence.com',\n\t'mail2florida.com',\n\t'mail2floyd.com',\n\t'mail2fly.com',\n\t'mail2fond.com',\n\t'mail2fondness.com',\n\t'mail2football.com',\n\t'mail2footballfan.com',\n\t'mail2found.com',\n\t'mail2france.com',\n\t'mail2frank.com',\n\t'mail2frankfurt.com',\n\t'mail2franklin.com',\n\t'mail2fred.com',\n\t'mail2freddie.com',\n\t'mail2free.com',\n\t'mail2freedom.com',\n\t'mail2french.com',\n\t'mail2freudian.com',\n\t'mail2friendship.com',\n\t'mail2from.com',\n\t'mail2fun.com',\n\t'mail2gabon.com',\n\t'mail2gabriel.com',\n\t'mail2gail.com',\n\t'mail2galaxy.com',\n\t'mail2gambia.com',\n\t'mail2games.com',\n\t'mail2gary.com',\n\t'mail2gavin.com',\n\t'mail2gemini.com',\n\t'mail2gene.com',\n\t'mail2genes.com',\n\t'mail2geneva.com',\n\t'mail2george.com',\n\t'mail2georgia.com',\n\t'mail2gerald.com',\n\t'mail2german.com',\n\t'mail2germany.com',\n\t'mail2ghana.com',\n\t'mail2gilbert.com',\n\t'mail2gina.com',\n\t'mail2girl.com',\n\t'mail2glen.com',\n\t'mail2gloria.com',\n\t'mail2goddess.com',\n\t'mail2gold.com',\n\t'mail2golfclub.com',\n\t'mail2golfer.com',\n\t'mail2gordon.com',\n\t'mail2government.com',\n\t'mail2grab.com',\n\t'mail2grace.com',\n\t'mail2graham.com',\n\t'mail2grandma.com',\n\t'mail2grandpa.com',\n\t'mail2grant.com',\n\t'mail2greece.com',\n\t'mail2green.com',\n\t'mail2greg.com',\n\t'mail2grenada.com',\n\t'mail2gsm.com',\n\t'mail2guard.com',\n\t'mail2guatemala.com',\n\t'mail2guy.com',\n\t'mail2hades.com',\n\t'mail2haiti.com',\n\t'mail2hal.com',\n\t'mail2handhelds.com',\n\t'mail2hank.com',\n\t'mail2hannah.com',\n\t'mail2harold.com',\n\t'mail2harry.com',\n\t'mail2hawaii.com',\n\t'mail2headhunter.com',\n\t'mail2heal.com',\n\t'mail2heather.com',\n\t'mail2heaven.com',\n\t'mail2hebe.com',\n\t'mail2hecate.com',\n\t'mail2heidi.com',\n\t'mail2helen.com',\n\t'mail2hell.com',\n\t'mail2help.com',\n\t'mail2helpdesk.com',\n\t'mail2henry.com',\n\t'mail2hephaestus.com',\n\t'mail2hera.com',\n\t'mail2hercules.com',\n\t'mail2herman.com',\n\t'mail2hermes.com',\n\t'mail2hespera.com',\n\t'mail2hestia.com',\n\t'mail2highschool.com',\n\t'mail2hindu.com',\n\t'mail2hip.com',\n\t'mail2hiphop.com',\n\t'mail2holland.com',\n\t'mail2holly.com',\n\t'mail2hollywood.com',\n\t'mail2homer.com',\n\t'mail2honduras.com',\n\t'mail2honey.com',\n\t'mail2hongkong.com',\n\t'mail2hope.com',\n\t'mail2horse.com',\n\t'mail2hot.com',\n\t'mail2hotel.com',\n\t'mail2houston.com',\n\t'mail2howard.com',\n\t'mail2hugh.com',\n\t'mail2human.com',\n\t'mail2hungary.com',\n\t'mail2hungry.com',\n\t'mail2hygeia.com',\n\t'mail2hyperspace.com',\n\t'mail2hypnos.com',\n\t'mail2ian.com',\n\t'mail2ice-cream.com',\n\t'mail2iceland.com',\n\t'mail2idaho.com',\n\t'mail2idontknow.com',\n\t'mail2illinois.com',\n\t'mail2imam.com',\n\t'mail2in.com',\n\t'mail2india.com',\n\t'mail2indian.com',\n\t'mail2indiana.com',\n\t'mail2indonesia.com',\n\t'mail2infinity.com',\n\t'mail2intense.com',\n\t'mail2iowa.com',\n\t'mail2iran.com',\n\t'mail2iraq.com',\n\t'mail2ireland.com',\n\t'mail2irene.com',\n\t'mail2iris.com',\n\t'mail2irresistible.com',\n\t'mail2irving.com',\n\t'mail2irwin.com',\n\t'mail2isaac.com',\n\t'mail2israel.com',\n\t'mail2italian.com',\n\t'mail2italy.com',\n\t'mail2jackie.com',\n\t'mail2jacob.com',\n\t'mail2jail.com',\n\t'mail2jaime.com',\n\t'mail2jake.com',\n\t'mail2jamaica.com',\n\t'mail2james.com',\n\t'mail2jamie.com',\n\t'mail2jan.com',\n\t'mail2jane.com',\n\t'mail2janet.com',\n\t'mail2janice.com',\n\t'mail2japan.com',\n\t'mail2japanese.com',\n\t'mail2jasmine.com',\n\t'mail2jason.com',\n\t'mail2java.com',\n\t'mail2jay.com',\n\t'mail2jazz.com',\n\t'mail2jed.com',\n\t'mail2jeffrey.com',\n\t'mail2jennifer.com',\n\t'mail2jenny.com',\n\t'mail2jeremy.com',\n\t'mail2jerry.com',\n\t'mail2jessica.com',\n\t'mail2jessie.com',\n\t'mail2jesus.com',\n\t'mail2jew.com',\n\t'mail2jeweler.com',\n\t'mail2jim.com',\n\t'mail2jimmy.com',\n\t'mail2joan.com',\n\t'mail2joann.com',\n\t'mail2joanna.com',\n\t'mail2jody.com',\n\t'mail2joe.com',\n\t'mail2joel.com',\n\t'mail2joey.com',\n\t'mail2john.com',\n\t'mail2join.com',\n\t'mail2jon.com',\n\t'mail2jonathan.com',\n\t'mail2jones.com',\n\t'mail2jordan.com',\n\t'mail2joseph.com',\n\t'mail2josh.com',\n\t'mail2joy.com',\n\t'mail2juan.com',\n\t'mail2judge.com',\n\t'mail2judy.com',\n\t'mail2juggler.com',\n\t'mail2julian.com',\n\t'mail2julie.com',\n\t'mail2jumbo.com',\n\t'mail2junk.com',\n\t'mail2justin.com',\n\t'mail2justme.com',\n\t'mail2kansas.com',\n\t'mail2karate.com',\n\t'mail2karen.com',\n\t'mail2karl.com',\n\t'mail2karma.com',\n\t'mail2kathleen.com',\n\t'mail2kathy.com',\n\t'mail2katie.com',\n\t'mail2kay.com',\n\t'mail2kazakhstan.com',\n\t'mail2keen.com',\n\t'mail2keith.com',\n\t'mail2kelly.com',\n\t'mail2kelsey.com',\n\t'mail2ken.com',\n\t'mail2kendall.com',\n\t'mail2kennedy.com',\n\t'mail2kenneth.com',\n\t'mail2kenny.com',\n\t'mail2kentucky.com',\n\t'mail2kenya.com',\n\t'mail2kerry.com',\n\t'mail2kevin.com',\n\t'mail2kim.com',\n\t'mail2kimberly.com',\n\t'mail2king.com',\n\t'mail2kirk.com',\n\t'mail2kiss.com',\n\t'mail2kosher.com',\n\t'mail2kristin.com',\n\t'mail2kurt.com',\n\t'mail2kuwait.com',\n\t'mail2kyle.com',\n\t'mail2kyrgyzstan.com',\n\t'mail2la.com',\n\t'mail2lacrosse.com',\n\t'mail2lance.com',\n\t'mail2lao.com',\n\t'mail2larry.com',\n\t'mail2latvia.com',\n\t'mail2laugh.com',\n\t'mail2laura.com',\n\t'mail2lauren.com',\n\t'mail2laurie.com',\n\t'mail2lawrence.com',\n\t'mail2lawyer.com',\n\t'mail2lebanon.com',\n\t'mail2lee.com',\n\t'mail2leo.com',\n\t'mail2leon.com',\n\t'mail2leonard.com',\n\t'mail2leone.com',\n\t'mail2leslie.com',\n\t'mail2letter.com',\n\t'mail2liberia.com',\n\t'mail2libertarian.com',\n\t'mail2libra.com',\n\t'mail2libya.com',\n\t'mail2liechtenstein.com',\n\t'mail2life.com',\n\t'mail2linda.com',\n\t'mail2linux.com',\n\t'mail2lionel.com',\n\t'mail2lipstick.com',\n\t'mail2liquid.com',\n\t'mail2lisa.com',\n\t'mail2lithuania.com',\n\t'mail2litigator.com',\n\t'mail2liz.com',\n\t'mail2lloyd.com',\n\t'mail2lois.com',\n\t'mail2lola.com',\n\t'mail2london.com',\n\t'mail2looking.com',\n\t'mail2lori.com',\n\t'mail2lost.com',\n\t'mail2lou.com',\n\t'mail2louis.com',\n\t'mail2louisiana.com',\n\t'mail2lovable.com',\n\t'mail2love.com',\n\t'mail2lucky.com',\n\t'mail2lucy.com',\n\t'mail2lunch.com',\n\t'mail2lust.com',\n\t'mail2luxembourg.com',\n\t'mail2luxury.com',\n\t'mail2lyle.com',\n\t'mail2lynn.com',\n\t'mail2madagascar.com',\n\t'mail2madison.com',\n\t'mail2madrid.com',\n\t'mail2maggie.com',\n\t'mail2mail4.com',\n\t'mail2maine.com',\n\t'mail2malawi.com',\n\t'mail2malaysia.com',\n\t'mail2maldives.com',\n\t'mail2mali.com',\n\t'mail2malta.com',\n\t'mail2mambo.com',\n\t'mail2man.com',\n\t'mail2mandy.com',\n\t'mail2manhunter.com',\n\t'mail2mankind.com',\n\t'mail2many.com',\n\t'mail2marc.com',\n\t'mail2marcia.com',\n\t'mail2margaret.com',\n\t'mail2margie.com',\n\t'mail2marhaba.com',\n\t'mail2maria.com',\n\t'mail2marilyn.com',\n\t'mail2marines.com',\n\t'mail2mark.com',\n\t'mail2marriage.com',\n\t'mail2married.com',\n\t'mail2marries.com',\n\t'mail2mars.com',\n\t'mail2marsha.com',\n\t'mail2marshallislands.com',\n\t'mail2martha.com',\n\t'mail2martin.com',\n\t'mail2marty.com',\n\t'mail2marvin.com',\n\t'mail2mary.com',\n\t'mail2maryland.com',\n\t'mail2mason.com',\n\t'mail2massachusetts.com',\n\t'mail2matt.com',\n\t'mail2matthew.com',\n\t'mail2maurice.com',\n\t'mail2mauritania.com',\n\t'mail2mauritius.com',\n\t'mail2max.com',\n\t'mail2maxwell.com',\n\t'mail2maybe.com',\n\t'mail2mba.com',\n\t'mail2me4u.com',\n\t'mail2mechanic.com',\n\t'mail2medieval.com',\n\t'mail2megan.com',\n\t'mail2mel.com',\n\t'mail2melanie.com',\n\t'mail2melissa.com',\n\t'mail2melody.com',\n\t'mail2member.com',\n\t'mail2memphis.com',\n\t'mail2methodist.com',\n\t'mail2mexican.com',\n\t'mail2mexico.com',\n\t'mail2mgz.com',\n\t'mail2miami.com',\n\t'mail2michael.com',\n\t'mail2michelle.com',\n\t'mail2michigan.com',\n\t'mail2mike.com',\n\t'mail2milan.com',\n\t'mail2milano.com',\n\t'mail2mildred.com',\n\t'mail2milkyway.com',\n\t'mail2millennium.com',\n\t'mail2millionaire.com',\n\t'mail2milton.com',\n\t'mail2mime.com',\n\t'mail2mindreader.com',\n\t'mail2mini.com',\n\t'mail2minister.com',\n\t'mail2minneapolis.com',\n\t'mail2minnesota.com',\n\t'mail2miracle.com',\n\t'mail2missionary.com',\n\t'mail2mississippi.com',\n\t'mail2missouri.com',\n\t'mail2mitch.com',\n\t'mail2model.com',\n\t'mail2moldova.commail2molly.com',\n\t'mail2mom.com',\n\t'mail2monaco.com',\n\t'mail2money.com',\n\t'mail2mongolia.com',\n\t'mail2monica.com',\n\t'mail2montana.com',\n\t'mail2monty.com',\n\t'mail2moon.com',\n\t'mail2morocco.com',\n\t'mail2morpheus.com',\n\t'mail2mors.com',\n\t'mail2moscow.com',\n\t'mail2moslem.com',\n\t'mail2mouseketeer.com',\n\t'mail2movies.com',\n\t'mail2mozambique.com',\n\t'mail2mp3.com',\n\t'mail2mrright.com',\n\t'mail2msright.com',\n\t'mail2museum.com',\n\t'mail2music.com',\n\t'mail2musician.com',\n\t'mail2muslim.com',\n\t'mail2my.com',\n\t'mail2myboat.com',\n\t'mail2mycar.com',\n\t'mail2mycell.com',\n\t'mail2mygsm.com',\n\t'mail2mylaptop.com',\n\t'mail2mymac.com',\n\t'mail2mypager.com',\n\t'mail2mypalm.com',\n\t'mail2mypc.com',\n\t'mail2myphone.com',\n\t'mail2myplane.com',\n\t'mail2namibia.com',\n\t'mail2nancy.com',\n\t'mail2nasdaq.com',\n\t'mail2nathan.com',\n\t'mail2nauru.com',\n\t'mail2navy.com',\n\t'mail2neal.com',\n\t'mail2nebraska.com',\n\t'mail2ned.com',\n\t'mail2neil.com',\n\t'mail2nelson.com',\n\t'mail2nemesis.com',\n\t'mail2nepal.com',\n\t'mail2netherlands.com',\n\t'mail2network.com',\n\t'mail2nevada.com',\n\t'mail2newhampshire.com',\n\t'mail2newjersey.com',\n\t'mail2newmexico.com',\n\t'mail2newyork.com',\n\t'mail2newzealand.com',\n\t'mail2nicaragua.com',\n\t'mail2nick.com',\n\t'mail2nicole.com',\n\t'mail2niger.com',\n\t'mail2nigeria.com',\n\t'mail2nike.com',\n\t'mail2no.com',\n\t'mail2noah.com',\n\t'mail2noel.com',\n\t'mail2noelle.com',\n\t'mail2normal.com',\n\t'mail2norman.com',\n\t'mail2northamerica.com',\n\t'mail2northcarolina.com',\n\t'mail2northdakota.com',\n\t'mail2northpole.com',\n\t'mail2norway.com',\n\t'mail2notus.com',\n\t'mail2noway.com',\n\t'mail2nowhere.com',\n\t'mail2nuclear.com',\n\t'mail2nun.com',\n\t'mail2ny.com',\n\t'mail2oasis.com',\n\t'mail2oceanographer.com',\n\t'mail2ohio.com',\n\t'mail2ok.com',\n\t'mail2oklahoma.com',\n\t'mail2oliver.com',\n\t'mail2oman.com',\n\t'mail2one.com',\n\t'mail2onfire.com',\n\t'mail2online.com',\n\t'mail2oops.com',\n\t'mail2open.com',\n\t'mail2ophthalmologist.com',\n\t'mail2optometrist.com',\n\t'mail2oregon.com',\n\t'mail2oscars.com',\n\t'mail2oslo.com',\n\t'mail2painter.com',\n\t'mail2pakistan.com',\n\t'mail2palau.com',\n\t'mail2pan.com',\n\t'mail2panama.com',\n\t'mail2paraguay.com',\n\t'mail2paralegal.com',\n\t'mail2paris.com',\n\t'mail2park.com',\n\t'mail2parker.com',\n\t'mail2party.com',\n\t'mail2passion.com',\n\t'mail2pat.com',\n\t'mail2patricia.com',\n\t'mail2patrick.com',\n\t'mail2patty.com',\n\t'mail2paul.com',\n\t'mail2paula.com',\n\t'mail2pay.com',\n\t'mail2peace.com',\n\t'mail2pediatrician.com',\n\t'mail2peggy.com',\n\t'mail2pennsylvania.com',\n\t'mail2perry.com',\n\t'mail2persephone.com',\n\t'mail2persian.com',\n\t'mail2peru.com',\n\t'mail2pete.com',\n\t'mail2peter.com',\n\t'mail2pharmacist.com',\n\t'mail2phil.com',\n\t'mail2philippines.com',\n\t'mail2phoenix.com',\n\t'mail2phonecall.com',\n\t'mail2phyllis.com',\n\t'mail2pickup.com',\n\t'mail2pilot.com',\n\t'mail2pisces.com',\n\t'mail2planet.com',\n\t'mail2platinum.com',\n\t'mail2plato.com',\n\t'mail2pluto.com',\n\t'mail2pm.com',\n\t'mail2podiatrist.com',\n\t'mail2poet.com',\n\t'mail2poland.com',\n\t'mail2policeman.com',\n\t'mail2policewoman.com',\n\t'mail2politician.com',\n\t'mail2pop.com',\n\t'mail2pope.com',\n\t'mail2popular.com',\n\t'mail2portugal.com',\n\t'mail2poseidon.com',\n\t'mail2potatohead.com',\n\t'mail2power.com',\n\t'mail2presbyterian.com',\n\t'mail2president.com',\n\t'mail2priest.com',\n\t'mail2prince.com',\n\t'mail2princess.com',\n\t'mail2producer.com',\n\t'mail2professor.com',\n\t'mail2protect.com',\n\t'mail2psychiatrist.com',\n\t'mail2psycho.com',\n\t'mail2psychologist.com',\n\t'mail2qatar.com',\n\t'mail2queen.com',\n\t'mail2rabbi.com',\n\t'mail2race.com',\n\t'mail2racer.com',\n\t'mail2rachel.com',\n\t'mail2rage.com',\n\t'mail2rainmaker.com',\n\t'mail2ralph.com',\n\t'mail2randy.com',\n\t'mail2rap.com',\n\t'mail2rare.com',\n\t'mail2rave.com',\n\t'mail2ray.com',\n\t'mail2raymond.com',\n\t'mail2realtor.com',\n\t'mail2rebecca.com',\n\t'mail2recruiter.com',\n\t'mail2recycle.com',\n\t'mail2redhead.com',\n\t'mail2reed.com',\n\t'mail2reggie.com',\n\t'mail2register.com',\n\t'mail2rent.com',\n\t'mail2republican.com',\n\t'mail2resort.com',\n\t'mail2rex.com',\n\t'mail2rhodeisland.com',\n\t'mail2rich.com',\n\t'mail2richard.com',\n\t'mail2ricky.com',\n\t'mail2ride.com',\n\t'mail2riley.com',\n\t'mail2rita.com',\n\t'mail2rob.com',\n\t'mail2robert.com',\n\t'mail2roberta.com',\n\t'mail2robin.com',\n\t'mail2rock.com',\n\t'mail2rocker.com',\n\t'mail2rod.com',\n\t'mail2rodney.com',\n\t'mail2romania.com',\n\t'mail2rome.com',\n\t'mail2ron.com',\n\t'mail2ronald.com',\n\t'mail2ronnie.com',\n\t'mail2rose.com',\n\t'mail2rosie.com',\n\t'mail2roy.com',\n\t'mail2rudy.com',\n\t'mail2rugby.com',\n\t'mail2runner.com',\n\t'mail2russell.com',\n\t'mail2russia.com',\n\t'mail2russian.com',\n\t'mail2rusty.com',\n\t'mail2ruth.com',\n\t'mail2rwanda.com',\n\t'mail2ryan.com',\n\t'mail2sa.com',\n\t'mail2sabrina.com',\n\t'mail2safe.com',\n\t'mail2sagittarius.com',\n\t'mail2sail.com',\n\t'mail2sailor.com',\n\t'mail2sal.com',\n\t'mail2salaam.com',\n\t'mail2sam.com',\n\t'mail2samantha.com',\n\t'mail2samoa.com',\n\t'mail2samurai.com',\n\t'mail2sandra.com',\n\t'mail2sandy.com',\n\t'mail2sanfrancisco.com',\n\t'mail2sanmarino.com',\n\t'mail2santa.com',\n\t'mail2sara.com',\n\t'mail2sarah.com',\n\t'mail2sat.com',\n\t'mail2saturn.com',\n\t'mail2saudi.com',\n\t'mail2saudiarabia.com',\n\t'mail2save.com',\n\t'mail2savings.com',\n\t'mail2school.com',\n\t'mail2scientist.com',\n\t'mail2scorpio.com',\n\t'mail2scott.com',\n\t'mail2sean.com',\n\t'mail2search.com',\n\t'mail2seattle.com',\n\t'mail2secretagent.com',\n\t'mail2senate.com',\n\t'mail2senegal.com',\n\t'mail2sensual.com',\n\t'mail2seth.com',\n\t'mail2sevenseas.com',\n\t'mail2sexy.com',\n\t'mail2seychelles.com',\n\t'mail2shane.com',\n\t'mail2sharon.com',\n\t'mail2shawn.com',\n\t'mail2ship.com',\n\t'mail2shirley.com',\n\t'mail2shoot.com',\n\t'mail2shuttle.com',\n\t'mail2sierraleone.com',\n\t'mail2simon.com',\n\t'mail2singapore.com',\n\t'mail2single.com',\n\t'mail2site.com',\n\t'mail2skater.com',\n\t'mail2skier.com',\n\t'mail2sky.com',\n\t'mail2sleek.com',\n\t'mail2slim.com',\n\t'mail2slovakia.com',\n\t'mail2slovenia.com',\n\t'mail2smile.com',\n\t'mail2smith.com',\n\t'mail2smooth.com',\n\t'mail2soccer.com',\n\t'mail2soccerfan.com',\n\t'mail2socialist.com',\n\t'mail2soldier.com',\n\t'mail2somalia.com',\n\t'mail2son.com',\n\t'mail2song.com',\n\t'mail2sos.com',\n\t'mail2sound.com',\n\t'mail2southafrica.com',\n\t'mail2southamerica.com',\n\t'mail2southcarolina.com',\n\t'mail2southdakota.com',\n\t'mail2southkorea.com',\n\t'mail2southpole.com',\n\t'mail2spain.com',\n\t'mail2spanish.com',\n\t'mail2spare.com',\n\t'mail2spectrum.com',\n\t'mail2splash.com',\n\t'mail2sponsor.com',\n\t'mail2sports.com',\n\t'mail2srilanka.com',\n\t'mail2stacy.com',\n\t'mail2stan.com',\n\t'mail2stanley.com',\n\t'mail2star.com',\n\t'mail2state.com',\n\t'mail2stephanie.com',\n\t'mail2steve.com',\n\t'mail2steven.com',\n\t'mail2stewart.com',\n\t'mail2stlouis.com',\n\t'mail2stock.com',\n\t'mail2stockholm.com',\n\t'mail2stockmarket.com',\n\t'mail2storage.com',\n\t'mail2store.com',\n\t'mail2strong.com',\n\t'mail2student.com',\n\t'mail2studio.com',\n\t'mail2studio54.com',\n\t'mail2stuntman.com',\n\t'mail2subscribe.com',\n\t'mail2sudan.com',\n\t'mail2superstar.com',\n\t'mail2surfer.com',\n\t'mail2suriname.com',\n\t'mail2susan.com',\n\t'mail2suzie.com',\n\t'mail2swaziland.com',\n\t'mail2sweden.com',\n\t'mail2sweetheart.com',\n\t'mail2swim.com',\n\t'mail2swimmer.com',\n\t'mail2swiss.com',\n\t'mail2switzerland.com',\n\t'mail2sydney.com',\n\t'mail2sylvia.com',\n\t'mail2syria.com',\n\t'mail2taboo.com',\n\t'mail2taiwan.com',\n\t'mail2tajikistan.com',\n\t'mail2tammy.com',\n\t'mail2tango.com',\n\t'mail2tanya.com',\n\t'mail2tanzania.com',\n\t'mail2tara.com',\n\t'mail2taurus.com',\n\t'mail2taxi.com',\n\t'mail2taxidermist.com',\n\t'mail2taylor.com',\n\t'mail2taz.com',\n\t'mail2teacher.com',\n\t'mail2technician.com',\n\t'mail2ted.com',\n\t'mail2telephone.com',\n\t'mail2teletubbie.com',\n\t'mail2tenderness.com',\n\t'mail2tennessee.com',\n\t'mail2tennis.com',\n\t'mail2tennisfan.com',\n\t'mail2terri.com',\n\t'mail2terry.com',\n\t'mail2test.com',\n\t'mail2texas.com',\n\t'mail2thailand.com',\n\t'mail2therapy.com',\n\t'mail2think.com',\n\t'mail2tickets.com',\n\t'mail2tiffany.com',\n\t'mail2tim.com',\n\t'mail2time.com',\n\t'mail2timothy.com',\n\t'mail2tina.com',\n\t'mail2titanic.com',\n\t'mail2toby.com',\n\t'mail2todd.com',\n\t'mail2togo.com',\n\t'mail2tom.com',\n\t'mail2tommy.com',\n\t'mail2tonga.com',\n\t'mail2tony.com',\n\t'mail2touch.com',\n\t'mail2tourist.com',\n\t'mail2tracey.com',\n\t'mail2tracy.com',\n\t'mail2tramp.com',\n\t'mail2travel.com',\n\t'mail2traveler.com',\n\t'mail2travis.com',\n\t'mail2trekkie.com',\n\t'mail2trex.com',\n\t'mail2triallawyer.com',\n\t'mail2trick.com',\n\t'mail2trillionaire.com',\n\t'mail2troy.com',\n\t'mail2truck.com',\n\t'mail2trump.com',\n\t'mail2try.com',\n\t'mail2tunisia.com',\n\t'mail2turbo.com',\n\t'mail2turkey.com',\n\t'mail2turkmenistan.com',\n\t'mail2tv.com',\n\t'mail2tycoon.com',\n\t'mail2tyler.com',\n\t'mail2u4me.com',\n\t'mail2uae.com',\n\t'mail2uganda.com',\n\t'mail2uk.com',\n\t'mail2ukraine.com',\n\t'mail2uncle.com',\n\t'mail2unsubscribe.com',\n\t'mail2uptown.com',\n\t'mail2uruguay.com',\n\t'mail2usa.com',\n\t'mail2utah.com',\n\t'mail2uzbekistan.com',\n\t'mail2v.com',\n\t'mail2vacation.com',\n\t'mail2valentines.com',\n\t'mail2valerie.com',\n\t'mail2valley.com',\n\t'mail2vamoose.com',\n\t'mail2vanessa.com',\n\t'mail2vanuatu.com',\n\t'mail2venezuela.com',\n\t'mail2venous.com',\n\t'mail2venus.com',\n\t'mail2vermont.com',\n\t'mail2vickie.com',\n\t'mail2victor.com',\n\t'mail2victoria.com',\n\t'mail2vienna.com',\n\t'mail2vietnam.com',\n\t'mail2vince.com',\n\t'mail2virginia.com',\n\t'mail2virgo.com',\n\t'mail2visionary.com',\n\t'mail2vodka.com',\n\t'mail2volleyball.com',\n\t'mail2waiter.com',\n\t'mail2wallstreet.com',\n\t'mail2wally.com',\n\t'mail2walter.com',\n\t'mail2warren.com',\n\t'mail2washington.com',\n\t'mail2wave.com',\n\t'mail2way.com',\n\t'mail2waycool.com',\n\t'mail2wayne.com',\n\t'mail2webmaster.com',\n\t'mail2webtop.com',\n\t'mail2webtv.com',\n\t'mail2weird.com',\n\t'mail2wendell.com',\n\t'mail2wendy.com',\n\t'mail2westend.com',\n\t'mail2westvirginia.com',\n\t'mail2whether.com',\n\t'mail2whip.com',\n\t'mail2white.com',\n\t'mail2whitehouse.com',\n\t'mail2whitney.com',\n\t'mail2why.com',\n\t'mail2wilbur.com',\n\t'mail2wild.com',\n\t'mail2willard.com',\n\t'mail2willie.com',\n\t'mail2wine.com',\n\t'mail2winner.com',\n\t'mail2wired.com',\n\t'mail2wisconsin.com',\n\t'mail2woman.com',\n\t'mail2wonder.com',\n\t'mail2world.com',\n\t'mail2worship.com',\n\t'mail2wow.com',\n\t'mail2www.com',\n\t'mail2wyoming.com',\n\t'mail2xfiles.com',\n\t'mail2xox.com',\n\t'mail2yachtclub.com',\n\t'mail2yahalla.com',\n\t'mail2yemen.com',\n\t'mail2yes.com',\n\t'mail2yugoslavia.com',\n\t'mail2zack.com',\n\t'mail2zambia.com',\n\t'mail2zenith.com',\n\t'mail2zephir.com',\n\t'mail2zeus.com',\n\t'mail2zipper.com',\n\t'mail2zoo.com',\n\t'mail2zoologist.com',\n\t'mail2zurich.com',\n\t'mail3000.com',\n\t'mail333.com',\n\t'mailandftp.com',\n\t'MailandNews.com',\n\t'mailandnews.com',\n\t'mailas.com',\n\t'mailasia.com',\n\t'mailbolt.com',\n\t'mailbomb.net',\n\t'mailboom.com',\n\t'mailbox.as',\n\t'mailbox.co.za',\n\t'mailbox.gr',\n\t'mailbox.hu',\n\t'mailbr.com.br',\n\t'mailc.net',\n\t'mailcan.com',\n\t'mailcc.com',\n\t'mailchoose.co',\n\t'mailcity.com',\n\t'mailclub.fr',\n\t'mailclub.net',\n\t'mailexcite.com',\n\t'mailforce.net',\n\t'mailftp.com',\n\t'mailgate.gr',\n\t'mailgenie.net',\n\t'mailhaven.com',\n\t'mailhood.com',\n\t'mailingweb.com',\n\t'mailisent.com',\n\t'mailite.com',\n\t'mailme.dk',\n\t'mailmight.com',\n\t'mailmij.nl',\n\t'mailnew.com',\n\t'mailops.com',\n\t'mailoye.com',\n\t'mailpanda.com',\n\t'mailpokemon.com',\n\t'mailpost.zzn.com',\n\t'mailpride.com',\n\t'mailpuppy.com',\n\t'mailroom.com',\n\t'mailru.com',\n\t'mailsent.net',\n\t'mailshuttle.com',\n\t'mailstart.com',\n\t'mailstartplus.com',\n\t'mailsurf.com',\n\t'mailtag.com',\n\t'mailto.de',\n\t'mailup.net',\n\t'mailwire.com',\n\t'maktoob.com',\n\t'malayalamtelevision.net',\n\t'maltesemail.com',\n\t'manager.de',\n\t'mancity.net',\n\t'mantrafreenet.com',\n\t'mantramail.com',\n\t'mantraonline.com',\n\t'marchmail.com',\n\t'mariah-carey.ml.org',\n\t'mariahc.com',\n\t'marijuana.com',\n\t'marijuana.nl',\n\t'marketing.lu',\n\t'married-not.com',\n\t'marsattack.com',\n\t'martindalemail.com',\n\t'mash4077.com',\n\t'masrawy.com',\n\t'matmail.com',\n\t'mauimail.com',\n\t'mauritius.com',\n\t'maxleft.com',\n\t'maxmail.co.uk',\n\t'mbox.com.au',\n\t'me-mail.hu',\n\t'me.com',\n\t'medical.net.au',\n\t'medmail.com',\n\t'medscape.com',\n\t'meetingmall.com',\n\t'megago.com',\n\t'megamail.pt',\n\t'megapoint.com',\n\t'mehrani.com',\n\t'mehtaweb.com',\n\t'mekhong.com',\n\t'melodymail.com',\n\t'meloo.com',\n\t'members.student.com',\n\t'message.hu',\n\t'messages.to',\n\t'metacrawler.com',\n\t'metalfan.com',\n\t'metta.lk',\n\t'miatadriver.com',\n\t'miesto.sk',\n\t'mighty.co.za',\n\t'miho-nakayama.com',\n\t'mikrotamanet.com',\n\t'millionaireintraining.com',\n\t'millionairemail.com',\n\t'milmail.com',\n\t'milmail.com15',\n\t'mindless.com',\n\t'mindspring.com',\n\t'mini-mail.com',\n\t'misery.net',\n\t'mittalweb.com',\n\t'mixmail.com',\n\t'mjfrogmail.com',\n\t'ml1.net',\n\t'mobilbatam.com',\n\t'mochamail.com',\n\t'mohammed.com',\n\t'moldova.cc',\n\t'moldova.com',\n\t'moldovacc.com',\n\t'momslife.com',\n\t'money.net',\n\t'montevideo.com.uy',\n\t'moonman.com',\n\t'moose-mail.com',\n\t'mortaza.com',\n\t'mosaicfx.com',\n\t'most-wanted.com',\n\t'mostlysunny.com',\n\t'motormania.com',\n\t'movemail.com',\n\t'movieluver.com',\n\t'mp4.it',\n\t'mr-potatohead.com',\n\t'mrpost.com',\n\t'mscold.com',\n\t'msgbox.com',\n\t'msn.com',\n\t'mttestdriver.com',\n\t'MTtestdriver.com',\n\t'MultipleChoices',\n\t'mundomail.net',\n\t'munich.com',\n\t'music.com',\n\t'music.com19',\n\t'musician.org',\n\t'musicscene.org',\n\t'muslimemail.com',\n\t'muslimsonline.com',\n\t'mutantweb.com',\n\t'mybox.it',\n\t'mycabin.com',\n\t'mycampus.com',\n\t'mycity.com',\n\t'mycool.com',\n\t'mydomain.com',\n\t'mydotcomaddress.com',\n\t'myfamily.com',\n\t'myfastmail.com',\n\t'mygo.com',\n\t'myiris.com',\n\t'mynamedot.com',\n\t'mynetaddress.com',\n\t'myownemail.com',\n\t'myownfriends.com',\n\t'mypad.com',\n\t'mypersonalemail.com',\n\t'myplace.com',\n\t'myrealbox.com',\n\t'myremarq.com',\n\t'myself.com',\n\t'mystupidjob.com',\n\t'mythirdage.com',\n\t'myway.com',\n\t'myworldmail.com',\n\t'n2.com',\n\t'n2baseball.com',\n\t'n2business.com',\n\t'n2mail.com',\n\t'n2soccer.com',\n\t'n2software.com',\n\t'nabc.biz',\n\t'nafe.com',\n\t'nagpal.net',\n\t'nakedgreens.com',\n\t'name.com',\n\t'nameplanet.com',\n\t'nandomail.com',\n\t'naplesnews.net',\n\t'naseej.com',\n\t'nativestar.net',\n\t'nativeweb.net',\n\t'naui.net',\n\t'navigator.lv',\n\t'navy.org',\n\t'naz.com',\n\t'nchoicemail.com',\n\t'neeva.net',\n\t'nemra1.com',\n\t'nenter.com',\n\t'neo.rr.com',\n\t'nervhq.org',\n\t'net-pager.net',\n\t'net4b.pt',\n\t'net4you.at',\n\t'netbounce.com',\n\t'netbroadcaster.com',\n\t'netby.dk',\n\t'netcenter-vn.net',\n\t'netcourrier.com',\n\t'netexecutive.com',\n\t'netexpressway.com',\n\t'netgenie.com',\n\t'netian.com',\n\t'netizen.com.ar',\n\t'netlane.com',\n\t'netlimit.com',\n\t'netmanor.com',\n\t'netmongol.com',\n\t'netnet.com.sg',\n\t'netnoir.net',\n\t'netpiper.com',\n\t'netposta.net',\n\t'netradiomail.com',\n\t'netralink.com',\n\t'netscape.net',\n\t'netscapeonline.co.uk',\n\t'netspeedway.com',\n\t'netsquare.com',\n\t'netster.com',\n\t'nettaxi.com',\n\t'netzero.com',\n\t'netzero.net',\n\t'neuro.md',\n\t'newmail.com',\n\t'newmail.net',\n\t'newmail.ru',\n\t'newsboysmail.com',\n\t'newyork.com',\n\t'nexxmail.com',\n\t'nfmail.com',\n\t'nhmail.com',\n\t'nicebush.com',\n\t'nicegal.com',\n\t'nicholastse.net',\n\t'nicolastse.com',\n\t'nightmail.com',\n\t'nikopage.com',\n\t'nimail.com',\n\t'nirvanafan.com',\n\t'noavar.com',\n\t'norika-fujiwara.com',\n\t'norikomail.com',\n\t'northgates.net',\n\t'nospammail.net',\n\t'ntscan.com',\n\t'ny.com',\n\t'nyc.com',\n\t'nycmail.com',\n\t'nzoomail.com',\n\t'o-tay.com',\n\t'o2.co.uk',\n\t'OaklandAs-fan.com',\n\t'oaklandas-fan.com',\n\t'oceanfree.net',\n\t'oddpost.com',\n\t'odmail.com',\n\t'office-email.com',\n\t'officedomain.com',\n\t'offroadwarrior.com',\n\t'oicexchange.com',\n\t'okbank.com',\n\t'okhuman.com',\n\t'okmad.com',\n\t'okmagic.com',\n\t'okname.net',\n\t'okuk.com',\n\t'oldies1041.com',\n\t'oldies104mail.com',\n\t'ole.com',\n\t'olemail.com',\n\t'olympist.net',\n\t'omaninfo.com',\n\t'onebox.com',\n\t'onenet.com.ar',\n\t'onet.pl',\n\t'oninet.pt',\n\t'online.ie',\n\t'onlinewiz.com',\n\t'onmilwaukee.com',\n\t'onobox.com',\n\t'onvillage.com',\n\t'operafan.com',\n\t'operamail.com',\n\t'optician.com',\n\t'optonline.net',\n\t'optusnet.com.au',\n\t'orbitel.bg',\n\t'orgmail.net',\n\t'osite.com.br',\n\t'oso.com',\n\t'otakumail.com',\n\t'our-computer.com',\n\t'our-office.com',\n\t'our.st',\n\t'ourbrisbane.com',\n\t'ournet.md',\n\t'outel.com',\n\t'outgun.com',\n\t'over-the-rainbow.com',\n\t'ownmail.net',\n\t'ozbytes.net.au',\n\t'ozemail.com.au',\n\t'pacbell.net',\n\t'pacific-re.com',\n\t'packersfan.com',\n\t'pagina.de',\n\t'pagons.org',\n\t'pakistanmail.com',\n\t'pakistanoye.com',\n\t'palestinemail.com',\n\t'parkjiyoon.com',\n\t'parrot.com',\n\t'ParsMail.com',\n\t'parsmail.com',\n\t'partlycloudy.com',\n\t'partynight.at',\n\t'parvazi.com',\n\t'passwordmail.com',\n\t'pathfindermail.com',\n\t'pconnections.net',\n\t'pcpostal.com',\n\t'pcsrock.com',\n\t'peachworld.com',\n\t'pediatrician.com',\n\t'pemail.net',\n\t'penpen.com',\n\t'peoplepc.com',\n\t'peopleweb.com',\n\t'perfectmail.com',\n\t'personal.ro',\n\t'personales.com',\n\t'petml.com',\n\t'pettypool.com',\n\t'pezeshkpour.com',\n\t'phayze.com',\n\t'phone.net',\n\t'phreaker.net',\n\t'Phreaker.net',\n\t'pianomail.com',\n\t'pickupman.com',\n\t'picusnet.com',\n\t'pigpig.net',\n\t'pinoymail.com',\n\t'piracha.net',\n\t'pisem.net',\n\t'planet-mail.com',\n\t'planetaccess.com',\n\t'planetall.com',\n\t'planetarymotion.net',\n\t'planetdirect.com',\n\t'planetearthinter.net',\n\t'planetout.com',\n\t'plasa.com',\n\t'playersodds.com',\n\t'playful.com',\n\t'plusmail.com.br',\n\t'pmail.net',\n\t'pobox.hu',\n\t'pobox.sk',\n\t'pochta.ru',\n\t'poczta.fm',\n\t'poetic.com',\n\t'pokemonpost.com',\n\t'pokepost.com',\n\t'polbox.com',\n\t'policeoffice.com',\n\t'pool-sharks.com',\n\t'poond.com',\n\t'popaccount.com',\n\t'popmail.com',\n\t'popsmail.com',\n\t'popstar.com',\n\t'populus.net',\n\t'portableoffice.com',\n\t'portugalmail.com',\n\t'portugalmail.pt',\n\t'portugalnet.com',\n\t'positive-thinking.com',\n\t'post.com',\n\t'post.cz',\n\t'post.sk',\n\t'posta.net',\n\t'posta.ro',\n\t'posta.rosativa.ro.org',\n\t'postaccesslite.com',\n\t'postafree.com',\n\t'postaweb.com',\n\t'postinbox.com',\n\t'postino.ch',\n\t'postmark.net',\n\t'postmaster.co.uk',\n\t'postpro.net',\n\t'pousa.com',\n\t'powerfan.com',\n\t'praize.com',\n\t'pray247.com',\n\t'premiumservice.com',\n\t'presidency.com',\n\t'press.co.jp',\n\t'priest.com',\n\t'primposta.com',\n\t'primposta.hu',\n\t'pro.hu',\n\t'probemail.com',\n\t'prodigy.net',\n\t'progetplus.it',\n\t'programmer.net',\n\t'programozo.hu',\n\t'proinbox.com',\n\t'project2k.com',\n\t'prolaunch.com',\n\t'promessage.com',\n\t'prontomail.com',\n\t'prontomail.compopulus.net',\n\t'psv-supporter.com',\n\t'ptd.net',\n\t'public.usa.com',\n\t'publicist.com',\n\t'pulp-fiction.com',\n\t'punkass.com',\n\t'PunkAss.com',\n\t'purpleturtle.com',\n\t'qatarmail.com',\n\t'qprfans.com',\n\t'qrio.com',\n\t'quackquack.com',\n\t'quakemail.com',\n\t'qudsmail.com',\n\t'quepasa.com',\n\t'quickhosts.com',\n\t'quickwebmail.com',\n\t'quiklinks.com',\n\t'quikmail.com',\n\t'qwest.net',\n\t'qwestoffice.net',\n\t'r-o-o-t.com',\n\t'raakim.com',\n\t'racedriver.com',\n\t'racefanz.com',\n\t'racingfan.com.au',\n\t'racingmail.com',\n\t'radicalz.com',\n\t'ragingbull.com',\n\t'ranmamail.com',\n\t'rastogi.net',\n\t'ratt-n-roll.com',\n\t'rattle-snake.com',\n\t'ravearena.com',\n\t'ravemail.com',\n\t'razormail.com',\n\t'rccgmail.org',\n\t'realemail.net',\n\t'reallyfast.biz',\n\t'realradiomail.com',\n\t'recycler.com',\n\t'recyclermail.com',\n\t'rediffmail.com',\n\t'rediffmailpro.com',\n\t'rednecks.com',\n\t'redseven.de',\n\t'redsfans.com',\n\t'reggafan.com',\n\t'regiononline.com',\n\t'registerednurses.com',\n\t'repairman.com',\n\t'reply.hu',\n\t'representative.com',\n\t'rescueteam.com',\n\t'resumemail.com',\n\t'rezai.com',\n\t'richmondhill.com',\n\t'rickymail.com',\n\t'rin.ru',\n\t'riopreto.com.br',\n\t'rn.com',\n\t'roadrunner.com',\n\t'roanokemail.com',\n\t'rock.com',\n\t'rocketmail.com',\n\t'rockfan.com',\n\t'rodrun.com',\n\t'rome.com',\n\t'romymichele.com',\n\t'roosh.com',\n\t'rotfl.com',\n\t'roughnet.com',\n\t'rr.com',\n\t'rrohio.com',\n\t'rsub.com',\n\t'rubyridge.com',\n\t'runbox.com',\n\t'rushpost.com',\n\t'ruttolibero.com',\n\t'rvshop.com',\n\t's-mail.com',\n\t'sabreshockey.com',\n\t'sacbeemail.com',\n\t'safarimail.com',\n\t'safe-mail.net',\n\t'sagra.lu',\n\t'sagra.lumarketing.lu',\n\t'sailormoon.com',\n\t'saintly.com',\n\t'saintmail.net',\n\t'sale-sale-sale.com',\n\t'salehi.net',\n\t'samerica.com',\n\t'samilan.net',\n\t'sammimail.com',\n\t'sanfranmail.com',\n\t'sanook.com',\n\t'sapo.pt',\n\t'sativa.ro.org',\n\t'saudia.com',\n\t'sayhi.net',\n\t'sbcglobal.net',\n\t'scandalmail.com',\n\t'schizo.com',\n\t'schoolemail.com',\n\t'schoolmail.com',\n\t'schoolsucks.com',\n\t'schweiz.org',\n\t'sci.fi',\n\t'science.com.au',\n\t'scientist.com',\n\t'scifianime.com',\n\t'scotland.com',\n\t'scottishmail.co.uk',\n\t'scubadiving.com',\n\t'seanet.com',\n\t'searchwales.com',\n\t'sebil.com',\n\t'secret-police.com',\n\t'secretservices.net',\n\t'seductive.com',\n\t'seekstoyboy.com',\n\t'seguros.com.br',\n\t'send.hu',\n\t'sendme.cz',\n\t'sent.com',\n\t'sentrismail.com',\n\t'serga.com.ar',\n\t'servemymail.com',\n\t'sesmail.com',\n\t'sexmagnet.com',\n\t'SexMagnet.com',\n\t'seznam.cz',\n\t'shahweb.net',\n\t'shaniastuff.com',\n\t'sharewaredevelopers.com',\n\t'sharmaweb.com',\n\t'she.com',\n\t'shootmail.com',\n\t'shotgun.hu',\n\t'shuf.com',\n\t'sialkotcity.com',\n\t'sialkotian.com',\n\t'sialkotoye.com',\n\t'sify.com',\n\t'silkroad.net',\n\t'sinamail.com',\n\t'singapore.com',\n\t'singles4jesus.com',\n\t'singmail.com',\n\t'singnet.com.sg',\n\t'singpost.com',\n\t'skafan.com',\n\t'skim.com',\n\t'skizo.hu',\n\t'slamdunkfan.com',\n\t'slingshot.com',\n\t'slo.net',\n\t'slotter.com',\n\t'sm.westchestergov.com',\n\t'smapxsmap.net',\n\t'smileyface.comsmithemail.net',\n\t'smoothmail.com',\n\t'snail-mail.net',\n\t'snail-mail.ney',\n\t'snakemail.com',\n\t'sndt.net',\n\t'sneakemail.com',\n\t'snet.net',\n\t'sniper.hu',\n\t'snoopymail.com',\n\t'snowboarding.com',\n\t'snowdonia.net',\n\t'socamail.com',\n\t'soccerAmerica.net',\n\t'socceramerica.net',\n\t'soccermail.com',\n\t'soccermomz.com',\n\t'sociologist.com',\n\t'softhome.net',\n\t'sol.dk',\n\t'soldier.hu',\n\t'soon.com',\n\t'soulfoodcookbook.com',\n\t'sp.nl',\n\t'space-bank.com',\n\t'space-man.com',\n\t'space-ship.com',\n\t'space-travel.com',\n\t'space.com',\n\t'spaceart.com',\n\t'spacebank.com',\n\t'spacemart.com',\n\t'spacetowns.com',\n\t'spacewar.com',\n\t'spamex.com',\n\t'spartapiet.com',\n\t'spazmail.com',\n\t'speedemail.net',\n\t'speedpost.net',\n\t'speedrules.com',\n\t'speedrulz.com',\n\t'spils.com',\n\t'spinfinder.com',\n\t'spl.at',\n\t'sportemail.com',\n\t'sportsmail.com',\n\t'sporttruckdriver.com',\n\t'spray.no',\n\t'spray.se',\n\t'spymac.com',\n\t'srilankan.net',\n\t'st-davids.net',\n\t'stade.fr',\n\t'stalag13.com',\n\t'stargateradio.com',\n\t'starmail.com',\n\t'starmail.org',\n\t'starmedia.com',\n\t'starplace.com',\n\t'starspath.com',\n\t'start.com.au',\n\t'starting-point.com',\n\t'StarTrekMail.com',\n\t'startrekmail.com',\n\t'stealthmail.com',\n\t'stockracer.com',\n\t'stoned.com',\n\t'stones.com',\n\t'stopdropandroll.com',\n\t'storksite.com',\n\t'stribmail.com',\n\t'strompost.com',\n\t'strongguy.com',\n\t'studentcenter.org',\n\t'subnetwork.com',\n\t'subram.com',\n\t'sudanmail.net',\n\t'suhabi.com',\n\t'suisse.org',\n\t'sukhumvit.net',\n\t'sunpoint.net',\n\t'sunrise-sunset.com',\n\t'sunsgame.com',\n\t'sunumail.sn',\n\t'superdada.com',\n\t'supereva.it',\n\t'supermail.ru',\n\t'surat.com',\n\t'surf3.net',\n\t'surfree.com',\n\t'surfy.net',\n\t'surimail.com',\n\t'survivormail.com',\n\t'swbell.net',\n\t'sweb.cz',\n\t'swiftdesk.com',\n\t'swingeasyhithard.com',\n\t'swingfan.com',\n\t'swipermail.zzn.com',\n\t'swirve.com',\n\t'swissinfo.org',\n\t'swissmail.net',\n\t'switchboardmail.com',\n\t'switzerland.org',\n\t'sx172.com',\n\t'syom.com',\n\t'syriamail.com',\n\t't2mail.com',\n\t'takuyakimura.com',\n\t'talk21.com',\n\t'talkcity.com',\n\t'tamil.com',\n\t'tampabay.rr.com',\n\t'tankpolice.com',\n\t'tatanova.com',\n\t'tbwt.com',\n\t'tds.net',\n\t'teachermail.net',\n\t'teamdiscovery.com',\n\t'teamtulsa.net',\n\t'tech4peace.org',\n\t'techemail.com',\n\t'techie.com',\n\t'technisamail.co.za',\n\t'technologist.com',\n\t'techpointer.com',\n\t'techscout.com',\n\t'techseek.com',\n\t'techspot.com',\n\t'teenagedirtbag.com',\n\t'telebot.com',\n\t'telebot.net',\n\t'teleline.es',\n\t'telerymd.com',\n\t'teleserve.dynip.com',\n\t'telinco.net',\n\t'telkom.net',\n\t'telpage.net',\n\t'temtulsa.net',\n\t'tenchiclub.com',\n\t'tenderkiss.com',\n\t'tennismail.com',\n\t'terra.cl',\n\t'terra.com',\n\t'terra.com.ar',\n\t'terra.com.br',\n\t'terra.es',\n\t'tfanus.com.er',\n\t'tfz.net',\n\t'thai.com',\n\t'thaimail.com',\n\t'thaimail.net',\n\t'the-african.com',\n\t'the-airforce.com',\n\t'the-aliens.com',\n\t'the-american.com',\n\t'the-animal.com',\n\t'the-army.com',\n\t'the-astronaut.com',\n\t'the-beauty.com',\n\t'the-big-apple.com',\n\t'the-biker.com',\n\t'the-boss.com',\n\t'the-brazilian.com',\n\t'the-canadian.com',\n\t'the-canuck.com',\n\t'the-captain.com',\n\t'the-chinese.com',\n\t'the-country.com',\n\t'the-cowboy.com',\n\t'the-davis-home.com',\n\t'the-dutchman.com',\n\t'the-eagles.com',\n\t'the-englishman.com',\n\t'the-fastest.net',\n\t'the-fool.com',\n\t'the-frenchman.com',\n\t'the-galaxy.net',\n\t'the-genius.com',\n\t'the-gentleman.com',\n\t'the-german.com',\n\t'the-gremlin.com',\n\t'the-hooligan.com',\n\t'the-italian.com',\n\t'the-japanese.com',\n\t'the-lair.com',\n\t'the-madman.com',\n\t'the-mailinglist.com',\n\t'the-marine.com',\n\t'the-master.com',\n\t'the-mexican.com',\n\t'the-ministry.com',\n\t'the-monkey.com',\n\t'the-newsletter.net',\n\t'the-pentagon.com',\n\t'the-police.com',\n\t'the-prayer.com',\n\t'the-professional.com',\n\t'the-quickest.com',\n\t'the-russian.com',\n\t'the-snake.com',\n\t'the-spaceman.com',\n\t'the-stock-market.com',\n\t'the-student.net',\n\t'the-whitehouse.net',\n\t'the-wild-west.com',\n\t'the18th.com',\n\t'thecoolguy.com',\n\t'thecriminals.com',\n\t'thedoghousemail.com',\n\t'thedorm.com',\n\t'theend.hu',\n\t'theglobe.com',\n\t'thegolfcourse.com',\n\t'thegooner.com',\n\t'theheadoffice.com',\n\t'thelanddownunder.com',\n\t'themail.com',\n\t'themillionare.net',\n\t'theoffice.net',\n\t'thepokerface.com',\n\t'thepostmaster.net',\n\t'theraces.com',\n\t'theracetrack.com',\n\t'thestreetfighter.com',\n\t'theteebox.com',\n\t'thewatercooler.com',\n\t'thewebpros.co.uk',\n\t'thewizzard.com',\n\t'thewizzkid.com',\n\t'thezhangs.net',\n\t'thirdage.com',\n\t'thisgirl.com',\n\t'thoic.com',\n\t'thundermail.com',\n\t'tidni.com',\n\t'timein.net',\n\t'tiscali.at',\n\t'tiscali.be',\n\t'tiscali.co.uk',\n\t'tiscali.lu',\n\t'tiscali.se',\n\t'tkcity.com',\n\t'toast.com',\n\t'toolsource.com',\n\t'topchat.com',\n\t'topgamers.co.uk',\n\t'topletter.com',\n\t'topmail.com.ar',\n\t'topsurf.com',\n\t'topteam.bg',\n\t'torchmail.com',\n\t'totalmusic.net',\n\t'ToughGuy.net',\n\t'toughguy.net',\n\t'tpg.com.au',\n\t'travel.li',\n\t'trialbytrivia.com',\n\t'tritium.net',\n\t'trmailbox.com',\n\t'tropicalstorm.com',\n\t'truckers.com',\n\t'truckerz.com',\n\t'truckracer.com',\n\t'truckracers.com',\n\t'trust-me.com',\n\t'truth247.com',\n\t'truthmail.com',\n\t'tsamail.co.za',\n\t'ttml.co.in',\n\t'tunisiamail.com',\n\t'turkey.com',\n\t'twinstarsmail.com',\n\t'tycoonmail.com',\n\t'typemail.com',\n\t'u2club.com',\n\t'uae.ac',\n\t'uaemail.com',\n\t'ubbi.com',\n\t'ubbi.com.br',\n\t'uboot.com',\n\t'uk2k.com',\n\t'uk2net.com',\n\t'uk7.net',\n\t'uk8.net',\n\t'ukbuilder.com',\n\t'ukcool.com',\n\t'ukdreamcast.com',\n\t'ukmail.org',\n\t'ukmax.com',\n\t'ukr.net',\n\t'uku.co.uk',\n\t'ultapulta.com',\n\t'ultrapostman.com',\n\t'ummah.org',\n\t'umpire.com',\n\t'unbounded.com',\n\t'unforgettable.com',\n\t'uni.de',\n\t'uni.demailto.de',\n\t'unican.es',\n\t'unihome.com',\n\t'universal.pt',\n\t'uno.ee',\n\t'uno.it',\n\t'unofree.it',\n\t'unomail.com',\n\t'uol.com.ar',\n\t'uol.com.br',\n\t'uol.com.co',\n\t'uol.com.mx',\n\t'uol.com.ve',\n\t'uole.com',\n\t'uole.com.ve',\n\t'uolmail.com',\n\t'uomail.com',\n\t'upf.org',\n\t'ureach.com',\n\t'urgentmail.biz',\n\t'usa.com',\n\t'usa.net',\n\t'usaaccess.net',\n\t'usanetmail.com',\n\t'usermail.com',\n\t'usma.net',\n\t'usmc.net',\n\t'uswestmail.net',\n\t'uymail.com',\n\t'uyuyuy.com',\n\t'v-sexi.com',\n\t'vahoo.com',\n\t'vampirehunter.com',\n\t'varbizmail.com',\n\t'vcmail.com',\n\t'velnet.co.uk',\n\t'velocall.com',\n\t'verizon.net',\n\t'verizonmail.com',\n\t'veryfast.biz',\n\t'veryspeedy.net',\n\t'violinmakers.co.uk',\n\t'vip.gr',\n\t'vipmail.ru',\n\t'virgilio.it',\n\t'virgin.net',\n\t'virtual-mail.com',\n\t'virtualactive.com',\n\t'virtualmail.com',\n\t'visitmail.com',\n\t'visitweb.com',\n\t'visto.com',\n\t'visualcities.com',\n\t'vivavelocity.com',\n\t'vivianhsu.net',\n\t'vjmail.com',\n\t'vjtimail.com',\n\t'vlmail.com',\n\t'vnn.vn',\n\t'volcanomail.com',\n\t'vote-democrats.com',\n\t'vote-hillary.com',\n\t'vote-republicans.com',\n\t'vote4gop.org',\n\t'votenet.com',\n\t'vr9.com',\n\t'w3.to',\n\t'wahoye.com',\n\t'wales2000.net',\n\t'wam.co.za',\n\t'wanadoo.es',\n\t'warmmail.com',\n\t'warpmail.net',\n\t'warrior.hu',\n\t'waumail.com',\n\t'wbdet.com',\n\t'wearab.net',\n\t'web-mail.com.ar',\n\t'web-police.com',\n\t'web.de',\n\t'webave.com',\n\t'WebCamMail.com',\n\t'webcammail.com',\n\t'webcity.ca',\n\t'webdream.com',\n\t'webinbox.com',\n\t'webindia123.com',\n\t'webjump.com',\n\t'webmail.bellsouth.net',\n\t'webmail.co.yu',\n\t'webmail.co.za',\n\t'webmail.hu',\n\t'webmails.com',\n\t'webprogramming.com',\n\t'webstation.com',\n\t'websurfer.co.za',\n\t'webtopmail.com',\n\t'weedmail.com',\n\t'weekmail.com',\n\t'weekonline.com',\n\t'wehshee.com',\n\t'welsh-lady.com',\n\t'whale-mail.com',\n\t'whartontx.com',\n\t'wheelweb.com',\n\t'whipmail.com',\n\t'whoever.com',\n\t'whoopymail.com',\n\t'wickedmail.com',\n\t'wideopenwest.com',\n\t'wildmail.com',\n\t'windrivers.net',\n\t'windstream.net',\n\t'wingnutz.com',\n\t'winmail.com.au',\n\t'winning.com',\n\t'witty.com',\n\t'wiz.cc',\n\t'wkbwmail.com',\n\t'woh.rr.com',\n\t'wolf-web.com',\n\t'wombles.com',\n\t'wonder-net.com',\n\t'wongfaye.com',\n\t'wooow.it',\n\t'workmail.com',\n\t'worldemail.com',\n\t'worldmailer.com',\n\t'worldnet.att.net',\n\t'wosaddict.com',\n\t'wouldilie.com',\n\t'wowgirl.com',\n\t'wowmail.com',\n\t'wowway.com',\n\t'wp.pl',\n\t'wptamail.com',\n\t'wrestlingpages.com',\n\t'wrexham.net',\n\t'writeme.com',\n\t'writemeback.com',\n\t'wrongmail.com',\n\t'wtvhmail.com',\n\t'wwdg.com',\n\t'www.com',\n\t'www2000.net',\n\t'wx88.net',\n\t'wxs.net',\n\t'wyrm.supernews.com',\n\t'x-mail.net',\n\t'x-networks.net',\n\t'x5g.com',\n\t'xmail.com',\n\t'xmastime.com',\n\t'xmsg.com',\n\t'xoom.com',\n\t'xoommail.com',\n\t'xpressmail.zzn.com',\n\t'xsmail.com',\n\t'xuno.com',\n\t'xzapmail.com',\n\t'yada-yada.com',\n\t'yaho.com',\n\t'yahoo.ca',\n\t'yahoo.co.in',\n\t'yahoo.co.jp',\n\t'yahoo.co.kr',\n\t'yahoo.co.nz',\n\t'yahoo.co.uk',\n\t'yahoo.com',\n\t'yahoo.com.ar',\n\t'yahoo.com.au',\n\t'yahoo.com.br',\n\t'yahoo.com.cn',\n\t'yahoo.com.hk',\n\t'yahoo.com.is',\n\t'yahoo.com.mx',\n\t'yahoo.com.ru',\n\t'yahoo.com.sg',\n\t'yahoo.de',\n\t'yahoo.dk',\n\t'yahoo.es',\n\t'yahoo.fr',\n\t'yahoo.ie',\n\t'yahoo.it',\n\t'yahoo.jp',\n\t'yahoo.ru',\n\t'yahoo.se',\n\t'yahoofs.com',\n\t'yalla.com',\n\t'yalla.com.lb',\n\t'yalook.com',\n\t'yam.com',\n\t'yandex.ru',\n\t'yapost.com',\n\t'yawmail.com',\n\t'yclub.com',\n\t'yebox.com',\n\t'yehaa.com',\n\t'yehey.com',\n\t'yemenmail.com',\n\t'yepmail.net',\n\t'yesbox.net',\n\t'yifan.net',\n\t'ymail.com',\n\t'ynnmail.com',\n\t'yogotemail.com',\n\t'yopolis.com',\n\t'youareadork.com',\n\t'youpy.com',\n\t'your-house.com',\n\t'yourinbox.com',\n\t'yourlover.net',\n\t'yournightmare.com',\n\t'yours.com',\n\t'yourssincerely.com',\n\t'yourteacher.net',\n\t'yourwap.com',\n\t'youvegotmail.net',\n\t'yuuhuu.net',\n\t'yyhmail.com',\n\t'zahadum.com',\n\t'zcities.com',\n\t'zdnetmail.com',\n\t'zeeks.com',\n\t'zeepost.nl',\n\t'zensearch.net',\n\t'zhaowei.net',\n\t'zionweb.org',\n\t'zip.net',\n\t'zipido.com',\n\t'ziplip.com',\n\t'zipmail.com',\n\t'zipmail.com.br',\n\t'zipmax.com',\n\t'zmail.ru',\n\t'zonnet.nl',\n\t'zoominternet.net',\n\t'zubee.com',\n\t'zuvio.com',\n\t'zuzzurello.com',\n\t'zwallet.com',\n\t'zybermail.com',\n\t'zydecofan.com',\n\t'zzn.com',\n\t'zzom.co.uk',\n]"
                }
            ],
            "src/app/service/http-interceptor.service.ts": [
                {
                    "name": "HttpInterceptorProvider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/service/http-interceptor.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tprovide: HTTP_INTERCEPTORS,\n\tuseClass: HttpInterceptorService,\n\tmulti: true,\n\tdeps: [Router],\n}"
                }
            ],
            "src/app/layout/common-layout/model/instance-run.interface.ts": [
                {
                    "name": "initializedRun",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/model/instance-run.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InstanceRun",
                    "defaultValue": "{\r\n\tid: '',\r\n\tenvironmentId: '',\r\n\taccountId: '',\r\n\tflowVersionId: '',\r\n\tstatus: InstanceRunStatus.RUNNING,\r\n\tepochFinishTime: 0,\r\n\tepochStartTime: 0,\r\n\tflowDisplayName: '',\r\n\tinstanceId: '',\r\n\tstate: { steps: {}, variables: null },\r\n}"
                }
            ],
            "src/app/layout/common-layout/common-layout.module.ts": [
                {
                    "name": "materialTooltipDefaults",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/common-layout.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTooltipDefaultOptions",
                    "defaultValue": "{\n\tshowDelay: 0,\n\thideDelay: 0,\n\ttouchendHideDelay: 0,\n}"
                }
            ],
            "src/app/layout/common-layout/model/fields/variable/subfields/oauth2-user-input.type.ts": [
                {
                    "name": "OAuth2UserInputTypeDropdownOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/model/fields/variable/subfields/oauth2-user-input.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DropdownItemOption[]",
                    "defaultValue": "[\n\t{ label: 'Ask for login', value: Oauth2UserInputType.LOGIN },\n\t{ label: 'Ask for everything', value: Oauth2UserInputType.EVERYTHING },\n\t{ label: 'Ask for app details', value: Oauth2UserInputType.APP_DETAILS },\n]"
                }
            ],
            "src/app/layout/common-layout/service/highlightservice.ts": [
                {
                    "name": "Prism",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/common-layout/service/highlightservice.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/connectors/prod-connectors.lexicon.ts": [
                {
                    "name": "prodConnectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/connectors/prod-connectors.lexicon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{\n\t\tpieceVersionId: '9236ce88-b7f4-4ed5-8785-deb81698bb09',\n\t\tflowVersionId: '003905ab-bd34-482f-b26c-7caad22c7aae',\n\t},\n]"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "reduxMiddleware",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "LogRocket.reduxMiddleware()"
                }
            ],
            "src/app/rollbar.ts": [
                {
                    "name": "rollbarConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/rollbar.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n\taccessToken: 'fff0a98a8ab24448ae2529cd340df356',\r\n\tcaptureUncaught: true,\r\n\tenvironment: environment.stageName,\r\n\tcaptureUnhandledRejections: true,\r\n\tpayload: {},\r\n}"
                },
                {
                    "name": "RollbarService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/rollbar.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<Rollbar>('rollbar')"
                }
            ],
            "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts": [
                {
                    "name": "selectAll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectDashboardState, state => state.authenticationState.authentications)"
                },
                {
                    "name": "selectDashboardState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<State>('dashboard')"
                },
                {
                    "name": "selectFirebaseAuthentications",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectAll, authentications =>\n\tauthentications.filter(a => a.type == AuthenticationType.FIREBASE)\n)"
                },
                {
                    "name": "selectSigningKeyAuthentications",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(selectAll, authentications =>\n\tauthentications.filter(a => a.type == AuthenticationType.SIGNING_KEY)\n)"
                }
            ],
            "src/app/layout/flow-builder/store/action/view-mode.action.ts": [
                {
                    "name": "setViewMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/view-mode.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(ViewModeActionType.SET_VIEW_MODE, props<{ viewMode: ViewModeEnum }>())"
                },
                {
                    "name": "ViewModeActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/layout/flow-builder/store/action/view-mode.action.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n\tsetViewMode,\n}"
                }
            ],
            "src/connectors/stg-connectors.lexicon.ts": [
                {
                    "name": "stgConnectors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/connectors/stg-connectors.lexicon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/layout/common-layout/model/helper/artifacts-zipping-helper.ts": [
                {
                    "name": "addArtifactsToFormData",
                    "file": "src/app/layout/common-layout/model/helper/artifacts-zipping-helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "zippedFilesAndTheirNames",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "zippedFilesAndTheirNames",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "formData",
                            "type": "FormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "zipAllArtifacts",
                    "file": "src/app/layout/common-layout/model/helper/artifacts-zipping-helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "artifactsAndNamesInFormData",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "artifactsAndNamesInFormData",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/common-layout/validators.ts": [
                {
                    "name": "checkboxIsTrue",
                    "file": "src/app/layout/common-layout/validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ValidatorFn"
                },
                {
                    "name": "containsLowercaseCharacter",
                    "file": "src/app/layout/common-layout/validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ValidatorFn"
                },
                {
                    "name": "containsNumber",
                    "file": "src/app/layout/common-layout/validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ValidatorFn"
                },
                {
                    "name": "containsSpecialCharacter",
                    "file": "src/app/layout/common-layout/validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ValidatorFn"
                },
                {
                    "name": "containsUppercaseCharacter",
                    "file": "src/app/layout/common-layout/validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ValidatorFn"
                },
                {
                    "name": "phoneNumberValidation",
                    "file": "src/app/layout/common-layout/validators.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ValidatorFn"
                }
            ],
            "src/app/layout/common-layout/validators/codename-validator.ts": [
                {
                    "name": "codenameValidator",
                    "file": "src/app/layout/common-layout/validators/codename-validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/common-layout/validators/cronjob-validator.ts": [
                {
                    "name": "cronJobValidator",
                    "file": "src/app/layout/common-layout/validators/cronjob-validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/common-layout/helper/helpers.ts": [
                {
                    "name": "download",
                    "file": "src/app/layout/common-layout/helper/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "filename",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "text",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "filename",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "text",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "tokenGetter",
                    "file": "src/app/layout/common-layout/helper/helpers.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/layout/common-layout/store/reducer/environments.reducer.ts": [
                {
                    "name": "environmentReducer",
                    "file": "src/app/layout/common-layout/store/reducer/environments.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/common-layout/store/reducer/events.reducer.ts": [
                {
                    "name": "eventsReducer",
                    "file": "src/app/layout/common-layout/store/reducer/events.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/common-layout/animation/fade-in.animations.ts": [
                {
                    "name": "fadeInnimation",
                    "file": "src/app/layout/common-layout/animation/fade-in.animations.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/common-layout/animation/fade-in-up.animation.ts": [
                {
                    "name": "fadeInUpAnimation",
                    "file": "src/app/layout/common-layout/animation/fade-in-up.animation.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/common-layout/utils.ts": [
                {
                    "name": "findDefaultCollectionName",
                    "file": "src/app/layout/common-layout/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "collections",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "collections",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findDefaultFlowDisplayName",
                    "file": "src/app/layout/common-layout/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "flows",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "flows",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDefaultDisplayNameForPiece",
                    "file": "src/app/layout/common-layout/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "pieceType",
                            "type": "ActionType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pieceName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "pieceType",
                            "type": "ActionType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pieceName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDisplayNameForTrigger",
                    "file": "src/app/layout/common-layout/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "triggerType",
                            "type": "TriggerType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "triggerType",
                            "type": "TriggerType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isOfTypeTriggerType",
                    "file": "src/app/layout/common-layout/utils.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/flow-builder/store/effect/helper.ts": [
                {
                    "name": "findRefreshedConfig",
                    "file": "src/app/layout/flow-builder/store/effect/helper.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "allConfigs",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "configToDelete",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "allConfigs",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "configToDelete",
                            "type": "Config",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/flow-builder/store/reducer/flows.reducer.ts": [
                {
                    "name": "flowsReducer",
                    "file": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/common-layout/validators/json-validator.ts": [
                {
                    "name": "jsonValidator",
                    "file": "src/app/layout/common-layout/validators/json-validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ValidationErrors | null",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "logrocketMiddleware",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "reducer",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ActionReducer<any, any>",
                    "jsdoctags": [
                        {
                            "name": "reducer",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/common-layout/store/reducer/organization.reducer.ts": [
                {
                    "name": "organizationReducer",
                    "file": "src/app/layout/common-layout/store/reducer/organization.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/flow-builder/store/reducer/piece.reducer.ts": [
                {
                    "name": "pieceReducer",
                    "file": "src/app/layout/flow-builder/store/reducer/piece.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/common-layout/store/reducer/project.reducer.ts": [
                {
                    "name": "projectReducer",
                    "file": "src/app/layout/common-layout/store/reducer/project.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/rollbar.ts": [
                {
                    "name": "rollbarFactory",
                    "file": "src/app/rollbar.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/layout/flow-builder/store/reducer/view-mode.reducer.ts": [
                {
                    "name": "viewModeReducer",
                    "file": "src/app/layout/flow-builder/store/reducer/view-mode.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "ViewModeEnum",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "ViewModeEnum",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/layout/common-layout/model/enum/action-status.ts": [
                {
                    "name": "ActionStatus",
                    "childs": [
                        {
                            "name": "SUCCEEDED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SUCCEEDED"
                        },
                        {
                            "name": "FAILED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "FAILED"
                        },
                        {
                            "name": "RUNNING",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "RUNNING"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/action-status.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/action-type.enum.ts": [
                {
                    "name": "ActionType",
                    "childs": [
                        {
                            "name": "BRANCH",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "BRANCH"
                        },
                        {
                            "name": "CODE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CODE"
                        },
                        {
                            "name": "STORAGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "STORAGE"
                        },
                        {
                            "name": "LOCAL_FLOW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LOCAL_FLOW"
                        },
                        {
                            "name": "REMOTE_FLOW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "REMOTE_FLOW"
                        },
                        {
                            "name": "RESPONSE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "RESPONSE"
                        },
                        {
                            "name": "LOOP_ON_ITEMS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LOOP_ON_ITEMS"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/action-type.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/add-button-type.ts": [
                {
                    "name": "AddButtonType",
                    "childs": [
                        {
                            "name": "NEXT_ACTION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NEXT_ACTION"
                        },
                        {
                            "name": "FIRST_LOOP_ACTION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "FIRST_LOOP_ACTION"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/add-button-type.ts"
                }
            ],
            "src/app/layout/dashboard-layout/store/action/api-keys.action.ts": [
                {
                    "name": "ApiKeysActionType",
                    "childs": [
                        {
                            "name": "LOAD_API_KEYS_STARTED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[API_KEYS] LOAD_API_KEYS_STARTED"
                        },
                        {
                            "name": "LOAD_API_KEYS_FINISHED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[API_KEYS] LOAD_API_KEYS_FINISHED"
                        },
                        {
                            "name": "CREATE_API_KEY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[API_KEYS] CREATE_API_KES "
                        },
                        {
                            "name": "CREATE_API_KEY_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[API_KEYS] CREATE_API_KEY_SUCCESS "
                        },
                        {
                            "name": "CREATE_API_KEY_FAILED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[API_KEYS] CREATE_API_KEY_FAILED"
                        },
                        {
                            "name": "DELETE_API_KEY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[API_KEYS] DELETE_API_KEY"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts"
                }
            ],
            "src/app/layout/flow-builder/service/artifact-cache-key.ts": [
                {
                    "name": "ArtifactCachKeyPrefix",
                    "childs": [
                        {
                            "name": "FLOW_CONFIG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "flow.config"
                        },
                        {
                            "name": "COLLECTION_CONFIG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "collection.config"
                        },
                        {
                            "name": "STEP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "flow.step"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/flow-builder/service/artifact-cache-key.ts"
                }
            ],
            "src/app/layout/dashboard-layout/store/action/authentication.action.ts": [
                {
                    "name": "AuthenticationActionType",
                    "childs": [
                        {
                            "name": "CLEAR_STAGING_KEY_CREDENTIALS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTHENTICATION] CLEAR_STAGING_KEY_CREDENTIALS "
                        },
                        {
                            "name": "GENERATE_STAGING_KEY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTHENTICATION] GENERATE_STAGING_KEY"
                        },
                        {
                            "name": "UPDATE_FIREBASE_PROJECT_ID",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTHENTICATION] UPDATE_FIREBASE_PROJECT_ID"
                        },
                        {
                            "name": "FETCH_AUTHENTICATION_SUCCESSFUL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTHENTICATION] FETCH_SUCCESSFUL"
                        },
                        {
                            "name": "GENERATE_STAGING_KEY_SUCCESSFUL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTHENTICATION] GENERATE_STAGING_KEY_SUCCESSFUL"
                        },
                        {
                            "name": "UPDATE_FIREBASE_PROJECT_ID_SUCCESSFUL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTHENTICATION] UPDATE_FIREBASE_PROJECT_ID_SUCCESSFUL"
                        },
                        {
                            "name": "GENERATE_STAGING_KEY_FAILED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTHENTICATION] GENERATE_STAGING_KEY_FAILED"
                        },
                        {
                            "name": "UPDATE_FIREBASE_PROJECT_ID_FAILED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[AUTHENTICATION] UPDATE_FIREBASE_PROJECT_ID_FAILEd"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/dashboard-layout/store/action/authentication.action.ts"
                }
            ],
            "src/app/layout/common-layout/helper/authentication-type.enum.ts": [
                {
                    "name": "AuthenticationType",
                    "childs": [
                        {
                            "name": "FIREBASE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "FIREBASE"
                        },
                        {
                            "name": "SIGNING_KEY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SIGNING_KEY"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/helper/authentication-type.enum.ts"
                }
            ],
            "src/app/layout/flow-builder/store/action/builder.action.ts": [
                {
                    "name": "BuilderActionType",
                    "childs": [
                        {
                            "name": "LOAD_INITIAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[BUILDER] LOAD_INITIAL"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/flow-builder/store/action/builder.action.ts"
                }
            ],
            "src/app/layout/flow-builder/components/chevron-dropdown-menu/chevron-dropdown-option.ts": [
                {
                    "name": "ChevronDropdownOptionType",
                    "childs": [
                        {
                            "name": "NORMAL",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SEPARATOR",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "COPY_ID",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/flow-builder/components/chevron-dropdown-menu/chevron-dropdown-option.ts"
                }
            ],
            "src/app/layout/flow-builder/store/action/piece.action.ts": [
                {
                    "name": "CollectionActionType",
                    "childs": [
                        {
                            "name": "CHANGE_NAME",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] CHANGE_NAME"
                        },
                        {
                            "name": "SET_INITIAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] SET_INITIAL"
                        },
                        {
                            "name": "UPDATE_CONFIG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] UPDATE_CONFIG"
                        },
                        {
                            "name": "ADD_CONFIG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] ADD_CONFIG"
                        },
                        {
                            "name": "DELETE_CONFIG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] DELETE_CONFIG"
                        },
                        {
                            "name": "DELETE_CONFIG_FAILED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] DELETE_CONFIG_FAILED"
                        },
                        {
                            "name": "DELETE_CONFIG_SUCCEEDED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] DELETE_CONFIG_SUCCEEDED"
                        },
                        {
                            "name": "UPDATE_SETTINGS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] UPDATE_SETTINGS"
                        },
                        {
                            "name": "PIECE_SAVED_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] SAVED_SUCCESS"
                        },
                        {
                            "name": "PIECE_SAVED_FAILED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] SAVED_FAILED"
                        },
                        {
                            "name": "PUBLISH_COLLECTION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] PUBLISH_COLLECTION"
                        },
                        {
                            "name": "PUBLISH_COLLECTION_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] PUBLISH_COLLECTION_SUCCESS"
                        },
                        {
                            "name": "PUBLISH_COLLECTION_FAILED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PIECE] PUBLISH_COLLECTION_FAILED"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/flow-builder/store/action/piece.action.ts"
                }
            ],
            "src/app/layout/common-layout/store/action/common.action.ts": [
                {
                    "name": "CommonActionType",
                    "childs": [
                        {
                            "name": "LOAD_INITIAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[APP_STATE] LOAD_INITIAL"
                        },
                        {
                            "name": "CLEAR_STATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[APP_STATE] CLEAR_STATE"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/store/action/common.action.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/config-scope-type.enum.ts": [
                {
                    "name": "ConfigScope",
                    "childs": [
                        {
                            "name": "COLLECTION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "COLLECTION"
                        },
                        {
                            "name": "FLOW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "FLOW"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/config-scope-type.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/config-source.ts": [
                {
                    "name": "ConfigSource",
                    "childs": [
                        {
                            "name": "USER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "USER"
                        },
                        {
                            "name": "PREDEFINED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PREDEFINED"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/config-source.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/config-type.ts": [
                {
                    "name": "ConfigType",
                    "childs": [
                        {
                            "name": "SHORT_TEXT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SHORT_TEXT"
                        },
                        {
                            "name": "LONG_TEXT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LONG_TEXT"
                        },
                        {
                            "name": "EMAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "EMAIL"
                        },
                        {
                            "name": "NUMBER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NUMBER"
                        },
                        {
                            "name": "INTEGER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "INTEGER"
                        },
                        {
                            "name": "DICTIONARY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DICTIONARY"
                        },
                        {
                            "name": "OAUTH2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "OAUTH2"
                        },
                        {
                            "name": "DROPDOWN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DROPDOWN"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/config-type.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/config.enum.ts": [
                {
                    "name": "ConfigType",
                    "childs": [
                        {
                            "name": "SHORT_TEXT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SHORT_TEXT"
                        },
                        {
                            "name": "LONG_TEXT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LONG_TEXT"
                        },
                        {
                            "name": "EMAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "EMAIL"
                        },
                        {
                            "name": "NUMBER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NUMBER"
                        },
                        {
                            "name": "INTEGER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "INTEGER"
                        },
                        {
                            "name": "DICTIONARY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DICTIONARY"
                        },
                        {
                            "name": "OAUTH2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "OAUTH2"
                        },
                        {
                            "name": "DROPDOWN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DROPDOWN"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/config.enum.ts"
                },
                {
                    "name": "DropdownType",
                    "childs": [
                        {
                            "name": "STATIC",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "STATIC"
                        },
                        {
                            "name": "DYNAMIC",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DYNAMIC"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/config.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/dynamic-controls/control-type.enum.ts": [
                {
                    "name": "ControlType",
                    "childs": [
                        {
                            "name": "SHORT_TEXT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "LONG_TEXT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "DROPDOWN",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "MULTI_DROPDOWN",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "KEY_VALUE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "INTEGER",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "EMBEDDED_CODE_EDITOR",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "OAUTH2_LOGIN",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "OAUTH2_SELECT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CRON_EXPRESSION",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SELECT_EVENT",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "DOCUMENTATION_LINK",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/dynamic-controls/control-type.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/deploy-modal-step.enum.ts": [
                {
                    "name": "DeployModalStep",
                    "childs": [
                        {
                            "name": "SELECT_ENVIRONMENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        },
                        {
                            "name": "COLLECTION_CONFIGS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 2
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/deploy-modal-step.enum.ts"
                }
            ],
            "src/app/layout/common-layout/store/action/environment.action.ts": [
                {
                    "name": "EnvironmentActionType",
                    "childs": [
                        {
                            "name": "SET_ENVIRONMENTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[ENVIRONMENT] SET_ENVIRONMENTS"
                        },
                        {
                            "name": "ADD_ENVIRONMENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[ENVIRONMENT] ADD_ENVIRONMENT"
                        },
                        {
                            "name": "CLEAR_ENVIRONMENTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[ENVIRONMENT] CLEAR_ENVIRONMENTS"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/store/action/environment.action.ts"
                }
            ],
            "src/app/model/error-message.ts": [
                {
                    "name": "ErrorCode",
                    "childs": [
                        {
                            "name": "USER_TRIAL_EXPIRED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "USER_TRIAL_EXPIRED"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/model/error-message.ts"
                }
            ],
            "src/app/layout/common-layout/store/action/events.action.ts": [
                {
                    "name": "EventActionModeType",
                    "childs": [
                        {
                            "name": "SET_EVENTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[EVENT] SET_EVENTS"
                        },
                        {
                            "name": "ADD_EVENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[EVENT] ADD_EVENT"
                        },
                        {
                            "name": "CLEAR_EVENTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[EVENT] CLEAR_EVENTS"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/store/action/events.action.ts"
                }
            ],
            "src/app/layout/flow-builder/store/action/flow-items-details.action.ts": [
                {
                    "name": "FlowItemDetailsActionType",
                    "childs": [
                        {
                            "name": "CLEAR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOW_ITEMS_DETAILS] CLEAR"
                        },
                        {
                            "name": "LOAD",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOW_ITEMS_DETAILS] LOAD"
                        },
                        {
                            "name": "LOADED_SUCCESSFULLY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOW_ITEMS_DETAILS] LOADED_SUCCESSFULLY"
                        },
                        {
                            "name": "LOAD_OLD_REMOTE_FLOW_ITEM_DETAILS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOW_ITEMS_DETAILS]  LOAD_OLD_REMOTE_FLOW_ITEM_DETAILS"
                        },
                        {
                            "name": "OLD_REMOTE_FLOW_ITEM_DETAILS_LOADED_SUCESSFULLY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOW_ITEMS_DETAILS]  LOAD_OLD_REMOTE_FLOW_ITEM_DETAILS_LOADED_SUCCESSFULLY"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/flow-item-type.enum.ts": [
                {
                    "name": "FlowItemTypeEnum",
                    "childs": [
                        {
                            "name": "SIMPLE_ITEM",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "BRANCH_ITEM",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/flow-item-type.enum.ts"
                }
            ],
            "src/app/layout/flow-builder/store/action/flows.action.ts": [
                {
                    "name": "FlowsActionType",
                    "childs": [
                        {
                            "name": "SET_INITIAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] SET_INITIAL"
                        },
                        {
                            "name": "DELETE_FLOW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] DELETE_FLOW"
                        },
                        {
                            "name": "ADD_FLOW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] ADD_FLOW"
                        },
                        {
                            "name": "UPDATE_CONFIG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] UPDATE_CONFIG"
                        },
                        {
                            "name": "ADD_CONFIG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] ADD_CONFIG"
                        },
                        {
                            "name": "CHANGE_NAME",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] CHANGE_NAME"
                        },
                        {
                            "name": "DELETE_CONFIG",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] DELETE_CONFIG"
                        },
                        {
                            "name": "DELETE_CONFIG_SUCCEEDED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] DELETE_CONFIG_SUCCEEDED"
                        },
                        {
                            "name": "DELETE_CONFIG_FAILED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] DELETE_CONFIG_FAILED"
                        },
                        {
                            "name": "SAVED_FAILED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] SAVED_FAILED"
                        },
                        {
                            "name": "SAVED_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] SAVED_SUCCESS"
                        },
                        {
                            "name": "SELECT_FLOW",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] SELECT_FLOW"
                        },
                        {
                            "name": "DELETE_STEP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] DELETE_STEP"
                        },
                        {
                            "name": "UPDATE_STEP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] UPDATE_STEP"
                        },
                        {
                            "name": "SAVE_FLOW_STARTED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] SAVE_FLOW_STARTED"
                        },
                        {
                            "name": "DELETE_FLOW_STARTED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] DELETE_FLOW_STARTED"
                        },
                        {
                            "name": "ADD_STEP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] ADD_STEP"
                        },
                        {
                            "name": "REPLACE_TRIGGER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] REPLACE_TRIGGER"
                        },
                        {
                            "name": "DROP_PIECE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] DROP_PIECE"
                        },
                        {
                            "name": "SET_LEFT_SIDEBAR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] SET_LEFT_SIDEBAR"
                        },
                        {
                            "name": "SET_RIGHT_SIDEBAR",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] SET_RIGHT_BAR"
                        },
                        {
                            "name": "SELECT_STEP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] SELECT_STEP"
                        },
                        {
                            "name": "DESELECT_STEP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] DESELECT_STEP"
                        },
                        {
                            "name": "SET_RUN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] SET_RUN"
                        },
                        {
                            "name": "EXIT_RUN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] EXIT_RUN"
                        },
                        {
                            "name": "SELECT_STEP_BY_NAME",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] SELECT_STEP_BY_NAME"
                        },
                        {
                            "name": "DELETE_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[FLOWS] DELETE_SUCCESS"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/flow-builder/store/action/flows.action.ts"
                }
            ],
            "src/app/layout/flow-builder/store/model/enums/flows-state.enum.ts": [
                {
                    "name": "FlowsStateEnum",
                    "childs": [
                        {
                            "name": "INITIALIZED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SAVING",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SAVED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "FAILED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/flow-builder/store/model/enums/flows-state.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/instance-run-status.ts": [
                {
                    "name": "InstanceRunStatus",
                    "childs": [
                        {
                            "name": "SUCCEEDED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SUCCEEDED"
                        },
                        {
                            "name": "RUNNING",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "RUNNING"
                        },
                        {
                            "name": "FAILED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "FAILED"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/instance-run-status.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/instance-status.ts": [
                {
                    "name": "InstanceStatus",
                    "childs": [
                        {
                            "name": "PAUSED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PAUSED"
                        },
                        {
                            "name": "RUNNING",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "RUNNING"
                        },
                        {
                            "name": "ARCHIVED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ARCHIVED"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/instance-status.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/left-side-bar-type.enum.ts": [
                {
                    "name": "LeftSideBarType",
                    "childs": [
                        {
                            "name": "SHOW_RUN",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CONFIGS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "PIECE_SETTINGS",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "NONE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/left-side-bar-type.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/fields/variable/subfields/oauth2-user-input.type.ts": [
                {
                    "name": "Oauth2UserInputType",
                    "childs": [
                        {
                            "name": "LOGIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LOGIN"
                        },
                        {
                            "name": "APP_DETAILS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "APP_DETAILS"
                        },
                        {
                            "name": "EVERYTHING",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "EVERYTHING"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/fields/variable/subfields/oauth2-user-input.type.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/onboarding-technical-level.enum.ts": [
                {
                    "name": "OnboardingTechnicalLevelEnum",
                    "childs": [
                        {
                            "name": "NOT_DEVELOPER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NOT_DEVELOPER"
                        },
                        {
                            "name": "STIlL_LEARNING",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "STIlL_LEARNING"
                        },
                        {
                            "name": "LOW_CODE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LOW_CODE"
                        },
                        {
                            "name": "BEGINNER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "BEGINNER"
                        },
                        {
                            "name": "INTERMEDIATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "INTERMEDIATE"
                        },
                        {
                            "name": "EXPERT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "EXPERT"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/onboarding-technical-level.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/onboarding-usecases.enum.ts": [
                {
                    "name": "OnboardingUsecasesEnum",
                    "childs": [
                        {
                            "name": "LOAD_DATA_INTO_WAREHOUSE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LOAD_DATA_INTO_WAREHOUSE"
                        },
                        {
                            "name": "SEND_DATA_INT_DIFFERENT_TOOLS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SEND_DATA_INT_DIFFERENT_TOOLS"
                        },
                        {
                            "name": "COLLECT_USER_DATA",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "COLLECT_USER_DATA"
                        },
                        {
                            "name": "AUTOMATE_MANUAL_WORK",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "AUTOMATE_MANUAL_WORK"
                        },
                        {
                            "name": "INTEGRATE_DIFFERENT_TOOL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "INTEGRATE_DIFFERENT_TOOL"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/onboarding-usecases.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/onboarding-user-role.enum.ts": [
                {
                    "name": "OnboardingUserRoleEnum",
                    "childs": [
                        {
                            "name": "DEVELOPER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DEVELOPER"
                        },
                        {
                            "name": "MARKETING_MANAGER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "MARKETING_MANAGER"
                        },
                        {
                            "name": "PRODUCT_MANAGER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PRODUCT_MANAGER"
                        },
                        {
                            "name": "QUALITY_ENGINEER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "QUALITY_ENGINEER"
                        },
                        {
                            "name": "OTHER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "OTHER"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/onboarding-user-role.enum.ts"
                }
            ],
            "src/app/layout/common-layout/store/action/organizations.action.ts": [
                {
                    "name": "OrganizationsActionType",
                    "childs": [
                        {
                            "name": "SET_ORGANIZATIONS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[ORGANIZATION] SET_ORGANIZATIONS"
                        },
                        {
                            "name": "CLEAR_ORGANIZATIONS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[ORGANIZATION] CLEAR_ORGANIZATIONS"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/store/action/organizations.action.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/organization-size.ts": [
                {
                    "name": "OrganizationSize",
                    "childs": [
                        {
                            "name": "PERSONAL_USE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PERSONAL_USE"
                        },
                        {
                            "name": "SIZE_1_TO_5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SIZE_1_TO_5"
                        },
                        {
                            "name": "SIZE_5_TO_10",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SIZE_5_TO_10"
                        },
                        {
                            "name": "SIZE_10_TO_50",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SIZE_10_TO_50"
                        },
                        {
                            "name": "SIZE_50_TO_100",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SIZE_50_TO_100"
                        },
                        {
                            "name": "MORE_THAN_100",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "MORE_THAN_100"
                        },
                        {
                            "name": "UNKNOWN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "UNKNOWN"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/organization-size.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/piece-access.ts": [
                {
                    "name": "PieceAccess",
                    "childs": [
                        {
                            "name": "PUBLIC",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PUBLIC"
                        },
                        {
                            "name": "PRIVATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PRIVATE"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/piece-access.ts"
                }
            ],
            "src/app/layout/flow-builder/store/model/enums/piece-state.enum.ts": [
                {
                    "name": "PieceStateEnum",
                    "childs": [
                        {
                            "name": "INITIALIZED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SAVING",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SAVED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "FAILED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/flow-builder/store/model/enums/piece-state.enum.ts"
                }
            ],
            "src/app/layout/common-layout/store/action/project.action.ts": [
                {
                    "name": "ProjectActionType",
                    "childs": [
                        {
                            "name": "CLEAR_PROJECTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PROJECT] CLEAR_PROJECTS"
                        },
                        {
                            "name": "SET_PROJECTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[PROJECT] SET_PROJECTS"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/store/action/project.action.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/right-side-bar-type.enum.ts": [
                {
                    "name": "RightSideBarType",
                    "childs": [
                        {
                            "name": "COLLECTION_VERSIONS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "COLLECTION_VERSIONS"
                        },
                        {
                            "name": "FLOW_VERSIONS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "FLOW_VERSIONS"
                        },
                        {
                            "name": "STEP_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "STEP_TYPE"
                        },
                        {
                            "name": "TRIGGER_TYPE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "TRIGGER_TYPE"
                        },
                        {
                            "name": "EDIT_STEP",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "EDIT_STEP"
                        },
                        {
                            "name": "NONE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "NONE"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/right-side-bar-type.enum.ts"
                }
            ],
            "src/app/layout/flow-builder/store/model/enums/save-state.enum.ts": [
                {
                    "name": "SaveState",
                    "childs": [
                        {
                            "name": "INITIALIZED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SAVING",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "FAILED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SAVED",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/flow-builder/store/model/enums/save-state.enum.ts"
                }
            ],
            "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/selected-file-in-fullscreeen-code-editor.enum.ts": [
                {
                    "name": "SelectedFileInFullscreenCodeEditor",
                    "childs": [
                        {
                            "name": "CONTENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CONTENT"
                        },
                        {
                            "name": "PACKAGE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PACKAGE"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/selected-file-in-fullscreeen-code-editor.enum.ts"
                }
            ],
            "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/selected-tab-in-fullscreen-code-editor.enum.ts": [
                {
                    "name": "SelectedTabInFullscreenCodeEditor",
                    "childs": [
                        {
                            "name": "OUTPUT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "OUTPUT"
                        },
                        {
                            "name": "CONSOLE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "CONSOLE"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/selected-tab-in-fullscreen-code-editor.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum.ts": [
                {
                    "name": "StorageOperation",
                    "childs": [
                        {
                            "name": "GET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "GET"
                        },
                        {
                            "name": "PUT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PUT"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/flow-builder/actions/storage-operation.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum.ts": [
                {
                    "name": "StorageScope",
                    "childs": [
                        {
                            "name": "INSTANCE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "INSTANCE"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/flow-builder/actions/storage-scope.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/trigger-type.enum.ts": [
                {
                    "name": "TriggerType",
                    "childs": [
                        {
                            "name": "SCHEDULE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SCHEDULE"
                        },
                        {
                            "name": "EVENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "EVENT"
                        },
                        {
                            "name": "MANUAL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "MANUAL"
                        },
                        {
                            "name": "EMPTY",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "EMPTY"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/trigger-type.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/user-status.enum.ts": [
                {
                    "name": "UserStatus",
                    "childs": [
                        {
                            "name": "VERIFIED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "VERIFIED"
                        },
                        {
                            "name": "UNVERIFIED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "UNVERIFIED"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/user-status.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/version-edit-state.enum.ts": [
                {
                    "name": "VersionEditState",
                    "childs": [
                        {
                            "name": "DRAFT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DRAFT"
                        },
                        {
                            "name": "LOCKED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "LOCKED"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/version-edit-state.enum.ts"
                }
            ],
            "src/app/layout/flow-builder/store/action/view-mode.action.ts": [
                {
                    "name": "ViewModeActionType",
                    "childs": [
                        {
                            "name": "SET_VIEW_MODE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[VIEW_MODE] SET_VIEW_MODE"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/flow-builder/store/action/view-mode.action.ts"
                }
            ],
            "src/app/layout/flow-builder/store/model/enums/view-mode.enum.ts": [
                {
                    "name": "ViewModeEnum",
                    "childs": [
                        {
                            "name": "BUILDING",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "BUILDING"
                        },
                        {
                            "name": "VIEW_INSTANCE_RUN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "VIEW_INSTANCE_RUN"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/flow-builder/store/model/enums/view-mode.enum.ts"
                }
            ],
            "src/app/layout/common-layout/model/enum/workflow-state.enum.ts": [
                {
                    "name": "WorkflowState",
                    "childs": [
                        {
                            "name": "ENABLED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "ENABLED"
                        },
                        {
                            "name": "DISABLED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DISABLED"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/layout/common-layout/model/enum/workflow-state.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/layout/dashboard-layout/store/reducer/api-keys.reducer.ts": [
                {
                    "name": "ApiKeysState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/layout/dashboard-layout/store/reducer/api-keys.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/layout/common-layout/model/helper/artifacts-zipping-helper.ts": [
                {
                    "name": "ArtifactAndItsNameInFormData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/layout/common-layout/model/helper/artifacts-zipping-helper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/layout/flow-builder/service/code.service.ts": [
                {
                    "name": "ArtifactCacheResult",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/layout/flow-builder/service/code.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "ArtifactsCache",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Map<string | ArtifactCacheResult>",
                    "file": "src/app/layout/flow-builder/service/code.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "NpmPkg",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/layout/flow-builder/service/code.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "PackageName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/layout/flow-builder/service/code.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                },
                {
                    "name": "PackageVersion",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/layout/flow-builder/service/code.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                }
            ],
            "src/app/layout/dashboard-layout/store/reducer/authentication.reducer.ts": [
                {
                    "name": "AuthenticationState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/layout/dashboard-layout/store/reducer/authentication.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/layout/common-layout/components/deploy-modal/deploy-modal.component.ts": [
                {
                    "name": "CollectionConfigsFormOutput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/layout/common-layout/components/deploy-modal/deploy-modal.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/layout/common-layout/components/configs-form/configs-form.component.ts": [
                {
                    "name": "ConfigKey",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/layout/common-layout/components/configs-form/configs-form.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                }
            ],
            "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/remote-flow-input-form/remote-flow-input-form.component.ts": [
                {
                    "name": "ConfigKey",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/remote-flow-input-form/remote-flow-input-form.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                },
                {
                    "name": "ConfigsAndTheirValues",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/remote-flow-input-form/remote-flow-input-form.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts": [
                {
                    "name": "ConfigsAndTheirValues",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "InputFormsSchema",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "LoopStepInputFormSchema | ResponseStepInputFormSchema | StoragreStepInputFormSchema | CodeStepInputFormSchema | ScheduledTriggerInputFormSchema | EventTriggerInputFormSchema | RemoteFlowInputFormSchema",
                    "file": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/layout/flow-builder/store/model/flows-state.model.ts": [
                {
                    "name": "FlowId",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/layout/flow-builder/store/model/flows-state.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                }
            ],
            "src/app/layout/flow-builder/store/reducer/flows.reducer.ts": [
                {
                    "name": "FlowsState",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/code-artifact-control-fullscreen.component.ts": [
                {
                    "name": "PackageName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/code-artifact-control-fullscreen.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                },
                {
                    "name": "PackageVersion",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/code-artifact-control-fullscreen.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                }
            ],
            "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/add-npm-package-modal/add-npm-package-modal.component.ts": [
                {
                    "name": "PackageName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/add-npm-package-modal/add-npm-package-modal.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                },
                {
                    "name": "PackageVersion",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "string",
                    "file": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/add-npm-package-modal/add-npm-package-modal.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 149
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "StoryType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "DashboardLayoutComponent",
                        "canActivate": [
                            "UserLoggedIn"
                        ],
                        "children": [
                            {
                                "path": "",
                                "loadChildren": "./layout/dashboard-layout/dashboard-layout.module#DashboardLayoutModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "DashboardLayoutRouting",
                                                "filename": "src/app/layout/dashboard-layout/dashboard-layout.routing.ts",
                                                "module": "DashboardLayoutModule",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "canActivate": [
                                                            "TrialExpiredGuard"
                                                        ],
                                                        "children": [
                                                            {
                                                                "path": "",
                                                                "pathMatch": "full",
                                                                "redirectTo": "/flows"
                                                            },
                                                            {
                                                                "path": "accounts",
                                                                "pathMatch": "full",
                                                                "component": "AccountsComponent",
                                                                "resolve": {
                                                                    "accounts": "ListAccountsResolver"
                                                                },
                                                                "runGuardsAndResolvers": "paramsOrQueryParamsChange"
                                                            },
                                                            {
                                                                "path": "environments",
                                                                "pathMatch": "full",
                                                                "component": "EnvironmentsComponent",
                                                                "resolve": {}
                                                            },
                                                            {
                                                                "path": "events",
                                                                "pathMatch": "full",
                                                                "component": "EventsComponent",
                                                                "resolve": {}
                                                            },
                                                            {
                                                                "path": "api-keys",
                                                                "pathMatch": "full",
                                                                "component": "ApiKeysComponent",
                                                                "resolve": {}
                                                            },
                                                            {
                                                                "path": "runs",
                                                                "pathMatch": "full",
                                                                "component": "RunsComponent",
                                                                "resolve": {
                                                                    "runs": "ListInstancesRunResolver"
                                                                },
                                                                "runGuardsAndResolvers": "paramsOrQueryParamsChange"
                                                            },
                                                            {
                                                                "path": "instances",
                                                                "pathMatch": "full",
                                                                "component": "InstancesComponent",
                                                                "resolve": {
                                                                    "instances": "ListInstancesResolver"
                                                                },
                                                                "runGuardsAndResolvers": "paramsOrQueryParamsChange"
                                                            },
                                                            {
                                                                "path": "flows",
                                                                "pathMatch": "full",
                                                                "component": "CollectionComponents",
                                                                "resolve": {
                                                                    "pieces": "ListPiecesResolver"
                                                                }
                                                            },
                                                            {
                                                                "path": "authentication",
                                                                "pathMatch": "full",
                                                                "component": "AuthenticationComponent",
                                                                "resolve": {
                                                                    "authentications": "AuthenticationResolver"
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "path": "trial-status",
                                                        "component": "TrialStatusComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "DashboardLayoutModule"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "",
                        "children": [
                            {
                                "path": "",
                                "loadChildren": "./layout/flow-builder/flow-layout.module#FlowLayoutModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "component": "AuthLayoutComponent",
                        "children": [
                            {
                                "path": "",
                                "loadChildren": "./layout/auth-layout/auth-layout.module#AuthLayoutModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "AuthLayoutRoutes",
                                                "filename": "src/app/layout/auth-layout/auth-layout.routing.ts",
                                                "module": "AuthLayoutModule",
                                                "children": [
                                                    {
                                                        "path": "sign-in",
                                                        "component": "SignInComponent",
                                                        "canActivate": [
                                                            "UserNotLoggedIn"
                                                        ]
                                                    },
                                                    {
                                                        "path": "forgot-password",
                                                        "component": "ForgetPasswordComponent",
                                                        "canActivate": [
                                                            "UserNotLoggedIn"
                                                        ]
                                                    },
                                                    {
                                                        "path": "sign-up/:token",
                                                        "component": "EmailRegistrationComponent"
                                                    },
                                                    {
                                                        "path": "change-password/:token",
                                                        "component": "ResetPasswordComponent"
                                                    },
                                                    {
                                                        "path": "sign-up",
                                                        "component": "ClosedBetaComponent"
                                                    },
                                                    {
                                                        "path": "hidden-sign-up",
                                                        "component": "SignUpComponent"
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "AuthLayoutModule"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "redirect",
                        "component": "RedirectUrlComponent"
                    },
                    {
                        "path": "**",
                        "component": "NotFoundComponent"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "FlowLayoutRouting",
                "filename": "src/app/layout/flow-builder/flow-layout.routing.ts",
                "module": "FlowLayoutModule",
                "children": [
                    {
                        "path": "flows/:id",
                        "component": "PieceBuilderComponent",
                        "resolve": {
                            "piece": "GetPieceResolver",
                            "flows": "ListFlowsResolver"
                        },
                        "canActivate": [
                            "UserLoggedIn"
                        ],
                        "canDeactivate": [
                            "BuilderSavingGuard"
                        ]
                    },
                    {
                        "path": "runs/:runId",
                        "component": "PieceBuilderComponent",
                        "resolve": {
                            "runInformation": "GetInstanceRunResolver"
                        },
                        "canActivate": [
                            "UserLoggedIn"
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "logrocketMiddleware",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reduxMiddleware",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/builder-saving.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "BuilderSavingGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/trial-expired.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "TrialExpiredGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/user-logged-in.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "UserLoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/guards/user-not-logged-in.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "UserNotLoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/auth-layout/auth-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/auth-layout/pages/check-box/auth-checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/auth-layout/pages/closed-beta/closed-beta.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ClosedBetaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/auth-layout/pages/consts.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "freeMailProviders",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/auth-layout/pages/email-registration/email-registration.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmailRegistrationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/auth-layout/pages/email-registration/on-boarding-form/on-boarding-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnBoardingFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/auth-layout/pages/forget-password/forget-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ForgetPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/auth-layout/pages/reset-password/reset-password.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResetPasswordComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/auth-layout/pages/sign-in/sign-in.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignInComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/auth-layout/pages/sign-up/sign-up.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignUpComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/animation/fade-in-up.animation.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fadeInUpAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/animation/fade-in-up.animation.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fadeInUp400ms",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/animation/fade-in.animations.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fadeInnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/animation/fade-in.animations.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fadeIn400ms",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/click-stop-propgation.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ClickStopPropagationDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/common-layout.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "materialTooltipDefaults",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/ap-button/ap-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/ap-img/ap-img.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApImgComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/ap-input/ap-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/configs-form/configs-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfigsFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/confirm-delete-modal/confirm-delete-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfirmDeleteModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/create-account-modal/create-account-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateAccountModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/create-new-environment-modal/create-new-environment-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateNewEnvironmentModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/create-new-event-modal/create-new-event-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateNewEventModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/create-new-piece-modal/create-new-piece-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateNewPieceModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/deploy-modal/deploy-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeployModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/deploy-modal/deploy-step-collection-configs/deploy-step-collection-configs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeployStepGlobalConfigComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/deploy-modal/select-targeted-environment-step/select-deployment-environment-step.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectDeploymentEnvironmentStepComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/deploy-modal/select-targeted-environment-step/select-deployment-environment-step.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DeployStepSelectTargetEmittedValue",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/basic-select/basic-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BasicSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/code-embeddedEditor/code-embedded-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CodeEmbeddedEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/connect-oauth2/connect-oauth2.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConnectOauth2Component",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/dictionary-form/dictionary-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DictionaryFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/dictionary-form/dictonary-item.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DictonaryItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/documentation-link/documentation-link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentationLinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/dynamic-field-input-only.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicFieldInputOnlyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/multi-dropdown/multi-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiDropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/select-event/select-event.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectEventComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/dynamic-form/dynamic-field-input-only/select-oauth2/select-oauth2.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectOauth2Component",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/dynamic-form/dynamic-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DynamicFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/editable-text/editable-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditableTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/add-npm-package-modal/add-npm-package-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewAddNpmPackageModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/code-artifact-control-fullscreen.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CodeArtifactControlFullscreenComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-control-fullscreen/test-code-form-modal/test-code-form-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestCodeFormModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/form-controls/code-artifact-form-control/code-artifact-form-control.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CodeArtifactFormControlComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/form-controls/dictionary-form-control/dictionary-form-control.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DictionaryFormControlComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/form-controls/long-text-form-control/long-text-form-control.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LongTextFormControlComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/form-controls/ng-select-item-template/ng-select-item-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgSelectItemTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/form-controls/ng-select-loading-spinner-template/ng-select-loading-spinner-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgSelectLoadingSpinnerTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/form-controls/ng-select-tag-value-template/item-text.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ItemTextPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/form-controls/ng-select-tag-value-template/ng-select-tag-value-template.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgSelectTagValueTemplateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/form-controls/o-auth2-connect-control/o-auth2-connect-control.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OAuth2ConnectControlComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/json-view-modal/json-view-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "JsonViewModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/json-view/json-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "JsonViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/loading-icon/loading-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/loading-skeleton/loading-skeleton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingSkeletonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/pagination/pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/responsive-table/data-cell.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataCell",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/responsive-table/data-header.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataHeader",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/responsive-table/data-row.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataRow",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/responsive-table/responsive-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResponsiveTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/save-cancel-panel-section/save-cancel-panel-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SaveCancelPanelSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/status-icon/state-icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StateIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/table/columnNameAndProperty.ts",
                "type": "class",
                "linktype": "classe",
                "name": "tableColumnNameAndProperty",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/trash-icon-button/icon-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/upload-image-control/drag-drop.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DragDropDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/components/upload-image-control/upload-image-control.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UploadImageControlComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/helper/helpers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "download",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/helper/helpers.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "tokenGetter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/interface/trigger-metadata.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TriggerMetadata",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/account.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Account",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/api-key.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ApiKey",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/app-details.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppDetails",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/authentication.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ProjectAuthentication",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/code-embedded-control-form.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CodeEmbeddedControl",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/cron-expression-form-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CronExpressionFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/documentation-info-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DocumentationInfoControl",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/dropdown-form-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DropdownFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/33",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/dropdown-options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownOption",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/dynamic-dropdown-result.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DynamicDropdownResult",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/dynamic-form-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DynamicFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/integer-form-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IntegerFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/key-value-form-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "KeyValueFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/long-text-form-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LongTextFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/multi-dropdown-form-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MultiDropdownFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/oauth2-login-form-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Oauth2LoginFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/oauth2-select-form-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Oauth2SelectFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/select-event-form-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SelectEventFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/dynamic-controls/short-text-form-control.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ShortTextFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/enum/config-type.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configTypesDropdownOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/event.-definition.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EventDefinition",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BaseConfigSettings",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ConfigSettings",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DropdownSettings",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DynamicDropdownSettings",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OAuth2ConfigSettings",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ShortTextSettings",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StaticDropdownSettings",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/config-settings.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownOption",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/config.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Config",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/integer-variable.class.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IntegerVariable",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/key-value-variable.ts",
                "type": "class",
                "linktype": "classe",
                "name": "KeyValueVariable",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/multiline-variable.class.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MultilineVariable",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/oauth2-login-variable.class.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Oauth2LoginVariable",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/oauth2-variable.class.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OAuth2Variable",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/short-text-variable.class.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ShortTextVariable",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/subfields/dropdown-item-option.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DropdownItemOption",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/subfields/long-text-variable.class.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LongTextVariableClass",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/subfields/oauth2-login-settings.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Oauth2LoginSettingsInterface",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/subfields/oauth2-response.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OAuth2Response",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/fields/variable/subfields/oauth2-user-input.type.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OAuth2UserInputTypeDropdownOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/actions/action.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Action",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/actions/code-action.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CodeAction",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/actions/loop-action.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoopOnItemActionInterface",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/actions/remote-flow-action.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RemoteFlowAction",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/actions/response-action.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponseAction",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/actions/storage-action.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StorageAction",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/code-test-execution-result.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CodeTestExecutionResult",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/flow-add-button.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AddButtonAndFlowItemNameContainer",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/flow-item.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BoundingBox",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/flow-item.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FlowItem",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/trigger/event-trigger.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EventTriggerInterface",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/trigger/schedule-trigger.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ScheduleTrigger",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-builder/trigger/trigger.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Trigger",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow-version.class.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FlowVersion",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/flow.class.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Flow",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/form-container.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FormContainer",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/helper/artifacts-zipping-helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "addArtifactsToFormData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/helper/artifacts-zipping-helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "zipAllArtifacts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/helper/point.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Point",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/instance-run.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InstanceRun",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/instance-run.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InstanceRunState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/instance-run.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StepResult",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/instance-run.interface.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initializedRun",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/instance.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Instance",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/organisation.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Organization",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/piece.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Collection",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/piece.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CollectionVersion",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/project-environment.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectEnvironment",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/project.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Project",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/model/user.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/pipe/default-false.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DefaultFalsePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/pipe/default-true.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DefaultTruePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/pipe/default-zero.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "DefaultZeroPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/pipe/output-log.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "OutputLogPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/pipe/raw-output-log.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "RawOutputLogPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/account.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AccountService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/api-key.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiKeyService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/authentication.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthenticationService",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/collection.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CollectionService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/dynamic-dropdown.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DynamicDropdownService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/environment.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EnvironmentService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/events-definitions.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EventDefinitionService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/flow.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FlowService",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/form.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FormService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/highlightservice.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HighlightService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/highlightservice.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Prism",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/instance-run.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "InstanceRunService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/instance.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "InstanceService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/oauth2.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "Oauth2Service",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/onboarding.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OnboardingService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/organization.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OrganizationService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/project.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/seek-page.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SeekPage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/theme.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/time-helper.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TimeHelperService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/service/userback.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserbackService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/common.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clearState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/common.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CommonActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/common.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadInitial",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/environment.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addEnvironment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/environment.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clearEnvironments",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/environment.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EnvironmentActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/environment.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setEnvironments",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/events.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addEvent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/events.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clearEvents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/events.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EventActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/events.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setEvents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/organizations.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clearOrganizations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/organizations.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OrganizationActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/organizations.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setOrganizations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/project.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clearProjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/project.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProjectActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/action/project.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setProjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/effect/environments.effect.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EnvironmentsEffect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/effect/events.effect.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EventsEffect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/effect/organizations.effect.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OrganizationsEffect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/effect/projects.effect.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectsEffect",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/model/common-state.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CommonStateModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/model/environments.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EnvironmentsState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/model/events-state.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EventsState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/model/organizations-state.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OrganizationsState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/model/projects-state.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ProjectsState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/environments.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "environmentReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/environments.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_environmentReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/environments.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/events.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "eventsReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/events.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_eventsReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/events.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/organization.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "organizationReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/organization.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_organizationReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/organization.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/project.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "projectReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/project.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_projectReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/reducer/project.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMMON_STATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CommonSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCommonState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectEvents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectEventsDropdownOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/common.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectEventsState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMMON_STATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EnvironmentSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCommonState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectEnvironments",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectEnvironmentsLoadState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/environment.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectEnvironmentState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMMON_STATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OrganizationSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCommonState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/organization.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectOrganizations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/project.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMMON_STATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/project.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProjectSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/project.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCommonState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/project.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectProject",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/store/selector/project.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectProjectState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "findDefaultCollectionName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "findDefaultFlowDisplayName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getDefaultDisplayNameForPiece",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getDisplayNameForTrigger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/utils.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isOfTypeTriggerType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "autoSaveDebounceTime",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "cacheArtifactDebounceTime",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultCronJobForScheduleTrigger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "checkboxIsTrue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "containsLowercaseCharacter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "containsNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "containsSpecialCharacter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "containsUppercaseCharacter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/validators.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "phoneNumberValidation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/validators/codename-validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "codenameValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/validators/cronjob-validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "cronJobValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/common-layout/validators/json-validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "jsonValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/components/accounts-filter/accounts-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccountsFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/components/create-api-key-modal/create-api-key-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateApiKeyModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/components/environment-filter/environment-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EnvironmentFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/components/filter-bar/filter-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/components/instances-filter/instances-filter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InstancesFilterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/components/trial-countdown/trial-countdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrialCountdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/components/user-avatar/user-avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserAvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/dashboard-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/dashboard-layout.module.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/dashboard-layout.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DASHBOARD_FEATURE_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/dashboard-layout.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/accounts/accounts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccountsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/api-keys/api-keys.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApiKeysComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/authentication/authentication.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthenticationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/authentication/firebase-project-id-modal/firebase-project-id-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FirebaseProjectIdModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/authentication/signing-key-modal/signing-key-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SigningKeyModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/collections/collection-components.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CollectionComponents",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/collections/empty-collections-table/empty-collections-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmptyCollectionsTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/environments/environments.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EnvironmentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/events/events.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EventsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/instances/instances.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InstancesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/runs/runs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RunsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/trial-status/trial-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TrialStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/pages/trial-status/trial-status.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Calendly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/resolvers/authentication.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthenticationResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/resolvers/list-accounts.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ListAccountsResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/resolvers/list-instances-runs.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ListInstancesRunResolver",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/resolvers/list-instances.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ListInstancesResolver",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/resolvers/list-pieces-resolver.service.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ListPiecesResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/service/navigation.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NavigationService",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/service/project-authentications.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProjectAuthenticationService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ApiKeysActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createApiKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createApiKeyFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createApiKeySuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteApiKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadApiKeys",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/api-keys.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadApiKeysFinished",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clearSigningKeyCredentials",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fetchAuthenticationsSuccessful",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateSigningKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateSigningKeyFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateSigningKeySuccessful",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateFirebaseProjectId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateFirebaseProjectIdFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/action/authentication.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateFirebaseProjectIdSuccessful",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/effect/api-keys.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiKeysEffects",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/effect/authentication.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthenticationEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/reducer/api-keys.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "apiKeysReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/reducer/api-keys.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/reducer/authentication.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authenticationReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/reducer/authentication.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ApiKeysSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectApiKeys",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectApiKeysLoaded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/selectors/api-keys.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectDashboardState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectDashboardState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFirebaseAuthentications",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/dashboard-layout/store/selectors/authentication.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectSigningKeyAuthentications",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/components/chevron-dropdown-menu/chevron-dropdown-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChevronDropdownMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/components/chevron-dropdown-menu/chevron-dropdown-option.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ChevronDropdownOption",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/components/sidebar-header/sidebar-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/components/test-flow-modal/test-flow-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestFlowModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/model/app-connector.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppConnector",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/model/artifact.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Artifact",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/model/flow-template.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FlowTemplateInterface",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/code-editor/add-npm-package-modal/add-npm-package-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddNpmPackageModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/code-editor/code-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CodeEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/code-editor/test-code-modal/test-code-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestCodeModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-builder-header/embed-modal/embed-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmbedModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-builder-header/flow-builder-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlowBuilderHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-builder-header/publish-popover/publish-popover.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PublishPopoverComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-builder-tabs/flow-builder-tab/flow-builder-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlowBuilderTabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-builder-tabs/flow-builder-tabs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlowBuilderTabsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item-tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlowItemTreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Drawer",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADD_BUTTON_SIZE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ARC_LENGTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ARROW_HEAD_SIZE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EMPTY_LOOP_ADD_BUTTON_HEIGHT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EMPTY_LOOP_ADD_BUTTON_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FLOW_ITEM_HEIGHT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FLOW_ITEM_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HORZIONTAL_LINE_LENGTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LINES_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SPACE_BETWEEN_ITEM_CONTENT_AND_LINE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SVG_ELEMENT_DEFAULT_HEIGHT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SVG_ELEMENT_DEFAULT_WIDTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/draw-utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "VERTICAL_LINE_LENGTH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/flow-item-connection.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlowItemConnectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/loop-line-connection/loop-line-connection.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoopLineConnectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-connection/simple-line-connection/simple-line-connection.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SimpleLineConnectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item-content/flow-item-content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlowItemContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-item-tree/flow-item/flow-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlowItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/configs-sidebar/config-card/config-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfigCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/configs-sidebar/configs-list/configs-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VariableListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/configs-sidebar/configs-sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VariableSidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/create-or-edit-config-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateEditConfigModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/36",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/default-config-type-settings/default-config-type-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DefaultConfigTypeSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/dropdown-config-settings/dropdown-config-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownConfigSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/31",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/dropdown-config-settings/dropdown-config-settings.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DynamicDropdownSettingsFromValue",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/dropdown-config-settings/dropdown-config-settings.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StaticDropdownSettingsFromValue",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/dropdown-config-settings/static-drop-down-options/static-drop-down-options.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StaticDropDownOptionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/create-or-edit-config-modal/o-auth2-config-settings/o-auth2-config-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OAuth2ConfigSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/flow-left-sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlowLeftSidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/piece-settings/piece-settings.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PieceSettingsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/run-details/iteration-details.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IterationDetailsService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/run-details/run-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RunDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/run-details/selected-step-result/selected-step-result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectedStepResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/run-details/steps-results-list/iteration-accordion/iteration-accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IterationAccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-left-sidebar/run-details/steps-results-list/step-result.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepResultComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/collection-version-sidebar/collection-version-sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CollectionVersionSidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/create-new-flow-modal/create-new-flow-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CreateNewFlowModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/flow-right-sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlowRightSidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/flow-version-sidebar/flow-version-sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlowVersionSidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-authentication-modal/new-authentication-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewAuthenticationModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/describe-form/describe-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DescribeFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/edit-step-accodion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditStepAccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/code-step-input-form/code-step-input-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CodeStepInputFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/event-trigger-input-form/event-trigger-input-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EventTriggerInputFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CodeStepInputFormSchema",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EventTriggerInputFormSchema",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputFormsSchemaBase",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoopStepInputFormSchema",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RemoteFlowInputFormSchema",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponseStepInputFormSchema",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ScheduledTriggerInputFormSchema",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/input-forms-schema.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StoragreStepInputFormSchema",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/loop-step-input-form/loop-step-input-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoopStepInputFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/remote-flow-input-form/connector-auth-config-finder.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ConnectorAuthConfigsFinder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/remote-flow-input-form/remote-flow-input-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RemoteFlowInputFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/41",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/response-step-input-form/response-step-input-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResponseStepInputFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/schedule-trigger-input-form/schedule-trigger-input-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ScheduleTriggerInputFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/edit-step-accordion/input-forms/storage-step-input-form/storage-step-input-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StorageStepInputFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/new-edit-piece-sidebar/new-edit-piece-sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewEditPieceSidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-item/flow-item-details.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FlowItemDetails",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-item/step-type-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepTypItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-list/step-type-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepTypeListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/flow-right-sidebar/step-type-sidebar/step-type-sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepTypeSidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/piece-builder.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PieceBuilderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/27",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/test-run-bar/test-run-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TestRunBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/validators/configKeyValidator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ConfigKeyValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/validators/configLabelValidator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ConfigLabelValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/page/flow-builder/validators/refreshReferencesValidator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RefreshReferencesValidator",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/resolvers/get-piece.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "GetPieceResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/resolvers/instance-run.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "GetInstanceRunResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/resolvers/list-flows.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ListFlowsResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/action-meta.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ActionMetaService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/artifact-cache-key.ts",
                "type": "class",
                "linktype": "classe",
                "name": "ArtifactCacheKey",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/artifact-cache-key.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CollectionConfigsCacheKey",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/artifact-cache-key.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FlowConfigsCacheKey",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/artifact-cache-key.ts",
                "type": "class",
                "linktype": "classe",
                "name": "StepCacheKey",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/code.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CodeService",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/flow-renderer.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FlowRendererService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/flow-template.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FlowTemplateService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/flowFactoryUtil.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FlowFactoryUtil",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/flowRenderUtil.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FlowRenderUtil",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/flowRenderUtil.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ACCEPTED_DISTANCE_BETWEEN_DROP_POINT_AND_ADD_BUTTON",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/flowStructureUtil.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FlowStructureUtil",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/piece-builder.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PieceBuilderService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/service/remote-flow-cache.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RemoteFlowCacheService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/builder.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BuilderActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/builder.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadInitial",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "clearFlowItemsDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FlowItemDetailsActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "flowItemsDetailsLoadedSuccessfully",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadFlowItemsDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadOldRemoteFlowItemDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flow-items-details.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "oldRemoteFlowItemDetailsLoadedSuccessfully",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addFlow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addStep",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "changeName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteConfigFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteConfigSucceeded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteFlow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteFlowStarted",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteStep",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deselectStep",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "dropPiece",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "exitRun",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FlowsActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "replaceTrigger",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "savedFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "savedSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "saveFlowStarted",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectStep",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectStepByName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setInitial",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setLeftSidebar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setRightSidebar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setRun",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleFlowModifyingState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/flows.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateStep",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "addConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "changeDescription",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "changeName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CollectionModifyingState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteConfigFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deleteConfigSucceeded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PieceAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "publishCollection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "publishCollectionFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "publishCollectionSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "savedFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "savedSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setInitial",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/piece.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updateSettings",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/view-mode.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setViewMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/action/view-mode.action.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ViewModeActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/effect/flow-items-details.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FlowItemsDetailsEffects",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/effect/flow.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FlowsEffects",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/effect/helper.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "findRefreshedConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/effect/piece.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PieceEffects",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/effect/viewMode.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ViewModeEffects",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/model/builder-state.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "GlobalBuilderState",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/model/collection-state.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CollectionState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/model/flow-items-details-state.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FlowItemsDetailsState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/model/flows-state.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FlowsState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/model/tab-state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TabState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/flow-items-details.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "flowItemsDetailsReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/flow-items-details.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "flowsReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_flowsReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/flows.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialTabState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/piece.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "pieceReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/piece.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_pieceReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/piece.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/view-mode.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "viewModeReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/view-mode.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_viewModeReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/reducer/view-mode.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BUILDER_STATE_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BuilderSelectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAllConfigs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAllFlowItemsDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAllFlowItemsDetailsLoadedState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAuth2Configs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectBuilderSaveState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectBuilderState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCanPublish",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCollectionState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectConfigTabTypeFromProps",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCoreFlowItemsDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentCollection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentCollectionConfigs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentCollectionId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentCollectionName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentDisplayName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentFlow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentFlowConfigs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentFlowId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentFlowRun",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentFlowRunStatus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentFlowSaved",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentFlowValidity",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentLeftSidebar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentLeftSidebarType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentRightSideBar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentRightSideBarType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentStep",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentStepName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCurrentTabState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectDynamicDropdownReference",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlowItemDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlowItemDetailsForTriggers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlowItemsDetailsForConnectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlowItemsDetialsForUserCollections",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlows",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlowsCount",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlowSelectedId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlowsState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlowState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectFlowsValidity",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectInstanceRunView",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectReadOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectRemoteFlowItemDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectSavingChangeState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectTabState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectUserDefinedCollectionConfigs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectUserDefinedFlowConfigs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/flow-builder/store/selector/flow-builder.selector.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectViewMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/not-found/not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/redirect-url/redirect-url.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RedirectUrlComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/model/app-state.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/model/error-message.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/rollbar.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RollbarErrorHandler",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/rollbar.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "rollbarFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/rollbar.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "rollbarConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/rollbar.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RollbarService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/service/http-interceptor.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HttpInterceptorService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/service/http-interceptor.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HttpInterceptorProvider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/connectors/dev-connectors.lexicon.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "devAppConnectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/connectors/dev-connectors.lexicon.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "devConnectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/connectors/prod-connectors.lexicon.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "prodConnectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/connectors/stg-connectors.lexicon.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stgConnectors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.stg.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}
