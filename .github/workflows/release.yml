name: Release

on:
  push:
    branches:
      - feature-auto-generate-pieces-manifest
  workflow_dispatch:

jobs:
  Release-Backend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set RELEASE env var from package.json
        run: echo RELEASE=$(node --print "require('./package.json').version") >> $GITHUB_ENV

      - name: Fail if tag already exists
        run: "! docker manifest inspect activepieces/backend:${{ env.RELEASE }}"

      - name: Set up Depot CLI
        uses: depot/setup-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: depot/build-push-action@v1
        with:
          project: du7O4b0e8P
          token: ${{ secrets.DEPOT_PROJECT_TOKEN }}
          context: .
          file: ./backend.dockerfile
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: |
            activepieces/backend:${{ env.RELEASE }}
            activepieces/backend:latest

  Release-Frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Set RELEASE env var from package.json
        run: echo RELEASE=$(node --print "require('./package.json').version") >> $GITHUB_ENV

      - name: Fail if tag already exists
        run: "! docker manifest inspect activepieces/frontend:${{ env.RELEASE }}"

      - name: install npm deps
        run: npm ci

      - name: build frontend
        run: npx nx build frontend

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./frontend.dockerfile
          platforms: |
            linux/amd64
            linux/arm64
          push: true
          tags: |
            activepieces/frontend:${{ env.RELEASE }}
            activepieces/frontend:latest

  Update-Pieces-Metadata:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: install npm deps
        run: npm ci

      - name: update pieces metadata
        run: npx nx update-pieces-metadata pieces-apps
        env:
          DO_SPACES_KEY: ${{ secrets.DO_SPACES_KEY }}
          DO_SPACES_SECRET: ${{ secrets.DO_SPACES_SECRET }}
